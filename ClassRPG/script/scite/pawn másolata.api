#define
#elif
#else
#endif
#error
#if
#ifdef
#ifndef
#include
#line
#pragma
#undef
abstract
array
bool
break
byte
case
class
coerce
collapsecategories
config
const
continue
defaultproperties
do
editconst
editinline
else
enum
event
exec
export
exportstructs
extends
false
final
float
for
forEach
format(output[], len, const format[], {Float,_}:...)
function
globalconfig
hidecategories
if
ignores
input
int
latent
local
localized
name
native
nativereplication
new
new
noexport
none
operator
optional
out
placeable
postoperator
preoperator
print(const string[])
printf(const format[], {Float,_}:...)
private
public
reliable
replication
return
rotator
self
simulated
skip
spawn
state
static
strcat
strcmp(const string1[], const string2[], bool:ignorecase, length)
strtok
string
struct
switch
then
transient
true
unreliable
until
var
vector
while
#beginClass
AddMenuItem(Menu:menuid, column, const menutext[])
AddPlayerClass(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)
AddPlayerClassEx(teamid, modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)
AddStaticPickup(model, type, Float:X, Float:Y, Float:Z, virtualworld = 0)
AddStaticVehicle(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, color1, color2)
AddStaticVehicleEx(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, color1, color2, respawn_delay)
AddVehicleComponent(vehicleid, componentid)
AllowAdminTeleport(allow)
AllowInteriorWeapons(allow)
AllowPlayerTeleport(playerid, allow)
ApplyAnimation(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync = 0)
Attach3DTextLabelToPlayer(Text3D:id, playerid, Float:OffsetX, Float:OffsetY, Float:OffsetZ)
Attach3DTextLabelToVehicle(Text3D:id, vehicleid, Float:OffsetX, Float:OffsetY, Float:OffsetZ)
AttachCameraToDynamicObject(playerid, objectid)
AttachCameraToObject(playerid, objectid)
AttachCameraToPlayerObject(playerid, playerobjectid)
AttachDynamicAreaToPlayer(areaid, playerid)
AttachDynamicAreaToVehicle(areaid, vehicleid)
AttachDynamicObjectToVehicle(objectid, vehicleid, Float:offsetx, Float:offsety, Float:offsetz, Float:rx, Float:ry, Float:rz)
AttachObjectToObject(objectid, attachtoid, Float:OffsetX, Float:OffsetY, Float:OffsetZ, Float:RotX, Float:RotY, Float:RotZ, SyncRotation = 1)
AttachObjectToPlayer(objectid, playerid, Float:OffsetX, Float:OffsetY, Float:OffsetZ, Float:RotX, Float:RotY, Float:RotZ)
AttachObjectToVehicle(objectid, vehicleid, Float:OffsetX, Float:OffsetY, Float:OffsetZ, Float:RotX, Float:RotY, Float:RotZ)
AttachPlayerObjectToPlayer(objectplayer, objectid, attachplayer, Float:OffsetX, Float:OffsetY, Float:OffsetZ, Float:rX, Float:rY, Float:rZ)
AttachPlayerObjectToVehicle(playerid, objectid, vehicleid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:RotZ)
AttachTrailerToVehicle(trailerid, vehicleid)
Audio_AddPlayer(playerid, const ip[], const name[])
Audio_AddToSequence(sequenceid, audioid)
Audio_CreateSequence
Audio_CreateTCPServer(port)
Audio_DestroySequence(sequenceid)
Audio_DestroyTCPServer
Audio_GetPosition(playerid, handleid, const callback[] = "Audio_OnGetPosition")
Audio_IsClientConnected(playerid)
Audio_Pause(playerid, handleid)
Audio_Play(playerid, audioid, bool:pause = false, bool:loop = false, bool:downmix = false)
Audio_PlaySequence(playerid, sequenceid, bool:pause = false, bool:loop = false, bool:downmix = false)
Audio_PlayStreamed(playerid, const url[], bool:pause = false, bool:loop = false, bool:downmix = false)
Audio_Remove3DPosition(playerid, handleid)
Audio_RemoveFX(playerid, handleid, type)
Audio_RemoveFromSequence(sequenceid, audioid)
Audio_RemovePlayer(playerid)
Audio_RenamePlayer(playerid, const name[])
Audio_Restart(playerid, handleid)
Audio_Resume(playerid, handleid)
Audio_SendMessage(playerid, const message[])
Audio_Set3DPosition(playerid, handleid, Float:x, Float:y, Float:z, Float:distance)
Audio_SetFX(playerid, handleid, type)
Audio_SetPack(const name[], bool:transferable = true, bool:automated = true)
Audio_SetPosition(playerid, handleid, seconds)
Audio_SetRadioStation(playerid, station)
Audio_SetVolume(playerid, handleid, volume)
Audio_Stop(playerid, handleid)
Audio_StopRadio(playerid)
Audio_TransferPack(playerid)
Ban(playerid)
BanEx(playerid, const reason[])
CallLocalFunction(const function[], const format[], {Float,_}:...)
CallRemoteFunction(const function[], const format[], {Float,_}:...)
CancelEdit(playerid)
CancelSelectTextDraw(playerid)
ChangeVehicleColor(vehicleid, color1, color2)
ChangeVehiclePaintjob(vehicleid, paintjobid)
ClearAnimations(playerid, forcesync = 0)
ConnectNPC(name[], script[])
CountDynamic3DTextLabels
CountDynamicAreas
CountDynamicCPs
CountDynamicMapIcons
CountDynamicObjects
CountDynamicPickups
CountDynamicRaceCPs
Create3DTextLabel(text[], color, Float:X, Float:Y, Float:Z, Float:DrawDistance, virtualworld, testLOS=0)
CreateDynamicCP(Float:x, Float:y, Float:z, Float:size, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 100.0)
CreateDynamicCPEx(Float:x, Float:y, Float:z, Float:size, Float:streamdistance = 100.0, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicCircle(Float:x, Float:y, Float:size, worldid = -1, interiorid = -1, playerid = -1)
CreateDynamicCircleEx(Float:x, Float:y, Float:size, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicCube(Float:minx, Float:miny, Float:minz, Float:maxx, Float:maxy, Float:maxz, worldid = -1, interiorid = -1, playerid = -1)
CreateDynamicCubeEx(Float:minx, Float:miny, Float:minz, Float:maxx, Float:maxy, Float:maxz, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicMapIcon(Float:x, Float:y, Float:z, type, color, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 100.0)
CreateDynamicMapIconEx(Float:x, Float:y, Float:z, type, color, style = 0, Float:streamdistance = 100.0, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicObject(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 100.0)
CreateDynamicObjectEx(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, Float:drawdistance = 0.0, Float:streamdistance = 200.0, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicPickup(modelid, type, Float:x, Float:y, Float:z, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 100.0)
CreateDynamicPickupEx(modelid, type, Float:x, Float:y, Float:z, Float:streamdistance = 100.0, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicRaceCP(type, Float:x, Float:y, Float:z, Float:nextx, Float:nexty, Float:nextz, Float:size, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = 100.0)
CreateDynamicRaceCPEx(type, Float:x, Float:y, Float:z, Float:nextx, Float:nexty, Float:nextz, Float:size, Float:streamdistance = 100.0, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicRectangle(Float:minx, Float:miny, Float:maxx, Float:maxy, worldid = -1, interiorid = -1, playerid = -1)
CreateDynamicRectangleEx(Float:minx, Float:miny, Float:maxx, Float:maxy, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateDynamicSphere(Float:x, Float:y, Float:z, Float:size, worldid = -1, interiorid = -1, playerid = -1)
CreateDynamicSphereEx(Float:x, Float:y, Float:z, Float:size, worlds[] = { -1 }, interiors[] = { -1 }, players[] = { -1 }, maxworlds = sizeof worlds, maxinteriors = sizeof interiors, maxplayers = sizeof players)
CreateExplosion(Float:X, Float:Y, Float:Z, type, Float:Radius)
CreateMenu(const title[], columns, Float:x, Float:y, Float:col1width, Float:col2width = 0.0)
CreateObject(modelid, Float:X, Float:Y, Float:Z, Float:rX, Float:rY, Float:rZ, Float:DrawDistance = 0.0)
CreatePickup(model, type, Float:X, Float:Y, Float:Z, virtualworld = 0)
CreatePlayerObject(playerid, modelid, Float:X, Float:Y, Float:Z, Float:rX, Float:rY, Float:rZ, Float:DrawDistance = 0.0)
CreatePlayerTextDraw(playerid, Float:x, Float:y, text[])
CreateVehicle(vehicletype, Float:x, Float:y, Float:z, Float:rotation, color1, color2, respawn_delay)
Delete3DTextLabel(Text3D:id)
DeletePVar(playerid, varname[])
DeletePlayer3DTextLabel(playerid, PlayerText3D:id)
DestroyAllDynamic3DTextLabels
DestroyAllDynamicAreas
DestroyAllDynamicCPs
DestroyAllDynamicMapIcons
DestroyAllDynamicObjects
DestroyAllDynamicPickups
DestroyAllDynamicRaceCPs
DestroyDynamic3DTextLabel(Text3D:id)
DestroyDynamicArea(areaid)
DestroyDynamicCP(checkpointid)
DestroyDynamicMapIcon(iconid)
DestroyDynamicObject(objectid)
DestroyDynamicPickup(pickupid)
DestroyDynamicRaceCP(checkpointid)
DestroyMenu(Menu:menuid)
DestroyObject(objectid)
DestroyPickup(pickup)
DestroyPlayerObject(playerid, objectid)
DestroyVehicle(vehicleid)
DetachTrailerFromVehicle(vehicleid)
DisableInteriorEnterExits
DisableMenu(Menu:menuid)
DisableMenuRow(Menu:menuid, row)
DisableNameTagLOS
DisablePlayerCheckpoint(playerid)
DisablePlayerRaceCheckpoint(playerid)
EditAttachedObject(playerid, index)
EditDynamicObject(playerid, objectid)
EditObject(playerid, objectid)
EditPlayerObject(playerid, objectid)
EnableStuntBonusForAll(enable)
EnableStuntBonusForPlayer(playerid, enable)
EnableTirePopping(enable)
EnableVehicleFriendlyFire
EnableZoneNames(enable)
ForceClassSelection(playerid)
GameModeExit
GameTextForAll(const string[],time,style)
GameTextForPlayer(playerid,const string[],time,style)
GangZoneCreate(Float:minx, Float:miny, Float:maxx, Float:maxy)
GangZoneDestroy(zone)
GangZoneFlashForAll(zone, flashcolor)
GangZoneFlashForPlayer(playerid, zone, flashcolor)
GangZoneHideForAll(zone)
GangZoneHideForPlayer(playerid, zone)
GangZoneShowForAll(zone, color)
GangZoneShowForPlayer(playerid, zone, color)
GangZoneStopFlashForAll(zone)
GangZoneStopFlashForPlayer(playerid, zone)
GetAnimationName(index, animlib[], len1, animname[], len2)
GetDynamic3DTextLabelText(Text3D:id, text[], maxlength = sizeof text)
GetDynamicObjectMaterial(objectid, materialindex, &modelid, txdname[], texturename[], &materialcolor, maxtxdname = sizeof txdname, maxtexturename = sizeof texturename)
GetDynamicObjectMaterialText(objectid, materialindex, text[], &materialsize, fontface[], &fontsize, &bold, &fontcolor, &backcolor, &textalignment, maxtext = sizeof text, maxfontface = sizeof fontface)
GetDynamicObjectPos(objectid, &Float:x, &Float:y, &Float:z)
GetDynamicObjectRot(objectid, &Float:rx, &Float:ry, &Float:rz)
GetMaxPlayers
GetNetworkStats(retstr[], retstr_size)
GetObjectPos(objectid, &Float:X, &Float:Y, &Float:Z)
GetObjectRot(objectid, &Float:RotX, &Float:RotY, &Float:RotZ)
GetPVarFloat(playerid, varname[])
GetPVarInt(playerid, varname[])
GetPVarNameAtIndex(playerid, index, ret_varname[], ret_len)
GetPVarString(playerid, varname[], string_return[], len)
GetPVarType(playerid, varname[])
GetPVarsUpperIndex(playerid)
GetPlayerAmmo(playerid)
GetPlayerAnimationIndex(playerid)
GetPlayerArmour(playerid, &Float:armour)
GetPlayerCameraFrontVector(playerid, &Float:x, &Float:y, &Float:z)
GetPlayerCameraMode(playerid)
GetPlayerCameraPos(playerid, &Float:x, &Float:y, &Float:z)
GetPlayerColor(playerid)
GetPlayerDistanceFromPoint(playerid, Float:X, Float:Y, Float:Z)
GetPlayerDrunkLevel(playerid)
GetPlayerFacingAngle(playerid,&Float:ang)
GetPlayerFightingStyle(playerid)
GetPlayerHealth(playerid, &Float:health)
GetPlayerInterior(playerid)
GetPlayerIp(playerid, name[], len)
GetPlayerKeys(playerid, &keys, &updown, &leftright)
GetPlayerMenu(playerid)
GetPlayerMoney(playerid)
GetPlayerName(playerid, const name[], len)
GetPlayerNetworkStats(playerid, retstr[], retstr_size)
GetPlayerObjectPos(playerid, objectid, &Float:X, &Float:Y, &Float:Z)
GetPlayerObjectRot(playerid, objectid, &Float:RotX, &Float:RotY, &Float:RotZ)
GetPlayerPing(playerid)
GetPlayerPos(playerid, &Float:x, &Float:y, &Float:z)
GetPlayerScore(playerid)
GetPlayerSkin(playerid)
GetPlayerSpecialAction(playerid)
GetPlayerState(playerid)
GetPlayerSurfingObjectID(playerid)
GetPlayerSurfingVehicleID(playerid)
GetPlayerTargetPlayer(playerid)
GetPlayerTeam(playerid)
GetPlayerTime(playerid, &hour, &minute)
GetPlayerVehicleID(playerid)
GetPlayerVehicleSeat(playerid)
GetPlayerVelocity(playerid, &Float:X, &Float:Y, &Float:Z)
GetPlayerVersion(playerid, const version[], len)
GetPlayerVirtualWorld(playerid)
GetPlayerVisibleDynamicCP(playerid)
GetPlayerVisibleDynamicRaceCP(playerid)
GetPlayerWantedLevel(playerid)
GetPlayerWeapon(playerid)
GetPlayerWeaponData(playerid, slot, &weapons, &ammo)
GetPlayerWeaponState(playerid)
GetServerVarAsBool(const varname[])
GetServerVarAsInt(const varname[])
GetServerVarAsString(const varname[], buffer[], len)
GetTickCount
GetVehicleComponentInSlot(vehicleid, slot)
GetVehicleComponentType(component)
GetVehicleDamageStatus(vehicleid, &panels, &doors, &lights, &tires)
GetVehicleDistanceFromPoint(vehicleid, Float:X, Float:Y, Float:Z)
GetVehicleHealth(vehicleid, &Float:health)
GetVehicleModel(vehicleid)
GetVehicleModelInfo(vehiclemodel, infotype, &Float:X, &Float:Y, &Float:Z)
GetVehicleParamsEx(vehicleid, &engine, &lights, &alarm, &doors, &bonnet, &boot, &objective)
GetVehiclePos(vehicleid, &Float:x, &Float:y, &Float:z)
GetVehicleRotationQuat(vehicleid, &Float:w, &Float:x, &Float:y, &Float:z)
GetVehicleTrailer(vehicleid)
GetVehicleVelocity(vehicleid, &Float:X, &Float:Y, &Float:Z)
GetVehicleVirtualWorld(vehicleid)
GetVehicleZAngle(vehicleid, &Float:z_angle)
GetWeaponName(weaponid, const weapon[], len)
GivePlayerMoney(playerid,money)
GivePlayerWeapon(playerid, weaponid, ammo)
HTTP(index, type, url[], data[], callback[])
HideMenuForPlayer(Menu:menuid, playerid)
InterpolateCameraLookAt(playerid, Float:FromX, Float:FromY, Float:FromZ, Float:ToX, Float:ToY, Float:ToZ, time, cut = 2)
InterpolateCameraPos(playerid, Float:FromX, Float:FromY, Float:FromZ, Float:ToX, Float:ToY, Float:ToZ, time, cut = 2)
IsDynamicObjectMoving(objectid)
IsObjectMoving(objectid)
IsPlayerAdmin(playerid)
IsPlayerAttachedObjectSlotUsed(playerid, index)
IsPlayerConnected(playerid)
IsPlayerInAnyDynamicArea(playerid)
IsPlayerInAnyVehicle(playerid)
IsPlayerInCheckpoint(playerid)
IsPlayerInDynamicArea(playerid, areaid)
IsPlayerInDynamicCP(playerid, checkpointid)
IsPlayerInDynamicRaceCP(playerid, checkpointid)
IsPlayerInRaceCheckpoint(playerid)
IsPlayerInRangeOfPoint(playerid, Float:range, Float:x, Float:y, Float:z)
IsPlayerInVehicle(playerid, vehicleid)
IsPlayerNPC(playerid)
IsPlayerObjectMoving(playerid, objectid)
IsPlayerStreamedIn(playerid, forplayerid)
IsPointInAnyDynamicArea(Float:x, Float:y, Float:z)
IsPointInDynamicArea(areaid, Float:x, Float:y, Float:z)
IsTrailerAttachedToVehicle(vehicleid)
IsValidDynamic3DTextLabel(Text3D:id)
IsValidDynamicArea(areaid)
IsValidDynamicCP(checkpointid)
IsValidDynamicMapIcon(iconid)
IsValidDynamicObject(objectid)
IsValidDynamicPickup(pickupid)
IsValidDynamicRaceCP(checkpointid)
IsValidMenu(Menu:menuid)
IsValidObject(objectid)
IsValidPlayerObject(playerid, objectid)
IsVehicleStreamedIn(vehicleid, forplayerid)
Kick(playerid)
KillTimer(timerid)
LimitGlobalChatRadius(Float:chat_radius)
LimitPlayerMarkerRadius(Float:marker_radius)
LinkVehicleToInterior(vehicleid, interiorid)
ManualVehicleEngineAndLights
MoveDynamicObject(objectid, Float:x, Float:y, Float:z, Float:speed, Float:rx = -1000.0, Float:ry = -1000.0, Float:rz = -1000.0)
MoveObject(objectid, Float:X, Float:Y, Float:Z, Float:Speed, Float:RotX = -1000.0, Float:RotY = -1000.0, Float:RotZ = -1000.0)
MovePlayerObject(playerid, objectid, Float:X, Float:Y, Float:Z, Float:Speed, Float:RotX = -1000.0, Float:RotY = -1000.0, Float:RotZ = -1000.0)
PlayAudioStreamForPlayer(playerid, url[], Float:posX = 0.0, Float:posY = 0.0, Float:posZ = 0.0, Float:distance = 50.0, usepos = 0)
PlayCrimeReportForPlayer(playerid, suspectid, crime)
PlayerPlaySound(playerid, soundid, Float:x, Float:y, Float:z)
PlayerSpectatePlayer(playerid, targetplayerid, mode = 1)
PlayerSpectateVehicle(playerid, targetvehicleid, mode = 1)
PlayerTextDrawAlignment(playerid, PlayerText:text, alignment)
PlayerTextDrawBackgroundColor(playerid, PlayerText:text, color)
PlayerTextDrawBoxColor(playerid, PlayerText:text, color)
PlayerTextDrawColor(playerid, PlayerText:text, color)
PlayerTextDrawDestroy(playerid, PlayerText:text)
PlayerTextDrawFont(playerid, PlayerText:text, font)
PlayerTextDrawHide(playerid, PlayerText:text)
PlayerTextDrawLetterSize(playerid, PlayerText:text, Float:x, Float:y)
PlayerTextDrawSetOutline(playerid, PlayerText:text, size)
PlayerTextDrawSetPreviewModel(playerid, PlayerText:text, modelindex)
PlayerTextDrawSetPreviewRot(playerid, PlayerText:text, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fZoom = 1.0)
PlayerTextDrawSetPreviewVehCol(playerid, PlayerText:text, color1, color2)
PlayerTextDrawSetProportional(playerid, PlayerText:text, set)
PlayerTextDrawSetSelectable(playerid, PlayerText:text, set)
PlayerTextDrawSetShadow(playerid, PlayerText:text, size)
PlayerTextDrawSetString(playerid, PlayerText:text, string[])
PlayerTextDrawShow(playerid, PlayerText:text)
PlayerTextDrawTextSize(playerid, PlayerText:text, Float:x, Float:y)
PlayerTextDrawUseBox(playerid, PlayerText:text, use)
PutPlayerInVehicle(playerid, vehicleid, seatid)
RemoveBuildingForPlayer(playerid, modelid, Float:fX, Float:fY, Float:fZ, Float:fRadius)
RemovePlayerAttachedObject(playerid, index)
RemovePlayerFromVehicle(playerid)
RemovePlayerMapIcon(playerid, iconid)
RemoveVehicleComponent(vehicleid, componentid)
RepairVehicle(vehicleid)
ResetPlayerMoney(playerid)
ResetPlayerWeapons(playerid)
SSCANF_Init(players, invalid, len)
SSCANF_Join(playerid, const name[], npc)
SSCANF_Leave(playerid)
SSCANF_Option(const name[], value)
SelectObject(playerid)
SelectTextDraw(playerid, hovercolor)
SendClientMessage(playerid, color, const message[])
SendClientMessageToAll(color, const message[])
SendDeathMessage(killer,killee,weapon)
SendPlayerMessageToAll(senderid, const message[])
SendPlayerMessageToPlayer(playerid, senderid, const message[])
SendRconCommand(command[])
SetCameraBehindPlayer(playerid)
SetDeathDropAmount(amount)
SetDynamicObjectMaterial(objectid, materialindex, modelid, const txdname[], const texturename[], materialcolor = 0)
SetDynamicObjectMaterialText(objectid, materialindex, const text[], materialsize = 90, const fontface[] = "Arial", fontsize = 24, bold = 1, fontcolor = 0xFFFFFFFF, backcolor = 0, textalignment = 0)
SetDynamicObjectPos(objectid, Float:x, Float:y, Float:z)
SetDynamicObjectRot(objectid, Float:rx, Float:ry, Float:rz)
SetGameModeText(const string[])
SetGravity(Float:gravity)
SetMenuColumnHeader(Menu:menuid, column, const columnheader[])
SetNameTagDrawDistance(Float:distance)
SetObjectMaterial(objectid, materialindex, modelid, txdname[], texturename[], materialcolor=0)
SetObjectMaterialText(objectid, text[], materialindex = 0, materialsize = 90, fontface[] = "Arial", fontsize = 24, bold = 1, fontcolor = 0xFFFFFFFF, backcolor = 0, textalignment = 0)
SetObjectPos(objectid, Float:X, Float:Y, Float:Z)
SetObjectRot(objectid, Float:RotX, Float:RotY, Float:RotZ)
SetPVarFloat(playerid, varname[], Float:float_value)
SetPVarInt(playerid, varname[], int_value)
SetPVarString(playerid, varname[], string_value[])
SetPlayerAmmo(playerid, weaponslot, ammo)
SetPlayerArmedWeapon(playerid, weaponid)
SetPlayerArmour(playerid, Float:armour)
SetPlayerAttachedObject(playerid, index, modelid, bone, Float:fOffsetX = 0.0, Float:fOffsetY = 0.0, Float:fOffsetZ = 0.0, Float:fRotX = 0.0, Float:fRotY = 0.0, Float:fRotZ = 0.0, Float:fScaleX = 1.0, Float:fScaleY = 1.0, Float:fScaleZ = 1.0, materialcolor1 = 0, materialcolor2 = 0)
SetPlayerCameraLookAt(playerid, Float:x, Float:y, Float:z, cut = 2)
SetPlayerCameraPos(playerid,Float:x, Float:y, Float:z)
SetPlayerChatBubble(playerid, text[], color, Float:drawdistance, expiretime)
SetPlayerCheckpoint(playerid, Float:x, Float:y, Float:z, Float:size)
SetPlayerColor(playerid,color)
SetPlayerDrunkLevel(playerid, level)
SetPlayerFacingAngle(playerid,Float:ang)
SetPlayerFightingStyle(playerid, style)
SetPlayerHealth(playerid, Float:health)
SetPlayerInterior(playerid,interiorid)
SetPlayerMapIcon(playerid, iconid, Float:x, Float:y, Float:z, markertype, color, style = 0)
SetPlayerMarkerForPlayer(playerid, showplayerid, color)
SetPlayerName(playerid, const name[])
SetPlayerObjectMaterial(playerid, objectid, materialindex, modelid, txdname[], texturename[], materialcolor=0)
SetPlayerObjectMaterialText(playerid, objectid, text[], materialindex = 0, materialsize = 90, fontface[] = "Arial", fontsize = 24, bold = 1, fontcolor = 0xFFFFFFFF, backcolor = 0, textalignment = 0)
SetPlayerObjectPos(playerid, objectid, Float:X, Float:Y, Float:Z)
SetPlayerObjectRot(playerid, objectid, Float:RotX, Float:RotY, Float:RotZ)
SetPlayerPos(playerid, Float:x, Float:y, Float:z)
SetPlayerPosFindZ(playerid, Float:x, Float:y, Float:z)
SetPlayerRaceCheckpoint(playerid, type, Float:x, Float:y, Float:z, Float:nextx, Float:nexty, Float:nextz, Float:size)
SetPlayerScore(playerid,score)
SetPlayerShopName(playerid, shopname[])
SetPlayerSkillLevel(playerid, skill, level)
SetPlayerSkin(playerid, skinid)
SetPlayerSpecialAction(playerid,actionid)
SetPlayerTeam(playerid, teamid)
SetPlayerTime(playerid, hour, minute)
SetPlayerVelocity(playerid, Float:X, Float:Y, Float:Z)
SetPlayerVirtualWorld(playerid, worldid)
SetPlayerWantedLevel(playerid, level)
SetPlayerWeather(playerid, weather)
SetPlayerWorldBounds(playerid,Float:x_max,Float:x_min,Float:y_max,Float:y_min)
SetSpawnInfo(playerid, team, skin, Float:x, Float:y, Float:z, Float:rotation, weapon1, weapon1_ammo, weapon2, weapon2_ammo, weapon3, weapon3_ammo)
SetTeamCount(count)
SetTimer(funcname[], interval, repeating)
SetTimerEx(funcname[], interval, repeating, const format[], {Float,_}:...)
SetVehicleAngularVelocity(vehicleid, Float:X, Float:Y, Float:Z)
SetVehicleHealth(vehicleid, Float:health)
SetVehicleNumberPlate(vehicleid, numberplate[])
SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective)
SetVehicleParamsForPlayer(vehicleid,playerid,objective,doorslocked)
SetVehiclePos(vehicleid, Float:x, Float:y, Float:z)
SetVehicleToRespawn(vehicleid)
SetVehicleVelocity(vehicleid, Float:X, Float:Y, Float:Z)
SetVehicleVirtualWorld(vehicleid, worldid)
SetVehicleZAngle(vehicleid, Float:z_angle)
SetWeather(weatherid)
SetWorldTime(hour)
ShowMenuForPlayer(Menu:menuid, playerid)
ShowNameTags(show)
ShowPlayerDialog(playerid, dialogid, style, caption[], info[], button1[], button2[])
ShowPlayerMarkers(mode)
ShowPlayerNameTagForPlayer(playerid, showplayerid, show)
SpawnPlayer(playerid)
StartRecordingPlayerData(playerid, recordtype, recordname[])
StopAudioStreamForPlayer(playerid)
StopDynamicObject(objectid)
StopObject(objectid)
StopPlayerObject(playerid, objectid)
StopRecordingPlayerData(playerid)
Streamer_AppendArrayData(type, {Text3D,_}:id, data, value)
Streamer_CallbackHook(callback, {Float,_}:...)
Streamer_CellDistance(Float:distance)
Streamer_CellSize(Float:size)
Streamer_CountVisibleItems(playerid, type)
Streamer_DestroyAllVisibleItems(playerid, type)
Streamer_GetArrayData(type, {Text3D,_}:id, data, dest[], maxlength = sizeof dest)
Streamer_GetDistanceToItem(Float:x, Float:y, Float:z, type, {Text3D,_}:id, &Float:distance)
Streamer_GetFloatData(type, {Text3D,_}:id, data, &Float:result)
Streamer_GetIntData(type, {Text3D,_}:id, data)
Streamer_GetUpperBound(type)
Streamer_IsInArrayData(type, {Text3D,_}:id, data, value)
Streamer_IsItemVisible(playerid, type, {Text3D,_}:id)
Streamer_MaxItems(type, items)
Streamer_ProcessActiveItems
Streamer_RemoveArrayData(type, {Text3D,_}:id, data, value)
Streamer_SetArrayData(type, {Text3D,_}:id, data, const src[], maxlength = sizeof src)
Streamer_SetFloatData(type, {Text3D,_}:id, data, Float:value)
Streamer_SetIntData(type, {Text3D,_}:id, data, value)
Streamer_TickRate(rate)
Streamer_ToggleIdleUpdate(playerid, toggle)
Streamer_ToggleItemUpdate(playerid, type, toggle)
Streamer_Update(playerid)
Streamer_UpdateEx(playerid, Float:x, Float:y, Float:z, worldid = -1, interiorid = -1)
Streamer_VisibleItems(type, items)
TextDrawAlignment(Text:text, alignment)
TextDrawBackgroundColor(Text:text, color)
TextDrawBoxColor(Text:text, color)
TextDrawColor(Text:text, color)
TextDrawCreate(Float:x, Float:y, text[])
TextDrawDestroy(Text:text)
TextDrawFont(Text:text, font)
TextDrawHideForAll(Text:text)
TextDrawHideForPlayer(playerid, Text:text)
TextDrawLetterSize(Text:text, Float:x, Float:y)
TextDrawSetOutline(Text:text, size)
TextDrawSetPreviewModel(Text:text, modelindex)
TextDrawSetPreviewRot(Text:text, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fZoom = 1.0)
TextDrawSetPreviewVehCol(Text:text, color1, color2)
TextDrawSetProportional(Text:text, set)
TextDrawSetSelectable(Text:text, set)
TextDrawSetShadow(Text:text, size)
TextDrawSetString(Text:text, string[])
TextDrawShowForAll(Text:text)
TextDrawShowForPlayer(playerid, Text:text)
TextDrawTextSize(Text:text, Float:x, Float:y)
TextDrawUseBox(Text:text, use)
TogglePlayerAllDynamicAreas(playerid, toggle)
TogglePlayerAllDynamicCPs(playerid, toggle)
TogglePlayerAllDynamicRaceCPs(playerid, toggle)
TogglePlayerClock(playerid, toggle)
TogglePlayerControllable(playerid, toggle)
TogglePlayerDynamicArea(playerid, areaid, toggle)
TogglePlayerDynamicCP(playerid, checkpointid, toggle)
TogglePlayerDynamicRaceCP(playerid, checkpointid, toggle)
TogglePlayerSpectating(playerid, toggle)
Update3DTextLabelText(Text3D:id, color, text[])
UpdateDynamic3DTextLabelText(Text3D:id, color, const text[])
UpdatePlayer3DTextLabelText(playerid, PlayerText3D:id, color, text[])
UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, tires)
UsePlayerPedAnims
acos(Float:value)
asin(Float:value)
atan(Float:value)
atan2(Float:x, Float:y)
cache_get_data(&num_rows, &num_fields, connectionHandle = 1)
cache_get_field_float(row, const field_name[], connectionHandle = 1)
cache_get_field_int(row, const field_name[], connectionHandle = 1)
cache_get_row_float(row, idx, connectionHandle = 1)
cache_get_row_int(row, idx, connectionHandle = 1)
clamp(value, min=cellmin, max=cellmax)
db_close(DB:db)
db_field_name(DBResult:dbresult, field, result[], maxlength)
db_free_result(DBResult:dbresult)
db_get_field(DBResult:dbresult, field, result[], maxlength)
db_get_field_assoc(DBResult:dbresult, const field[], result[], maxlength)
db_next_row(DBResult:dbresult)
db_num_fields(DBResult:dbresult)
db_num_rows(DBResult:dbresult)
db_open(name[])
db_query(DB:db,query[])
deleteproperty(id=0, const name[]="", value=cellmin)
enable_mutex(bool:enable)
existproperty(id=0, const name[]="", value=cellmin)
fblockread(File: handle, buffer[], size = sizeof buffer)
fblockwrite(File: handle, const buffer[], size = sizeof buffer)
fclose(File: handle)
fexist(const pattern[])
fgetchar(File: handle, value, bool: utf8 = true)
flength(File: handle)
float(value)
floatabs(Float:value)
floatadd(Float:oper1, Float:oper2)
floatcmp(Float:oper1, Float:oper2)
floatcos(Float:value, anglemode:mode=radian)
floatdiv(Float:dividend, Float:divisor)
floatfract(Float:value)
floatlog(Float:value, Float:base=10.0)
floatmul(Float:oper1, Float:oper2)
floatpower(Float:value, Float:exponent)
floatround(Float:value, floatround_method:method=floatround_round)
floatsin(Float:value, anglemode:mode=radian)
floatsqroot(Float:value)
floatstr(const string[])
floatsub(Float:oper1, Float:oper2)
floattan(Float:value, anglemode:mode=radian)
fmatch(name[], const pattern[], index = 0, size = sizeof name)
fopen(const name[], filemode: mode = io_readwrite)
format(output[], len, const format[], {Float,_}:...)
fputchar(File: handle, value, bool: utf8 = true)
fread(File: handle, string[], size = sizeof string, bool: pack = false)
fremove(const name[])
fseek(File: handle, position = 0, seek_whence: whence = seek_start)
ftemp
funcidx(const name[])
fwrite(File: handle, const string[])
getarg(arg, index=0)
getdate(&year=0, &month=0, &day=0)
getproperty(id=0, const name[]="", value=cellmin, string[]="")
gettime(&hour=0, &minute=0, &second=0)
heapspace
ispacked(const string[])
listenport(port)
max(value1, value2)
memcpy(dest[], const source[], index=0, numbytes, maxlength=sizeof dest)
min(value1, value2)
mysql_affected_rows(connectionHandle = 1)
mysql_close(connectionHandle = 1)
mysql_connect(const host[], const user[], const database[], const password[], port = 3306)
mysql_data_seek(offset, connectionHandle = 1)
mysql_debug(enable = 1)
mysql_errno(connectionHandle = 1)
mysql_field_count(connectionHandle = 1)
mysql_format(connectionHandle, output[], format[], {Float,_}:...)
mysql_free_result(connectionHandle = 1)
mysql_function_query(connectionHandle, query[], bool:cache, callback[], format[], {Float,_}:...)
mysql_insert_id(connectionHandle = 1)
mysql_num_fields(connectionHandle = 1)
mysql_num_rows(connectionHandle = 1)
mysql_ping(connectionHandle = 1)
mysql_reconnect(connectionHandle = 1)
mysql_reload(connectionHandle = 1)
mysql_retrieve_row(connectionHandle = 1)
mysql_set_charset(charset[], connectionHandle = 1)
mysql_store_result(connectionHandle = 1)
mysql_warning_count(connectionHandle = 1)
numargs
print(const string[])
printf(const format[], {Float,_}:...)
random(max)
sendpacket(const packet[], size, const destination[]="")
sendstring(const message[], const destination[]="")
setarg(arg, index=0, value)
setproperty(id=0, const name[]="", value=cellmin, const string[]="")
sscanf(const data[], const format[], {Float,_}:...)
strcat(dest[], const source[], maxlength=sizeof dest)
strcmp(const string1[], const string2[], bool:ignorecase=false, length=cellmax)
strdel(string[], start, end)
strfind(const string[], const sub[], bool:ignorecase=false, pos=0)
strins(string[], const substr[], pos, maxlength=sizeof string)
strlen(const string[])
strmid(dest[], const source[], start, end, maxlength=sizeof dest)
strpack(dest[], const source[], maxlength=sizeof dest)
strunpack(dest[], const source[], maxlength=sizeof dest)
strval(const string[])
swapchars(c)
tickcount(&granularity=0)
tolower(c)
toupper(c)
unformat(const data[], const format[], {Float,_}:...)
uudecode(dest[], const source[], maxlength=sizeof dest)
uuencode(dest[], const source[], numbytes, maxlength=sizeof dest)
valstr(dest[], value, bool:pack=false)
ABroadCast(color,const string[],level)
AKTAToltes
ATMToltes
AdatMentesSQL(playerid)
AddsOn
AfkChecker
AlapTuning(playerid)
AllCarRespawn
AllCarSpawn
AlmaSzedes(playerid)
Audio_OnFilterScriptInit
Audio_OnGameModeInit
Audio_OnPlayerConnect(playerid)
Audio_OnPlayerDisconnect(playerid, reason)
Autotolvaj(playerid, szam)
BackupTimer
BanLog(string[])
BankC4Robban(playerid)
BankLezar
BeKilepes(string[])
BenzinTankolas(playerid)
Bikes(carid)
BroadCast(color,const string[])
CarCheck
ChatLog(string[])
CheckGas
Checkprop(type)
ClearCooking(playerid)
ClearCookingID(playerid, cook)
ClearCrime(playerid)
ClearFishID(playerid, fish)
ClearFishes(playerid)
ClearGroceries(playerid)
ClearMarriage(playerid)
CommandLog(string[])
Controllable(playerid)
CrimInRange(Float:radi, playerid,copid)
Csatorna
CustomPickups
DateProp(playerid, type)
DieselTankolas(playerid)
DollahScoreUpdate
Drog
DrunkClean(playerid)
DutyFegyverekBeallitasa(playerid)
Edzes(playerid)
EgyebLog(string[])
EgyebTimer
EletTimer
Encrypt(string[])
EngineBreak
Erositeslemond(playerid)
FaLepakolasa(playerid, vehicleid)
FaVisszaallitas(fa)
Fagyasztas(playerid)
FallSet(playerid)
FavagasTimer(playerid, fa)
FbiKapuBecsuk
Fbikapcsolodas(playerid)
FegyverEldob(playerid, _Fegyver, Loszer, Float:X, Float:Y, Float:Z, world, interior)
FegyverElvesz(playerid, weaponid)
FelvetelFolytatasa(npcid, berakas)
FishCost(playerid, fish)
FixHour(hour)
FrakcioAdatokLoad(frakcio, name[], value[])
FrakcioJarmuTuning(kocsi)
FszallitasTimer(playerid)
GetClosestPlayer(p1)
GetDistanceBetweenPlayers(p1,p2)
Hatar
HaznalVan(playerid)
HireCost(carid)
HullaTorles(hullaid)
INI_Load_Cardata(a, name[], value[])
INI_Load_Items(playerid, name[], value[])
INI_Load_KutData(a, name[], value[])
INI_Load_Telefondata(a, name[], value[])
INI_Load_Userdata(playerid, name[], value[])
IdojarasValtozas
IntekSzama
IsABenzines(carid)
IsABicikli(carid)
IsABoat(carid)
IsACopCar(carid)
IsADieseles(carid)
IsAKatonaCar(carid)
IsAKerozinos(carid)
IsAMember(playerid)
IsAMotor(carid)
IsAPlane(carid)
IsAPlato(carid)
IsARepulo(carid)
IsAS(playerid)
IsATruck(carid)
IsATuzoltoCar(carid)
IsAVsKocsi(kocsi)
IsAnAmbulance(carid)
IsAnInstructor(playerid)
IsAtBar(playerid)
IsAtClothShop(playerid)
IsAtCookPlace(playerid)
IsAtDealership(playerid)
IsAtFishPlace(playerid)
IsAtGasStation(playerid)
IsAtNetKavezo(playerid)
IsAtNetKavezoPC(playerid)
IsAtNetKavezoPult(playerid)
IsDirector(playerid)
IsHitman(playerid)
IsPlayerAdminCall(playerid)
IsPlayerAimingBodyPart(playerid, bodypart)
IsPlayerAimingTargetBodyPart(playerid, targetid, bodypart)
IsPlayerInTurf(playerid, turfid)
IsVehicleOccupied(vehicleid)
Itter_OPDCInternal(playerid)
Itter_OnFilterScriptInit
Itter_OnGameModeInit
Itter_OnPlayerConnect(playerid)
Itter_OnPlayerDisconnect(playerid, reason)
JBC_OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
Jail(playerid, muvelet[], ido, tipus[], oka[])
JarmuFeltores(playerid)
JarmuRiaszto(playerid)
JarmuRiasztoBe(carid)
JarmuTuning(kocsi)
JatekosBeszallas(playerid, vehicleid)
JoinChannelNr(playerid, number)
KartingEnded
KerozinTankolas(playerid)
KickLog(string[])
KillLog(string[], cheat)
Kiolvasztas(playerid)
LSPDKapunyitas(szam)
LakoKocsik(carid)
LoadAKTA
LoadATM
LoadAjtok
LoadBankAdatok
LoadFrakcio
LoadIgenylesek
LoadInts
LoadMelleny
LoadOBJECT
LoadPARKOLO
LoadPICKUP
LoadRaktar
LoadStuff
LoadSwat
LoadTurfs
LoaderAnimation(playerid)
LoaderAnimation2(playerid)
LockCar(carid)
LopasVege(carid)
LoterBetoltes
LoterGyakorlat(loter, playerid)
LoterTorles
LoterTuszTorles(loter, playerid)
Lotto
Mergezes(playerid)
MunkaCheckpointCheck(playerid)
MunkaTimer
Munkaruha(playerid, ruha)
Munkavege(playerid, Munka, db)
MySQLUpdater
NPCSpawn(npc)
NPCTimer
NPC_FelvetelStart(npcid)
NPC_FelvetelVege(npcid)
NetKuponTime(playerid)
OBJECTToltes
OOCNews(color,const string[])
OOCOff(color,const string[])
OnAjtoUpdate
OnFilterScriptExit
OnFilterScriptInit
OnGameModeExit
OnGameModeInit
OnIgenyUpdate
OnIntsUpdate
OnJunkBusterBan(playerid,reason[])
OnJunkBusterKick(playerid,reason[])
OnJunkBusterReport(playerid,reason[],details[])
OnMysqlQuery(resultid)
OnObjectMoved(objectid)
OnPlayerAmmoChange(playerid, newammo, oldammo)
OnPlayerAnim(playerid, cmdtext[], preCall)
OnPlayerArmourChange(playerid, Float:newarmour, Float:oldarmour)
OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
OnPlayerClickTextDraw(playerid, Text:clickedid)
OnPlayerCommandText(playerid, cmdtext[])
OnPlayerConnect(playerid)
OnPlayerDeath(playerid, killerid, reason)
OnPlayerDisconnect(playerid, reason)
OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
OnPlayerEnterCheckpoint(playerid)
OnPlayerEnterRaceCheckpoint(playerid)
OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
OnPlayerExitVehicle(playerid, vehicleid)
OnPlayerExitedMenu(playerid)
OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid)
OnPlayerHealthChange(playerid, Float:newhealth, Float:oldhealth)
OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
OnPlayerLeaveCheckpoint(playerid)
OnPlayerLeaveDynamicArea(playerid, areaid)
OnPlayerLeaveRaceCheckpoint(playerid)
OnPlayerMoneyChange(playerid, newmoney, oldmoney)
OnPlayerPause(playerid, paused)
OnPlayerPickUpDynamicPickup(playerid, pickupid)
OnPlayerPickUpPickup(playerid, pickupid)
OnPlayerPressKeyPad(playerid, kapu, keynum)
OnPlayerRequestClass(playerid, classid)
OnPlayerRequestSpawn(playerid)
OnPlayerScoreChange(playerid, newscore, oldscore)
OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z)
OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
OnPlayerSelectedMenuRow(playerid, row)
OnPlayerSkinChange(playerid, newskin, oldskin)
OnPlayerSpawn(playerid)
OnPlayerStateChange(playerid, newstate, oldstate)
OnPlayerStreamIn(playerid, forplayerid)
OnPlayerStreamOut(playerid, forplayerid)
OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
OnPlayerTeamChange(playerid, newteam, oldteam)
OnPlayerText(playerid, text[])
OnPlayerUpdate(playerid)
OnPlayerVirtualWorldChange(playerid, newvirtualworld, oldvirtualworld)
OnPlayerWantedLevelChange(playerid, newwantedlevel, oldwantedlevel)
OnPlayerWeaponChange(playerid, newweapon, oldweapon)
OnPutPlayerInVehicle(playerid, vehicleid, seatid)
OnQueryError(errorid, error[], callback[], query[], connectionHandle)
OnRconCommand(cmd[])
OnSetVehiclePos(vehicleid, Float: x, Float: y, Float: z)
OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat)
OnVehicleDeath(vehicleid, killerid)
OnVehicleHealthChange(playerid, vehicleid, Float:regielet, Float:ujelet, sebesseg)
OnVehicleSpawn(vehicleid)
OnVehicleStreamIn(vehicleid, forplayerid)
OtherTimer
PICKUPToltes
PaintballNevezes
PayDay
PayLog(string[])
PenzCheck(playerid, uj, regi, penzmozgas, minusz)
PenzEldob(playerid, Osszeg, Float:X, Float:Y, Float:Z, world, interior)
PenzUpdate
PlayerFixRadio(playerid)
PlayerFixRadio2
PlayerPlayMusic(playerid)
PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
PosLog(string[])
PrepareKarting
PrintBizInfo(playerid,targetid)
PrintBizInfo2(playerid,targetid)
Production
ProxDetector2(Float:radi, string[], Float:oldposx, Float:oldposy, Float:oldposz, col1,col2,col3,col4,col5)
ProxDetectorS(Float:radi, playerid, targetid)
PuttoSorsolas
RaceTimer
RandomHirdetes
Refix(playerid)
Restart
RingToner
RingTonerRev
SSCANF_OnFilterScriptInit
SSCANF_OnFilterScriptInit
SSCANF_OnGameModeInit
SSCANF_OnGameModeInit
SSCANF_OnGameModeInit
SSCANF_OnPlayerConnect(playerid)
SSCANF_OnPlayerConnect(playerid)
SSCANF_OnPlayerConnect(playerid)
SSCANF_OnPlayerDisconnect(playerid, reason)
SSCANF_OnPlayerDisconnect(playerid, reason)
SSCANF_OnPlayerDisconnect(playerid, reason)
S__OnPlayerLogin(playerid)
SaveAKTA
SaveATM
SaveBankAdatok
SaveFrakcio
SaveMelleny
SaveOBJECT
SavePARKOLO
SavePICKUP
SaveRaktar
SaveStuff
SaveSwat
SaveTurfs
ScriptInit_OnFilterScriptInit
ScriptInit_OnGameModeExit
ScriptInit_OnGameModeInit
ScriptInit_OnScriptInit
SebessegKorlatozo
SecTimer
SeeHooks_PutPlayerInVehicle(playerid, vehicleid, seatid)
SeeHooks_SetVehiclePos(vehicleid, Float:x, Float:y, Float:z)
Sellgun(playerid, giveplayerid, fegyver, tolteny, mati)
SendAdminMessage(color, string[])
SendCopMessage(color, string[])
SendHitmanRadioMessage(color, string[])
SendIRCMessage(channel, color, string[])
SendJobMessage(job, color, string[])
SendKamionRadioMessage(color, string[])
SendLaptopMessage(color, string[])
SendPowerRadioMessage(color, string[])
SendRadioDMessage(member, color, string[])
SendRadioMessage(member, color, string[])
SendRepuloRadioMessage(color, string[])
SendSwatRadioMessage(color, string[])
SetPlayerCriminal(playerid,declare,reason[])
SetPlayerFree(playerid,declare,reason[])
SetPlayerSpawn(playerid)
SetPlayerUnjail
SetupPlayerForClassSelection(playerid)
ShowDetektivPlayerStats(playerid,targetid)
ShowStats(playerid,targetid)
ShowZseb(playerid, targetid)
SisakFel(playerid)
Spawnolas
StartKarting
StartWin8(playerid)
Startup(playerid, vehicleid)
Stop
StopMusic
StoppedVehicle
Streamer_OnPlayerConnect(playerid)
Streamer_OnPlayerDisconnect(playerid, reason)
Streamer_OnPlayerEnterCP(playerid)
Streamer_OnPlayerEnterRaceCP(playerid)
Streamer_OnPlayerLeaveCP(playerid)
Streamer_OnPlayerLeaveRaceCP(playerid)
SyncTime
SyncUp
SzamlalasTimer(nid)
SzefToltes
TKickEx(playerid)
TeleTimer
TelefonBetoltes
TextDrawUpdateAll
UjMunka(playerid, munkaszama, munka)
UnFreeze(playerid)
UnLockCar(carid)
UpdateTime(playerid)
UpdateTime2(playerid)
Updater(type)
Utzar(playerid, tipus)
UzemanyagFeltoltes(playerid, fajta, liter, trailer)
UzemanyagLeenged(playerid, fajta, liter, trailer, kut)
VisszaAllitas(playerid, jelzes)
Vizsgaido(playerid)
VizsgalasVege(playerid, hullaid)
VsTuningok
WalkAnim(playerid)
Walk_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
WarSegit(playerid)
Win8GO(playerid)
YVers_OnScriptInit
_ALS_
_ScriptInit_FixState
_ScriptInit_FixState
c4szereles(playerid)
dialog_items(playerid, response, listitem, inputtext[])
onPause_Timer
robpenzpakolas(playerid)
split(const strsrc[], strdest[][], delimiter)
sscanf_vehicle(string[])
sscanf_weapon(string[])
AMT(playerid, munka)
AdatBetoltesSQL(playerid, bool: preQuery = true)
AdatLekeres(playerid, type, bool: preQuery = true)
Admin(playerid, szint = 1, maxszint = -1)
AdminName(playerid)
AdminNevek(playerid, bool:felrak = true)
AdminRangNev(id)
Ado(playerid)
AkkuKifogy(p, v)
Akta(playerid, targetid)
AktataskaMentes
AlapKocsiBetoltes
AlapKocsiMentes(f = -1)
AnimbaRak(playerid, bool:uzenet = true)
ApplyPlayerAnimation(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync = 0)
Audio_SetPlayerName(playerid, name[])
BVIdoCheck
BanKiiras(playerid, uIdo)
BankSzamla(szam)
BankkartyaFizet(playerid, osszeg, bool:levon = true)
BarFrissites(playerid, melyik)
BejelentoFelirat(playerid, bool:felrak = true)
BenzinKutFrissites(kut)
Berlo(playerid)
Beszed(playerid, Float:radi, preuzi[], uzi[], afteruzi[] = "")
Bilincs(playerid, bilincs, ido = -1)
BilincsFel(giveplayerid)
Bin2Dec(const szam[])
BizPenz(biz, penz, playerid = -1)
BizUpdate(c, ...)
BizbeVan(playerid)
BiznelVan(playerid)
BortonFrakcioID(bortonidje)
BortonNev(id)
Bortonben(playerid)
BusOnline
ButorObjectID(objectid)
ButorSzam(playerid)
CancelFlyMode(playerid)
CarToPoint(Float:radi, carid, Float:x, Float:y, Float:z)
CarUpdate(c, ...)
Channel(playerid, channel = -1, view = false)
CheatLog(string[])
CheckSzint(playerid, bool:message = false)
CheckUtolso
Civil(playerid)
ConfigVal(nev[], ujertek = -999)
ConvertToGameText(in[])
CopMsg(color, string[])
CorrectPlayerDatas(playerid)
CountChars(szoveg[], karakter)
CreateKereskedoCar
CreateKeyPad(playerid)
CreateProgressBar(Float:x, Float:y, Float:width=58.0, Float:height=4.0, color, Float:max=100.0)
CsatlakozasEngedelyezve(playerid, &valasz)
Cselekves(playerid, cselekves[], valaki = 0, bool:OOC = false)
CsomagtartoUpdate(kocsi)
CustomDialog(playerid, dialogid[], style, caption[], info[], button1[], button2[])
DTime
Debug_Print0(str[], {Float,_}:...)
Debug_Print0(str[], {Float,_}:...)
Debug_Print0(str[], {Float,_}:...)
Debug_PrintArray(arr[], size)
Debug_SetState
Debug_SetState
Dec2Bin(szam)
DelVar(jatekos, adatmezo[])
DeleteKeyPad(playerid)
DestroyProgressBar(Bar:barid)
Eegyezik(szoveg[], szoveg2[])
EkezetMentes(szoveg[])
EldobottCucc(id, tipus, mennyiseg, text[], Float:cuccx, Float:cuccy, Float:cuccz, edVw = -1)
EldobottCuccNullazas(id)
EvHonapNap
Event(playerid, main, sub, p1 = -1)
EzzelShockolhat(carid)
FaLerak(playerid, Float:xpoz, Float:ypoz, Float:zpoz)
FaTorol(fa)
FatalServerStopping
FegyverCheatCheck(playerid)
FegyverElrak(playerid)
FegyverIllegalis(playerid, fegyver)
FegyverRespawn(player)
FegyverSkillFrissites(playerid)
Feketeseg(playerid, bool:sotet = false)
FekvoRendor(bool:keszit = true)
FelsegitesMentesHely(p)
FixPos(&Float:x, &Float:y, &Float:z, &Int, &VW)
FixString(string[])
FloatOsztas(szam1, szam2, IntegerEredmeny = false)
FloodCheck(playerid, ido = 3, kick = 5)
FlyMode(playerid)
FormatTime(ido)
FrakcioAdatok(akcio, frakcio = -1)
FrakcioKocsiBetoltes
FrakcioKocsiID(kocsi, frakcio)
FrakcioKocsiMentes(f = -1)
FrakcioOnline(melo)
FrakcioTagok(frakcio)
Freeze(playerid, ido = 0)
FszMuvelet(Muvelet)
GarazsElottVan(playerid)
GarazsUpdate(c, ...)
Garazsnal(playerid, garazs)
GenQuerySlot(&id)
GetClosestAkta(playerid)
GetClosestCar(playerid, asd = false)
GetClosestFa(playerid)
GetClosestFaHely(playerid)
GetClosestHulla(playerid)
GetClosestKapu(playerid)
GetClosestVehicle(playerid, benneulcheck = true, Float:tav = 0.0)
GetDistanceBetweenPoints(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2)
GetDistanceToAkta(playerid,akta)
GetDistanceToCar(playerid,vehicleid)
GetDistanceToFa(playerid, fa)
GetDistanceToFaHely(playerid, fa)
GetDistanceToHulla(playerid, hulla)
GetDistanceToKapu(playerid, kapu)
GetDistanceToPoint(playerid,Float:x1,Float:y1,Float:z1)
GetDistanceToVehicle(playerid,vehicleid)
GetFegyverObject(WeaponID)
GetGunID(string[])
GetGunName(id)
GetGunSlot(fegyo)
GetHasznaloNum(kapuid)
GetJarmu(kocsi, edit)
GetLatestKapuID
GetMoveDirectionFromKeys(ud, lr)
GetNewBerSzefIndex
GetNewFaIndex
GetNewIndex
GetNextCameraPosition(move_mode, Float:CPP[3], Float:FV[3], &Float:X, &Float:Y, &Float:Z)
GetPFloat(jatekos, adatmezo[])
GetPInt(jatekos, adatmezo[])
GetParam(const string[], number)
GetPlayerBerSzefID(playerid)
GetPlayerInteriorEx(playerid)
GetPlayerVirtualWorldEx(playerid)
GetPlayerWalkingStyle(playerid)
GetPointAngleToPoint(Float:x2, Float:y2, Float:X, Float:Y)
GetProgressBarValue(Bar:barid)
GetSingleChar(const source[], num)
GetVehicleModelName(id, bool:carid = false)
GetVehicleSpeed(vehicleid)
GetWeaponModel(weaponid)
GetXButor(playerid, szam)
GetXYBehindPlayer(playerid,&Float:x,&Float:y,Float:dis)
GetXYBehindPoint(&Float:x, &Float:y, Float:angle, Float:distance)
GetXYBehindVehicle(playerid,&Float:x,&Float:y,Float:dis)
GetXYInFrontOfPlayer(playerid,&Float:x,&Float:y,Float:dis)
GetXYInFrontOfPoint(&Float:x, &Float:y, Float:angle, Float:distance)
GetXYInFrontOfVehicle(playerid,&Float:x,&Float:y,Float:dis)
GetXYLeftOfPoint(&Float:x, &Float:y, Float:angle, Float:distance)
GetXYLeftOfVehicle(playerid,&Float:x,&Float:y,Float:dis)
GetXYRightOfPoint(&Float:x, &Float:y, Float:angle, Float:distance)
GetXYRightOfVehicle(playerid,&Float:x,&Float:y,Float:dis)
GetXYZInFrontOfPlayer(playerid, &Float:x, &Float:y, &Float:z, Float:dis)
GiveFlashLight(playerid)
GiveHealth(playerid, Float:health)
GiveTazer(playerid)
GiveWeapon(playerid, fegyver, loszer, bool:adatfrissites = true)
GyemantAkcio(akcio = GYEMANT_BETOLT, playerid = -1, gyemant = -1)
Gyemantok(id, bool:player = true)
HamisSzerver
HarcKieses(playerid, oka[])
HazElad(haz, minimumar = 2500000, szoveg = 1)
HazUpdate(c, ...)
HazaElottVan(playerid)
HazabanVan(playerid)
Hazban(playerid, haz)
Haznal(playerid, haz)
Haztipus(tipus)
HelyezesCheck
HelyezesFelrak(playerid, bool:rak = true)
HelyezesFrissites
HexToInt(string[])
HibasBizNev(string[])
HibasJelszo(playerid)
HibasRaceSlot(playerid, slot)
HideClockForPlayer(playerid)
HideEscritorioForPlayer(playerid)
HidePagForItems(playerid)
HidePhotosForPlayer(playerid)
HideProgressBarForAll(Bar:barid)
HideProgressBarForPlayer(playerid, Bar:barid)
HideStartMenuTablet(playerid)
HideTabletForPlayer(playerid)
HideTabletMP4(playerid)
HideTabletMusicPlayer(playerid)
HideUserLogTablet(playerid)
HitmanName(playerid)
HullaTorol(hullaid)
INI_AddToBuffer(name[], value[])
INI_Close(INI:file)
INI_Open(fajlnev[])
INI_ParseFile(fajlnev[], fuggveny[], bool:bExtra = false, extra = 0)
INI_Save(type, a)
INI_WriteBool(INI:file, name[], bool:value)
INI_WriteFloat(INI:file, name[], Float:value)
INI_WriteInt(INI:file, name[], value)
INI_WriteString(INI:file, name[], value[])
IdoAllitas(hour = -1)
IdojarasValt(playerid = -1, ujido = -1)
IllegalisMunka(munka)
IllegalisMunkas(playerid)
InChannel(playerid, view = false)
InaktivCucc(id, tipus)
IngyenTankol(playerid, kocsi)
Ini_Unixtime_Beallit(playerid)
IntToHex(number)
IntToStr(value)
IsAValodiKocsi(vehicleid)
IsAt(playerid, hol)
IsCarupCar(kocsinev[], carupid)
IsClintCar(vs)
IsFloat(buf[])
IsFoAdmin(id)
IsFrakcioKocsi(kocsi)
IsHeller(playerid)
IsKocsi(carid, tipus[])
IsMunkaKocsi(kocsi)
IsOOC(szoveg[])
IsPlayerAiming(playerid, aimid)
IsPlayerAimingAt(playerid, Float:x, Float:y, Float:z, Float:radius)
IsPlayerAimingAtPlayer(playerid, targetplayerid)
IsPlayerName(playerid, nev[])
IsRealServer
IsScripter(id)
IsTerno(playerid)
IsToltenyesFegyver(fegyver, slot = false)
IsTrailer(kocsi)
IsValidName(playerid)
IsValidNameFromString(string[])
IsValidSkin(skinid)
IsVehicleConnected(vehicleid)
Item(playerid, akcio, targy = -1, db = 1, e1 = -1, e2 = -1, e3 = -1)
JHGarazs(p)
JarmuAlakitas(vs, model)
JarmuElromlas(v)
JarmuRendszam(kocsi, bool:kell_ra_rakas = true)
JatekosSebessege(playerid)
JatszottOra(playerid)
JegyEllenor(playerid)
KamionDepoban(playerid)
KapuAkcio(akcio = KAPU_BETOLT, uid = -1, bool: preQuery = true)
KapuEngedely(playerid, kapu)
KapuIDMegadas(kapuid)
KatonaOnline
KereskedoFelirat(kocsi, torol = false)
KikepzobenVan(x)
KincsAkcio(akcio = KINCS_BETOLT)
KocsiElad(kocsi, szoveg = 1)
KocsiElet(car)
KocsiJavit(kocsi)
KocsiObjectTorol(kocsi)
KocsiRendszam(kocsi, bool:kell_ra_rakas = true)
KocsiRespawn(kocsi, bool:respawn = true)
KocsiSofor(kocsi)
KozelbenValaki(playerid, Float:tav)
KozeliEldobottCucc(playerid)
KulsoFegyverFrissites(playerid, bool:csaktorles = false)
LMT(playerid, munka)
LeaderFrissites(frakcio = -1, bool: preQuery = true)
LegalisFrakcio(frakcio)
LegalisSzervezetTagja(playerid)
LetszamFrissites(frakcio = -1, bool: preQuery = true)
LoadArak(bool: preQuery = true)
LoadAratas
LoadBerSzef(bool: preQuery = true)
LoadBizz(bool: preQuery = true)
LoadButor(bool: preQuery = true)
LoadCar(bool: preQuery = true)
LoadGarazs(bool: preQuery = true)
LoadHouse(bool: preQuery = true)
LoadIRC
LoadRadio
LoadRendeles
LoadVersion(bool: preQuery = true)
Locked(vehicleid)
Locker(car)
Lofegyver(fegyver)
Log(log[], mi[])
Logged(playerid)
LoterFrissites(loter)
LoterUzenet(string[])
LoterVege(playerid, loter, fegyver)
MD5_Copy(dest[], src[], start, len)
MD5_Data(data[], len)
MD5_File(filename[])
MD5_Final(ctx[E_MD5_CONTEXT], string = false)
MD5_Hash(str[])
MD5_Init(ctx[E_MD5_CONTEXT])
MD5_Transform(buf[], in[])
MD5_Update(ctx[E_MD5_CONTEXT], data[], len)
MSinceTime(uIdo)
MarkerAction(playerid, a)
MaxBenzin(adat, model_ = false)
Megallo(nid, tipus = NPC_MEGALLO_JELENLEGI)
MegalloNev(nid, tipus = NPC_MEGALLO_JELENLEGI)
MentoOnline
MoneyTrans(kitol, kinek, mennyit)
MoveCamera(playerid)
Msg(playerid, szoveg[], kellseerpg = true, szin = 0xFF6347AA)
Msg2(playerid, szoveg[], szin = 0xFFFFFFAA)
MunkaLeader(playerid, munka)
Munkarang(playerid, rang)
MysqlCheck
MysqlFinalUpdate(query[], sqlid)
MysqlKapcsolodas(bool:muvelet = true)
MysqlUpdateFlo(query[], nev[], Float:ertek)
MysqlUpdateInt(query[], nev[], ertek)
MysqlUpdateStr(query[], nev[], ertek[])
Mysql_Insert(tabla[], adatok[], ertekek[])
NPCArveresUpdate
NPCBetoltese
NPCBuszban(playerid, sofor_npc = -1)
NPCCsatlakozas(nev[], npc)
NPCMuvelet(MuveletID, Kirug = true)
NPC_Uzenet(bot, uzenet[])
NagyKezdobetusNev(playerid)
NameTag(playerid, bool:be)
NameTagEngem(playerid, bool:be)
NemMozoghat(playerid)
NemVizsgalat(nemid)
NevMutatas(playerid, beki)
Nevvaltas(playerid, ujnev[])
NincsHaza(playerid)
NincsIlyenFegyvere(playerid, fegyo)
Now
NszirenaPozicio(model, &Float:x, &Float:y, &Float:z)
NumCharacter(string[], character)
NumLines(fname[])
NumPlayerBerSzef(playerid)
OktatoFeliratFrissites(k)
OnModBetoltve
OnPlayerConnectKick(playerid)
OnPlayerHit(playerid, hiterid, bodypart, weaponid)
OnPlayerPreLogin(playerid)
Online(nev[])
OnlineAdminok(minszint = 1, maxszint = -1)
OnlineKocsiTulaj(kocsi)
OnlineTagok(frakcio)
OnlineUID(uid)
OraPercMP
OsszesPenz(playerid, Float:oszto = 1.0)
PaintballFrissites
PaintballVege
Parameterek(string[])
ParancsBetoltes(bool: preQuery = true)
ParkCar(kocsi, Float:posx, Float:posy, Float:posz, Float:posa = 0.0, Int = 0, VW = 0)
ParkCarToKereskedo(car)
Parkolohely(playerid)
PenzLevesz(playerid, penz, bool:kenyszerit = false)
PiacAkcio(akcio = 0, mit = -1)
PlayerIP(playerid)
PlayerInArea(playerid = -1, Float:xMin, Float:xMax, Float:yMin, Float:yMax, Float:zMin = -0.1, Float:zMax = -0.1, Float:x = -0.1, Float:y = -0.1, Float:z = -0.1)
PlayerName(playerid)
PlayerNameEx(playerid)
PlayerSave(playerid = -1)
PopPlayerTires(playerid)
PreConfigure(playerid, fazis = 0)
PremiumPont(playerid)
ProcessSQL(id)
ProcessedSQL(type, eID = -1, eID2 = -1, eID3 = -1)
ProxDetector(Float:radi, playerid, string[], col1, col2, col3, col4, col5, bool:kocsitalk = false, nyelv[] = "")
PutRiotShieldOnArm(playerid)
PutRiotShieldOnBack(playerid)
RabolasCheck
RaceStartnal(playerid)
Radar(playerid, bool:lat)
RadioBetoltes(playerid)
RangNev(playerid)
RemoveFromCar(playerid)
RemoveItems(playerid)
RendesJatekos(playerid, bool:npccsekk = true, bool:csaknpc = false)
RendorKocsi(car)
ReportUzenet(playerid, uzenet[], admin = false, osszeschannel = false, channel = -1)
ResetPlayerPos(playerid)
ResetWeapon(playerid, bool:adatfrissites = true)
SQLResult(bool: store)
SajatKocsi(id, kocsi)
SaveIRC
SaveRendeles
SebessegKorlatozoPlayer(playerid)
SeeBan(playerid, ido = 0, banner = -1, oka[], bool:ipban=false, bool:kick = true, bool:szoveg = false)
SeeKick(playerid, miert[], kivolt = -1)
SendFAdminMessage(color, string[])
SendMessage(type, msg[], color, p1 = -1)
SendSAdminMessage(color, string[])
SendSSSMessage(color, string[])
SetBuszData(npc, id, nev[])
SetHealth(playerid, Float:mennyi)
SetJarmu(kocsi, edit, ertek)
SetMapName(const mapname[])
SetMegallo(npc, id, nev[], Float:x, Float:y, Float:z, ido)
SetPFloat(jatekos, adatmezo[], Float:ertek)
SetPInt(jatekos, adatmezo[], ertek)
SetPString(jatekos, adatmezo[], ertek[])
SetPlayerMoney(playerid,howmuch)
SetPlayerRaceCP(playerid)
SetPlayerVirtualWorld_Ex(playerid, uj, oka[] = "-")
SetPlayerWalkingStyle(playerid, style)
SetProgressBarColor(Bar:barid, color)
SetProgressBarMaxValue(Bar:barid, Float:max)
SetProgressBarValue(Bar:barid, Float:value)
SetVehicleColor(kocsi, szin1, szin2)
SetVehicleIndex(playerid, vehicleid, bool:left=false, bool:right=false, bool:kozos=false)
SetVehicleInterior(kocsi, interior)
SetVehicleVW(kocsi, vw)
ShowClockForPlayer(playerid)
ShowDialog(playerid, dialogid)
ShowEscritorioForPlayer(playerid)
ShowNames(playerid, beki)
ShowPagForItems(playerid)
ShowPage(playerid, page)
ShowPhotosForPlayer(playerid)
ShowPlayerDialogEx(playerid, dialogid, style, caption[], info[], button1[], button2[])
ShowProgressBarForAll(Bar:barid)
ShowProgressBarForPlayer(playerid, Bar:barid)
ShowStartMenuTablet(playerid)
ShowTabletForPlayer(playerid)
ShowTabletMP4(playerid)
ShowTabletMusicPlayer(playerid)
ShowTextDraw(playerid, textdraw)
ShowTuningDialog(playerid, bool:cuccok = true, uzenet[] = "")
ShowUserLogTablet(playerid)
SpecKarakterek(szoveg[], karakterek[] = ",")
StatMentes(playerid, elso = 0, bool: preQuery = true, fazis = 0)
StrToInt(string[])
StripNewLine(string[])
SzabadButorID
Szamlalas(nid, bool:start)
Szarmazas(szarmazasid)
Szemuveg(playerid, mit = 0)
SzerverNev
SzerverRestartMentes
SzirenaPozicio(model, &Float:x, &Float:y, &Float:z)
SzovegEllenorzes(playerid, szoveg[], parancs[], tipus = ELLENORZES_HIRDETES)
Szukseglet(playerid, Float:ehseg = 0.0, Float:szukseglet = 0.0)
TKick(playerid)
Tab(text[], text2[], tabcount = 0)
TabletLetrehozas(playerid)
TaxiOnline
Tele(playerid, Float:posx, Float:posy, Float:posz, kocsival = true, VW = -1, Int = -1, Float:Angle = 0.0)
TeleToCar(playerid, kocsi)
TelefonAlap(playerid, kibe)
TelefonFomenu(playerid, elol)
TelefonFrissites(telefon)
TelefonKeszites(playerid)
TeruletFrissites
TeruletUpdate(t, ...)
TeruletekBetoltese(bool: preQuery = true)
TeruletekMutatasa(playerid)
TextDrawUpdate(playerid, textdraw)
Time(mikell[])
ToresFekvorendor(playerid)
TrafipaxCheck(playerid, sebesseg, kocsi)
TrailerAttached(trailer)
TuzAkcio(akcio = TUZ_BETOLT)
TuzoltoOnline
UCP_Check(bool: preQuery = true, sid = 0)
UjCar(Float:posx, Float:posy, Float:posz, Float:posa, szin1, szin2, model = 410, ara = 1000000, zarva = 0)
UjKapuID
UjKocsi(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:angle = 0.0, color1 = 0, color2 = 0, Int = 0, VW = 0)
UjPickup(pickup, tipus, Float:spawn_x, Float:spawn_y, Float:spawn_z, VirtualWorld = -1, Interior = -1)
UjRendelesIndex
UresATM
UresAktaHely
UresGarazsKereses
UresHazKereses
UresHullaHely
UresKocsiHely
UresObject
UtolsoSzabadSlot
ValidEmail(email[])
ValtozoNullazas(playerid)
VanEnnyiPenze(playerid, penz)
VanHaza(playerid)
VanJoga(id, id2)
VarosID(playerid)
VarosbaBe(playerid)
VarosbanVan(playerid)
VarosbolKi(playerid)
VersenyVege(playerid)
ViadalMessage(uzenet, szin = 0xFFFF00AA, kellsms = true)
ViadalRadar
VizsgaRaceAllit(playerid, Float:x, Float:y, Float:z, kor = 5)
ZsarukOnline
abs(szam)
copy(dest[],source[],count)
delete(string[],count)
dini_Bool(filename[],key[])
dini_BoolSet(filename[],key[],value)
dini_Create(filename[])
dini_Exists(filename[])
dini_Float(filename[],key[])
dini_FloatSet(filename[],key[],Float:value)
dini_Get(filename[],key[])
dini_Int(filename[],key[])
dini_IntSet(filename[],key[],value)
dini_Isset(filename[],key[])
dini_PRIVATE_ExtractKey(line[])
dini_PRIVATE_ExtractValue(line[])
dini_Remove(filename[])
dini_Set(filename[],key[],value[])
dini_Unset(filename[],key[])
div(up,down)
dmod(up,down)
doQuery(keres[], type = 0, extraID = -1, extraID_2 = -1, extraID_3 = -1)
equal(str1[],str2[],bool:ignorecase)
fcopy(oldname[],newname[])
fcopytextfile(oldname[],newname[])
fcreate(nev[], adat[])
fixchar(chr)
fixchars_AddMenuItem(Menu:menuid, column, menutext[])
fixchars_CreateMenu(title[], columns, Float:x, Float:y, Float:col1width, Float:col2width = 0.0)
fixchars_CreatePlayerTextDraw(playerid, Float:x, Float:y, text[])
fixchars_GameTextForAll(text[],time,style)
fixchars_GameTextForPlayer(playerid,text[],time,style)
fixchars_PlayerTextDrawSetS(playerid, PlayerText:text, string[])
fixchars_SetMenuColumnHeader(Menu:menuid, column, columnheader[])
fixchars_TextDrawCreate(Float:x, Float:y, text[])
fixchars_TextDrawSetString(Text:text, string[])
floatrand(Float:min, Float:max)
frenametextfile(oldname[],newname[])
ini_GetKey(line[])
ini_GetValue(line[])
isNumeric(const string[])
mktime(hour,minute,second,day,month,year)
mysql_fetch_float
mysql_fetch_int
num_hash(buf[])
onPause_Init
onPause_Update(playerid)
ret_memcpy(source[],index=0,numbytes)
reverse(const source[])
set(dest[],source[])
strlower(txt[])
strreplace(trg[],newstr[],src[])
strupper(txt[])
tizmp(playerid, ido = 10, kick = 5)
trunc(Float:value)
valtostr(szam)
ABroadCastFormat(%1,%2,%3,%4) (do)
ACCEL_RATE (0.03)
ADAT_TYPE_AKTIVITAS (1)
ADO_HAZ (250)
ADO_HAZFALU (80)
ADO_HAZGN (400)
ADO_HAZLS (250)
ADO_HAZSF (200)
ADO_HAZTANYA (70)
ADO_JARMU (250)
ADO_MAX (200)
ADO_MIN (0)
ADO_ONKORMANYZAT_RESZE_FLOAT (0.1	)
ADO_PENZ (0.001)
ADO_SZINT (200)
AKTASLOT (4)
AKTASLOT (4)
AKTIVITAS_WAR (7)
ALAPINTERIORSZAM (1)
ALAPOBJECTDISTANCE (100.0)
AMT(%1,%2%3) (%2(PlayerInfo[%1][pJob1] == (%3) || PlayerInfo[%1][pJob2] == (%3)))
AkkuMax (100)
BANK_KAMAT (25.0)
BANK_KEZELESI_KOLTSEG (5				)
BANK_KEZELESI_KOLTSEG_FLOAT (0.08	)
BANK_SZAZALEK (2 )
BAR_EHSEG (1)
BAR_SZUKSEGLET (2)
BIZ_247 (13)
BIZ_AUTOMATA (21)
BIZ_AUTOSBOLT (27)
BIZ_BERLES1 (4)
BIZ_BERLES2 (5)
BIZ_BERSZEF (29)
BIZ_BNEV (22)
BIZ_BUTOR (10)
BIZ_BuyPrice (13)
BIZ_CROOKER (15)
BIZ_CSIRKE (17)
BIZ_DISCO (28)
BIZ_ETTEREM (2)
BIZ_EntranceCost (14)
BIZ_ExitX (9)
BIZ_ExitY (10)
BIZ_ExitZ (11)
BIZ_Extortion (5)
BIZ_FANKOS (23)
BIZ_FIXCAR (12)
BIZ_GS1 (0)
BIZ_GS2 (1)
BIZ_HAJO (22)
BIZ_HIRDETES (11)
BIZ_HOTDOG (25)
BIZ_IMPORT (9)
BIZ_Interior (17)
BIZ_KOCSMA (19)
BIZ_LOTER (30 )
BIZ_LevelNeeded (12)
BIZ_Locked (16)
BIZ_MCDONALD (16)
BIZ_MTulajID (25)
BIZ_MaxProducts (19)
BIZ_Message (4)
BIZ_OLAJ (7)
BIZ_Owned (1)
BIZ_Owner (3)
BIZ_PB (14)
BIZ_PIGPEN (20)
BIZ_PIZZA (18)
BIZ_PriceProd (20)
BIZ_Products (18)
BIZ_REZSI (8)
BIZ_RUHA (26)
BIZ_Szazalek (24)
BIZ_TELEFON (6)
BIZ_TUNING (3)
BIZ_Till (15)
BIZ_Till2 (23)
BIZ_Tulaj (2)
BIZ_VLA (24)
BIZ_VanBelso (21)
BIZ_X (6)
BIZ_Y (7)
BIZ_Z (8)
BP_FEJ (1)
BP_LAB (3)
BP_TEST (2)
B_Cselekves (20.0)
B_Kozel (3.0)
B_Normal (8.0)
B_Tavol (26.0)
B_Tavol2 (30.0)
BombAnim(%1) (ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0))
CAMERA_CUT (2)
CAMERA_MODE_FLY (1)
CAMERA_MODE_NONE (0)
CAMERA_MOVE (1)
CARMODTYPE_EXHAUST (6)
CARMODTYPE_FRONT_BUMPER (10)
CARMODTYPE_HOOD (1)
CARMODTYPE_HYDRAULICS (9)
CARMODTYPE_LAMPS (4)
CARMODTYPE_NITRO (5)
CARMODTYPE_REAR_BUMPER (11)
CARMODTYPE_ROOF (2)
CARMODTYPE_SIDESKIRT (3)
CARMODTYPE_SPOILER (0)
CARMODTYPE_STEREO (8)
CARMODTYPE_VENT_LEFT (13)
CARMODTYPE_VENT_RIGHT (12)
CARMODTYPE_WHEELS (7)
CARRESIIDO (3600)
CAR_Angle (9)
CAR_ColorOne (12)
CAR_ColorTwo (13)
CAR_Date (16)
CAR_Hidraulika (24)
CAR_Id (4)
CAR_Int (10)
CAR_KERESKEDO (28 )
CAR_KM (22)
CAR_Kerek (19)
CAR_Kulcsok1 (27)
CAR_Kulcsok2 (27)
CAR_Lock (15)
CAR_Matrica (20)
CAR_Model (5)
CAR_Neon (23)
CAR_Olajcsere (26)
CAR_Owned (1)
CAR_Owner (3)
CAR_Painted (17)
CAR_Riaszto (25)
CAR_Tulaj (2)
CAR_Tuning (18)
CAR_VW (11)
CAR_Value (14)
CAR_X (6)
CAR_Y (7)
CAR_Z (8)
CHANNEL_PLAYERS (10)
CHANNEL_TIMEOUT (30)
CHECKPOINT_HOME (12)
CHECKPOINT_NONE (0)
CLICK_SOURCE_SCOREBOARD (0)
CMD_KAPU_BETOLT (1)
CMD_KAPU_RELOAD (3)
CMD_KAPU_TOROL (2)
COLOR_ADD (0x63FF60AA)
COLOR_ALLDEPT (0xFF8282AA)
COLOR_BLACK (0x050505AA)
COLOR_BLUE (0x4661FEAA)
COLOR_BROWN (0x993300AA)
COLOR_COLOR_LIGHTRED (0xFF0000AA)
COLOR_DARKBLUE (0x22AAFFFF)
COLOR_DARKGOLD (0x808000AA)
COLOR_DARKGREEN (0x9ACD32FF)
COLOR_DARKYELLOW (0xFFFF00FF)
COLOR_DBLUE (0x2641FEAA)
COLOR_DORANGE (0xFF6400FF)
COLOR_FADE1 (0xE6E6E6E6)
COLOR_FADE2 (0xC8C8C8C8)
COLOR_FADE3 (0xAAAAAAAA)
COLOR_FADE4 (0x8C8C8C8C)
COLOR_FADE5 (0x6E6E6E6E)
COLOR_GOV1 (0xFF8800FF)
COLOR_GOV2 (0xEA0000FF)
COLOR_GRAD1 (0xB4B5B7FF)
COLOR_GRAD2 (0xBFC0C2FF)
COLOR_GRAD3 (0xCBCCCEFF)
COLOR_GRAD4 (0xD8D8D8FF)
COLOR_GRAD5 (0xE3E3E3FF)
COLOR_GRAD6 (0xF0F0F0FF)
COLOR_GREEN (0x33AA33AA)
COLOR_GREY (0xAFAFAFAA)
COLOR_GreenMoney (0x009900EE)
COLOR_GreyMoney (0xC0C0C0EE)
COLOR_INVIS (0xAFAFAF00)
COLOR_INVISIBLE (0xFFFFFF00)
COLOR_LIGHTBLUE (0x33CCFFAA)
COLOR_LIGHTBROWN (0x8B4513FF)
COLOR_LIGHTGREEN (0x9ACD32AA)
COLOR_LIGHTRED (0xFF6347AA)
COLOR_LIME (0x99FF00AA)
COLOR_Live (0xFF6C00FF)
COLOR_NAR (0xFF4500FF)
COLOR_NEWS (0xFFA500AA)
COLOR_OOC (0xE0FFFFAA)
COLOR_ORANGE (0xFF8C00AA)
COLOR_PINK (0xFF80FFC7)
COLOR_PIROS (0xFF0000FF)
COLOR_PURPLE (0xC2A2DAAA)
COLOR_RED (0xAA3333AA)
COLOR_RED2 (0xAA0000AA)
COLOR_RENDEZVENY (0x00C79DFF)
COLOR_RedMoney (0x990000EE)
COLOR_SKEK (0x2641FEAA)
COLOR_SPEC (0xBFC0C200)
COLOR_UJIRC (0x00A2FFFF)
COLOR_ULTRAPIROS (0xE60000FF)
COLOR_WHITE (0xFFFFFFAA)
COLOR_YELLOW (0xFFFF00AA)
COLOR_YELLOW2 (0xF5DEB3AA)
COLOR_YellowMoney (0x999900EE)
COL_CITROM (")
COL_FEHER (")
COL_FEKETE (")
COL_LILA (")
COL_NARANCS (")
COL_NZOLD (")
COL_PINK (")
COL_PIROS (")
COL_SKEK (")
COL_SZURKE (")
COL_SZURKE (")
COL_VKEK (")
COL_VKEK (")
COL_VPINK (")
COL_VPIROS (")
COL_VZOLD (")
CONNECT_TIME_LIMIT (10)
CR_COMMAND_OUT_OF_SYNC (2014)
CR_SERVER_GONE_ERROR (2006)
CR_SERVER_LOST (2013)
CR_SERVER_LOST_EXTENDED (2055)
CUSTOMPICKUPSTIME (2900)
CUSTOM_DIALOG_PARAMETERS (playerid, response, listitem, inputtext[])
ClearAnim(%1) (ApplyAnimation(%1, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0))
CopMsgFormat(%1,%2,%3) (do)
DIALOG_ABSZ ((37))
DIALOG_ABSZ_BELEPES ((44))
DIALOG_ABSZ_KIJELZES ((45))
DIALOG_ABSZ_KIVETEL ((46))
DIALOG_AJSZOVEG ((24))
DIALOG_APANEL ((6475))
DIALOG_AUTOTOLVAJ ((25))
DIALOG_AVESZ ((33))
DIALOG_BBSZ ((36))
DIALOG_BBSZ_BEFIZETES ((40))
DIALOG_BBSZ_BELEPES ((38))
DIALOG_BBSZ_JELSZOVALTAS ((47))
DIALOG_BBSZ_KIJELZES ((39))
DIALOG_BBSZ_KIVETEL ((41))
DIALOG_BBSZ_UTALAS_1 ((42))
DIALOG_BBSZ_UTALAS_2 ((43))
DIALOG_BELSO ((14))
DIALOG_BEP ((20))
DIALOG_BUTOR ((9878))
DIALOG_BUTOR_ASZTAL ((9883))
DIALOG_BUTOR_KATEGORIA ((9882))
DIALOG_BUTOR_MEGVETEL ((9885))
DIALOG_BUTOR_PREMIUM ((9877))
DIALOG_BUTOR_SZERKESZTES ((9881))
DIALOG_BUTOR_TORLES ((9886))
DIALOG_BUTOR_VETEL ((9880))
DIALOG_C4 ((28))
DIALOG_CAR ((16))
DIALOG_CCOK_SZERZODES ((48))
DIALOG_CUSTOM ((32765))
DIALOG_FBI ((19))
DIALOG_FEJLESZTESEK ((35))
DIALOG_GABI ((21))
DIALOG_GOTO ((15))
DIALOG_ITEMS (( 31 ))
DIALOG_KALAKITAR_MEGEROSIT ((9903))
DIALOG_KALAKIT_MEGEROSIT ((9902))
DIALOG_KAPU_FRAKCIO ((9890))
DIALOG_KAPU_FRAKCIO_SZERK ((9895))
DIALOG_KAPU_KOD ((9900))
DIALOG_KAPU_KOD_SZERKESZTES ((9901))
DIALOG_KAPU_MODEL ((9888))
DIALOG_KAPU_NEV ((9896))
DIALOG_KAPU_NEV_SZERKESZTES ((9897))
DIALOG_KAPU_POZICIO ((9893))
DIALOG_KAPU_SEBESSEG ((9894))
DIALOG_KAPU_STATISZTIKA ((9887))
DIALOG_KAPU_SZERKESZTES ((9891))
DIALOG_KAPU_TAVOLSAG ((9889))
DIALOG_KAPU_TAV_SZERKESZTES ((9898))
DIALOG_KAPU_TORLES ((9892))
DIALOG_KAPU_VALASZTAS ((9899))
DIALOG_KINCS ((27))
DIALOG_KOCSIRADIO ((6474) )
DIALOG_LOGIN ((11))
DIALOG_MSGINFO ((9904) )
DIALOG_MUNKA_ILLEGALIS ((13))
DIALOG_MUNKA_LEGALIS ((12))
DIALOG_NEON ((26))
DIALOG_NINCS ((0))
DIALOG_NYELV_HASZNAL ((29))
DIALOG_NYELV_TANUL ((30))
DIALOG_OBJECT_TORLES ((9905))
DIALOG_PARANCSOK ((34))
DIALOG_PIAC ((32))
DIALOG_RACETUNING ((22))
DIALOG_RACETUNING_2 ((23))
DIALOG_REGISTRATION ((10))
DIALOG_STYLE_INPUT (1)
DIALOG_STYLE_LIST (2)
DIALOG_STYLE_MSGBOX (0)
DIALOG_STYLE_PASSWORD (3)
DIALOG_SZABAD_BUTOROK ((9879))
DIALOG_SZABAD_BUTOROK_LISTA ((9884))
DIALOG_URES ((49))
DIALOG_VESZ ((18))
DIALOG_ZSEBRADIO ((6234) )
DP_Biz (3)
DP_Haz (2)
DP_Kocsi (1)
DecreaseVehHP(%1) (if (vhp > %1) SetVehicleHealth(vehicleid, vhp - %1))
EDIT_RESPONSE_CANCEL (0)
EDIT_RESPONSE_FINAL (1)
EDIT_RESPONSE_UPDATE (2)
ER_ACCESS_DENIED_ERROR (1045)
ER_DBACCESS_DENIED_ERROR (1044)
ER_SYNTAX_ERROR (1149)
ER_UNKNOWN_TABLE (1109)
EVENT_ACTION_ENTER (1)
EVENT_ACTION_EXIT (2)
EVENT_ACTION_LOAD (3)
EVENT_ACTION_SAVE (4)
EVENT_TYPE_DISCO (1)
EVENT_TYPE_USERDATA (2)
FA_COMBAT (4000)
FA_DEAGLE (2000)
FA_M4 (4500)
FA_MP5 (3000)
FA_SHOTGUN (2000)
FA_SILENCED (1000)
FA_SNIPER (5500)
FIGHT_STYLE_BOXING (5)
FIGHT_STYLE_ELBOW (16)
FIGHT_STYLE_GRABKICK (15)
FIGHT_STYLE_KNEEHEAD (7)
FIGHT_STYLE_KUNGFU (6)
FIGHT_STYLE_NORMAL (4)
FRAKCIO_AZTEC (13)
FRAKCIO_BALLAS (3)
FRAKCIO_COSANOSTRA (5)
FRAKCIO_FBI (2)
FRAKCIO_GSF (17)
FRAKCIO_LS13 (8 )
FRAKCIO_MENTO (4)
FRAKCIO_NAV (20)
FRAKCIO_NEMHASZ (15)
FRAKCIO_OKTATO (16)
FRAKCIO_ONKORMANYZAT (7)
FRAKCIO_RIPORTER (9)
FRAKCIO_SCPD (1)
FRAKCIO_SFMENTO (19)
FRAKCIO_SFPD (14)
FRAKCIO_SFTAXI (18)
FRAKCIO_TAXI (10)
FRAKCIO_TURKEY (21)
FRAKCIO_TUZOLTO (12)
FRAKCIO_VAGOS (11)
FRAKCIO_YAKUZA (6)
For(%1,%2,%3) (for(new %1 = %2; %1 < %3; %1++))
Format(%1,%2,%3) (format(%1,sizeof(%1),(%2),%3))
GARAZS_ANGLE (39)
GARAZS_Ara (36)
GARAZS_BELSO (41)
GARAZS_Date (38)
GARAZS_Eladva (31)
GARAZS_HAZ (40)
GARAZS_Lock (37)
GARAZS_Tulaj (32)
GARAZS_Tulajid (30)
GARAZS_X (33)
GARAZS_Y (34)
GARAZS_Z (35)
GOTOSZAMA (26)
GYEMANT_HASZON_IDO (3600)
GasMax (100)
GetMoney(%1) (PlayerInfo[%1][pCash])
GetPlayerInterior(%1) (PlayerInterior[%1])
GetPlayerVirtualWorld(%1) (PlayerVW[%1])
GiveMoney(%1,%2) (PlayerInfo[%1][pCash] += %2)
HAZ_Arm (11)
HAZ_Armour (6)
HAZ_Belso (4)
HAZ_Butorok (31)
HAZ_Cigi (22)
HAZ_Csak (19)
HAZ_Csakneki (20)
HAZ_Date (18)
HAZ_Fegyverek (28)
HAZ_Health (5)
HAZ_Hel (10)
HAZ_Heroin (24)
HAZ_Kaja (21)
HAZ_Kokain (23)
HAZ_Lock (12)
HAZ_Marihuana (25)
HAZ_Mati (26)
HAZ_Mellenyek (29)
HAZ_Owned (13)
HAZ_Owner (7)
HAZ_Rent (15)
HAZ_Rentabil (16)
HAZ_Rooms (14)
HAZ_Ruhak (30)
HAZ_Takings (17)
HAZ_Tipus (27)
HAZ_Tulaj (8)
HAZ_Value (9)
HAZ_X (1)
HAZ_Y (2)
HAZ_Z (3)
HEX_PREFIX (")
HOLDING(%0) (((newkeys & (%0)) == (%0)))
HTTP_ERROR_BAD_HOST (1)
HTTP_ERROR_CANT_CONNECT (3)
HTTP_ERROR_CANT_WRITE (4)
HTTP_ERROR_CONTENT_TOO_BIG (5)
HTTP_ERROR_MALFORMED_RESPONSE (6)
HTTP_ERROR_NO_SOCKET (2)
HTTP_GET (1)
HTTP_HEAD (3)
HTTP_POST (2)
HideDialog(%1) (ShowPlayerDialog(%1, -1, DIALOG_STYLE_MSGBOX, " ", " ", "", ""))
IDOHOZZAADAS (2 )
INI_TYPE_CARDATA (2)
INI_TYPE_CARDATA_FK (4)
INI_TYPE_CARDATA_VS (3)
INI_TYPE_KUTDATA (5)
INI_TYPE_TELEFONDATA (6)
INI_TYPE_USERDATA (1)
INVALID_3DTEXT_ID ((0xFFFF))
INVALID_3D_TEXT_ID (Text3D)
INVALID_GANG_ZONE ((-1))
INVALID_GANG_ZONE ((-1))
INVALID_MENU ((0xFF))
INVALID_MENU ((0xFF))
INVALID_OBJECT_ID ((0xFFFF))
INVALID_OBJECT_ID ((255))
INVALID_PLAYER_ID ((0xFFFF))
INVALID_PLAYER_ID ((0xFFFF))
INVALID_TEXT_DRAW ((0xFFFF))
INVALID_TEXT_DRAW ((0xFFFF))
INVALID_VEHICLE_ID ((0xFFFF))
INVALID_VEHICLE_ID ((0xFFFF))
IP(%1) (PlayerInfo[%1][pIP])
IP_ADDRESS_LENGTH (20)
ITEM_ADD (3)
ITEM_ALMA (1)
ITEM_CHECK (6)
ITEM_DATA (8)
ITEM_DATA_COUNT (2)
ITEM_DATA_E1 (3)
ITEM_DATA_E2 (4)
ITEM_DATA_E3 (5)
ITEM_DATA_TYPE (1)
ITEM_DELETE (5)
ITEM_LOAD (1)
ITEM_NAME (7)
ITEM_REMOVE (4)
ITEM_SAVE (2)
InvisibleColor(%1) (SetPlayerColor(%1, COLOR_INVISIBLE))
IsACop(%1) ((LMT(%1, FRAKCIO_SCPD) || LMT(%1, FRAKCIO_FBI) || LMT(%1, FRAKCIO_SFPD) || LMT(%1, FRAKCIO_NAV)))
IsAdmin(%1) ((PlayerInfo[%1][pAdmin]))
IsAt_ATM (31)
IsAt_Bank (43)
IsAt_Buszmegallo (44)
IsAt_Csirkes (3)
IsAt_Csokiautomata (45)
IsAt_Etterem (11)
IsAt_Fankos (47)
IsAt_Festo (40)
IsAt_Fort (25)
IsAt_Haz (41)
IsAt_HazElott (42)
IsAt_HotDog (9)
IsAt_Italautomata (46)
IsAt_KereskedoHQ (30)
IsAt_Korhaz (10)
IsAt_LSPDBorton (20)
IsAt_McDonald (1)
IsAt_Pizzazo (2)
IsAt_Szerelohely (12)
IsAt_Szerencsegep (50)
IsAt_Telefonfulke (49)
IsAt_VLA (48)
IsClint(%1) ((PlayerInfo[%1][pClint]))
JOGSI_ADR (100)
JOGSI_AUTO (75)
JOGSI_FEGYVER (250)
JOGSI_HAJO (100)
JOGSI_HORGASZ (100)
JOGSI_KAMION (100)
JOGSI_KRESZ (100)
JOGSI_MOTOR (75)
JOGSI_REPULO (100)
KAMATSZORZO (0.75 )
KEY_ACTION ((1))
KEY_ACTION ((1))
KEY_ANALOG_DOWN ((4096))
KEY_ANALOG_DOWN ((4096))
KEY_ANALOG_LEFT ((8192))
KEY_ANALOG_LEFT ((8192))
KEY_ANALOG_RIGHT ((16384))
KEY_ANALOG_RIGHT ((16384))
KEY_ANALOG_UP ((2048))
KEY_ANALOG_UP ((2048))
KEY_CROUCH ((2))
KEY_CROUCH ((2))
KEY_CTRL_BACK ((262144))
KEY_DOWN ((128))
KEY_DOWN ((128))
KEY_FIRE ((4))
KEY_FIRE ((4))
KEY_HANDBRAKE ((128))
KEY_HANDBRAKE ((128))
KEY_JUMP ((32))
KEY_JUMP ((32))
KEY_LEFT ((-128))
KEY_LEFT ((-128))
KEY_LOOK_BEHIND ((512))
KEY_LOOK_BEHIND ((512))
KEY_LOOK_LEFT ((256))
KEY_LOOK_LEFT ((256))
KEY_LOOK_RIGHT ((64))
KEY_LOOK_RIGHT ((64))
KEY_NO ((131072))
KEY_RIGHT ((128))
KEY_RIGHT ((128))
KEY_SECONDARY_ATTACK ((16))
KEY_SECONDARY_ATTACK ((16))
KEY_SPRINT ((8))
KEY_SPRINT ((8))
KEY_SUBMISSION ((512))
KEY_SUBMISSION ((512))
KEY_UP ((-128))
KEY_UP ((-128))
KEY_WALK ((1024))
KEY_WALK ((1024))
KEY_YES ((65536))
KINCS_KOD_HOSSZ (8)
KINCS_KOD_HOSSZ_STRING ("nyolc")
KOCSIROMLAS_KICSI (700)
KOCSIROMLAS_KOZEPES (800)
KOCSIROMLAS_MAX (1500)
KOCSIROMLAS_NAGY (1200)
KOCSIROMLAS_TOLAS (300)
KereskedoSpawnok (2)
KocsiLeadasMax (60)
LMT(%1,%2%3) (%2(PlayerInfo[%1][pLeader] == (%3) || PlayerInfo[%1][pMember] == (%3)))
MAPICON_GLOBAL (1 )
MAPICON_GLOBAL_CHECKPOINT (3 )
MAPICON_LOCAL (0 )
MAPICON_LOCAL_CHECKPOINT (2 )
MARTINKEK (0x1E90FFFF)
MASZKSLOT (4)
MAXAFKIDO (300 )
MAXAJTO (330)
MAXAKTACUCC (15000)
MAXAKTAPENZ (10000000)
MAXALMA (50)
MAXALMAAKOCSIBAN (3000)
MAXAUKCIO (5)
MAXBEJELENTKEZES (3)
MAXBIZ (31)
MAXBUTOR (50)
MAXBUTORSZAM (MAXHAZ )
MAXCANNABIS (15)
MAXCANNABISAKOCSIBAN (60)
MAXCSERJE (30)
MAXCSERJEAKOCSIBAN (60)
MAXERTEK (2100000000)
MAXFEM (5)
MAXGARAZS (600)
MAXHAZ (600)
MAXHAZCIGI (150)
MAXHAZHEROIN (76000)
MAXHAZKAJA (50)
MAXHAZKOKAIN (76000)
MAXHAZMARIHUANA (76000)
MAXHAZMATI (500000)
MAXHAZPERSOR (2)
MAXHEROIN (4000)
MAXHEROINKOCSIBAN (10000)
MAXHP (150.0)
MAXIGENYLES (7)
MAXINT (55)
MAXIPBAN (1)
MAXIRC (100)
MAXKAJA (10)
MAXKOKAIN (5000)
MAXKOKAINKOCSIBAN (10000)
MAXKOTSZER (30)
MAXMAK (20)
MAXMAKAKOCSIBAN (60)
MAXMARIHUANA (2500)
MAXMARIHUANAKOCSIBAN (10000)
MAXMATI (40000)
MAXMATIKOCSIBAN (80000)
MAXMUANYAG (3)
MAXMUANYAGAKOCSIBAN (15)
MAXPENZ (9999999)
MAXPENZSZALLITOPENZ (50000000)
MAXPROD (150)
MAXRENDELES (10)
MAXTERULET (30)
MAXTOLTOAKOCSIBAN (4)
MAXVSKOCSI (750)
MAXZSAKPENZ (500000)
MAX_3DTEXT_GLOBAL ((1024))
MAX_3DTEXT_PLAYER ((1024))
MAX_AKTA (100)
MAX_ATM (100)
MAX_BENZIN (10000)
MAX_BENZINKUT (25)
MAX_BENZIN_SZALLITAS (500)
MAX_BOLYA (25)
MAX_BSZEF (150)
MAX_CHANNEL (5)
MAX_CHATBUBBLE_LENGTH (144)
MAX_CONNECT_PER_IP (3)
MAX_DROP_ITEMS (1000)
MAX_ELDOBAS (1000)
MAX_ELDOBOTTCUCC_IDO (3600)
MAX_FA (100)
MAX_FEGYVER (1000)
MAX_FEKVORENDOR (50)
MAX_FEKVORENDOR_PICK (12)
MAX_FELSZERELES (5)
MAX_FPS_WAR (18)
MAX_FRAKCIO (22)
MAX_FRAKCIOKOCSI (30)
MAX_FSZ_RENDELES (8)
MAX_GANG_ZONES ((1024))
MAX_GANG_ZONES ((1024))
MAX_GYEMANT (10)
MAX_HOUSE_PER_PLAYER (3)
MAX_HO_OBJECT (3)
MAX_HULLA (100)
MAX_IP_STORE (100)
MAX_ITEMS (1)
MAX_ITEM_TYPE (4)
MAX_KAPU (250)
MAX_KAPU_HASZNALO (10)
MAX_KINCS (800)
MAX_KOCSICUCC (24)
MAX_KOCSIK (100)
MAX_LEADEREK (5)
MAX_LEVEL_BICIKLI (50)
MAX_LEVEL_KOCSI (400)
MAX_LOTER (30)
MAX_MEGALLO (10)
MAX_MENUS ((128))
MAX_MENUS ((128))
MAX_MUNKA (30)
MAX_MUNKAKOCSI (70)
MAX_MYSQL_STRING (5000)
MAX_MYSQL_STRING_UPDATER (1024)
MAX_NPC_SOFOR (5)
MAX_NYELV (28)
MAX_OBJECTS ((150))
MAX_OBJECTS ((1000))
MAX_OBJECTSZ (300)
MAX_PARKOLO (150)
MAX_PBSKILL (70)
MAX_PIAC_CUCC (50)
MAX_PICKUP (50)
MAX_PICKUPS ((4096))
MAX_PING (320)
MAX_PING_WAR (150)
MAX_PING_WARN (7)
MAX_PIZZA (5)
MAX_PLAYERS (201)
MAX_PLAYERS ((500))
MAX_PLAYERS ((500))
MAX_PLAYER_ATTACHED_OBJECTS (10 )
MAX_PLAYER_NAME ((24))
MAX_PLAYER_NAME ((24))
MAX_PLAYER_TEXT_DRAWS ((256))
MAX_QUERY (1000)
MAX_RADIO (25)
MAX_REPAIRIDO (5)
MAX_SKILLFEGYVER (1500)
MAX_SMS_HOSSZ (500)
MAX_TARGY (50)
MAX_TAROLT_SMS (5)
MAX_TELEFON (1000)
MAX_TEXT_DRAWS ((2048))
MAX_TEXT_DRAWS ((1024))
MAX_TUZ_HELY (50)
MAX_VEHICLES ((2000))
MAX_VEHICLES ((2000))
MIN_VEHI_ID (400)
MOVE_BACK (2)
MOVE_BACK_LEFT (7)
MOVE_BACK_RIGHT (8)
MOVE_FORWARD (1)
MOVE_FORWARD_LEFT (5)
MOVE_FORWARD_RIGHT (6)
MOVE_LEFT (3)
MOVE_RIGHT (4)
MOVE_SPEED (210.0)
MUNKA_AUTOTOLVAJ (5)
MUNKA_BARKI (0)
MUNKA_BEREL1 (25)
MUNKA_BEREL2 (26)
MUNKA_BEREL3 (27)
MUNKA_BUS (12)
MUNKA_CROSS (29)
MUNKA_DETEKTIV (1)
MUNKA_DROG (4)
MUNKA_EPITESZ (18)
MUNKA_FARMER (16)
MUNKA_FAVAGO (21)
MUNKA_FEGYVER (8)
MUNKA_FUNYIRO (17)
MUNKA_HACKER (14)
MUNKA_HULLA (22)
MUNKA_KAMIONOS (15)
MUNKA_KUKAS (20)
MUNKA_PANCEL (19)
MUNKA_PENZ_SZORZO (2				)
MUNKA_PILOTA (9)
MUNKA_PIZZAS (11)
MUNKA_POSTAS (13)
MUNKA_PROSTI (3)
MUNKA_SSS (28)
MUNKA_SWAT (24)
MUNKA_SZERELO (6)
MUNKA_TAXI (23)
MUNKA_TESTOR (7)
MUNKA_UGYVED (2)
MUNKA_UTTISZTITO (10)
M_BELSO (23)
M_BICIKLI (34)
M_CANNABIS (3)
M_CSERJE (1)
M_ELLAT (46)
M_FELJAVIT (32)
M_FELTOLT (39)
M_FLY (37)
M_GUMICSERE (42)
M_HARCVEGE (33)
M_HATASTALANIT (27)
M_HEROIN (12)
M_IDK (38)
M_JARMUJAVITAS (29)
M_KAMION (30)
M_KATANA (16)
M_KISZAL (35)
M_KISZALELL (36)
M_KOCSIDEATH (47)
M_KOKAIN (11)
M_LSRABOL (33)
M_MAK (2)
M_MARIHUANA (13)
M_MATERIAL (14)
M_MELLENY (15)
M_MOTOR (22)
M_MSEGIT (24)
M_NEON (41)
M_NYELVTANULAS (28)
M_RIASZTO (45)
M_RUHACSERE (25)
M_RUHAELVESZ (26)
M_SEGIT (21)
M_SZEREL (31)
M_UGRALOS (40)
M_VHKAPU1 (43)
M_VHKAPU2 (44)
NINCS (-1)
NO_TEAM ((255))
NO_TEAM ((255))
NPC(%1) (NPC[%1])
NPC_AKCIO_FOLYTAT ((3))
NPC_AKCIO_START ((1))
NPC_AKCIO_STOP ((4))
NPC_AKCIO_SZUNET ((2))
NYELVTANULAS_IDO (1800)
NYELV_ANGOL (1)
NYELV_HOLLAND (11)
NYELV_JAPAN (5)
NYELV_KINAI (6)
NYELV_LENGYEL (10)
NYELV_NEMET (2)
NYELV_OLASZ (4)
NYELV_OROSZ (3)
NYELV_SPANYOL (7)
NYELV_SZLOVAK (9)
NYELV_TOROK (8)
Nev(%1) (PlayerInfo[%1][pNev])
OBJECTIVE_COLOR (0x64000064)
OBJECT_MATERIAL_SIZE_128x128 (60)
OBJECT_MATERIAL_SIZE_128x32 (40)
OBJECT_MATERIAL_SIZE_128x64 (50)
OBJECT_MATERIAL_SIZE_256x128 (90)
OBJECT_MATERIAL_SIZE_256x256 (100)
OBJECT_MATERIAL_SIZE_256x32 (70)
OBJECT_MATERIAL_SIZE_256x64 (80)
OBJECT_MATERIAL_SIZE_32x32 (10)
OBJECT_MATERIAL_SIZE_512x128 (120)
OBJECT_MATERIAL_SIZE_512x256 (130)
OBJECT_MATERIAL_SIZE_512x512 (140)
OBJECT_MATERIAL_SIZE_512x64 (110)
OBJECT_MATERIAL_SIZE_64x32 (20)
OBJECT_MATERIAL_SIZE_64x64 (30)
OBJECT_MATERIAL_TEXT_ALIGN_CENTER (1)
OBJECT_MATERIAL_TEXT_ALIGN_LEFT (0)
OBJECT_MATERIAL_TEXT_ALIGN_RIGHT (2)
OFFSET_X ((FV[0])
OFFSET_Y ((FV[1])
OFFSET_Z ((FV[2])
ONKORMANYZAT_FRAKCIO_ADO_SZORZO (0.5)
PAOLO ("P_eski")
PENZ_PIZZA (500)
PInfo(%1,%2) (PlayerInfo[%1][p%2])
PLAYER_MARKERS_MODE_GLOBAL ((1))
PLAYER_MARKERS_MODE_OFF ((0))
PLAYER_MARKERS_MODE_STREAMED ((2))
PLAYER_MARKER_CLEAR (-1)
PLAYER_MARKER_COLOR_SHOOT (3)
PLAYER_MARKER_COLOR_TARGET (2)
PLAYER_MARKER_COLOR_WEAPONHOLD (1)
PLAYER_MARKER_KILL (4)
PLAYER_MARKER_KILL (4)
PLAYER_MARKER_MKILL (5)
PLAYER_MARKER_MKILL (5)
PLAYER_MARKER_MTIME_KILL (300)
PLAYER_MARKER_MTIME_MKILL (900)
PLAYER_MARKER_MTIME_SHOOT (180)
PLAYER_MARKER_NONE (0)
PLAYER_MARKER_SHOOT (3)
PLAYER_MARKER_TARGET (2)
PLAYER_MARKER_TIME_KILL (300)
PLAYER_MARKER_TIME_KILL_SHOOT (5)
PLAYER_MARKER_TIME_MKILL (300)
PLAYER_MARKER_TIME_MKILL_SHOOT (10)
PLAYER_MARKER_TIME_SHOOT (15)
PLAYER_MARKER_TIME_TARGET (60)
PLAYER_MARKER_TIME_TARGETING (3)
PLAYER_MARKER_TIME_WEAPONHOLD (15)
PLAYER_MARKER_WEAPONHOLD (1)
PLAYER_MARKER_WEAPONS_SHOOT(%1) ((Fegyvere[%1] == 22 || 24 <= Fegyvere[%1] <= 33))
PLAYER_MARKER_WEAPONS_TARGET(%1) (PLAYER_MARKER_WEAPONS_WEAPONHOLD(%1))
PLAYER_MARKER_WEAPONS_WEAPONHOLD(%1) ((25 <= Fegyvere[%1] <= 27 || 30 <= Fegyvere[%1] <= 31) )
PLAYER_RECORDING_TYPE_DRIVER (1)
PLAYER_RECORDING_TYPE_DRIVER (1)
PLAYER_RECORDING_TYPE_NONE (0)
PLAYER_RECORDING_TYPE_NONE (0)
PLAYER_RECORDING_TYPE_ONFOOT (2)
PLAYER_RECORDING_TYPE_ONFOOT (2)
PLAYER_STATE_DRIVER ((2))
PLAYER_STATE_DRIVER ((2))
PLAYER_STATE_ENTER_VEHICLE_DRIVER ((5) )
PLAYER_STATE_ENTER_VEHICLE_PASSENGER ((6) )
PLAYER_STATE_EXIT_VEHICLE ((4) )
PLAYER_STATE_NONE ((0))
PLAYER_STATE_NONE ((0))
PLAYER_STATE_ONFOOT ((1))
PLAYER_STATE_ONFOOT ((1))
PLAYER_STATE_PASSENGER ((3))
PLAYER_STATE_PASSENGER ((3))
PLAYER_STATE_SPAWNED ((8))
PLAYER_STATE_SPAWNED ((8))
PLAYER_STATE_SPECTATING ((9))
PLAYER_STATE_SPECTATING ((9))
PLAYER_STATE_WASTED ((7))
PLAYER_STATE_WASTED ((7))
PLAYER_VARTYPE_FLOAT (3)
PLAYER_VARTYPE_INT (1)
PLAYER_VARTYPE_NONE (0)
PLAYER_VARTYPE_STRING (2)
PRESSED(%0) ((((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0))))
PRESSED(%0) (\)
P_ALL (-1)
P_KE_HEROIN (5)
P_KE_KOKAIN (4)
P_KE_MARIHUANA (6)
P_KE_MATERIAL (7)
P_KI_HEROIN (1)
P_KI_KOKAIN (0)
P_KI_MARIHUANA (2)
P_KI_MATERIAL (3)
P_LOAD (0)
P_SAVE (1)
Pink (0xFF00FFFF)
Pink2 (0xFF1493FF)
PlayerSQLID(%1) (PlayerInfo[%1][pID])
QUERY_LoadPlayer (1)
RACECPMERET (22.5)
RACECPMERETB (22.5)
RACEMAXCP (51 )
RACESLOTOK (3)
RACE_BETOLTVE (1)
RACE_CP_CEL (-2)
RACE_CP_START (-1)
RACE_ELINDULT (3)
RACE_EPITES (-1)
RACE_INDUL (2)
RACE_NINCS (0)
RACE_VEGE (4)
RELEASED(%0) ((((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0))))
RENDELES_IDO (900)
Rand(%1,%2) ((%1+random(%2-%1+1)))
RefuelWait (7500)
Registered(%1) (PlayerInfo[playerid][pRegistered])
ResetMoney(%1) (PlayerInfo[%1][pCash] = 0)
RunOutTime (30000)
SAdmin(%1,%2) ((PlayerInfo[%1][pAdmin]>=%2))
SCM (SendClientMessage)
SCMA (SendClientMessageToAll)
SELECT_OBJECT_GLOBAL_OBJECT (1)
SELECT_OBJECT_PLAYER_OBJECT (2)
SEND_MESSAGE_ADMIN (1)
SEND_MESSAGE_FRACTION (2)
SEND_MESSAGE_JOB (3)
SEND_MESSAGE_PLAYER (4)
SEND_MESSAGE_SCRIPTER (5)
SERVER_NEV ("ClassRPG")
SERVER_PORT (9999)
SFM (SendFormatMessage)
SF_ROB_IDO (10800)
SHOOT_MIN_FEJ (8)
SHOOT_MIN_LAB (6)
SISAKSLOT (4)
SKIN_ALBAN (32)
SKIN_AZTEC (256)
SKIN_BALLAS (8)
SKIN_CIVIL (1)
SKIN_COUNT ((SKIN_MAX - SKIN_MIN + 1))
SKIN_FBI (4)
SKIN_FRAKCIO_MAX (30)
SKIN_GSF (1)
SKIN_KORMANY (128)
SKIN_LSPD (2)
SKIN_MAX (299)
SKIN_MENTO (16)
SKIN_MIN (1)
SKIN_NAV (1)
SKIN_OKTATO (1)
SKIN_RIPORTER (512)
SKIN_SFPD (1)
SKIN_TAXI (1024)
SKIN_TURKEY (1)
SKIN_TUZOLTO (1)
SKIN_VAGOS (1)
SKIN_VALAMI_A (1)
SKIN_VALAMI_B (1)
SKIN_VALAMI_C (1)
SKIN_VALAMI_D (1)
SKIN_YAKUZA (64)
SKIN_ZAROLT_MAX (30)
SLOT_SZAJKENDO (5)
SLOT_ZSAK (3)
SPAWNID (1)
SPECIAL_ACTION_CARRY (25)
SPECIAL_ACTION_CUFFED (24)
SPECIAL_ACTION_CUFFED (24)
SPECIAL_ACTION_DANCE1 (5)
SPECIAL_ACTION_DANCE2 (6)
SPECIAL_ACTION_DANCE3 (7)
SPECIAL_ACTION_DANCE4 (8)
SPECIAL_ACTION_DRINK_BEER (20)
SPECIAL_ACTION_DRINK_SPRUNK (23)
SPECIAL_ACTION_DRINK_WINE (22)
SPECIAL_ACTION_DUCK (1)
SPECIAL_ACTION_ENTER_VEHICLE (3)
SPECIAL_ACTION_EXIT_VEHICLE (4)
SPECIAL_ACTION_HANDSUP (10)
SPECIAL_ACTION_NONE (0)
SPECIAL_ACTION_PISSING (68)
SPECIAL_ACTION_SITTING (12)
SPECIAL_ACTION_SMOKE_CIGGY (21)
SPECIAL_ACTION_STOPUSECELLPHONE (13)
SPECIAL_ACTION_USECELLPHONE (11)
SPECIAL_ACTION_USEJETPACK (2)
SPECTATE_MODE_FIXED (2)
SPECTATE_MODE_NORMAL (1)
SPECTATE_MODE_SIDE (3)
SQLID(%1) (PlayerInfo[%1][pID])
SQL_ADATLEKERES (45)
SQL_FRACTION_COUNT_LEADER (31)
SQL_FRACTION_COUNT_MEMBER (32)
SQL_KAPU_IDTOLTES (44)
SQL_LOAD_BERSZEF (96)
SQL_LOAD_BIZ (13)
SQL_LOAD_BUTOROK (98)
SQL_LOAD_CAR (12)
SQL_LOAD_CARPRICE (16)
SQL_LOAD_CMD (18)
SQL_LOAD_GARAZS (14)
SQL_LOAD_HOUSE (11)
SQL_LOAD_RACE (17)
SQL_LOAD_TERULET (15)
SQL_PLAYER_LOGIN (41)
SQL_PLAYER_PRECONFIGURE (43)
SQL_PLAYER_STAT (42)
SQL_SYSTEM_KAPU (21)
SQL_SYSTEM_UCP (23)
SQL_SYSTEM_VERSION (22)
STAT_MENTES_IDO (10)
STOCK_Ellenoriz (1)
SZEMUVEGSLOT (4)
SemiValidPlayer(%1) ((%1>=0&&%1<MAX_PLAYERS))
SemiValidVehicle(%1) ((%1>=1&&%1<MAX_VEHICLES))
SendFormatMessage(%1,%2,%3,%4) (format(_tmpString, 128, %3, %4), SendClientMessage(%1, %2, _tmpString))
SendFormatMessageToAll(%1,%2,%3) (format(_tmpString, 128, %2, %3), SendClientMessageToAll(%1, _tmpString))
SendRadioDMessageFormat(%1,%2,%3,%4) (do)
SendRadioMessageFormat(%1,%2,%3,%4) (do)
SetMoney(%1,%2) (PlayerInfo[%1][pCash] = %2)
SetPlayerVirtualWorld (SetPlayerVirtualWorld_Ex)
ShowPlayerDialog (ShowPlayerDialogEx)
Szabadban(%1) ((!GetPlayerVirtualWorld(playerid) && !GetPlayerInterior(playerid)))
Szint(%1) (PlayerInfo[%1][pLevel] )
TD_Info (1)
TD_Info2 (2)
TD_Info3 (3)
TEAM_ADMIN (11)
TEAM_ADMIN_COLOR (0x00808000)
TEAM_AZTECAS_COLOR (0x01FCFFC8)
TEAM_BALLAS_COLOR (0xD900D3C8)
TEAM_BAR (6)
TEAM_BAR_COLOR (0x00D90000)
TEAM_BLUE (2)
TEAM_BLUE_COLOR (0x8D8DFF00)
TEAM_COR (5)
TEAM_COR_COLOR (0x39393900)
TEAM_CUN (8)
TEAM_CUN_COLOR (0xD900D300)
TEAM_CYAN (1)
TEAM_CYAN_COLOR (0xFF8282AA)
TEAM_GREEN (3)
TEAM_GREEN_COLOR (0xFFFFFFAA)
TEAM_GROVE_COLOR (0x00D900C8)
TEAM_HIT (10)
TEAM_JOB_COLOR (0xFFB6C1AA)
TEAM_ORANGE (4)
TEAM_ORANGE_COLOR (0xFF830000)
TEAM_STR (9)
TEAM_STR_COLOR (0x01FCFF00)
TEAM_TAT (7)
TEAM_TAT_COLOR (0xBDCB9200)
TEAM_VAGOS_COLOR (0xFFC801C8)
TELEFON_INTAKTIVIDO (2592000)
TERULET_FRAKCIO_LIMIT (12)
TERULET_Foglalva (10)
TERULET_HASZON_IDO (7200)
TERULET_HaszonIdo (9)
TERULET_MaxX (3)
TERULET_MaxY (5)
TERULET_MinX (2)
TERULET_MinY (4)
TERULET_Nev (1)
TERULET_Tulaj (6)
TERULET_VARAKOZAS (7200)
TERULET_VARAKOZAS_FRAKCIO (14400)
TEXT_DRAW_FONT_MODEL_PREVIEW (5)
TEXT_DRAW_FONT_SPRITE_DRAW (4)
TUZ_IDO_MAX (900)
TUZ_IDO_MIN (300)
TUZ_MAX (5)
TUZ_MAX_POZ (150)
TUZ_MINTAG (3)
TUZ_MUTAT_TAV (3000.0)
TUZ_OBJECT (12)
TUZ_OLTO_TAV (6.0)
TUZ_SERULES (15.0)
TUZ_SERULES_TAV (6.0)
TUZ_TAV (5.0)
VAROS_LS (1)
VAROS_LV (3)
VAROS_SF (2)
VEHICLE_BIKE (6)
VEHICLE_BMX (9)
VEHICLE_BOAT (2)
VEHICLE_CAR (1)
VEHICLE_DMG_AK47 (80.0)
VEHICLE_DMG_COLT45 (50.0)
VEHICLE_DMG_DEAGLE (75.0)
VEHICLE_DMG_DEFAULT (0.0)
VEHICLE_DMG_HEATSEEKER (150.0)
VEHICLE_DMG_M4 (80.0)
VEHICLE_DMG_MINIGUN (200.0)
VEHICLE_DMG_MP5 (60.0)
VEHICLE_DMG_RIFLE (75.0)
VEHICLE_DMG_ROCKETLAUNCHER (150.0)
VEHICLE_DMG_SAWEDOFF (78.0)
VEHICLE_DMG_SHOTGSPA (80.0)
VEHICLE_DMG_SHOTGUN (75.0)
VEHICLE_DMG_SILENCED (50.0)
VEHICLE_DMG_TEC9 (40.0)
VEHICLE_DMG_UZI (35.0)
VEHICLE_HELI (4 )
VEHICLE_MODEL_INFO_FRONTSEAT (2)
VEHICLE_MODEL_INFO_FRONT_BUMPER_Z (8)
VEHICLE_MODEL_INFO_PETROLCAP (4)
VEHICLE_MODEL_INFO_REARSEAT (3)
VEHICLE_MODEL_INFO_REAR_BUMPER_Z (9)
VEHICLE_MODEL_INFO_SIZE (1)
VEHICLE_MODEL_INFO_WHEELSFRONT (5)
VEHICLE_MODEL_INFO_WHEELSMID (7)
VEHICLE_MODEL_INFO_WHEELSREAR (6)
VEHICLE_MONSTERTRUCK (7)
VEHICLE_NONE (0)
VEHICLE_PARAMS_OFF (0)
VEHICLE_PARAMS_ON (1)
VEHICLE_PARAMS_UNSET (-1)
VEHICLE_PLANE (5)
VEHICLE_QUADBIKE (8)
VEHICLE_TRAILER (10)
VEHICLE_TRAIN (3)
VEHICLE_TYPES ((VEHICLE_TYPES_END - VEHICLE_TYPES_START + 1))
VEHICLE_TYPES_END (611)
VEHICLE_TYPES_START (400)
VEHICLE_TYPE_BIKE (1)
VEHICLE_TYPE_BOAT (16)
VEHICLE_TYPE_CAR (4)
VEHICLE_TYPE_HELI (32)
VEHICLE_TYPE_MINI (128)
VEHICLE_TYPE_MOTOR (2)
VEHICLE_TYPE_PLANE (64)
VEHICLE_TYPE_TRAILER (256)
VEHICLE_TYPE_TRAIN (8)
VERZES (0.2)
ValidPlayer(%1) ((%1>=0&&%1<MAX_PLAYERS&&Connected[%1]))
WEAPONSKILL_AK47 (8)
WEAPONSKILL_DESERT_EAGLE (2)
WEAPONSKILL_M4 (9)
WEAPONSKILL_MICRO_UZI (6)
WEAPONSKILL_MP5 (7)
WEAPONSKILL_PISTOL (0)
WEAPONSKILL_PISTOL_SILENCED (1)
WEAPONSKILL_SAWNOFF_SHOTGUN (4)
WEAPONSKILL_SHOTGUN (3)
WEAPONSKILL_SNIPERRIFLE (10)
WEAPONSKILL_SPAS12_SHOTGUN (5)
WEAPONSTATE_LAST_BULLET (1)
WEAPONSTATE_MORE_BULLETS (2)
WEAPONSTATE_NO_BULLETS (0)
WEAPONSTATE_RELOADING (3)
WEAPONSTATE_UNKNOWN (-1)
WEAPON_AK47 ((30))
WEAPON_AK47 ((30))
WEAPON_BAT ((5))
WEAPON_BAT ((5))
WEAPON_BOMB ((40))
WEAPON_BOMB ((40))
WEAPON_BRASSKNUCKLE ((1))
WEAPON_BRASSKNUCKLE ((1))
WEAPON_CAMERA ((43))
WEAPON_CAMERA ((43))
WEAPON_CANE ((15))
WEAPON_CANE ((15))
WEAPON_CHAINSAW ((9))
WEAPON_CHAINSAW ((9))
WEAPON_COLLISION ((54))
WEAPON_COLLISION ((54))
WEAPON_COLT45 ((22))
WEAPON_COLT45 ((22))
WEAPON_DEAGLE ((24))
WEAPON_DEAGLE ((24))
WEAPON_DILDO ((10))
WEAPON_DILDO ((10))
WEAPON_DILDO2 ((11))
WEAPON_DILDO2 ((11))
WEAPON_DROWN ((53))
WEAPON_DROWN ((53))
WEAPON_FIREEXTINGUISHER ((42))
WEAPON_FIREEXTINGUISHER ((42))
WEAPON_FLAMETHROWER ((37))
WEAPON_FLAMETHROWER ((37))
WEAPON_FLOWER ((14))
WEAPON_FLOWER ((14))
WEAPON_GOLFCLUB ((2))
WEAPON_GOLFCLUB ((2))
WEAPON_GRENADE ((16))
WEAPON_GRENADE ((16))
WEAPON_HEATSEEKER ((36))
WEAPON_HEATSEEKER ((36))
WEAPON_KATANA ((8))
WEAPON_KATANA ((8))
WEAPON_KNIFE ((4))
WEAPON_KNIFE ((4))
WEAPON_M4 ((31))
WEAPON_M4 ((31))
WEAPON_MINIGUN ((38))
WEAPON_MINIGUN ((38))
WEAPON_MOLTOV ((18))
WEAPON_MOLTOV ((18))
WEAPON_MP5 ((29))
WEAPON_MP5 ((29))
WEAPON_NITESTICK ((3))
WEAPON_NITESTICK ((3))
WEAPON_PARACHUTE ((46))
WEAPON_PARACHUTE ((46))
WEAPON_POOLSTICK ((7))
WEAPON_POOLSTICK ((7))
WEAPON_RIFLE ((33))
WEAPON_RIFLE ((33))
WEAPON_ROCKETLAUNCHER ((35))
WEAPON_ROCKETLAUNCHER ((35))
WEAPON_SATCHEL ((39))
WEAPON_SATCHEL ((39))
WEAPON_SAWEDOFF ((26))
WEAPON_SAWEDOFF ((26))
WEAPON_SHOTGSPA ((27))
WEAPON_SHOTGSPA ((27))
WEAPON_SHOTGUN ((25))
WEAPON_SHOTGUN ((25))
WEAPON_SHOVEL ((6))
WEAPON_SHOVEL ((6))
WEAPON_SILENCED ((23))
WEAPON_SILENCED ((23))
WEAPON_SNIPER ((34))
WEAPON_SNIPER ((34))
WEAPON_SPRAYCAN ((41))
WEAPON_SPRAYCAN ((41))
WEAPON_TEARGAS ((17))
WEAPON_TEARGAS ((17))
WEAPON_TEC9 ((32))
WEAPON_TEC9 ((32))
WEAPON_UZI ((28))
WEAPON_UZI ((28))
WEAPON_VEHICLE ((49))
WEAPON_VEHICLE ((49))
WEAPON_VIBRATOR ((12))
WEAPON_VIBRATOR ((12))
WEAPON_VIBRATOR2 ((13))
WEAPON_VIBRATOR2 ((13))
chrtolower(%1) (\)
dcmd(%1,%2,%3) (if ((strcmp((%3)[1], )
egyezik(%1) ((!strcmp(%1, true)))
elseif (else if)
ismysqlnull(%1) (\)
mysql_fetch_row(%1) (mysql_fetch_row_format(%1,"|"))
mysql_fetch_string(%2,%1) (mysql_fetch_field_row(%1,%2))
mysql_get_field(%1,%2) (mysql_fetch_field_row(%2,%1))
mysql_next_row (mysql_retrieve_row())
mysql_query(%1,%2,%3,%4) (\)
mysql_query_callback(%1,%2,%3,%4,%5) (\)
mysql_row(%1,%2) (mysql_fetch_row_format(%1,%2))
nformat(%1,%2,%3,%4) (new %1[%2];format(%1,%2,%3,%4))
swap(%1,%2) (_tmp=%1;%1=%2;%2=_tmpString)
OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
OnEnterExitModShop(playerid, enterexit, interiorid)
OnFilterScriptExit
OnFilterScriptInit
OnGameModeExit
OnGameModeInit
OnObjectMoved(objectid)
OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
OnPlayerClickPlayer(playerid, clickedplayerid, source)
OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
OnPlayerClickTextDraw(playerid, Text:clickedid)
OnPlayerCommandText(playerid, cmdtext[])
OnPlayerConnect(playerid)
OnPlayerDeath(playerid, killerid, reason)
OnPlayerDisconnect(playerid, reason)
OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
OnPlayerEditObject(playerid, playerobject, objectid, response,  Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
OnPlayerEnterCheckpoint(playerid)
OnPlayerEnterRaceCheckpoint(playerid)
OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
OnPlayerExitVehicle(playerid, vehicleid)
OnPlayerExitedMenu(playerid)
OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
OnPlayerLeaveCheckpoint(playerid)
OnPlayerLeaveRaceCheckpoint(playerid)
OnPlayerObjectMoved(playerid, objectid)
OnPlayerPickUpPickup(playerid, pickupid)
OnPlayerRequestClass(playerid, classid)
OnPlayerRequestSpawn(playerid)
OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
OnPlayerSelectedMenuRow(playerid, row)
OnPlayerSpawn(playerid)
OnPlayerStateChange(playerid, newstate, oldstate)
OnPlayerStreamIn(playerid, forplayerid)
OnPlayerStreamOut(playerid, forplayerid)
OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid)
OnPlayerText(playerid, text[])
OnPlayerUpdate(playerid)
OnQueryError(errorid, error[], callback[], query[], connectionHandle)
OnRconCommand(cmd[])
OnRconLoginAttempt(ip[], password[], success)
OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat)
OnVehicleDamageStatusUpdate(vehicleid, playerid)
OnVehicleDeath(vehicleid, killerid)
OnVehicleMod(playerid, vehicleid, componentid)
OnVehiclePaintjob(playerid, vehicleid, paintjobid)
OnVehicleRespray(playerid, vehicleid, color1, color2)
OnVehicleSpawn(vehicleid)
OnVehicleStreamIn(vehicleid, forplayerid)
OnVehicleStreamOut(vehicleid, forplayerid)
#endClass