#if defined __game_old_old_commands
	#endinput
#endif
#define __game_old_old_commands

public OnCommandProcess(playerid, cmdtext[], status, response)
{
	new
		cmd[32],	// parancs
		pms[128],	// paraméterek
		string[256]
	;

	sscanf(cmdtext, "s[32] s[128]", cmd, pms);

	if(Log_Command == true)
	{
		if(egyezik(cmd, "/login") || egyezik(cmd, "/jelszovaltas"))
			format(string, 256, "[%d] %s - %s", playerid, Nev(playerid), cmd);
		else
			format(string, 256, "[%d] %s - %s", playerid, Nev(playerid), cmdtext);

		CommandLog(string);
	}
	else
		Log_Command = true;

	if(status != CMD_STATUS_EXISTS)
	{
		S:OnPlayerCommandText(playerid, cmdtext, cmd, pms);
	}
	
	return 1;
}

fpublic S:OnPlayerCommandText(playerid, cmdtext[], cmd[], pms[]) //opcbeg
{
	new string[256];

	if(egyezik(AFKstring[playerid], cmdtext) && strlen(cmdtext) > 0 && strlen(AFKstring[playerid]) > 0 && !egyezik(cmd, "/lõtér") && !egyezik(cmd, "/loter"))
	{
		AFKszamlalo[playerid]++;
		if(AFKszamlalo[playerid] >= 30)
		{
			ABroadCastFormat(COLOR_LIGHTRED, 1, "[Figyelmeztetés]: Lehetséges Auto Shortkey: [%d]%s Parancs: %s (30x)", playerid,PlayerName(playerid),AFKstring[playerid]);
			
			AFKszamlalo[playerid]=0;
		}
	}
	else
	{
		format(AFKstring[playerid], 256, "%s", cmdtext);
		AFKIdo[playerid] = 0;
		AFKszamlalo[playerid] = 0;
	}

	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new playername[MAX_PLAYER_NAME];
	new tmp[256];
	new giveplayerid, moneys, idx;
	new veh = -1, pveh = -1;

	new params = Parameterek(cmdtext);
	new param[10][32];

	if(params > 0)
	{
		new params_szamlalo = 1;
		while(params_szamlalo <= params && params_szamlalo < sizeof(param))
		{
			param[params_szamlalo] = GetParam(cmdtext, params_szamlalo);
			params_szamlalo++;
		}
	}

	//SendFormatMessage(playerid, COLOR_WHITE, "params: %d - cmdtext: \"%s\" - cmd : \"%s\" - pms: \"%s\"", params, cmdtext, cmd, pms);

	#pragma unused pveh

	strtok(cmdtext, idx);

	if(IsPlayerInAnyVehicle(playerid))
	{
		veh = GetPlayerVehicleID(playerid);
		pveh = GetVehicleModel(veh);
	}

	if(AFK[playerid] == 1)
		return SendClientMessage(playerid, COLOR_WHITE, "Ha szeretnél visszatérni az AFKból írd be hogy \"classrpg\"");

	if(!Logged(playerid))
	{
		if(!egyezik(cmd, "/login"))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: A parancs használatához be kell jelentkezned!");
	}
	
	#if !defined SEE_DEBUG

	//################################################################################################################################################################//
	//################################################################################################################################################################//
	//################################################################################################################################################################//

	new butorszama = SzerkesztesButor[playerid];
	if(butorszama > -1)
	{
	    if(!ButorInfo[butorszama][butorMegveve])
	    {
			ButorInfo[butorszama][butorPosX] = 0.0;
			ButorInfo[butorszama][butorPosY] = 0.0;
			ButorInfo[butorszama][butorPosZ] = 0.0;
			ButorInfo[butorszama][butorPosRX] = 0.0;
			ButorInfo[butorszama][butorPosRY] = 0.0;
			ButorInfo[butorszama][butorPosRZ] = 0.0;
			ButorInfo[butorszama][butorVW] = 0;
			ButorInfo[butorszama][butorInterior] = 0;
			ButorInfo[butorszama][butorHasznalva] = false;
			ButorInfo[butorszama][butorMegveve] = false;
			ButorInfo[butorszama][butorTipus] = NINCS;
			ButorInfo[butorszama][butorListitem] = NINCS;
			ButorInfo[butorszama][butorModel] = 0;
			ButorInfo[butorszama][butorPosRX] = 0.0;
			ButorInfo[butorszama][butorPosRY] = 0.0;
			ButorInfo[butorszama][butorPosRZ] = 0.0;
			if(IsValidDynamicObject(ButorInfo[butorszama][butorObject])) DestroyDynamicObject(ButorInfo[butorszama][butorObject]),ButorInfo[butorszama][butorObject]=INVALID_OBJECT_ID;
		}
	}
	//==================================================== [ Parancsok ] ========================================================================


	
    if(egyezik(cmd, "/statisztika"))
	{
	    if(!Admin(playerid, 6))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a parancsot nem használhatod!");

        if(params < 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Használata: /statisztika [Szerver / Területek]");
			
		if(egyezik(param[1], "területek") || egyezik(param[1], "teruletek"))
		{
		    SendClientMessage(playerid, COLOR_ORANGE, "================= [ Terület Statisztika ] =================");
		    new x = NINCS, bool:vann = false;
		    for(;++x < MAXTERULET;)
			{
			    if(TeruletInfo[x][Van])
			    {
			        SendFormatMessage(playerid, COLOR_GREEN, "Terület: %d | Foglalva: %s | Tulaj: [%d]%s | Név: %s", x, \
						MSinceTime( TeruletInfo[x][tFoglalva] ), TeruletInfo[x][tTulaj], Szervezetneve[TeruletInfo[x][tTulaj]-1][1], TeruletInfo[x][tNev]);
			        vann = true;
				}
			}
			if(!vann)
				return SendClientMessage(playerid,COLOR_GREEN, "Jelenleg nincs betöltve egyetlen terület sem!");
		}
        if(egyezik(param[1], "szerver") || egyezik(param[1], "server"))
		{
			new x=NINCS,vskocsik, kocsik, terulet,
			hazak, garazsok, lehivott, kapuk, bizniszek;

			for(;++x < MAXVSKOCSI;)
			{
			    if(CarInfo[x][Van] == 1)
					vskocsik++;
			}
			x=NINCS;
			for(;++x < MAXHAZ;)
			{
			    if(HouseInfo[x][Van] == 1)
				    hazak++;
			}
			x=NINCS;
			for(;++x < MAXGARAZS;)
			{
			    if(GarazsInfo[x][Van] == 1)
				    garazsok++;
			}
			x=NINCS;
			for(;++x < sizeof(CreatedCars);)
			{
				if(CreatedCars[x] != 0)
				    lehivott++;
			}
			x=0;
			for(;++x < MAX_VEHICLES;)
			{
			    if(IsVehicleConnected(x))
			        kocsik++;
			}
			x=NINCS;
			for(;++x < MAX_KAPU;)
			{
			    if(Kapu[x][kVan])
			        kapuk++;
			}
			x=NINCS;
			for(;++x < MAXTERULET;)
			{
			    if(TeruletInfo[x][Van])
			        terulet++;
			}
			x=NINCS;
			for(;++x < MAXBIZ;)
		    {
		        if(BizzInfo[x][bVan])
		            bizniszek++;
			}

	        SendClientMessage(playerid, COLOR_ORANGE, "============= [ Szerver Statisztika ] =============");
			SendFormatMessage(playerid, COLOR_GREEN, "V-s jármûvek: %d/%d | Házak: %d/%d | Garázsok: %d/%d",vskocsik,MAXVSKOCSI,hazak,MAXHAZ,garazsok,MAXGARAZS);
			SendFormatMessage(playerid, COLOR_GREEN, "Összes jármû: %d/%d | Lehívott jármûvek: %d/%d",kocsik,MAX_VEHICLES,lehivott,sizeof(CreatedCars));
			SendFormatMessage(playerid, COLOR_GREEN, "SQL Kapuk: %d/%d | Területek: %d/%d | Objectek: %d",kapuk,MAX_KAPU,terulet,MAXTERULET,CountDynamicObjects());
			SendFormatMessage(playerid, COLOR_GREEN, "Bizniszek: %d/%d",bizniszek,MAXBIZ);
		}
		return true;
	}
	if(egyezik(cmd, "/npc"))
	{
	    if(!Admin(playerid,1337)) return true;
		if(params < 1)
		{
		    SendClientMessage(playerid, COLOR_GREEN, "Használat: /npc [Kick / KickALL / folytat / szünet]");
		    SendClientMessage(playerid, COLOR_ORANGE, "A kickelt NPC-k maguktól vissza csatlakoznak!");
		    return true;
		}
		if(egyezik(param[1], "folytat"))
		{
			if(params < 2) return SendClientMessage(playerid, COLOR_GREEN, "Használat: /npc folytat [( PlayerID!)]");
		    new id = strval(param[2]);
			
			SendFormatMessage(id, 1, "NPCPARANCS %d", NPC_AKCIO_FOLYTAT);

		}
		if(egyezik(param[1], "szünet"))
		{
			if(params < 2) return SendClientMessage(playerid, COLOR_GREEN, "Használat: /npc szünet [( PlayerID!)]");
		    new id = strval(param[2]);
			
			SendFormatMessage(id, 1, "NPCPARANCS %d", NPC_AKCIO_SZUNET);

		}
		if(egyezik(param[1], "kickall"))
		{
			for(new x=0; x < MAX_PLAYERS; x++)
				if(IsPlayerNPC(x)) Kick(x);
				
			Msg(playerid, "Kirúgva az összes NPC!");
		}
		if(egyezik(param[1], "kick"))
		{
		    if(params < 2) return SendClientMessage(playerid, COLOR_GREEN, "Használat: /npc KickID [PlayerID!)]");
		    new id = strval(param[2]);
		
			
			if(!IsPlayerNPC(id))return Msg(playerid, "Õ nem NPC!");
			Kick(id);
		    SendFormatMessage(playerid, COLOR_ORANGE, "NPC: %d kirúgva!", id);
		}
		if(egyezik(param[1], "debug"))
		{
			for(new x=0;x < MAX_PLAYERS;x++)
			{
			
				NPC[x] = IsPlayerNPC(x) == 1;
				if(NPC(x))
					NPCCsatlakozas(PlayerName(x), x),NPCSpawn(x);

			}
			Msg(playerid, "NPC csatlakozás debug futtatva!");
		}
		return true;
	}

	if(egyezik(cmd, "/kapu"))
	{
	    if(!SAdmin(playerid, 1338) && !SKapuEngedely[playerid] && !IsScripter(playerid))
			return 1;//return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: A kapukezelés jelenleg nem engedélyezett számodra!");

	    if(params != 1)
	    {
	        //if(SAdmin(playerid, 5555)) SendClientMessage(playerid, COLOR_GREEN, "[Info]: Ha engedélyezni szeretnéd más számára is a használatot: /kapu [Játékos]");
			ShowPlayerDialog(playerid, DIALOG_KAPU_STATISZTIKA, DIALOG_STYLE_LIST, #COL_FEHER"Kapu "#COL_VKEK"statisztika", "Új kapu létrehozása\nKözeli kapu szerkesztése\nKözeli kapu információi\nKapu újratöltése", "Mehet!", "Mégse!");
			return true;
		}
		new jatekos = ReturnUser(param[1]);
		if(jatekos == INVALID_PLAYER_ID || IsPlayerNPC(jatekos))
			return Msg(playerid, "Nincs ilyen játékos!");

	    if(SAdmin(playerid, 1340))
	    {
		    if(!SKapuEngedely[ jatekos ])
		    {
		        SKapuEngedely[ jatekos ] = true;
		        SendFormatMessage(playerid, COLOR_LIGHTRED, "<< Engedélyezted %s számára a kapukezelést! >>", PlayerName(jatekos));
		        SendFormatMessage(jatekos, COLOR_YELLOW, "<< Admin %s engedélyezte számodra a kapukezelést! Használata: /kapu >>", AdminName(playerid));
		    } else {
		        SKapuEngedely[ jatekos ] = false;
		        SendFormatMessage(playerid, COLOR_LIGHTRED, "<< Elvetted %s kapukezelési engedélyét! >>", PlayerName(jatekos));
		        //SendFormatMessage(jatekos, COLOR_YELLOW, "<< Admin %s elvette a kapukezelési engedélyed! >>", AdminName(playerid));
		    }
		}
		return true;
	}
	if(egyezik(cmd, "/swatleader"))
	{
	    if(!Admin(playerid, 1340)) return true;
	    if(params != 1) return Msg(playerid, "Használat: /swatleader [Játékos]");
		new jatekos = ReturnUser(param[1]);
		if(jatekos == INVALID_PLAYER_ID || IsPlayerNPC(jatekos))
			return Msg(playerid, "Nincs ilyen játékos!");

	    if(PlayerInfo[jatekos][pSwatRang] != 12)
	    {
	        PlayerInfo[jatekos][pSwatRang] = 12;
	        PlayerInfo[jatekos][pSwattag] = 1;
	        if(!IsScripter(playerid)) ABroadCastFormat(COLOR_LIGHTRED, 1, "Admin %s kinevezte %s-t SWAT Leadernek!", AdminName(playerid),PlayerName(jatekos));
	        SendFormatMessage(playerid, COLOR_LIGHTRED, "<< Kinevezted %s-t SWAT Leaderré! >>", PlayerName(jatekos));
	        SendFormatMessage(jatekos, COLOR_YELLOW, "<< Admin %s kinevezett téged a SWAT Leaderévé! >>", AdminName(playerid));
	    } else {
	        PlayerInfo[jatekos][pSwatRang] = 0;
	        PlayerInfo[jatekos][pSwattag] = 0;
	        if(!IsScripter(playerid)) ABroadCastFormat(COLOR_LIGHTRED, 1, "Admin %s elvette %s SWAT Leaderét!", AdminName(playerid),PlayerName(jatekos));
	        SendFormatMessage(playerid, COLOR_LIGHTRED, "<< Elvetted %s SWAT Leaderét! >>", PlayerName(jatekos));
		}
		return true;
	}

	if(egyezik(cmd, "/autoshortkey") || egyezik(cmd, "/autoshort") || egyezik(cmd, "/ash"))
	{
	    if(!Admin(playerid, 1) && !IsScripter(playerid)) return true;
	    SendClientMessage(playerid, COLOR_LIGHTGREEN, "===== [ Lehetséges AutoShortKey-t használók ] =====");
		foreach(Jatekosok, x)
		{
		    if(AFKszamlalo[x] >= 8)
				SendFormatMessage(playerid, COLOR_WHITE, "[%d]%s | Egyezõ parancsok: 25/%d", x, PlayerName(x), AFKszamlalo[x]);
		}
		SendClientMessage(playerid, COLOR_LIGHTRED, "Ha legalább 8x ugyan azt a parancsot írta be egymás után, akkor jelzi.");
	    return true;
	}
	
	if(egyezik(cmd, "/ttbolt"))
	{
		if(IsTerno(playerid))
		{
			new osszes=BizzInfo[BIZ_247][bBevetel]+BizzInfo[BIZ_247][bAdomany];
			SendFormatMessage(playerid,COLOR_YELLOW,"Bevétel a gazdasági évben((resi)): %s Ft, Összes adózott forgalom: %s",FormatNumber( BizzInfo[BIZ_247][bBevetel], 0, ',' ),FormatNumber( osszes, 0, ',' ));
		}

		SendFormatMessage(playerid,COLOR_YELLOW,"Class City News támogatása: %s, Összes adózott forgalom: %s",FormatNumber( BizzInfo[BIZ_247][bAdomany]/2, 0, ',' ));
		return 1;
	}
	
    if(egyezik(cmd, "/farmerkedés") || egyezik(cmd, "/farmerkedes"))
	{
		//Msg(playerid, "Ideiglenesen kivéve!");
	    if(!AMT(playerid, MUNKA_FARMER)) return Msg(playerid, "Te nem vagy Farmer!");
		
		if(OnDuty[playerid]) return Msg(playerid, "Döntsd elõbb el mit dolgozol! ((frakció dutyba nem!))");
	        
		if(!GetPlayerVehicleID(playerid))
			return 1;
		
		if(GetVehicleTrailer(GetPlayerVehicleID(playerid)))
		{
			if(GetVehicleModel(GetVehicleTrailer(GetPlayerVehicleID(playerid))) == 610)
			{
				Msg(playerid, "Lekapcsolva!");
				DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
				return 1;
			}
		}
		
		new kocsi = GetClosestVehicle(playerid, false);
		new Float:tavolsag = GetPlayerDistanceFromVehicle(playerid, kocsi);
		
		if(tavolsag <= 5.0)
		{
			if((GetVehicleModel(GetPlayerVehicleID(playerid)) == 531) && (GetVehicleModel(kocsi) == 610))
			{
				Msg(playerid, "Felkapcsolva!");
				AttachTrailerToVehicle(kocsi, GetPlayerVehicleID(playerid));
				return 1;
			}
		}
		return Msg(playerid, "Nincs a közeledben!");
	}

    if(egyezik(cmd, "/butor") || egyezik(cmd, "/bútor"))
	{
		//if(1 == 1) return Msg(playerid, "Ideglenesen kiszedve!");
		Msg(playerid, "FIGYELEM! BARIKÁDRA NEM HASZNÁLHATÓ!!! CSAK RP-S BERENDEZÉSRE. MEGSZEGÉS ESETÉN A HÁZ TÖRLÉSRE KERÜL!!!");
		new butorszam = ButorSzam(playerid);
		if(butorszam == -2)
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Neked még nincs saját házad, mielõtt használnád vegyél egyet!");
		if(butorszam == NINCS && !Admin(playerid,1337))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Csak a saját házadban használhatod!");

		ShowPlayerDialog(playerid, DIALOG_BUTOR, DIALOG_STYLE_LIST, #COL_FEHER"Bútor", "Bútor vétel\nBútor szerkesztés\nBútor lista 1\nBútor lista 2\nStatisztika\nPrémium slotok vásárlása\nÖsszes törlése", "Mehet!", "Kilépés!");

		return true;
	}
    if(egyezik(cmd, "/bérszéf") || egyezik(cmd, "/berszef"))
	{
		if(params < 1) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /bérszéf [Bérel / Idõ / Berak / Kivesz / Megnéz / Bérlõk]");
		if(egyezik(param[1], "bérel") || egyezik(param[1], "berel"))
		{
		    if(!PlayerToPoint(30, playerid, 2143.773, 1635.985, 993.576)) return Msg(playerid, "Nem vagy a vagyonmegörzõ pultjánál!");
		    new bankid = GetNewBerSzefIndex();
		    new query[512];
		    new idke = GetPlayerBerSzefID(playerid);
			if(bankid == NINCS)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnálom, de kifogytunk a bérelhetõ széfekbõl!");

			if(idke > NINCS)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Önnek már van bérelt széfe, így nem vehet igénybe újat!");

            /*if(GetMoney(playerid) < 250000) return Msg(playerid, "Egy széf ára 250 000Ft, neked nincs ennyid!");
            GiveMoney(playerid, -250000);*/
			if(!BankkartyaFizet(playerid, 250000)) return Msg(playerid, "Egy széf ára 250 000Ft, neked nincs ennyid!");
            BizPenz(BIZ_BERSZEF, 250000);
            BizUpdate(BIZ_BERSZEF, BIZ_Till);
			BerSzef[bankid][bTulajid] = PlayerInfo[playerid][pID];
			BerSzef[bankid][bPenz] = 0;
			BerSzef[bankid][bMati] = 0;
			BerSzef[bankid][bMarihuana] = 0;
			BerSzef[bankid][bHeroin] = 0;
			BerSzef[bankid][bKokain] = 0;
			BerSzef[bankid][bIdo] = 30;
			BerSzef[bankid][bKaja] = 0;
			BerSzef[bankid][bCigi] = 0;
			BerSzef[bankid][bRuha] = 0;
			BerSzef[bankid][bArany] = 0;
			BerSzef[bankid][bHasznalva] = true;
			SendClientMessage(playerid, COLOR_ORANGE, "============ [ Információ ] ============");
			SendFormatMessage(playerid, COLOR_GREEN, "Sikeresen kibéreltél egy széfet. A te széfed száma a következõ: %d", bankid);
			SendClientMessage(playerid, COLOR_GREEN, "A széf 30 ((Játszott óráig)) napig a tied!");

			format(query, sizeof(query), "INSERT INTO berszefek(id, tulajid, mati, marihuana, heroin, kokain, penz, ido, kaja, cigi, ruha, arany) VALUES('%d', '%d', '0', '0', '0', '0', '0', '30', '0', '0', '0', '0')", bankid, PlayerInfo[playerid][pID]);
			doQuery(query);
			return true;
		}
		if(egyezik(param[1], "idõ") || egyezik(param[1], "ido"))
		{
		    if(!PlayerToPoint(30, playerid, 2143.773, 1635.985, 993.576)) return Msg(playerid, "Nem vagy a vagyonmegörzõ pultjánál!");
            if(!BankkartyaFizet(playerid, 150000, false)) return Msg(playerid, "A bérelt széfed idejét 150 000Ft fejében hosszabbíthatod csak meg.");
            new idje = GetPlayerBerSzefID(playerid);
		    if(idje == -1)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

		    if(BerSzef[idje][bIdo] + 15 > 50) return Msg(playerid, "Maximum 50 ((Játszott óráig)) napig hosszabbíthatod meg a bérlésed!");
            BizPenz(BIZ_BERSZEF, 150000);
			BankkartyaFizet(playerid, 150000);
			BerSzef[idje][bIdo] = BerSzef[idje][bIdo] + 15;
			SendClientMessage(playerid, COLOR_ORANGE, "============ [ Információ ] ============");
			SendClientMessage(playerid, COLOR_GREEN, "A széfed bérlési ideje 15 órával meghosszabbítva.");
			SendFormatMessage(playerid, COLOR_GREEN, "A széf %d ((Játszott óráig)) napig a tied!", BerSzef[idje][bIdo]);
		}
		if(egyezik(param[1], "bérlõk") || egyezik(param[1], "berlok"))
		{
		    if(PlayerInfo[playerid][pPbiskey] != BIZ_BERSZEF && !Admin(playerid, 6))
				return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a parancsot csak a biznisz tulaja használhatja!");
				
			new i = NINCS, Szefek;
			for(;++i < MAX_BSZEF;)
			{
			    if(BerSzef[i][bHasznalva])
					Szefek++;
			}
		    SendClientMessage(playerid, COLOR_ORANGE, "======== [ Biznisz adatok ] ========");
			SendFormatMessage(playerid, COLOR_GREEN, "Az üzletnek jelenleg %d bérlõje van,", Szefek);
			SendFormatMessage(playerid, COLOR_GREEN, "és eddig %sFt hasznot termelt.", FormatNumber(BizzInfo[BIZ_BERSZEF][bTill], 0, ','));
			return true;
		}
		if(egyezik(param[1], "megnéz") || egyezik(param[1], "megnez"))
		{
		    if(!PlayerToPoint(30, playerid, 2143.773, 1635.985, 993.576)) return Msg(playerid, "Nem vagy a vagyonmegörzõ széfeinél!");
			new idje = GetPlayerBerSzefID(playerid);
		    new penz, material, kokain, heroin, marihuana, kaja, cigi, ruha, arany;

		    if(idje == -1)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

		    penz = BerSzef[idje][bPenz];
		    material = BerSzef[idje][bMati];
		    kokain = BerSzef[idje][bKokain];
		    heroin = BerSzef[idje][bHeroin];
		    marihuana = BerSzef[idje][bMarihuana];
			kaja = BerSzef[idje][bKaja];
			cigi = BerSzef[idje][bCigi];
			ruha = BerSzef[idje][bRuha];
			arany = BerSzef[idje][bArany];

		    SendClientMessage(playerid, COLOR_ORANGE, "======== [ Bérelt széfed tartalma ] ========");
			SendFormatMessage(playerid, COLOR_GREEN, "Pénz: %sFT | Material: %ddb/%sdb", FormatNumber( penz, 0, ',' ), MAXHAZMATI, FormatNumber( material, 0, ',' ));
			SendFormatMessage(playerid, COLOR_GREEN, "Kokain: %dg/%sg | Heroin: %dg/%sg | Marihuana: %dg/%sg", MAXHAZKOKAIN, FormatNumber( kokain, 0, ',' ), MAXHAZHEROIN, FormatNumber( heroin, 0, ',' ), MAXHAZMARIHUANA, FormatNumber( marihuana, 0, ',' ));
			SendFormatMessage(playerid, COLOR_GREEN, "Szendvics: %ddb/%ddb | Cigaretta: %ddb/%ddb | Ruha: %d | Arany: %ddb", MAXHAZKAJA, kaja, MAXHAZCIGI, cigi, ruha, arany);
			SendFormatMessage(playerid, COLOR_YELLOW, "A széfed bérlése még %d ((Játszott óráig)) napig érvényes.", BerSzef[idje][bIdo]);
			return true;
		}
		if(egyezik(param[1], "kivesz"))
		{
		    if(!PlayerToPoint(30, playerid, 2143.773, 1635.985, 993.576)) return Msg(playerid, "Nem vagy a vagyonmegörzõ széfeinél!");
		    if(params < 2)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz [tárgy]");
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Tárgyak: pénz, material, kokain, heroin, marihuana, kaja, cigi, ruha, arany");
		        return true;
      		}
      		if(egyezik(param[2], "pénz") || egyezik(param[2], "penz"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz pénz [mennyit]");
				
      		    new penz = strval(param[3]);
      		    if(penz < 1)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(BerSzef[jatekosszefje][bPenz] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi pénz a széfbe!");

				BerSzef[jatekosszefje][bPenz] -= penz;
				GiveMoney(playerid, penz);

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen kivettél %sFt-ot! Maradék: %sFt", FormatNumber(penz, 0, ','), FormatNumber(BerSzef[jatekosszefje][bPenz], 0, ','));

      		    return true;
      		}
      		if(egyezik(param[2], "material"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz material [mennyit]");
				
      		    new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZMATI)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(BerSzef[jatekosszefje][bMati] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi matid a széfbe!");
					
				if((PlayerInfo[playerid][pMats] + penz) > MAXMATI)
					return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %s materialt birsz el!", FormatNumber(MAXMATI, 0, ',' ));

				BerSzef[jatekosszefje][bMati] -= penz;
				PlayerInfo[playerid][pMats] += penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen kivettél %sdb matit! Maradék: %sdb", FormatNumber(penz, 0, ','), FormatNumber(BerSzef[jatekosszefje][bMati], 0, ','));

      		    return true;
      		}
      		if(egyezik(param[2], "kokain"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz kokain [mennyit]");
					
      		    new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZKOKAIN)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(BerSzef[jatekosszefje][bKokain] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi kokain a széfbe!");
					
				if((PlayerInfo[playerid][pKokain] + penz) > MAXKOKAIN)
					return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %s kokaint birsz el!", FormatNumber(MAXKOKAIN, 0, ',' ));

				BerSzef[jatekosszefje][bKokain] -= penz;
				PlayerInfo[playerid][pKokain] += penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen kivettél %sg kokaint! Maradék: %sg", FormatNumber(penz, 0, ','), FormatNumber(BerSzef[jatekosszefje][bKokain], 0, ','));

      		    return true;
      		}
      		if(egyezik(param[2], "heroin"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz heroin [mennyit]");
					
      		    new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZHEROIN)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(BerSzef[jatekosszefje][bHeroin] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi heroin a széfbe!");
					
				if((PlayerInfo[playerid][pHeroin] + penz) > MAXHEROIN)
					return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %s heroint birsz el!", FormatNumber(MAXHEROIN, 0, ',' ));

				BerSzef[jatekosszefje][bHeroin] -= penz;
				PlayerInfo[playerid][pHeroin] += penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen kivettél %sg heroint! Maradék: %sg", FormatNumber(penz, 0, ','), FormatNumber(BerSzef[jatekosszefje][bHeroin], 0, ','));

      		    return true;
      		}
      		if(egyezik(param[2], "marihuana"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz marihuana [mennyit]");
				
      		    new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZMARIHUANA)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(BerSzef[jatekosszefje][bMarihuana] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi marihuana a széfbe!");
					
				if((PlayerInfo[playerid][pMarihuana] + penz) > MAXMARIHUANA)
					return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %s marihuanát birsz el!", FormatNumber(MAXMARIHUANA, 0, ',' ));

				BerSzef[jatekosszefje][bMarihuana] -= penz;
				PlayerInfo[playerid][pMarihuana] += penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen kivettél %sg marihuanat! Maradék: %sg", FormatNumber(penz, 0, ','), FormatNumber(BerSzef[jatekosszefje][bMarihuana], 0, ','));

      		    return true;
      		}
			if(egyezik(param[2], "kaja") || egyezik(param[2], "szendvics"))
			{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz szendvics [mennyit]");
					
				new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZKAJA)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(BerSzef[jatekosszefje][bKaja] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi kaja a széfbe!");
					
				if((PlayerInfo[playerid][pKaja] + penz) > MAXKAJA)
					return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %s szendvicset birsz el!", FormatNumber(MAXKAJA, 0, ',' ));

				BerSzef[jatekosszefje][bKaja] -= penz;
				PlayerInfo[playerid][pKaja] += penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen kivettél %ddb szendvicset! Maradék: %ddb", penz, BerSzef[jatekosszefje][bKaja]);
				return true;
			}
			if(egyezik(param[2], "cigi") || egyezik(param[2], "cigaretta"))
			{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz cigaretta [mennyit]");
					
				new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZCIGI)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(BerSzef[jatekosszefje][bCigi] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi cigi a széfbe!");

				BerSzef[jatekosszefje][bCigi] -= penz;
				PlayerInfo[playerid][pCigi] += penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen kivettél %ddb szendvicset! Maradék: %ddb", penz, BerSzef[jatekosszefje][bCigi]);
				return true;
			}
			if(egyezik(param[2], "ruha"))
			{
				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(BerSzef[jatekosszefje][bRuha] == 0)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ruha a széfbe!");

				SetPlayerSkin(playerid, BerSzef[jatekosszefje][bRuha]);
				BerSzef[jatekosszefje][bRuha] = 0;

				SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen kivetted a ruhád!");
				return true;
			}
			if(egyezik(param[2], "arany"))
			{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz arany [mennyit]");
					
				new penz = strval(param[3]);
      		    if(penz < 1)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(BerSzef[jatekosszefje][bArany] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi arany a széfbe!");

				BerSzef[jatekosszefje][bArany] -= penz;
				PlayerInfo[playerid][pArany] += penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen kivettél %ddb aranyat a széfbõl! Maradék: %ddb", penz, BerSzef[jatekosszefje][bArany]);
				return true;
			}
		    return true;
		}
		if(egyezik(param[1], "berak"))
		{
		    if(!PlayerToPoint(30, playerid, 2143.773, 1635.985, 993.576)) return Msg(playerid, "Nem vagy a vagyonmegörzõ széfeinél!");
		    if(params < 2)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf berak [tárgy] [mennyit]");
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Tárgyak: pénz, material, kokain, heroin, marihuana, kaja, cigi, ruha");
		        return true;
      		}
      		if(egyezik(param[2], "pénz") || egyezik(param[2], "penz"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz pénz [mennyit]");
				
      		    new penz = strval(param[3]);
      		    if(penz < 1)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "** Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(PlayerInfo[playerid][pCash] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi pénz a zsebedben!");

				BerSzef[jatekosszefje][bPenz] += penz;
				GiveMoney(playerid, -penz);

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen betettél %sFt-ot!", FormatNumber(penz, 0, ','));

      		    return true;
      		}
      		if(egyezik(param[2], "material"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz material [mennyit]");
				
      		    new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZMATI)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(PlayerInfo[playerid][pMats] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi matid a zsebedben!");

				BerSzef[jatekosszefje][bMati] += penz;
				PlayerInfo[playerid][pMats] -= penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen betettél %sdb matit!", FormatNumber(penz, 0, ','));

      		    return true;
      		}
      		if(egyezik(param[2], "kokain"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz kokain [mennyit]");
				
      		    new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZKOKAIN)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(PlayerInfo[playerid][pKokain] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi kokain a zsebedben!");

				BerSzef[jatekosszefje][bKokain] += penz;
				PlayerInfo[playerid][pKokain] -= penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen betettél %sg kokaint!", FormatNumber(penz, 0, ','));

      		    return true;
      		}
      		if(egyezik(param[2], "heroin"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz heroin [mennyit]");
				
      		    new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZHEROIN)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(PlayerInfo[playerid][pHeroin] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi heroin a zsebedben!");

				BerSzef[jatekosszefje][bHeroin] += penz;
				PlayerInfo[playerid][pHeroin] -= penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen betettél %sg heroint!", FormatNumber(penz, 0, ','));

      		    return true;
      		}
      		if(egyezik(param[2], "marihuana"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz marihuana [mennyit]");
				
      		    new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZMARIHUANA)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(PlayerInfo[playerid][pMarihuana] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi marihuana a zsebedben!");

				BerSzef[jatekosszefje][bMarihuana] += penz;
				PlayerInfo[playerid][pMarihuana] -= penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen betettél %sg marihuanat!", FormatNumber(penz, 0, ','));

      		    return true;
      		}
			if(egyezik(param[2], "kaja") || egyezik(param[2], "szendvics"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz kaja [mennyit]");
				
      		    new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZKAJA)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(PlayerInfo[playerid][pKaja] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi kaja a zsebedben!");
					
				if((BerSzef[jatekosszefje][bKaja] + penz) > MAXHAZKAJA)
					return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %d kaja fér el a házban!", MAXHAZCIGI);

				BerSzef[jatekosszefje][bKaja] += penz;
				PlayerInfo[playerid][pKaja] -= penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen betettél %ddb szendvicset!", penz);

      		    return true;
      		}
			if(egyezik(param[2], "cigi") || egyezik(param[2], "cigaretta"))
      		{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf kivesz cigaretta [mennyit]");
				
      		    new penz = strval(param[3]);
      		    if(penz < 1 || penz > MAXHAZCIGI)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(PlayerInfo[playerid][pCigi] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi marihuana a zsebedben!");
				
				if((BerSzef[jatekosszefje][bCigi] + penz) > MAXHAZCIGI)
					return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %d cigi fér el a házban!", MAXHAZCIGI);

				BerSzef[jatekosszefje][bCigi] += penz;
				PlayerInfo[playerid][pCigi] -= penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen betettél %ddb cigarettát!", penz);

      		    return true;
      		}
			if(egyezik(param[2], "ruha"))
      		{
				new ruhaja = GetPlayerSkin(playerid);
				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(ruhaja == 252)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** De hát te meztelen vagy..");
				
				if(BerSzef[jatekosszefje][bRuha] != 0)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "** Már van bent ruha!");

				BerSzef[jatekosszefje][bRuha] = ruhaja;
				SetPlayerSkin(playerid, 252);

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen betetted a %d ID-jû ruhát!", ruhaja);

      		    return true;
      		}
			if(egyezik(param[2], "arany"))
			{
				if(params < 3)
					return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Használat: /bérszéf berak arany [mennyit]");
					
				new penz = strval(param[3]);
      		    if(penz < 1)
      		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség!");

				new jatekosszefje = GetPlayerBerSzefID(playerid);
				if(jatekosszefje == -1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Sajnáljuk, de Önnek még nincs bérelt széfe!");

				if(PlayerInfo[playerid][pArany] < penz)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nincs ennyi arany nálad!");

				BerSzef[jatekosszefje][bArany] += penz;
				PlayerInfo[playerid][pArany] -= penz;

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "** Sikeresen beraktál %ddb aranyat a széfbe! Maradt nálad: %ddb", penz, PlayerInfo[playerid][pArany]);
				return true;
			}
		    return true;
		}
		return true;
	}

    if(egyezik(cmd, "/discozene"))
	{
	    new urlcim[256];
		if(sscanf(pms, "s[256]", urlcim))
			return Msg(playerid, "Használat: /discozene [Streamelhetõ Cím (.mp3, .pls, .ogg, stb.) vagy off]");

        if(PlayerInfo[playerid][pBizniszKulcs] != BIZ_DISCO && PlayerInfo[playerid][pPbiskey] != BIZ_DISCO && !SAdmin(playerid, 6) && Zeneenged[playerid] > UnixTime)
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a parancsot csak a szórakozóhely tulaja használhatja!");
		
		if(strfind(urlcim, "http://", true) != -1) {
			strcpy(DiscoZene, urlcim, 256);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Zene: %s", DiscoZene);
		} else {
			DiscoZene[0] = EOS;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Zene kikapcsolva");
		}
		
		new bool:status = !(DiscoZene[0] == EOS);
		foreach(Jatekosok, p) {
			if(DiscobanVan{p}) {
				if(status) {
					PlayAudioStreamForPlayer(p, DiscoZene);
				} else {
					StopAudioStreamForPlayer(p);
				}
			}
		}
		
		return 1;
	}
 	/*if(egyezik(cmd, "/zene"))
	{
	    if(!LMT(playerid, FRAKCIO_RIPORTER) && !Admin(playerid, 6))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Te nem vagy Riporter vagy nincs elegendõ rangod!");
			
		if(!Munkarang(playerid, 1))
				return SendClientMessage(playerid, COLOR_GREY, "Neked nem! (Minimum rang 1)");
				
		if(PlayerInfo[playerid][pNewsSkill] < 401)
			return SendClientMessage(playerid, COLOR_GREY, "Nem vagy elég tapasztalt! (Minimum skill 5)");
		
	    new urlcim[256];
		if(sscanf(pms, "s[256]", urlcim))
			return Msg(playerid, "Használat: /zene [Streamelhetõ URL Cím (.mp3, .pls) | Kikapcsolás: /zeneki]");

        if(strlen(urlcim) < 15) return Msg(playerid, "Helytelen URL cím! Ha ki akarod kapcsolni: /zeneki ( Aki szórakozik vele büntetést kap !! )");
		
		new newcar = GetPlayerVehicleID(playerid);
		new kocsi = GetClosestVehicle(playerid);
		if(GetVehicleModel(newcar) == 488 || GetVehicleModel(newcar) == 582 || PlayerToPoint(6, playerid, 1429.8469,-2448.7258,13.5629) || PlayerToPoint(2, playerid, -1821.3152,323.6341,-41.7493) || IsFrakcioKocsi(kocsi) == 9)
		{
	    RiporterZene = urlcim;
		foreach(Jatekosok, p)
		{
			if(PlayerInfo[p][pRadio] == 1 && Logged(p) && gNews[p] == 0 && Zsebradio[p] == 0 && DiscobanVan{p} == 0)
			{
				PlayAudioStreamForPlayer(p, RiporterZene);
			}

		}
		RiporterZeneVan = true;
		SendRadioMessageFormat(FRAKCIO_RIPORTER, COLOR_YELLOW, "<< %s bekapcsolta a zene streamelést! >>", PlayerName(playerid));
		Msg(playerid, "Zene streamelés mindenkinél elindítva!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Nem vagy riporter jármû közelében vagy a bázison!");
			return 1;
		}
		return 1;
	}
	if(egyezik(cmd, "/zeneki"))
	{
        if(!LMT(playerid, FRAKCIO_RIPORTER) && !Admin(playerid, 6))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Te nem vagy Riporter vagy nincs elegendõ rangod!");
			
		if(!Munkarang(playerid, 1))
			return SendClientMessage(playerid, COLOR_GREY, "Neked nem! (Minimum rang 1)");
				
		if(PlayerInfo[playerid][pNewsSkill] < 401)
			return SendClientMessage(playerid, COLOR_GREY, "Nem vagy elég tapasztalt! (Minimum skill 5)");

	    foreach(Jatekosok, p)
		{
			if(PlayerInfo[p][pRadio] == 1 && Logged(p) && gNews[p] == 0 && Zsebradio[p] == 0 && DiscobanVan{p} == 0)
			{
				StopAudioStreamForPlayer(p);
			}

		}
		RiporterZeneVan = false;
		SendRadioMessageFormat(FRAKCIO_RIPORTER, COLOR_YELLOW, "<< %s kikapcsolta a zene streamelést! >>", PlayerName(playerid));
		Msg(playerid, "Zene streamelés mindenkinél leállítva!");
		return true;
	}*/
	//======================== John cuccai
	if(egyezik(cmd, "/netkávézó") || egyezik(cmd, "/netkavezo"))
	{
		if(IsPlayerConnected(playerid))
		{
			if(params < 1)
				return Msg(playerid, "/netkávézó [netkupon / kávé]");

			if(egyezik(param[1], "netkupon"))
			{
				new netkuponar = 2000;

				if(params < 2)
					return Msg(playerid, "/netkávézó netkupon");

				if(!IsAtNetKavezo(playerid))
					return Msg(playerid, "Nem vagy a netkávézóban");

				if(!IsAtNetKavezoPult(playerid))
					return Msg(playerid, "Nem vagy a pultnál");

				if(GetMoney(playerid) < netkuponar)
					return Msg(playerid, "Nincs elég pénzed, a kupon ára 2.000Ft!");

				if(NetKavezo[playerid] != 0)
					return Msg(playerid, "Már van kuponod!");



				if(!BankkartyaFizet(playerid, netkuponar)){ Msg(playerid, "Nincs elég pénzed!"); return 1; }

				NetKavezo[playerid] += 1;
				SendClientMessage(playerid, COLOR_YELLOW, "Sikeresen vettél egy kupont.");
				SendClientMessage(playerid, COLOR_YELLOW, "Most már használhatod a számítógépeket!");
				SendClientMessage(playerid, COLOR_YELLOW, "A kupon 10percig érvényes.");

				SSSSzef += 2000;

				SetTimerEx("NetKuponTime", 600000, false, "d", playerid);

				return 1;
			}

			if(egyezik(param[1], "kávé") || egyezik(param[1], "kave"))
			{
				if(!IsAtNetKavezo(playerid))
					return Msg(playerid, "Nem vagy a netkávézóban");

				if(!IsAtNetKavezoPult(playerid))
					return Msg(playerid, "Nem vagy a pultnál");

				if(params < 2)
				{
					Msg2(playerid, "======================================[ Kerim & John Netkávézó - Kávék]======================================", COLOR_WHITE);
					Msg2(playerid, "[1]Espresso(350ft), [2]Espresso Macchiato(370ft), [3]Espresso con Panna(390ft),[4]Caffé Latte(410ft),[5]Flat White(420ft)", COLOR_BROWN);
					Msg2(playerid, "[6]Caffé Breve(430ft), [7]Capuccino(340ft), [8]Caffé Mocha(370ft), [9]Americano(200ft), [10]Freddo(390ft), [11]Marocchino(400t)", COLOR_BROWN);
					Msg2(playerid, "[12]Stretto(410ft), [13]Ristretto(420ft), [14]Irish(500ft), [15]Granita con Panna(420ft), [16]Corretto(495ft), [17]Con Leche(390ft)", COLOR_BROWN);
					Msg2(playerid, "[18]Crappa(150ft), [19]Tejes kávé(200ft), [20]3in1(190ft)", COLOR_BROWN);
					Msg2(playerid, "Kedvencek: [21]Kerim kedvence(400ft), [22]Terno kedvence(400ft), [23]Brittney kedvence(400ft), [24]Laidback kedvence(400ft)", COLOR_BROWN);
					return 1;
				}

				new kave = strval(param[2]);

				if(!IsNumeric(param[2]))
					return Msg(playerid, "Nincs ilyen kávé!");

				if(kave < 1 || kave > 24)
					return Msg(playerid, "Nincs ilyen kávé!");

				switch(kave)
				{
					case 1: { Cselekves(playerid, "rendelt egy Espresso kávét"); SSSSzef += 350; GiveMoney(playerid, - 350); }
					case 2: { Cselekves(playerid, "rendelt egy Espresso Macchiato kávét"); SSSSzef += 370; GiveMoney(playerid, - 370); }
					case 3: { Cselekves(playerid, "rendelt egy Espresso con Panna kávét"); SSSSzef += 390; GiveMoney(playerid, - 390); }
					case 4: { Cselekves(playerid, "rendelt egy Caffé Latte kávét"); SSSSzef += 410; GiveMoney(playerid, - 410); }
					case 5: { Cselekves(playerid, "rendelt egy Flat White kávét"); SSSSzef += 420; GiveMoney(playerid, - 420); }
					case 6: { Cselekves(playerid, "rendelt egy Caffé Breve kávét"); SSSSzef += 430; GiveMoney(playerid, - 430); }
					case 7: { Cselekves(playerid, "rendelt egy Capuccino kávét"); SSSSzef += 340; GiveMoney(playerid, - 340); }
					case 8: { Cselekves(playerid, "rendelt egy Caffé Mocha kávét"); SSSSzef += 370; GiveMoney(playerid, - 370); }
					case 9: { Cselekves(playerid, "rendelt egy Americano kávét"); SSSSzef += 200; GiveMoney(playerid, - 200); }
					case 10: { Cselekves(playerid, "rendelt egy Freddo kávét"); SSSSzef += 390; GiveMoney(playerid, - 390); }
					case 11: { Cselekves(playerid, "rendelt egy Marocchino kávét"); SSSSzef += 400; GiveMoney(playerid, - 400); }
					case 12: { Cselekves(playerid, "rendelt egy Stretto kávét"); SSSSzef += 410; GiveMoney(playerid, - 410); }
					case 13: { Cselekves(playerid, "rendelt egy Ristretto kávét"); SSSSzef += 420; GiveMoney(playerid, - 420); }
					case 14: { Cselekves(playerid, "rendelt egy Irish kávét"); SSSSzef += 500; GiveMoney(playerid, - 500); }
					case 15: { Cselekves(playerid, "rendelt egy Granita con Panna kávét"); SSSSzef += 420; GiveMoney(playerid, - 420); }
					case 16: { Cselekves(playerid, "rendelt egy Corretto kávét"); SSSSzef += 495; GiveMoney(playerid, - 495); }
					case 17: { Cselekves(playerid, "rendelt egy Con Leche kávét"); SSSSzef += 390; GiveMoney(playerid, - 390); }
					case 18: { Cselekves(playerid, "rendelt egy Crappa kávét"); SSSSzef += 150; GiveMoney(playerid, - 150); }
					case 19: { Cselekves(playerid, "rendelt egy Tejes Kávé-t"); SSSSzef += 200; GiveMoney(playerid, - 200); }
					case 20: { Cselekves(playerid, "rendelt egy 3in1 kávét"); SSSSzef += 190; GiveMoney(playerid, - 190); }
					case 21: { Cselekves(playerid, "rendelt egy Kerim kedvencét"); SSSSzef += 400; GiveMoney(playerid, - 400); }
					case 22: { Cselekves(playerid, "rendelt egy Terno kedvencét"); SSSSzef += 400; GiveMoney(playerid, - 400); }
					case 23: { Cselekves(playerid, "rendelt egy Brittney kedvencét"); SSSSzef += 400; GiveMoney(playerid, - 400); }
					case 24: { Cselekves(playerid, "rendelt egy Laidback kedvencét"); SSSSzef += 400; GiveMoney(playerid, - 400); }
				}


			}
		}
	}
	if(egyezik(cmd, "/számítógép") || egyezik(cmd, "/szamitogep"))
	{

		if(IsPlayerConnected(playerid))
		{
			if(!IsAtNetKavezo(playerid))
				return Msg(playerid, "Nem vagy a netkávézóban!");

			if(NetKavezo[playerid] != 1)
				return Msg(playerid, "Nincs kuponod, így nem netezhetsz!");

			if(params < 1)
				return Msg(playerid, "/számítógép [netbank / chat]");

			if(egyezik(param[1], "netbank"))
			{
				if(params < 2)
					return Msg(playerid, "/számítógép netbank [belépés/utalás]");

				if(egyezik(param[2], "belépés") || egyezik(param[2], "belepes"))
				{
					new MegadottSzamlaSzam;
					MegadottSzamlaSzam = strval(param[3]);

					new player = BankSzamla(MegadottSzamlaSzam);
					if(player == NINCS || !IsPlayerConnected(player))
						return Msg(playerid, "Nincs ilyen bankszámlaszám");

					new MegadottSzamlaJelszo;
					MegadottSzamlaJelszo = strval(param[4]);

					if(PlayerInfo[player][pBankSzamlaJelszo] == MegadottSzamlaJelszo)
					{
						if(player != playerid)
						{
							new ok[64];
							Format(ok, "Be akart lépni %s számlájára", PlayerName(player));
							SeeKick(playerid, ok);
							return 1;
						}

						SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Belépés sikeres! Számlán található összeg: %sFt", FormatNumber( PlayerInfo[player][pAccount] , 0, ',' ));
						CsatlakozottSzamla[playerid] = MegadottSzamlaSzam;
						Cselekves(playerid, "belépett egy bankszámlára...");
					}
					else
					{
						Msg(playerid, "Hiba Történt!");
						return 1;
					}

					return 1;
				}

				if(egyezik(param[2], "utalás") || egyezik(param[2], "utalas"))
				{
					new Szamla;
					Szamla = strval(param[3]);
					new osszeg;
					osszeg = strval(param[4]);
					if(osszeg < 10000)
						return Msg(playerid, "Minimum 10,000Ft");

					if(osszeg < 1 || osszeg > 100000000)
						return Msg(playerid, "Összeg nem lehet 1Ft-nál kissebb, és 100,000,000Ft-nál nagyobb...");

					new player = BankSzamla(Szamla), sajatszamla = BankSzamla(CsatlakozottSzamla[playerid]);
					if(player == NINCS)
						return Msg(playerid, "Nincs ilyen számla!");

					if(PlayerInfo[sajatszamla][pAccount] < osszeg)
						return Msg(playerid, "Ez kicsit sok lenne...");

					new koltseg;
					koltseg = floatround(float(osszeg) * 0.01);
					if(koltseg < 500) koltseg = 500;
					BankSzef += koltseg * KAMATSZORZO;

					PlayerInfo[player][pAccount] += osszeg;
					PlayerInfo[sajatszamla][pAccount] -= osszeg;
					SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Utaltál %sFt-ot neki: %s, kezelési költség %sFt (1%%)", FormatNumber( osszeg , 0, ',' ), ICPlayerName(player), FormatNumber( koltseg , 0, ',' ));
					SendFormatMessage(player, COLOR_LIGHTRED, "ClassRPG: %s utalt %sFt-t", ICPlayerName(playerid), FormatNumber( osszeg , 0, ',' ));
					PlayerInfo[sajatszamla][pAccount] -= koltseg;
					if(osszeg > 5000000)
					{
						Format(string, "Figyelem: %s utalt neki: %s, %sFt-t!", PlayerName(playerid), PlayerName(player), FormatNumber( osszeg , 0, ',' ));
						ABroadCast(COLOR_LIGHTRED, string, 1);
					}

					return 1;
				}
			}

			// Chat

			if(egyezik(param[1], "chat"))
			{

				if(!IsAtNetKavezo(playerid))
					return Msg(playerid, "Nem vagy a netkávézóban!");

				if(NetKavezo[playerid] != 1)
					return Msg(playerid, "Nincs kuponod, így nem netezhetsz!");

				if(params < 2) return Msg(playerid, "/számítógép chat [Bejelentkezés / Kijelentkezés]");

				if(egyezik(param[2], "bejelentkezés"))
				{
					PlayerInfo[playerid][pLaptopChat] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "[Chat] Bejelentkezés.... [Chat]");
					Msg(playerid, "Bejelentkeztél a Chat programba, így látod amit írnak és te is üzenhetsz a (/lchat) parancsal!");
					Msg(playerid, "kérlek válassz egy becenevet a chatrendszerhez....(/chatnév)");
					
					if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
						PlayerInfo[playerid][pMobilnet] += random(20);

					format(string, sizeof(string), "*[Chat]%s bejelentkezett [Chat]", PlayerInfo[playerid][pChatNev]);
					SendLaptopMessage(COLOR_LIGHTBLUE, string);
				}

				if(egyezik(param[2], "kijelentkezés"))
				{
					PlayerInfo[playerid][pLaptopChat] = 0;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "[Chat] Kijelentkezés.... [Chat]");
					Msg(playerid, "Kijelentkeztél a Chat programból, így nem látod amit írnak és te sem üzenhetsz!");
					format(string, sizeof(string), "*[Chat]%s kijelentkezett [Chat]", PlayerInfo[playerid][pChatNev]);
					SendLaptopMessage(COLOR_LIGHTBLUE, string);
					
					if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
						PlayerInfo[playerid][pMobilnet] += random(20);
				}

				if(egyezik(param[2], "név"))
				{
					if(PlayerInfo[playerid][pLaptopChat] == 0)
						return Msg(playerid, "Nem vagy bejelentkezve!");

					if(params < 1) return Msg(playerid, "/számítógép chat név [becenév]");
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[128];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;

					if(strlen(result) > MAX_PLAYER_NAME)
					{
						SendFormatMessage(playerid, COLOR_GRAD1, "Maximum %d karakter!", MAX_PLAYER_NAME);
						return 1;
					}
					if(strlen(result) < 3)
					{
						Msg(playerid, "Minimum 3 betû");
						return 1;
					}

					strmid(PlayerInfo[playerid][pChatNev], result, 0, strlen(result), 25);
					format(string, sizeof(string), "A chatneved mostantól %s!", result);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					
					if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
						PlayerInfo[playerid][pMobilnet] += random(14);
				}

				if(egyezik(param[2], "üzenet"))
				{
					if(PlayerInfo[playerid][pLaptopChat] == 0)
						return Msg(playerid, "Nem vagy bejelentkezve!");

					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[96];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						Msg(playerid, "Használata: /számítógép chat üzenet [üzenet]");
						return 1;
					}
					format(string, sizeof(string), "*[Chat]%s üzenete: %s", PlayerInfo[playerid][pChatNev], result);

					SendLaptopMessage(COLOR_LIGHTBLUE, string);
					
					if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
						PlayerInfo[playerid][pMobilnet] += random(10);
				}
			}
		}
	}
	if(egyezik(cmd, "/nyilvantartas") || egyezik(cmd, "/nyilvántartás"))
	{
		if(!IsACop(playerid))
			return Msg(playerid, "Csak a rendvédelem tagjainak!");

		if(params < 1)
			return Msg(playerid, "Információ: /nyilvántartás [jármû | ház] [házszám/rendszám]");


		new kocsi = GetPlayerVehicleID(playerid);

		if(!IsACopCar(kocsi)) return Msg(playerid, "Ez nem egy rendvédelmis autó!");

		if(egyezik(param[1], "jármû") || egyezik(param[1], "jarmu"))
		{
			if(params < 2)	return Msg(playerid, "Információ: /nyilvántartás jármû [JármûID]");
			new car = IsAVsKocsi(strval(param[2]));
			if(car == NINCS) return Msg(playerid, "Csak V-s jármûvet tudsz lenyomozni!");
			if(Carblock[car] > UnixTime) return Msg(playerid, "A jármûvet blokkolták a rendszerbõl!");

			SendClientMessage(playerid, COLOR_BLUE, "____________[Nyilvántartás]____________");
			SendFormatMessage(playerid, COLOR_BLUE, "Rendszám: CLS-%d | Tulaj: %s", CarInfo[car][cId], CarInfo[car][cOwner]);
			SendFormatMessage(playerid, COLOR_BLUE, "Típus: %s | Színe(1.): %d | Színe(2.): %d", GetVehicleModelName(GetVehicleModel(CarInfo[car][cId])), CarInfo[car][cColorOne], CarInfo[car][cColorTwo]);
			SendClientMessage(playerid, COLOR_BLUE, "---------------------------------------");
			Cselekves(playerid, "megnézte a nyilvántartást...", 1);

			return 1;
		}

		if(egyezik(param[1], "ház") || egyezik(param[1], "haz"))
		{
			if(params < 2)	return Msg(playerid, "Információ: /nyilvántartás ház [házszám]");

			new kero = strval(param[2]);

			SendClientMessage(playerid, COLOR_BLUE, "____________[Nyilvántartás]____________");
			SendFormatMessage(playerid, COLOR_BLUE, "Házszám: %d", kero);
			SendFormatMessage(playerid, COLOR_BLUE, "Tulajdonos: %s", HouseInfo[kero][hOwner]);
			SendFormatMessage(playerid, COLOR_BLUE, "Berendezés: %d", HouseInfo[kero][hBelso]); // Belsõ
			SendClientMessage(playerid, COLOR_BLUE, "---------------------------------------");
			Cselekves(playerid, "megnézte a nyilvántartást...", 1);

			return 1;
		}

		Msg(playerid, "Információ: /nyilvántartás [jármû | ház] [házszám/rendszám]");

		return 1;

	}


	//=========================vége

	if(egyezik(cmd, "/checkszint"))
	{
		if(FloodCheck(playerid)) return 1;

		CheckSzint(playerid, true);
		return 1;
	}
 	if(egyezik(cmd, "/hulla"))
	{
		if(params < 1)
		{
		    if(Admin(playerid, 1) || IsScripter(playerid))
				SendClientMessage(playerid, COLOR_WHITE, "Használat: /hulla [Megvizsgál / Bepakol / Lead / Motoz / Elvesz / Mutat | Admin(1): Töröl / Anéz]");
			else
			    SendClientMessage(playerid, COLOR_WHITE, "Használat: /hulla [Megvizsgál / Bepakol / Lead / Motoz / Elvesz / Mutat]");

			return true;
		}

		if(egyezik(param[1], "mutat"))
		{
		        
            if(!AMT(playerid, MUNKA_HULLA) && !LMT(playerid, FRAKCIO_MENTO)) return Msg(playerid, "Te nem vagy Hullaszállító!");
			if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Jármûbõl akarod átnézni a hullát?");
			if(!PlayerInfo[playerid][pHullaMutat])
			{
			    new k = -1, szamlalo = 0;
				for(;++k < MAX_HULLA;)
				{
				    if(HullaInfo[k][Hvan])
				    {
				    	PlayerInfo[playerid][pHullaIcon][szamlalo] = CreateDynamicMapIcon(HullaInfo[k][Hpos][0], HullaInfo[k][Hpos][1], HullaInfo[k][Hpos][2], 23, 0, .playerid = playerid, .streamdistance = 6000.0);
				    	szamlalo++;
					}
				}
				if(szamlalo > 0)
					Msg(playerid, "Van a közelben hulla!"), PlayerInfo[playerid][pHullaMutat] = true;
				else	
					Msg(playerid, "Nincs a közelben hulla! ((6000)"), PlayerInfo[playerid][pHullaMutat] = false;
					
			}
			else
			{
			    new cikluska = -1;
		        for(;++cikluska < MAX_HULLA;)
		        {
		            if(PlayerInfo[playerid][pHullaIcon][cikluska] > -1)
		            	DestroyDynamicMapIcon(PlayerInfo[playerid][pHullaIcon][cikluska]);
		        }
			    PlayerInfo[playerid][pHullaMutat] = false;
				Msg(playerid, "Jelzések törölve!");
			}
		    return true;
		}
		if(egyezik(param[1], "megvizsgál") || egyezik(param[1], "megvizsgal"))
		{
		    if(!LMT(playerid, FRAKCIO_MENTO) && !LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA)) return Msg(playerid, "Te nem vagy Mentõ / FBI / CIA");
			if(PlayerInfo[playerid][pVizsgal])
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Egy vizsgálás már folyamatban van!");
			if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Jármûbõl akarod átnézni a hullát?");
			new hulla = GetClosestHulla(playerid);
			if(GetDistanceToHulla(playerid, hulla) < 5.0)
			{
				if(HullaInfo[hulla][Hvw] != GetPlayerVirtualWorld(playerid))
					return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs a közeledben hulla!");
			        
				ApplyPlayerAnimation(playerid, "BOMBER","BOM_Plant_Loop", 4.0, 1, 0, 0, 0, 0, 1);
				ApplyPlayerAnimation(playerid, "BOMBER","BOM_Plant_Loop", 4.0, 1, 0, 0, 0, 0, 1);
				SetTimerEx("VizsgalasVege", 15000, false, "dd", playerid, hulla);
				SendClientMessage(playerid, COLOR_WHITE, "Elkezdtél nyomokat keresni a hullán, amibõl rájöhetsz ki is valójában!");
				PlayerInfo[playerid][pVizsgal] = true;
				Cselekves(playerid, "elkezdte megvizsgálni a hullát", 1, false);
				return true;
			} else
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs a közeledben hulla!");
		}
		else if(egyezik(param[1], "anez") || egyezik(param[1], "anéz"))
		{
 			if(!Admin(playerid, 1) && !IsScripter(playerid)) return Msg(playerid, "Ezt a parancsot nem használhatod!");
			new hulla = GetClosestHulla(playerid);
			if(GetDistanceToHulla(playerid, hulla) < 5.0)
			{
			    SendFormatMessage(playerid, COLOR_WHITE, "(( Megölte: %s ))", HullaInfo[hulla][Hmegolte]);
				return true;
			} else
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs a közeledben hulla!");
		}
		else if(egyezik(param[1], "töröl") || egyezik(param[1], "torol"))
		{
 			if(!Admin(playerid, 1) && !IsScripter(playerid)) return Msg(playerid, "Ezt a parancsot nem használhatod!");
			new hulla = GetClosestHulla(playerid);
			if(GetDistanceToHulla(playerid, hulla) < 5.0)
			{
				HullaTorol(hulla);
				SendClientMessage(playerid, COLOR_LIGHTRED, "Törölted a közeledben lévõ hullát!");
				return true;
			} else
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs a közeledben hulla!");
		}
		else if(egyezik(param[1], "bepakol"))
		{
		    if(!AMT(playerid, MUNKA_HULLA) && !LMT(playerid, FRAKCIO_MENTO)) return Msg(playerid, "Te nem vagy Hullaszállító!");
			if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Jármûbõl akarod átnézni a hullát?");
            new hulla = GetClosestHulla(playerid), kocsi = GetClosestVehicle(playerid);
   			if(GetDistanceToHulla(playerid, hulla) < 5.0)
			{
				if(HullaInfo[hulla][Hvw] != GetPlayerVirtualWorld(playerid))
					return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs a közeledben hulla!");
			
				if(GetPlayerDistanceFromVehicle(playerid, kocsi) < 5.0)
				{
					if((GetVehicleModel(kocsi) == 442) || GetVehicleModel(kocsi) == 416)
					{
						if(HullakSzama[kocsi] != 2)
 						{
							HullakSzama[kocsi]++;
							SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Sikeresen bekapoltad a hullát! Hullák száma a jármûben: %d", HullakSzama[kocsi]);
							HullaTorol(hulla);
							Cselekves(playerid, "berakott egy hullát a jármûvébe", 1, false);
  						} else
				    		return SendClientMessage(playerid, COLOR_LIGHTRED, "A jármû tele van!");
					} else
 						return SendClientMessage(playerid, COLOR_LIGHTRED, "Ebbe a kocsiba nem rakhatod be!");
				} else
					return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs a közeledben jármû!");
			} else
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs a közeledben hulla!");
		}
		else if(egyezik(param[1], "motoz"))
		{
		    //if(!AMT(playerid, MUNKA_HULLA)) return Msg(playerid, "Te nem vagy Hullaszállító!");
            new hulla = GetClosestHulla(playerid);
			if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Jármûbõl akarod átnézni a hullát?");
           	if(HullaInfo[hulla][Hvw] != GetPlayerVirtualWorld(playerid))
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs a közeledben hulla!");
			        
   			if(GetDistanceToHulla(playerid, hulla) < 5.0)
			{
				SendClientMessage(playerid, COLOR_ORANGE, "======= [ A hullánál lévõ értékek ] =======");
				SendFormatMessage(playerid, COLOR_GREEN, "Heroin: %dg | Kokain: %dg | Material: %ddb",HullaInfo[hulla][HHeroin], HullaInfo[hulla][HKokain], HullaInfo[hulla][HMati]);
				SendFormatMessage(playerid, COLOR_GREEN, "Marihuana: %dg | Pénz: %sFt",HullaInfo[hulla][HMariska], FormatNumber( HullaInfo[hulla][HPenz], 0, ',' ));
				SendClientMessage(playerid, COLOR_YELLOW, "(( Ha elszeretnéd venni az értéktárgyakat, használd a /hulla elvesz parancsot! ))");
				Cselekves(playerid, "átkutatta a közelében lévõ hullát", 1, false);
			} else
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs a közeledben hulla!");
		}
		else if(egyezik(param[1], "lead"))
		{
		    if(!AMT(playerid, MUNKA_HULLA) && !LMT(playerid, FRAKCIO_MENTO)) return Msg(playerid, "Te nem vagy Hullaszállító!");
	        new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) < 5.0)
			if(!PlayerToPoint(5, playerid, 939.592, -1086.810, 24.296))
			{
				Msg(playerid, "Itt nem tudod leadni a hullákat. Menj a Los Santosi temetõ ravatalozójába! (Térképen jelzi)");
				SetPlayerCheckpoint(playerid, 939.592, -1086.810, 24.296, 2.5);
				return 1;

			}
			if((GetVehicleModel(kocsi) == 442) || (GetVehicleModel(kocsi) == 416))
			{
				if(HullakSzama[kocsi] > 0)
				{
 					new kapsz = HullakSzama[kocsi] * 12500;
					GiveMoney(playerid, kapsz);
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Sikeresen leadtál %d hullát amiért kaptál %d Ft-ot.", HullakSzama[kocsi], kapsz);
					HullakSzama[kocsi] = 0;
				} else
				 	return SendClientMessage(playerid, COLOR_LIGHTRED, "A jármûben nincs egy hulla se!");
			} else
			    return Msg(playerid, "Nincs a közeledben jármû!");
		}
		else if(egyezik(param[1],"elvesz") || egyezik(param[1],"kirabol"))
		{
		    if(params < 2) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /hulla elvesz [Materials / Heroin / Marihuana / Kokain / Pénz]");
			if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Jármûbõl akarod kirabolni a hullát?");
		    new hulla = GetClosestHulla(playerid);
	     	if(HullaInfo[hulla][Hvw] != GetPlayerVirtualWorld(playerid))
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs a közeledben hulla!");
			        
		    if(GetDistanceToHulla(playerid, hulla) > 5.0) return SendClientMessage(playerid, COLOR_WHITE, "Nincs a közeledben holttest!");
            if(egyezik(param[2],"materials") || egyezik(param[2],"mati"))
			{
			    new mats = PlayerInfo[playerid][pMats] + HullaInfo[hulla][HMati];
				if(mats > MAXMATI) return Msg(playerid, "Nem fér el nálad ennyi!");
				if(HullaInfo[hulla][HMati] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Nincs nála materials!");

				PlayerInfo[playerid][pMats] += HullaInfo[hulla][HMati];
				HullaInfo[hulla][HMati] = 0;
				Cselekves(playerid,  "elvett némi materialt a közelben lévõ holttesttõl", 0);
			    return true;
			}
			else if(egyezik(param[2],"heroin"))
			{
			    new heroin = PlayerInfo[playerid][pHeroin] + HullaInfo[hulla][HHeroin];
				if(heroin > MAXHEROIN) return Msg(playerid, "Nem fér el nálad ennyi!");
				if(HullaInfo[hulla][HHeroin] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Nincs nála heroin!");

				PlayerInfo[playerid][pHeroin] += HullaInfo[hulla][HHeroin];
				HullaInfo[hulla][HHeroin] = 0;
				Cselekves(playerid,  "elvett némi heroint a közelben lévõ holttesttõl", 0);
			    return true;
			}
			else if(egyezik(param[2],"marihuana"))
			{
                new mariska = PlayerInfo[playerid][pMarihuana] + HullaInfo[hulla][HMariska];
				if(mariska > MAXMARIHUANA) return Msg(playerid, "Nem fér el nálad ennyi!");
				if(HullaInfo[hulla][HMariska] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Nincs nála marihuana!");

				PlayerInfo[playerid][pMarihuana] += HullaInfo[hulla][HMariska];
				HullaInfo[hulla][HMariska] = 0;
				Cselekves(playerid,  "elvett némi marihuanát a közelben lévõ holttesttõl", 0);
			    return true;
			}
			else if(egyezik(param[2],"kokain"))
			{
                new kokain = PlayerInfo[playerid][pKokain] + HullaInfo[hulla][HKokain];
				if(kokain > MAXKOKAIN) return Msg(playerid, "Nem fér el nálad ennyi!.");
				if(HullaInfo[hulla][HKokain] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Nincs nála kokain!");

				PlayerInfo[playerid][pKokain] += HullaInfo[hulla][HKokain];
				HullaInfo[hulla][HKokain] = 0;
				Cselekves(playerid,  "elvett némi kokaint a közelben lévõ holttesttõl", 0);
			    return true;
			}
			else if(egyezik(param[2],"pénz") || egyezik(param[2],"penz"))
			{
			    if(HullaInfo[hulla][HPenz] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Nincs nála pénz!");
			    GiveMoney(playerid, HullaInfo[hulla][HPenz]);
			    HullaInfo[hulla][HPenz] = 0;
				Cselekves(playerid,  "elvett némi pénzt a közelben lévõ holttesttõl", 0);
			    return true;
			}
		}
		return true;
	}

	if(egyezik(cmd, "/scripter"))
	{
		if(!IsScripter(playerid)) return 1;

		if(!params)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Használat: /scripter [paraméterek]");
			SendClientMessage(playerid, COLOR_YELLOW, "Paraméterek: help");
			return 1;
		}

		if(egyezik(param[1], "help"))
		{
			if(params < 2)
				return SendClientMessage(playerid, COLOR_YELLOW, "Help: [ bone ]");

			if(egyezik(param[2], "bone"))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Testrészek: 1 (gerinc), 2 (fej), 3 (bal felkar), 4(jobb felkar), 5(bal kéz), 6(jobb kéz)");
				SendClientMessage(playerid, COLOR_YELLOW, "Testrészek: 7(bal comb), 8(jobb comb), 9(bal láb), 10(jobb láb), 11(jobb lábszár), 12(bal lábszár)");
				SendClientMessage(playerid, COLOR_YELLOW, "Testrészek: 13(bal alkar), 14(jobb alkar), 15(bal kulcscsont), 16(jobb kulcscsont), 17(nyak), 18(állkapocs)");
			}
			else
				SendClientMessage(playerid, COLOR_YELLOW, "Help: ismeretlen paraméter");
		}
		else
			SendClientMessage(playerid, COLOR_YELLOW, "Scripter: ismeretlen paraméter");

		return 1;
	}

	/*if(egyezik(cmd, "/aobject"))
	{
		if(!Admin(playerid, 1337)) return 1;

		if(!params)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Használat: /aobject [paraméterek]");
			SendClientMessage(playerid, COLOR_YELLOW, "Paraméter: attach [slot] [model]");
			SendClientMessage(playerid, COLOR_YELLOW, "Paraméter: detach [slot]");
			SendClientMessage(playerid, COLOR_YELLOW,  "Paraméter: edit [slot]");
			return 1;
		}

		if( egyezik(param[1], "attach") )
		{
			if(params < 4)
				return SendClientMessage(playerid, COLOR_YELLOW, "Használat: /aobject attach [slot] [model] [testrész]");

			new slot = strval(param[2]), model = strval(param[3]), bone = strval(param[4]);

			if( slot < 0 || slot > 9 )
				return SendClientMessage(playerid, COLOR_YELLOW, "Slot: 0-9 között!");

			if( bone < 1 || bone > 18 )
				return SendClientMessage(playerid, COLOR_YELLOW, "Testrész: 1-18 között!");


		}
		else
			SendClientMessage(playerid, COLOR_YELLOW, "AObject: ismeretlen paraméter");

		return 1;
	}*/

	if(egyezik(cmd, "/joypad"))
	{
		if(!SAdmin(playerid, 1)) return 1;

		SendClientMessage(playerid, COLOR_WHITE, "=====[ Joypadosok ]=====");
		new db;
		foreach(Jatekosok, p)
		{
			if(Joypad[p] == NINCS)
			{
				db++;
				SendFormatMessage(playerid, COLOR_LIGHTRED, "[%d]%s", p, Nev(p));
			}
		}

		if(!db)
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Senki se joypadozik");

		return 1;
	}

	if(egyezik(cmd, "/bid"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid) && PlayerInfo[playerid][pAS] != NINCS) return 1;

		if(!params || !IsNumeric(param[1]))
			return Msg(playerid, "Használata: /bid [uid]");

		new uid = strval(param[1]), player = NINCS;
		foreach(Jatekosok, p)
		{
			if(PlayerInfo[p][pBID] == uid)
			{
				player = p;
				break;
			}
		}

		if(player != NINCS)
			SendFormatMessage(playerid, COLOR_LIGHTRED, "Játékos: [%d]%s", player, PlayerName(player));
		else
			Msg(playerid, "Nincs ilyen játékos");

		return 1;
	}

	if(egyezik(cmd, "/porolto") || egyezik(cmd, "/poroltó"))
	{
		if(!LMT(playerid, FRAKCIO_TUZOLTO)) return 1;

		if(FloodCheck(playerid)) return 1;

		new kocsi = GetClosestVehicle(playerid), model;
		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 7.0)
			return Msg(playerid, "A közeledben nincs jármû");

		model = GetVehicleModel(kocsi);
		if(model != 407 && model != 544)
			return Msg(playerid, "Csak tûzoltó kocsiból vehetsz ki!");

		
		WeaponGiveWeapon(playerid, WEAPON_FIREEXTINGUISHER, 5000);
		Msg(playerid, "Kivettél egy poroltót");
		Cselekves(playerid, "kivett egy poroltót a tûzoltókocsiból");

		return 1;
	}

	if(egyezik(cmd, "/bankkartya") || egyezik(cmd, "/bankkártya"))
	{
		if(!params || !egyezik(param[1], "vesz"))
		{
			if(PlayerInfo[playerid][pBankkartya] != 1)
				Msg(playerid, "Nincs bankkártyád, vegyél a bankban: /bankkártya vesz");
			else
			{
				if(!Bankkartya[playerid])
				{
					if(PlayerInfo[playerid][pZarolva] != 1)
						Bankkartya[playerid] = true, Msg(playerid, "Most már a bankkártyádat használod");
					else
						Msg(playerid, "A számlád zárolva van");
				}
				else
					Bankkartya[playerid] = false, Msg(playerid, "Most már nem használod a bankkártyádat");
			}
		}
		else
		{
			if(PlayerInfo[playerid][pBankkartya] == 1)
				return Msg(playerid, "Már van bankkártyád");

			if(!IsAt(playerid, IsAt_Bank))
				return Msg(playerid, "Nem vagy a bankban!");

			if(GetMoney(playerid) < 30000)
				return Msg(playerid, "Egy kártya ára 30,000Ft");

			GiveMoney(playerid, -30000);
			Msg(playerid, "Vettél egy bankkártyát! Használata: /bankkártya");
			PlayerInfo[playerid][pBankkartya] = 1;
		}
		return 1;
	}
	if(egyezik(cmd, "/chips"))
   {
      if(FloodCheck(playerid)) return 1;
      if(!IsPlayerInAnyVehicle(playerid))
      {
         if(PlayerToPoint(40, playerid, 1212.019897,-28.663099,1000.953125) && GetPlayerInterior(playerid) == 3)
         {
            if(GetMoney(playerid) > 310)
            {
				Msg(playerid, "Vettél egy chips et!");
				GiveMoney(playerid, -310);
				new Float:hp;
				GetPlayerHealth(playerid, hp);
				Cselekves(playerid, "vett egy  chio chipset!");
            }
            else return Msg(playerid, "Nincs elég pénzed! (310Ft)");
         }
         else return Msg(playerid, "Nem vagy chipsnél!");
      }
      else return Msg(playerid, "Kocsiban?");
   }
	if(egyezik(cmd, "/boja") || egyezik(cmd, "/bólya") || egyezik(cmd, "/bója"))
	{
		if(!LMT(playerid, FRAKCIO_SCPD) && !LMT(playerid, FRAKCIO_NAV) && !LMT(playerid, FRAKCIO_TUZOLTO) && !LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA) && !LMT(playerid, FRAKCIO_SFPD) && !LMT(playerid, FRAKCIO_ONKORMANYZAT) && !LMT(playerid, FRAKCIO_KATONASAG))
			return Msg(playerid, "Csak Rendõrség / SASD / FBI / Katonaság / Tûzoltóság / Önkormányzat");

		if(LMT(playerid, FRAKCIO_ONKORMANYZAT) && !Munkarang(playerid, 2)) return Msg(playerid, "Minimum 2-es rang!");
		
		if(!params)
			return Msg(playerid, "Használata: /bója [lerak / felvesz]");

		if(egyezik(param[1], "lerak"))
		{
			new id = NINCS;
			for(new i = 0; i < MAX_BOLYA; i++)
			{
				if(!Bolya[playerid][i][bPos][0])
				{
					id = i;
					break;
				}
			}

			if(id == NINCS)
				return Msg(playerid, "Több bóját nem rakhatsz le");

			new Float:pos[4];
			GetPlayerPos(playerid, ArrExt(pos));
			GetPlayerFacingAngle(playerid, pos[3]);
			//GetXYInFrontOfPoint(pos[0], pos[1], pos[3], 1.0);

			pos[2] -= 0.6;

			Bolya[playerid][id][bObject] = CreateDynamicObject(1238, ArrExt(pos), 0.0, 0.0, 0.0);
			Bolya[playerid][id][bPos][0] = pos[0];
			Bolya[playerid][id][bPos][1] = pos[1];
			Bolya[playerid][id][bPos][2] = pos[2];
			Cselekves(playerid, "lerakott egy bóját");
			Msg(playerid, "Leraktál egy bóját");

			Streamer_Update(playerid);
		}
		else if(egyezik(param[1], "felvesz"))
		{
			new Float:pos[4];
			GetPlayerPos(playerid, ArrExt(pos));

			new id = NINCS, Float:tav = 99999.0, Float:tav2;
			for(new i = 0; i < MAX_BOLYA; i++)
			{
				if(!Bolya[playerid][i][bPos][0]) continue;

				tav2 = GetDistanceBetweenPoints(ArrExt(Bolya[playerid][i][bPos]), ArrExt(pos));
				if(tav2 < tav)
				{
					id = i;
					tav = tav2;
				}
			}

			if(tav > 5.0)
				return Msg(playerid, "A közeledben nincs bója");
			
			if(IsValidDynamicObject(Bolya[playerid][id][bObject]))
				DestroyDynamicObject(Bolya[playerid][id][bObject]), Bolya[playerid][id][bObject]=INVALID_OBJECT_ID;
			Bolya[playerid][id][bPos] = Float:{0.0, 0.0, 0.0};
			Cselekves(playerid, "felvett egy bóját");
			Msg(playerid, "Felvettél egy bóját");
		}
		else
			Msg(playerid, "Használata: /bója [lerak / felvesz]");

		return 1;
	}

	if(egyezik(cmd, "/mikulas") || egyezik(cmd, "/mikulás"))
	{
		if(params < 1) return Msg(playerid, "/mikulás [sapka / csomag / virgács / ruha]");
		

		/*if(egyezik(param[1], "ruha"))
		{
			if(!Admin(playerid,1)) return 1;
			if(params < 2) return  Msg(playerid, "/mikulás ruha [miki/krampusz]");
			if(egyezik(param[2], "miki"))
				SetPlayerSkin(playerid,77);
			if(egyezik(param[2], "krampusz"))
				SetPlayerSkin(playerid,75);
			
			return 1;
		}*/
		if(1417824000 > UnixTime) return Msg(playerid, "HÓ-HÓ-HÓ ne siess annyira majd December 6-tól!");
		if(egyezik(param[1],"virgács"))
		{
			
			if(params != 2) return Msg(playerid, "/mikulás virgács [Játékos Neve / ID]");
			new jatekos = ReturnUser(param[2]);
			if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
			if(jatekos == playerid) return Msg(playerid, "Magadnak?-.-");
			if(GetDistanceBetweenPlayers(playerid,jatekos) > 5) return Msg(playerid, "Õ nincs a közeledben!");
			
			if(PlayerInfo[playerid][pVirgacs] < 1) return Msg(playerid, "Neked nincs virgácsod vegyél a boltban!");
			
			PlayerInfo[jatekos][pVirgacs]++;
			PlayerInfo[playerid][pVirgacs]--;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Átadtál egy virgácsot neki: %s", ICPlayerName(jatekos));
			SendFormatMessage(jatekos, COLOR_LIGHTBLUE, "* %s átadott egy virgácsot", ICPlayerName(playerid));
			Cselekves(playerid, "átadott egy virgácsot valakinek...");
		}
		if(egyezik(param[1],"sapka"))
		{

			if(PlayerInfo[playerid][pMikulasSapka] == 1)
			{
				if(MikulasSapka[playerid])
				{
					
					Cselekves(playerid, "levette a mikulás sapkáját");
					MikulasSapka[playerid] = false;
					RemovePlayerAttachedObject(playerid, ATTACH_SLOT_KENDO_MASZK);
				}
				else
				{
					RemovePlayerAttachedObject(playerid, ATTACH_SLOT_KENDO_MASZK);
					SetPlayerAttachedObject(playerid, ATTACH_SLOT_KENDO_MASZK, 19065, 2, 0.120000, 0.040000, -0.003500, 0, 100, 100, 1.4, 1.4, 1.4);
					Cselekves(playerid, "felvett egy mikulás sapkát");
					MikulasSapka[playerid] = true;
				}
				return 1;
			}
		}
		if(egyezik(param[1],"csomag"))
		{

			if(PlayerInfo[playerid][pMikulasCsomag] < 1)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs mikulás csomagod, vegyél a boltban!");

			if(!Ehseg[playerid])
				return Msg(playerid, "Nem vagy éhes");

			ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			Szukseglet(playerid, -150);
			PlayerInfo[playerid][pMikulasCsomag]--;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Megettél mikulás csomagot!");
			format(string, sizeof(string), "* Valaki megbontotta a mikulás csomagját.");
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
	}

	if(egyezik(cmd, "/pmblock"))
	{
		if(!Admin(playerid)) return 1;
		if(!params)
			return Msg(playerid, "Használat: /pmblock [játékos]");

		new user = ReturnUser(param[1]);
		if(user == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		if(PMBlock[playerid][user])
		{
			PMBlock[playerid][user] = 0;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Blokkolás feloldva: [%d]%s", user, PlayerName(user));
		}
		else
		{
			PMBlock[playerid][user] = 1;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Blokkolva: [%d]%s", user, PlayerName(user));
		}

		return 1;
	}

	if(egyezik(cmd, "/piac"))
	{
	
		if(LegalisSzervezetTagja(playerid) && !Admin(playerid, 1337)) return 1;
		
		if(!PlayerToPoint(20.0,playerid,3643.8601,-1408.8168,2.5078)) return Msg(playerid, "Nem vagy a piacon!"),SetPlayerCheckpoint(playerid, 3643.8601,-1408.8168,2.5078, 1.0);
	
		PiacDialog[playerid] = 0;
		ShowDialog(playerid, DIALOG_PIAC);
		
		return 1;
	}

	if(egyezik(cmd, "/desync"))
	{
		if(!Admin(playerid, 1337)) return 1;

		if(!params)
			return Msg(playerid, "Használata: /desync [játékos]");

		new user = ReturnUser(param[1]);
		if(user == INVALID_PLAYER_ID || IsPlayerNPC(user))
			return Msg(playerid, "Nincs ilyen játékos");

		if(Desync[user])
		{
			Desync[user] = 0;
			SendFormatMessage(playerid, COLOR_YELLOW, "[%d]%s desync kikapcsolva", user, PlayerName(user));
			if(Admin(user, 1337) && !IsClint(playerid))
				SendFormatMessage(user, COLOR_YELLOW, "%s kikapcsolta rajtad a desync-t", PlayerName(playerid));
		}
		else
		{
			Desync[user] = 1;
			SendFormatMessage(playerid, COLOR_YELLOW, "[%d]%s desync bekapcsolva", user, PlayerName(user));
			if(Admin(user, 1337) && !IsClint(playerid))
				SendFormatMessage(user, COLOR_YELLOW, "%s bekapcsolta rajtad a desync-t", PlayerName(playerid));
		}

		return 1;
	}

	if(egyezik(cmd, "/bejelent") || egyezik(cmd, "/bt"))
	{
	//	if(Admin(playerid, 1))
	//		return Msg(playerid, "Te mit akarsz bejelenteni? Admin vagy...");

		if(BejelentIdo[playerid])
			return Msg(playerid, "Nem rég tettél bejelentést, várnod kell");

		new uid, ok[128];
		if(sscanf(pms, "ds[128]", uid, ok))
			return Msg(playerid, "Használata: /(b)ejelen(t) [azonosító számsor (lásd: /idk)] [oka]");

		new jatekos = NINCS;
		foreach(Jatekosok, player)
		{
			if(PlayerInfo[player][pBID] == uid && player != playerid)
			{
				jatekos = player;
				break;
			}
		}

		if(jatekos == NINCS)
			return Msg(playerid, "Nincs ilyen sorszámmal rendelkezõ játékos");

		BejelentIdo[playerid] = 15;
		new sor1[128], sor2[128];

		format(sor1, 128, "Elkövetõ: [%d]%s | Bejelentõ: [%d]%s", jatekos, PlayerName(jatekos), playerid, PlayerName(playerid));
		format(sor2, 128, "Tett: {FFFF00}%s", ok);

		foreach(Jatekosok, player)
		{
			if(!PlayerInfo[player][pAdmin]) continue;
			SendClientMessage(player, COLOR_DARKBLUE, "=====[ Játékos bejelentés érkezett ]=====");
			SendClientMessage(player, COLOR_DARKBLUE, sor1);
			SendClientMessage(player, COLOR_DARKBLUE, sor2);
		}

		Log("Egyeb", "=====[ Játékos bejelentés érkezett ]=====");
		Log("Egyeb", sor1);
		Log("Egyeb", sor2);

		SendClientMessage(playerid, COLOR_YELLOW, "=====[ Bejelentés elküldve ]=====");
		SendFormatMessage(playerid, COLOR_YELLOW, "Sikeresen bejelentetted a %d sorszámú játékost.", uid);
		SendFormatMessage(playerid, COLOR_YELLOW, "Ok: %s", ok);
		SendClientMessage(playerid, COLOR_YELLOW, "Köszönjük bejelentésed, ha van elérhetõ admin, hamarosan reagálni fog rá!");

		return 1;
	}

	if(egyezik(cmd, "/idk"))
	{
		if(FloodCheck(playerid)) return 1;
		if(Harcol[playerid]) return Msg(playerid, "A-A warközben nem!!!");
		if(Bejelento[playerid])
		{
			Bejelento[playerid] = false;
			foreach(Jatekosok, p)
			{
				if(p == playerid || BText[p] == INVALID_3D_TEXT_ID) continue;
				if(PlayerInfo[p][pHitman] >= 1 && HitmanDuty[p]) continue;
				Streamer_RemoveArrayData(STREAMER_TYPE_3D_TEXT_LABEL, BText[p], E_STREAMER_PLAYER_ID, playerid);
		    }
			Streamer_Update(playerid);
			IDK[playerid] = 0;
			Msg(playerid, "Felirat kikapcsolva");
			if(Tevezik[playerid] == NINCS)
				Cselekves(playerid, "kikapcsolta a /idk parancsot", 0, true);
		}
		else
		{
			if(Paintballozik[playerid]) return Msg(playerid, "Nem csalunk, tisztességesen játszunk!");
			Bejelento[playerid] = true;
			foreach(Jatekosok, p)
			{
				if(p == playerid || BText[p] == INVALID_3D_TEXT_ID) continue;
				if(PlayerInfo[p][pHitman] >= 1 && HitmanDuty[p]) continue;
				Streamer_AppendArrayData(STREAMER_TYPE_3D_TEXT_LABEL, BText[p], E_STREAMER_PLAYER_ID, playerid);
			}
			Streamer_Update(playerid);
			if(Admin(playerid, 1) || IsScripter(playerid))
			{	
				if(AdminDuty[playerid] == 0)
				if(Tevezik[playerid] == NINCS)				
					Cselekves(playerid, "használta a /idk parancsot", 0, true);
				Msg(playerid, "Felirat bekapcsolva!");
			}
			else
			{
				IDK[playerid] = 60;
				Msg(playerid, "Felirat bekapcsolva 1 percre! Játékos bejelentéséhez használd a /bejelent parancsot!");
				if(Tevezik[playerid] == NINCS)
					Cselekves(playerid, "használta a /idk parancsot", 0, true);
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/nevek2"))
	{
		if(FloodCheck(playerid)) return 1;
		if(!Admin(playerid,6)) return 1;
		if(Harcol[playerid]) return Msg(playerid, "A-A warközben nem!!!");
		if(Anev[playerid])
		{
			Anev[playerid] = false;
			foreach(Jatekosok, p)
			{
				if(p == playerid || AText[p] == INVALID_3D_TEXT_ID) continue;
				Streamer_RemoveArrayData(STREAMER_TYPE_3D_TEXT_LABEL, AText[p], E_STREAMER_PLAYER_ID, playerid);
			}
			Streamer_Update(playerid);
			Msg(playerid, "Felirat kikapcsolva!");
		}
		else
		{
			if(Paintballozik[playerid]) return Msg(playerid, "Nem csalunk, tisztességesen játszunk!");
			Anev[playerid] = true;
			foreach(Jatekosok, p)
			{
				if(p == playerid || AText[p] == INVALID_3D_TEXT_ID) continue;
				Streamer_AppendArrayData(STREAMER_TYPE_3D_TEXT_LABEL, AText[p], E_STREAMER_PLAYER_ID, playerid);
			}
			Streamer_Update(playerid);
			Msg(playerid, "Felirat bekapcsolva!");
		}
		return 1;
	}
	if(egyezik(cmd, "/szerszamoslada") || egyezik(cmd, "/szerszámosláda"))
	{
		if(MunkaFolyamatban[playerid]) return 1;

		if(PlayerInfo[playerid][pSzerszamoslada] != 1 && PlayerInfo[playerid][pSzerszamoslada] != 0)
			PlayerInfo[playerid][pSzerszamoslada] = 0,Msg(playerid, "Debugolva a ládád!");
			
		if(PlayerInfo[playerid][pSzerszamoslada] != 1)
			return Msg(playerid, "Nincs szerszámosládád");
			
		if(NemMozoghat(playerid) || PlayerState[playerid] != PLAYER_STATE_ONFOOT)
			return Msg(playerid, "Jelenleg nem használhatod");

		new kocsi = GetClosestVehicle(playerid);
		if(kocsi < 1 || GetPlayerDistanceFromVehicle(playerid, kocsi) > 7.5)
			return Msg(playerid, "A közeledben nincs jármû");

		new Float:hp;
		GetVehicleHealth(kocsi, hp);
		if(hp > 500.0)
			return Msg(playerid, "A jármû motorja nincs sérülve");

		new model = GetVehicleModel(kocsi);
		if(GetJarmu(kocsi, KOCSI_MOTORHAZTETO) != 1 && VData:(model-400):Type? == VEHICLE_TYPE_CAR)
			return Msg(playerid, "A jármû motorházteteje zárva van");

		Cselekves(playerid, "elkezdte megjavítani a jármûvét");
		Msg(playerid, "Elkezdted megjavítani a jármûvedet");
		SetTimerEx("Munkavege", MunkaIdo[12], false, "ddd", playerid, M_JARMUJAVITAS, kocsi);
		Freeze(playerid);
		ApplyAnimation(playerid, "SCRATCHING", "scmid_l", 4.0, 1, 1, 1, 1, 0, 1);
		MunkaFolyamatban[playerid] = 1;
	}

	if(egyezik(cmd, "/pee"))
	{
		if(Pee[playerid])
		{
			Pee[playerid] = false;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		}
		else if(Vizelet[playerid])
		{
		    if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Szerintem IRL se kocsiban végzed el a dolgod...");
			Pee[playerid] = true;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
			
			if(Tevezik[playerid] != NINCS)
			{
				
				format(string, sizeof(string), "[/pee]%s tv-zés köben /pee-zik", PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED, string, 1);
			}	
		}
		return 1;
	}

	/*if(egyezik(cmd, "/nyelv"))
	{
		#error crashel, újraírás szükséges
		if(params < 1)
			return Msg(playerid, "Használata: /nyelv [ használ / tanul ]");

		if(egyezik(param[1], "használ") || egyezik(param[1], "hasznal"))
		{
			ShowDialog(playerid, DIALOG_NYELV_HASZNAL);
		}
		else if(egyezik(param[1], "tanul"))
		{
			if(GetPlayerVirtualWorld(playerid) != 1 || !PlayerToPoint(30.0, playerid, 1993, -2627, 13))
				return Msg(playerid, "Nem vagy a könyvtárban");

			if(!BankkartyaFizet(playerid, 2000, false))
				return Msg(playerid, "Egy nyelvlecke ára 2,000Ft");

			if(MunkaFolyamatban[playerid]) return 1;
			ShowDialog(playerid, DIALOG_NYELV_TANUL);
		}
		else
			Msg(playerid, "Használata: /nyelv [ használ / tanul ]");

		return 1;
	}*/

	if(egyezik(cmd, "/gyemant") || egyezik(cmd, "/gyémánt"))
	{
		if(params < 1)
			return Msg(playerid, "Használata: /gyémánt [felvesz / lerak]");

		new Int = GetPlayerInterior(playerid), VW = GetPlayerVirtualWorld(playerid);
		if(egyezik(param[1], "új") || egyezik(param[1], "uj"))
		{
			if(!IsScripter(playerid)) return Msg(playerid, "/gyémánt [felvesz / lerak]");
			new gy = NINCS;
			for(new g = 0; g < MAX_GYEMANT; g++)
			{
				if(Gyemant[g][gPos][0] == 0.0)
				{
					gy = g;
					break;
				}
			}
				
			if(gy == NINCS) return Msg(playerid, "Több gyémántot nem lehet lerakni!");
				
			Gyemant[gy][gPlayer] = NINCS;
			Gyemant[gy][gFrakcio] = NINCS;
				
			GyemantAkcio( GYEMANT_FELVESZ, playerid, gy);
			Msg(playerid, "Sikeres gyémánt lerakás!");
		}
		if(egyezik(param[1], "töröl") || egyezik(param[1], "torol"))
		{
			if(!IsScripter(playerid)) return Msg(playerid, "/gyémánt [felvesz / lerak]");
			new gy = NINCS;
			for(new g = 0; g < MAX_GYEMANT; g++)
			{
				if(Gyemant[g][gPos][0] != 0.0 && Gyemant[g][gOID] != NINCS && PlayerToPoint(3.0, playerid, ArrExt( Gyemant[g][gPos] )) && Int == Gyemant[g][gInt] && VW == Gyemant[g][gVW])
				{
					gy = g;
					break;
				}
			}

			if(gy == NINCS)
				return Msg(playerid, "A közeledben nincs gyémánt");

			GyemantAkcio( GYEMANT_TOROL, playerid, gy );

			Msg(playerid, "Töröltél egy gyémántot");
		}
		if(egyezik(param[1], "felvesz"))
		{
			if( GyemantNala[playerid] != NINCS )
				return Msg(playerid, "Már van nálad gyémánt");
				
			new gy = NINCS;
			for(new g = 0; g < MAX_GYEMANT; g++)
			{
				if(Gyemant[g][gPos][0] != 0.0 && Gyemant[g][gOID] != NINCS && PlayerToPoint(3.0, playerid, ArrExt( Gyemant[g][gPos] )) && Int == Gyemant[g][gInt] && VW == Gyemant[g][gVW])
				{
					gy = g;
					break;
				}
			}

			if(gy == NINCS)
				return Msg(playerid, "A közeledben nincs gyémánt");

			GyemantAkcio( GYEMANT_FELVESZ, playerid, gy );

			Msg(playerid, "Felvettél egy gyémántot");
			Cselekves(playerid, "felvett egy gyémántot");
		}
		else if(egyezik(param[1], "lerak"))
		{
			if( GyemantNala[playerid] == NINCS )
				return Msg(playerid, "Nincs nálad gyémánt");

			Msg(playerid, "Leraktad a gyémántot");
			Cselekves(playerid, "lerakott egy gyémántot");

			GyemantAkcio( GYEMANT_LERAK, playerid, GyemantNala[playerid] );
		}
		return 1;
	}

	if(egyezik(cmd, "/tûz") || egyezik(cmd, "/tuz"))
	{
		if(IsScripter(playerid) && params < 1)
			return Msg(playerid, "Használata: /tûz [Go / Új / Töröl / Mutat / Stop]");
		if(Admin(playerid, 5) && params < 1)
			return Msg(playerid, "Használata: /tûz stop");
		
		if(egyezik(param[1], "stop"))
		{
			if(!Admin(playerid, 5) && !IsScripter(playerid)) return 1;
			new str[128];
			if(!TuzVan) return Msg(playerid, "Nincs tûz");
			for(new t = 0; t < TUZ_MAX; t++)
			{
				if(IsValidDynamic3DTextLabel( Tuz[ t ][tFelirat] ))
					DestroyDynamic3DTextLabel( Tuz[ t ][tFelirat] ),Tuz[t][tFelirat]=INVALID_3D_TEXT_ID;
								
				DestroyDynamicMapIcon( Tuz[ t ][tMap] );

				for(new o = 0; o < TUZ_OBJECT; o++)
					if(IsValidDynamicObject(  Tuz[ t ][tObject][o] )) DestroyDynamicObject( Tuz[ t ][tObject][o] ),Tuz[ t ][tObject][o]=INVALID_OBJECT_ID;

				Tuz[ t ][tuzAktiv] = false;
				TuzVan = false;
				TextDrawHideForAll(TuzInfo[0]);
				TextDrawHideForAll(TuzInfo[1]);
				TuzIdo = Rand(TUZ_IDO_MIN, TUZ_IDO_MAX);
			}
			format(str, 128, "<< ClassRPG: %s leállította a tüzet >>", PlayerName(playerid));
			foreach(Jatekosok, c)
			{
				if(LMT(c, FRAKCIO_TUZOLTO))
					SendClientMessage(c, COLOR_LIGHTRED, str);
			}
			format(str, 128, "%s leállította a tüzet, a tûzidõ: %d", PlayerName(playerid), TuzIdo);
			EgyebLog(str);
		}
		else if(egyezik(param[1], "go"))
		{
			if(!IsScripter(playerid)) return 1;
			new id = strval(param[2]);
			if(id < 0 || id >= TUZ_MAX_POZ)
				return Msg(playerid, "Nincs ilyen tûz!");

			Tele(playerid, ArrExt(TuzPoz[id][tPoz]));
			Msg(playerid, "Teleportálva");

			return 1;
		}
		else if(egyezik(param[1], "új") || egyezik(param[1], "uj"))
		{
			if(!IsScripter(playerid)) return 1;
			new id = NINCS, van = NINCS;
			for(new k = 0; k < TUZ_MAX_POZ; k++)
			{
				if(TuzPoz[k][tPoz][0] == 0.0)
				{
					id = k;
					break;
				}
				else if(PlayerToPoint(10, playerid, ArrExt( TuzPoz[k][tPoz] )))
				{
					van = k;
					break;
				}
			}

			if(van != NINCS)
				return Msg(playerid, "Ide már van lementve pozíció! Lásd: /tûz mutat");
			if(id == NINCS)
				return Msg(playerid, "A pozíció lista betelt");

			new Float:pos[3];
			GetPlayerPos(playerid, ArrExt(pos));

			TuzPoz[id][tPoz][0] = pos[0];
			TuzPoz[id][tPoz][1] = pos[1];
			TuzPoz[id][tPoz][2] = pos[2];

			Msg(playerid, "Pozíció hozzáadva");

			TuzPoz[id][tMapID] = CreateDynamicMapIcon( ArrExt( TuzPoz[id][tPoz] ), 36, 0, NINCS, NINCS, NINCS, TUZ_MUTAT_TAV);
			Streamer_SetIntData( STREAMER_TYPE_MAP_ICON, TuzPoz[id][tMapID], E_STREAMER_STYLE, 3); // Global + checkpoint
			if(Streamer_IsInArrayData( STREAMER_TYPE_MAP_ICON, TuzPoz[id][tMapID], E_STREAMER_PLAYER_ID, NINCS))
				Streamer_RemoveArrayData( STREAMER_TYPE_MAP_ICON, TuzPoz[id][tMapID], E_STREAMER_PLAYER_ID, NINCS);

			if( TuzMutat[playerid] && !Streamer_IsInArrayData( STREAMER_TYPE_MAP_ICON, TuzPoz[id][tMapID], E_STREAMER_PLAYER_ID, playerid) )
			{
				Streamer_AppendArrayData( STREAMER_TYPE_MAP_ICON, TuzPoz[id][tMapID], E_STREAMER_PLAYER_ID, playerid);
				Streamer_Update( playerid );
			}

			TuzAkcio( TUZ_MENT );
		}
		else if(egyezik(param[1], "töröl") || egyezik(param[1], "torol"))
		{
			if(!IsScripter(playerid)) return 1;
			new van = NINCS;
			for(new k = 0; k < TUZ_MAX_POZ; k++)
			{
				if(TuzPoz[k][tPoz][0] != 0.0 && PlayerToPoint(10, playerid, ArrExt( TuzPoz[k][tPoz] )))
				{
					van = k;
					break;
				}
			}

			if(van == NINCS)
				return Msg(playerid, "Ide nincs lementve pozíció! Lásd: /tûz mutat");

			new Float:pos[3];
			GetPlayerPos(playerid, ArrExt(pos));

			TuzPoz[van][tPoz] = Float:{ 0.0, 0.0, 0.0 };

			DestroyDynamicMapIcon( TuzPoz[van][tMapID] );
			TuzPoz[van][tMapID] = 0;

			if( TuzMutat[playerid] )
				Streamer_Update(playerid);

			Msg(playerid, "Pozíció törölve");

			TuzAkcio( TUZ_MENT );
		}
		else if(egyezik(param[1], "mutat"))
		{
			if(!IsScripter(playerid)) return 1;
			if(TuzMutat[playerid])
			{
				TuzMutat[playerid] = false;

				for(new k = 0; k < TUZ_MAX_POZ; k++)
				{
					if( TuzPoz[k][tPoz][0] != 0.0 && TuzPoz[k][tMapID] && Streamer_IsInArrayData( STREAMER_TYPE_MAP_ICON, TuzPoz[k][tMapID], E_STREAMER_PLAYER_ID, playerid) )
						Streamer_RemoveArrayData( STREAMER_TYPE_MAP_ICON, TuzPoz[k][tMapID], E_STREAMER_PLAYER_ID, playerid);
				}

				Streamer_Update(playerid);

				Msg(playerid, "A tûz helyei elrejtve a radaron");
			}
			else
			{
				TuzMutat[playerid] = true;

				for(new k = 0; k < TUZ_MAX_POZ; k++)
				{
					if( TuzPoz[k][tPoz][0] != 0.0 && !Streamer_IsInArrayData( STREAMER_TYPE_MAP_ICON, TuzPoz[k][tMapID], E_STREAMER_PLAYER_ID, playerid) )
						Streamer_AppendArrayData( STREAMER_TYPE_MAP_ICON, TuzPoz[k][tMapID], E_STREAMER_PLAYER_ID, playerid);
				}

				Streamer_Update(playerid);

				Msg(playerid, "A tûz helyei jelezve a radaron");
			}
		}

		return 1;
	}

	if(egyezik(cmd, "/kincs"))
	{
		new bool:fojog = IsScripter(playerid) ? true : false;
	
	
		if(params < 1)
		{
			if(fojog)
				Msg(playerid, "Használata: /kincs [ nyit / új / töröl / go / aktiv / indit / kod ]");
			else
				Msg(playerid, "Használata: /kincs nyit");
			return 1;
		}

		if(egyezik(param[1], "nyit"))
		{
			new van = NINCS;
			for(new k = 0; k < MAX_KINCS; k++)
			{
				if(Kincs[k][kPos][0] != 0.0 && PlayerToPoint(3, playerid, ArrExt( Kincs[k][kPos] )))
				{
					van = k;
					break;
				}
			}

			if(KincsAktiv == NINCS || van == NINCS || KincsAktiv != van)
				return Msg(playerid, "Itt nincs semmi");
			
			Szamok[playerid][0] = EOS;
			
			PlayerTextDrawSetString(playerid, Gombok[0], "0");
			PlayerTextDrawSetString(playerid, Gombok[1], "1");
			
			for(new i = 0; i < 2; i++)
				PlayerTextDrawShow(playerid, Kellek[i]);
			for(new i = 0; i < 2; i++)
				PlayerTextDrawShow(playerid, Gombok[i]);
			for(new i = 0; i < 2; i++)
				PlayerTextDrawShow(playerid, Jelzes[i]);
				
			
			
			SelectTextDraw(playerid,0xF7C25EAA);
			KodToroActive[playerid] = true;
			
			Valtozott[playerid] = false;
			
			return true;
			
		}
		else if(egyezik(param[1], "aktiv") && fojog)
		{
			SendFormatMessage(playerid, COLOR_WHITE, "Kincs: %d", KincsAktiv);
			return 1;
		}
		else if(egyezik(param[1], "go") && fojog)
		{
			new id = strval(param[2]);
			if(id < 0 || id >= MAX_KINCS)
				return Msg(playerid, "Nincs ilyen kincs");

			Tele(playerid, ArrExt(Kincs[id][kPos]));
			SetPlayerFacingAngle(playerid, Kincs[id][kAngle]);
			Msg(playerid, "Teleportálva");

			return 1;
		}
		else if((egyezik(param[1], "új") || egyezik(param[1], "uj")) && fojog)
		{
			new varos = VarosID(playerid);
			/*if( !varos )
				return Msg(playerid, "Csak városba lehet");*/

			new esely = 100;
			if(params >= 2 && IsNumeric(param[2]))
				esely = strval( param[2] );

			if(esely < 1 || esely > 100)
				return Msg(playerid, "Az esély 1 és 100 között lehet");

			new id = NINCS, van = NINCS;
			for(new k = 0; k < MAX_KINCS; k++)
			{
				if(Kincs[k][kPos][0] == 0.0)
				{
					id = k;
					break;
				}
				else if(PlayerToPoint(5, playerid, ArrExt( Kincs[k][kPos] )))
				{
					van = k;
					break;
				}
			}

			if(van != NINCS)
				return Msg(playerid, "Ide már van lementve pozíció! Lásd: /kincs mutat");
			if(id == NINCS)
				return Msg(playerid, "A pozíció lista betelt");

			new Float:pos[4];
			GetPlayerPos(playerid, ArrExt(pos));
			GetPlayerFacingAngle(playerid, pos[3]);

			Kincs[id][kPos][0] = pos[0];
			Kincs[id][kPos][1] = pos[1];
			Kincs[id][kPos][2] = pos[2];
			Kincs[id][kAngle] = pos[3];

			Kincs[id][kVaros] = varos;

			Msg(playerid, "Pozíció hozzáadva");

			Kincs[id][kMapID] = CreateDynamicMapIcon( ArrExt( Kincs[id][kPos] ), 36, 0, NINCS, NINCS, NINCS, 500.0);
			Streamer_SetIntData( STREAMER_TYPE_MAP_ICON, Kincs[id][kMapID], E_STREAMER_STYLE, 3); // Global + checkpoint
			if(Streamer_IsInArrayData( STREAMER_TYPE_MAP_ICON, Kincs[id][kMapID], E_STREAMER_PLAYER_ID, NINCS))
				Streamer_RemoveArrayData( STREAMER_TYPE_MAP_ICON, Kincs[id][kMapID], E_STREAMER_PLAYER_ID, NINCS);

			if( KincsMutat[playerid] && !Streamer_IsInArrayData( STREAMER_TYPE_MAP_ICON, Kincs[id][kMapID], E_STREAMER_PLAYER_ID, playerid) )
			{
				Streamer_AppendArrayData( STREAMER_TYPE_MAP_ICON, Kincs[id][kMapID], E_STREAMER_PLAYER_ID, playerid);
				Streamer_Update( playerid );
			}

			KincsAkcio( KINCS_MENT );
		}
		else if((egyezik(param[1], "töröl") || egyezik(param[1], "torol")) && fojog)
		{
			new van = NINCS;
			for(new k = 0; k < MAX_KINCS; k++)
			{
				if(Kincs[k][kPos][0] != 0.0 && PlayerToPoint(10, playerid, ArrExt( Kincs[k][kPos] )))
				{
					van = k;
					break;
				}
			}

			if(van == NINCS)
				return Msg(playerid, "Ide nincs lementve pozíció! Lásd: /kincs mutat");

			new Float:pos[4];
			GetPlayerPos(playerid, ArrExt(pos));
			GetPlayerFacingAngle(playerid, pos[3]);

			Kincs[van][kPos] = Float:{ 0.0, 0.0, 0.0 };

			DestroyDynamicMapIcon( Kincs[van][kMapID] );
			Kincs[van][kMapID] = 0;

			if( KincsMutat[playerid] )
				Streamer_Update(playerid);

			Msg(playerid, "Pozíció törölve");

			KincsAkcio( KINCS_MENT );
		}
		else if((egyezik(param[1], "mutat")) && fojog)
		{
			if(KincsMutat[playerid])
			{
				KincsMutat[playerid] = false;

				for(new k = 0; k < MAX_KINCS; k++)
				{
					if( Kincs[k][kPos][0] != 0.0 && Kincs[k][kMapID] && Streamer_IsInArrayData( STREAMER_TYPE_MAP_ICON, Kincs[k][kMapID], E_STREAMER_PLAYER_ID, playerid) )
						Streamer_RemoveArrayData( STREAMER_TYPE_MAP_ICON, Kincs[k][kMapID], E_STREAMER_PLAYER_ID, playerid);
				}

				Streamer_Update(playerid);

				Msg(playerid, "A kincs helyei elrejtve a radaron");
			}
			else
			{
				KincsMutat[playerid] = true;

				for(new k = 0; k < MAX_KINCS; k++)
				{
					if( Kincs[k][kPos][0] != 0.0 && !Streamer_IsInArrayData( STREAMER_TYPE_MAP_ICON, Kincs[k][kMapID], E_STREAMER_PLAYER_ID, playerid) )
						Streamer_AppendArrayData( STREAMER_TYPE_MAP_ICON, Kincs[k][kMapID], E_STREAMER_PLAYER_ID, playerid);
				}

				Streamer_Update(playerid);

				Msg(playerid, "A kincs helyei jelezve a radaron");
			}
		}

		else if((egyezik(param[1], "indit")) && fojog)
		{
			KincsAkcio( KINCS_INDIT );
			Msg(playerid, "Függvény meghívva");
		}
		else if((egyezik(param[1], "kod")) && fojog)
			SendFormatMessage(playerid, COLOR_WHITE, "Kód: '%s'", KincsKod);

		return 1;
	}
    if(egyezik(cmd, "/parancsbetöltés") || egyezik(cmd, "/parancsbetoltes"))
    {
		if(!IsScripter(playerid)) return true;
		ParancsBetoltes();
		SendClientMessage(playerid,COLOR_ORANGE, "[CMD]: Parancsbetöltés manuálisan futtatva!");
    }

	if(egyezik(cmd, "/alakít") || egyezik(cmd, "/alakit"))
	{

			
		if(params < 1)
			return Msg(playerid, "Használata: /alakít [Model neve / ID-je]");

		if(veh != NINCS)
			return Msg(playerid, "Jármûbõl nem használható");

		if(!PlayerToPoint(15, playerid, 2123.584, -1136.486, 25.054))
			return Msg(playerid, "Nem vagy az autókereskedõnél");

		new car = GetClosestVehicle(playerid);
		if(GetPlayerDistanceFromVehicle(playerid, car) > 8.0)
			return Msg(playerid, "Nincs a közelben a jármûved");

		new vs = IsAVsKocsi(car);
		if(vs == NINCS)
			return Msg(playerid, "Ez nem V-s jármû");

		if(IsABicikli(car)) return Msg(playerid, "Csak jármûvekkel foglalkozunk...");
		
		if(CarInfo[vs][cTulaj] != SQLID(playerid) && (CarInfo[vs][cOwned] != 0 || CarInfo[vs][cKereskedo] !=  PlayerInfo[playerid][pID]))
			return Msg(playerid, "Ez nem a te jármûved");

		if(PlayerInfo[playerid][pAjandek] != 1)
				if(PlayerInfo[playerid][pAlakitIdo] > UnixTime && CarInfo[vs][cOwned] != 0 && CarInfo[vs][cKereskedo] != PlayerInfo[playerid][pID])
			return Msg(playerid, "Ilyen sûrûn nem alakíthatod a kocsit át. Hetente csak 1-szer");
			
		new model = NINCS;
		if(IsNumeric(param[1]))
			model = strval(param[1]);
		else
			model = GetVehicleModelIDFromName(param[1]);

		if(model < 400 || model > 611)
			return Msg(playerid, "Ilyen jármûtípus nem létezik");

		new model2 = model - 400;
		if(JarmuAra[model2][jFrakciok][0] == NINCS || !JarmuAra[model2][jVeheto])
			return Msg(playerid, "Ezt a jármûvet senki sem veheti meg");

		if(JarmuAra[model2][jFrakciok][0] != 0)
		{
			new bool:van;
			for(new j = 0; j < MAX_FRAKCIO; j++)
			{
				if(JarmuAra[model2][jFrakciok][j] > 0)
				{
					van = true;
					break;
				}
			}
			if(van)
				return Msg(playerid, "Ezt a jármûvet csak egyes frakciók vehetik meg");
		}
		
	/*	if(CarInfo[vs][cModel] == model)
		    return SendFormatMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Jelenleg is %s típusú jármûved van!", GetVehicleModelName(CarInfo[vs][cModel]-400));*/
		
		
		new km=floatround(KmSzamol[CarInfo[vs][cId]]/1000);
		new beszamitas;
		if(km > 15000)
			beszamitas = 0;
		else
			beszamitas = JarmuAra[ CarInfo[vs][cModel] - 400 ][jAra]-floatround(JarmuAra[ CarInfo[vs][cModel] - 400 ][jAra]/100*km/15000*100);
		
		KocsiAlakitAra[playerid]= 0;
		new uzike[512];
		if(beszamitas > JarmuAra[model2][jAra])
		{
			KocsiAlakitAra[playerid]=3000000;
			if(JarmuAra[model2][jAra] < 3000000)
				KocsiAlakitAra[playerid]= JarmuAra[model2][jAra]/2;
			if(CarInfo[vs][cOwned] == 0)
			{
				KocsiAlakitAra[playerid] = floatround(KocsiAlakitAra[playerid]/1.5);
				format(uzike, sizeof(uzike),""#COL_FEHER"A régi kereskedõi kocsi cserélési költsége az új kocsira "#COL_VKEK"%s "#COL_FEHER"Ft\n Kereskedõként 50 százelék kedvezményt kapsz!\nBiztos, hogy át akarod alakítani a jelenlegit?", FormatNumber( KocsiAlakitAra[playerid], 0, ',' ));
				
			}
			else
			{
				format(uzike, sizeof(uzike),""#COL_FEHER"A régi kocsid cserélési költsége az új kocsira "#COL_VKEK"%s "#COL_FEHER"Ft\nBiztos, hogy át akarod alakítani a jelenlegit?", FormatNumber( KocsiAlakitAra[playerid], 0, ',' ));
			}
		}
		else
		{
			if(CarInfo[vs][cNeon] > 0) beszamitas +=800000;
			switch(CarInfo[vs][cRiaszto])
			{
				case 1: beszamitas +=50000;
				case 2: beszamitas +=200000;
				case 3: beszamitas +=400000;
				case 4: beszamitas +=1500000;
				default: beszamitas +=0;
			}
			KocsiAlakitAra[playerid] = JarmuAra[model2][jAra]-beszamitas;
			if(CarInfo[vs][cOwned] == 0)
			{
				KocsiAlakitAra[playerid] = floatround(KocsiAlakitAra[playerid]/1.45);
				format(uzike, sizeof(uzike),""#COL_FEHER"A régi kereskedõi kocsi cserélési költsége az új kocsira "#COL_VKEK"%s "#COL_FEHER"Ft A régi kocsid beszámítják "#COL_VKEK"%s "#COL_FEHER"Ft -ba!\nKereskedõként kapsz 45 százalék kezdeményt. Így a csere "#COL_VKEK"%s "#COL_FEHER"Ft -ba fog kerülni!!!\nBiztos, hogy át akarod alakítani a jelenlegit?", FormatNumber(JarmuAra[model2][jAra], 0, ',' ),FormatNumber( beszamitas, 0, ',' ),FormatNumber( KocsiAlakitAra[playerid], 0, ',' ));
			
			}
			else
			{
				format(uzike, sizeof(uzike),""#COL_FEHER"A régi kocsid cserélési költsége az új kocsira "#COL_VKEK"%s "#COL_FEHER"Ft A régi kocsid beszámítják "#COL_VKEK"%s "#COL_FEHER"Ft -ba! Így a csere "#COL_VKEK"%s "#COL_FEHER"Ft -ba fog kerülni!!!\nBiztos, hogy át akarod alakítani a jelenlegit?", FormatNumber(JarmuAra[model2][jAra], 0, ',' ),FormatNumber( beszamitas, 0, ',' ),FormatNumber( KocsiAlakitAra[playerid], 0, ',' ));
			}
		}
		if(PlayerInfo[playerid][pAjandek] == 1 && JarmuAra[model2][jAra] > 80000000)
		{
			KocsiAlakitAra[playerid] = 1;
			format(uzike, sizeof(uzike),""#COL_FEHER"A kocsi csere 1 Ft lesz, mert van egy kuponod rá!\nBiztos, hogy át akarod alakítani a jelenlegit?");
		}

		
		ShowPlayerDialog(playerid, DIALOG_KALAKIT_MEGEROSIT, DIALOG_STYLE_MSGBOX, "Jármû cseréje az újra", uzike, "Igen", "Nem");
		KocsiAlakitModel[playerid] = model;
		KocsiAlakitID[playerid] = vs;
		return true;
	}
	if(egyezik(cmd, "/lekapcsol"))
	{
		if(PlayerState[playerid] != PLAYER_STATE_DRIVER || GetVehicleTrailer(veh) == 0)
			return Msg(playerid, "Nem vagy jármûben, vagy a jármûhöz nincs trailer kapcsolva");

		DetachTrailerFromVehicle(veh);
		TrailerHatsoLampa(veh, false);
		Msg(playerid, "Lekapcsoltad a pótkocsit");
		Cselekves(playerid, "lekapcsolta a pótkocsit");
		return 1;
	}
	if(strcmp(cmd, "/mp4", true) == 0)
	{
		if(PlayerInfo[playerid][pCDPlayer] == 1)
		{
			if(params < 1) return Msg(playerid, "/mp4 [lista / beállítás]");
			if(egyezik(param[1], "lista"))
			{
				//format(RadioLista[0],128,"%s",SajatRadio[playerid][rnev]);
				new telestring[1550], part[128];
				format(part, sizeof(part), ""COL_SZURKE"["COL_VKEK"RADIO"COL_SZURKE"]"COL_VKEK"%s", RadioClass[0][1]);
				strcat(telestring, part, sizeof(telestring));
				format(part, sizeof(part), "\n"COL_SZURKE"["COL_VKEK"RADIO"COL_SZURKE"]"COL_VKEK"%s", SajatRadio[playerid][rnev]);
				strcat(telestring, part, sizeof(telestring));
				
				for(new OrT = 2; OrT < sizeof(RadioClass); OrT++)
				{
					format(part, sizeof(part), "\n"COL_SZURKE"["COL_VKEK"RADIO"COL_SZURKE"]"COL_VKEK"%s", RadioClass[OrT][1]);
					strcat(telestring, part, sizeof(telestring));
				}
				ShowPlayerDialog(playerid, DIALOG_ZSEBRADIO, DIALOG_STYLE_LIST, "Rádió Állomások", telestring, "Ok", "");
			}
			if(egyezik(param[1], "beállítás"))
				ShowPlayerDialog(playerid, KOCSIRADIO_SAJAT, DIALOG_STYLE_INPUT, "Beállítás!", "Rádió címe ((Neve))", "Ok", "mégse");
			
		} 
		else
		    return Msg(playerid, "Nincs lejátszód, vegyél a boltban.");
		return true;
	}
	if(egyezik(cmd, "/kocsiradio") || egyezik(cmd, "/kocsirádió"))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(IsPlayerInAnyVehicle(playerid) && IsAValodiKocsi(GetPlayerVehicleID(playerid))) 
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Msg(playerid,"A kocsi rádiót csak a sofõr tudja használni!");
				
				if(params < 1) return Msg(playerid, "/kocsirádió [lista / beállítás]");
				if(egyezik(param[1], "lista"))
				{
					//format(RadioLista[0],128,"%s",SajatRadio[playerid][rnev]);
					new telestring[1550], part[128];
					
					format(part, sizeof(part), ""COL_SZURKE"["COL_VKEK"RADIO"COL_SZURKE"]"COL_VKEK"%s", RadioClass[0][1]);
					strcat(telestring, part, sizeof(telestring));
					format(part, sizeof(part), "\n"COL_SZURKE"["COL_VKEK"RADIO"COL_SZURKE"]"COL_VKEK"%s", SajatRadio[playerid][rnev]);
					strcat(telestring, part, sizeof(telestring));
					
					for(new OrT = 2; OrT < sizeof(RadioClass); OrT++)
					{
						format(part, sizeof(part), "\n"COL_SZURKE"["COL_VKEK"RADIO"COL_SZURKE"]"COL_VKEK"%s", RadioClass[OrT][1]);
						strcat(telestring, part, sizeof(telestring));
					}
					ShowPlayerDialog(playerid, DIALOG_KOCSIRADIO, DIALOG_STYLE_LIST, "Rádió Állomások", telestring, "Ok", "");
				}
				if(egyezik(param[1], "beállítás"))
				{
					ShowPlayerDialog(playerid, KOCSIRADIO_SAJAT, DIALOG_STYLE_INPUT, "Beállítás!", "Rádió címe ((Neve))", "Ok", "mégse");
				}
			} 
			else
			{
			Msg(playerid,"Ebben a jármûben nem használhatod!");
			}
		}
		else
			Msg(playerid,"Elõtte talán ülj be egy kocsiba.");
		
		return true;
	}
	
	#if defined PLUGIN_ENABLED_AUDIO
	if(egyezik(cmd, "/radio") || egyezik(cmd, "/rádió"))
	{
		if(!RadioVan)
			return Msg(playerid, "Átmenetileg nem elérhetõ");

		if(!Audio_IsClientConnected(playerid))
			return Msg(playerid, "Nincs telepítve az Audio kliens - letöltheted a ClassRPG.net címen, a letöltések menüpontban");

		if(params < 1)
			return Msg(playerid, "Használata: /rádió [ki / be / csatorna / lista / hangerõ]");

		if(egyezik(param[1], "be"))
		{
			if(PlayerInfo[playerid][pRadioHallgat])
				return Msg(playerid, "Már be van kapcsolva a rádiód");

			Cselekves(playerid, "bekapcsolta a rádióját", 1);
			PlayerInfo[playerid][pRadioHallgat] = true;

			if(PlayerInfo[playerid][pRadioID] == NINCS || !Radio[ PlayerInfo[playerid][pRadioID] ][rVan])
				PlayerInfo[playerid][pRadioID] = 0;

			SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Bekapcsoltad a rádiódat. Csatorna: %s", Radio[ PlayerInfo[playerid][pRadioID] ][rNev]);

			PlayerInfo[playerid][pRadioHID] = Audio_PlayStreamed(playerid, Radio[ PlayerInfo[playerid][pRadioID] ][rURL]);
			Audio_SetVolume(playerid, PlayerInfo[playerid][pRadioHID], PlayerInfo[playerid][pRadioHangero]);
		}
		else if(egyezik(param[1], "ki"))
		{
			if(!PlayerInfo[playerid][pRadioHallgat])
				return Msg(playerid, "Már ki van kapcsolva a rádiód");

			Cselekves(playerid, "kikapcsolta a rádióját", 1);
			PlayerInfo[playerid][pRadioHallgat] = false;

			if(PlayerInfo[playerid][pRadioHID] != NINCS)
			{
				Audio_Stop(playerid, PlayerInfo[playerid][pRadioHID]);
				PlayerInfo[playerid][pRadioHID] = NINCS;
			}
		}
		else if(egyezik(param[1], "lista"))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "=====[ Rádiók ]=====");
			for(new r = 0; r < MAX_RADIO; r++)
			{
				if(Radio[r][rVan])
					SendFormatMessage(playerid, COLOR_GREY, "Csatorna: %d - Név: %s", r+1, Radio[r][rNev]);
			}
		}
		else if(egyezik(param[1], "csatorna"))
		{
			if(!PlayerInfo[playerid][pRadioHallgat])
				return Msg(playerid, "Nincs bekapcsolva a rádiód");

			if(params < 2)
				return Msg(playerid, "Használata: /rádió csatorna [csatorna száma]");

			new csatorna = strval(param[2]) - 1;
			if(csatorna < 0 || csatorna >= MAX_RADIO || !Radio[csatorna][rVan])
				return Msg(playerid, "Nincs ilyen csatorna! A lista megtekintéséhez írd be: /rádió lista");

			if(csatorna == PlayerInfo[playerid][pRadioID])
				return Msg(playerid, "Jelenleg is ezt hallgatod");

			if(FloodCheck(playerid)) return 1;

			if(PlayerInfo[playerid][pRadioHID] != NINCS)
				Audio_Stop(playerid, PlayerInfo[playerid][pRadioHID]);

			PlayerInfo[playerid][pRadioID] = csatorna;
			PlayerInfo[playerid][pRadioHID] = Audio_PlayStreamed(playerid, Radio[csatorna][rURL]);
			Audio_SetVolume(playerid, PlayerInfo[playerid][pRadioHID], PlayerInfo[playerid][pRadioHangero]);

			Cselekves(playerid, "átkapcsolt a rádión", 1);
			SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Csatornát váltottál. Csatorna: %s", Radio[ csatorna ][rNev]);
		}
		else if(egyezik(param[1], "hangero") || egyezik(param[1], "hangerõ"))
		{
			if(!PlayerInfo[playerid][pRadioHallgat])
				return Msg(playerid, "Nincs bekapcsolva a rádiód");

			if(params < 2)
				return Msg(playerid, "Használata: /rádió hangerõ [1-100]");

			new vol = strval(param[2]);
			if(vol < 1 || vol > 100)
				return Msg(playerid, "Minimum 1, maximum 100");

			if(FloodCheck(playerid)) return 1;

			PlayerInfo[playerid][pRadioHangero] = vol;
			Audio_SetVolume(playerid, PlayerInfo[playerid][pRadioHID], vol);
		}

		return 1;
	}
	#endif

	if(egyezik(cmd, "/parancsajto"))
	{
		if(ParancsAjto[playerid])
		{
			ParancsAjto[playerid] = false;
			Msg(playerid, "Most már nem kell parancs, hogy használd az ajtókat");
		}
		else
		{
			ParancsAjto[playerid] = true;
			Msg(playerid, "Ismét parancs használatával tudsz csak bemenni az ajtókon");
		}
		return 1;
	}

	if(egyezik(cmd, "/leszallit") || egyezik(cmd, "/leszállít"))
	{
		if(!LMT(playerid, FRAKCIO_NAV)) return Msg(playerid, "Csak a NAV tagjainak");
		if(PlayerInfo[playerid][pRank] < 8) return Msg(playerid, "A leszállítás csak 8as rangtól lehetséges");

		if(!params)
		{
			Msg(playerid, "Használat: /leszállít [kokain / heroin / marihuana / material]");
			Msg(playerid, "[Árak] Kokain: 200ft/g Heroin: 250ft/g Marihuana: 300ft/g Material: 50ft/db");
			return 1;
		}

		if(!PlayerToPoint(5.0, playerid, -1856.5645, -1617.2384, 21.8472))
			return Msg(playerid, "Nem vagy a leszállító helynél");

		new jutalom;

		if(egyezik(param[1], "kokain"))
		{
			if(PlayerInfo[playerid][pKokain] < 0)
				return Msg(playerid, "Nincs kokainod");

			jutalom = PlayerInfo[playerid][pKokain] * 200;
			GiveMoney(playerid, jutalom);

			format(tmp, 128, "leszállított %dg kokaint %dFtért", PlayerInfo[playerid][pKokain], jutalom);
			Cselekves(playerid, tmp);

			PlayerInfo[playerid][pKokain] = 0;
		}
		else if(egyezik(param[1], "heroin"))
		{
			if(PlayerInfo[playerid][pHeroin] < 0)
				return Msg(playerid, "Nincs heroinod");

			jutalom = PlayerInfo[playerid][pHeroin] * 250;
			GiveMoney(playerid, jutalom);

			format(tmp, 128, "leszállított %dg heroint %dFtért", PlayerInfo[playerid][pHeroin], jutalom);
			Cselekves(playerid, tmp);

			PlayerInfo[playerid][pHeroin] = 0;
		}
		else if(egyezik(param[1], "marihuana"))
		{
			if(PlayerInfo[playerid][pMarihuana] < 0)
				return Msg(playerid, "Nincs marihuánád");

			jutalom = PlayerInfo[playerid][pMarihuana] * 300;
			GiveMoney(playerid, jutalom);

			format(tmp, 128, "leszállított %dg marihuánát %dFtért", PlayerInfo[playerid][pMarihuana], jutalom);
			Cselekves(playerid, tmp);

			PlayerInfo[playerid][pMarihuana] = 0;
		}
		else if(egyezik(param[1], "material"))
		{
			if(PlayerInfo[playerid][pMats] < 0)
				return Msg(playerid, "Nincs materialod");

			jutalom = PlayerInfo[playerid][pMats] * 50;
			GiveMoney(playerid, jutalom);

			format(tmp, 128, "leszállított %dg materialt %dFtért", PlayerInfo[playerid][pMats], jutalom);
			Cselekves(playerid, tmp);

			PlayerInfo[playerid][pMats] = 0;
		}
		else
		{
			Msg(playerid, "Használat: /leszállít [kokain / heroin / marihuana / material]");
			Msg(playerid, "[Árak] Kokain: 200ft/g Heroin: 250ft/g Marihuana: 300ft/g Material: 25ft/db");
			return 1;
		}

		return 1;
	}

	if(egyezik(cmd, "/szemüveg") || egyezik(cmd, "/szemuveg"))
	{
		if(params < 1)
			return Msg(playerid, "Használat: /szemüveg [ vesz / felvesz / elrak / igazit]");

		if(egyezik(param[1], "igazit"))
		{
			if(PlayerInfo[playerid][pSzemuveg] < 1 || PlayerInfo[playerid][pSzemuveg] > 33)
				return Msg(playerid, "Nincs szemüveged! Vegyél egyet a ruhaboltban");
				
			ObjectSzemuveg[playerid][OSzerkeszt] = true;
			EditAttachedObject(playerid,ATTACH_SLOT_SZEMUVEG);
		}
		if(egyezik(param[1], "vesz"))
		{
			if(!IsAtClothShop(playerid))
				return Msg(playerid, "Nem vagy ruhaboltvan");

			if(params < 2)
				return Msg(playerid, "Használata: /szemüveg vesz [ 1-33 ]");

			new szemcsi = strval(param[2]);
			if(szemcsi < 1 || szemcsi > 33)
				return Msg(playerid, "A szemüveg számának 1 és 33 között kell lennie!");

			if(!BankkartyaFizet(playerid, 50000)){ Msg(playerid, "Egy szemüveg ára 50,000Ft!"); return 1; }

			PlayerInfo[playerid][pSzemuveg] = szemcsi;
			BizPenz(BIZ_RUHA, 50000);
			Msg(playerid, "Vettél egy szemüveget");
			Cselekves(playerid, "vett egy szemüveget");
		}
		else if(egyezik(param[1], "felvesz"))
		{
			if(PlayerInfo[playerid][pSzemuveg] < 1 || PlayerInfo[playerid][pSzemuveg] > 33)
				return Msg(playerid, "Nincs szemüveged! Vegyél egyet a ruhaboltban");

			Szemuveg(playerid, PlayerInfo[playerid][pSzemuveg]);
			Msg(playerid, "Felvetted a szemüvegedet");
		}
		else if(egyezik(param[1], "elrak"))
		{
			Szemuveg(playerid);
			Msg(playerid, "Elraktad a szemüvegedet");
		}
		else
			Msg(playerid, "Használat: /szemüveg [ felvesz / elrak ]");

		return 1;
	}

	if(egyezik(cmd, "/aszemüveg") || egyezik(cmd, "/aszemuveg"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;

		if(!params)
			return Msg(playerid, "Használat: /szemüveg [ felvesz / elrak ] [szemüveg száma (1-33)]");

		if(egyezik(param[1], "felvesz"))
		{
			if(params < 2) return Msg(playerid, "Használata: /szemüveg felvesz [1-33]");

			new szemcsi = strval(param[2]);
			if(szemcsi < 1 || szemcsi > 33)
				return Msg(playerid, "A szemüveg számának 1 és 33 között kell lennie!");

			Szemuveg(playerid, szemcsi);
			Msg(playerid, "Felvetted a szemüvegedet");
		}
		else if(egyezik(param[1], "elrak"))
		{
			Szemuveg(playerid);
			Msg(playerid, "Elraktad a szemüvegedet");
		}
		else
			Msg(playerid, "Használat: /szemüveg [ felvesz / elrak ] [szemüveg száma (1-33)]");

		return 1;
	}

	if(egyezik(cmd, "/buntetesem") || egyezik(cmd, "/büntetésem"))
	{
		if(PlayerInfo[playerid][pJailed] == 0)
			return Msg(playerid, "Nem vagy börtönben");

		SendClientMessage(playerid, COLOR_WHITE, "=====[ Büntetésed ]=====");
		SendFormatMessage(playerid, COLOR_WHITE, "%s", PlayerInfo[playerid][pJailOK]);
		SendFormatMessage(playerid, COLOR_WHITE, "Idõ: %dp", floatround(PlayerInfo[playerid][pJailTime] / 60));

		return 1;
	}

	if(egyezik(cmd, "/felcserel") || egyezik(cmd, "/felcserél"))
	{
		if(params < 1)
			return Msg(playerid, "Használata: /felcserél [Ház / Jármû]");

		if(egyezik(param[1], "haz") || egyezik(param[1], "ház"))
		{
			if(params < 2) return Msg(playerid, "Használata: /felcserél Ház [1.(1-et cseréli a 2-vel) / 2.(1-et cseréli a 3-mal) / 3.(2-õt cseréli a 3-mal)]");
			if(egyezik(param[2], "1"))
			{
			    if(VanHaza(playerid) < 2) return Msg(playerid, "Használatához legalább kettõ ház szükséges!");
				new haz = PlayerInfo[playerid][pPhousekey];
				PlayerInfo[playerid][pPhousekey] = PlayerInfo[playerid][pPhousekey2];
				PlayerInfo[playerid][pPhousekey2] = haz;
				Msg(playerid, "A hazak felcserélve - ez csak addig érvényes, amíg ki nem lépsz");
			}
			else if(egyezik(param[2], "2"))
			{
			    if(VanHaza(playerid) != 3) return Msg(playerid, "Használatához legalább három ház szükséges!");
				new haz = PlayerInfo[playerid][pPhousekey];
				PlayerInfo[playerid][pPhousekey] = PlayerInfo[playerid][pPhousekey3];
				PlayerInfo[playerid][pPhousekey3] = haz;
				Msg(playerid, "A házak felcserélve - ez csak addig érvényes, amíg ki nem lépsz");
			}
			else if(egyezik(param[2], "3"))
			{
			    if(VanHaza(playerid) != 3) return Msg(playerid, "Használatához legalább három ház szükséges!");
				new haz = PlayerInfo[playerid][pPhousekey2];
				PlayerInfo[playerid][pPhousekey2] = PlayerInfo[playerid][pPhousekey3];
				PlayerInfo[playerid][pPhousekey3] = haz;
				Msg(playerid, "A házak felcserélve - ez csak addig érvényes, amíg ki nem lépsz");
			}
		}
		else if(egyezik(param[1], "jarmu") || egyezik(param[1], "jármû"))
		{
			if(params < 2) return Msg(playerid, "Használata: /felcserél Jármû [1.(1-et cseréli a 2-vel) / 2.(1-et cseréli a 3-mal) / 3.(2-õt cseréli a 3-mal)]");

			if(egyezik(param[2], "1"))
			{
			    if(PlayerInfo[playerid][pPcarkey] == NINCS || PlayerInfo[playerid][pPcarkey2] == NINCS)
					return Msg(playerid, "Használatához legalább kettõ jármûre van szükséged!");

				new kocsi = PlayerInfo[playerid][pPcarkey];
				PlayerInfo[playerid][pPcarkey] = PlayerInfo[playerid][pPcarkey2];
				PlayerInfo[playerid][pPcarkey2] = kocsi;
				Msg(playerid, "A jármûvek felcserélve - ez csak addig érvényes, amíg ki nem lépsz");
			}
			else if(egyezik(param[2], "2"))
			{
				if(PlayerInfo[playerid][pPcarkey3] == NINCS)
					return Msg(playerid, "Használatához legalább három jármûre van szükséged!");

				new kocsi = PlayerInfo[playerid][pPcarkey];
				PlayerInfo[playerid][pPcarkey] = PlayerInfo[playerid][pPcarkey3];
				PlayerInfo[playerid][pPcarkey3] = kocsi;
				Msg(playerid, "A jármûvek felcserélve - ez csak addig érvényes, amíg ki nem lépsz");
			}
			else if(egyezik(param[2], "3"))
			{
				if(PlayerInfo[playerid][pPcarkey3] == NINCS)
					return Msg(playerid, "Használatához legalább három jármûre van szükséged!");

				new kocsi = PlayerInfo[playerid][pPcarkey2];
				PlayerInfo[playerid][pPcarkey2] = PlayerInfo[playerid][pPcarkey3];
				PlayerInfo[playerid][pPcarkey3] = kocsi;
				Msg(playerid, "A jármûvek felcserélve - ez csak addig érvényes, amíg ki nem lépsz");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/alapkocsi") || egyezik(cmd, "/ak"))
	{
		
		if(!Admin(playerid,1340)) return 1;
		if(params < 1) return Msg(playerid, "Használata: /ak [lerak / töröl / park / szín]");


		if(egyezik(param[1], "lerak"))
		{
			if(params < 5)
			{
				Msg(playerid, "Használata: /ak lerak [munka] [Model neve / száma] [szin1] [szin2]");
				SendClientMessage(playerid, COLOR_GREEN,"|0 bárki | 1 Dedektív |2 Ügyvéd |3 Prostituált|4 Drog Díler");
				SendClientMessage(playerid, COLOR_GREEN,"|5 Autótolvaj | 7 Testõr |8 Fegyverkereskedõ |9 Pilóta");
				SendClientMessage(playerid, COLOR_GREEN,"|10 Úttisztító |11 PIZZAS |12 Buszsofõr |13 Postás |14 Hacker");
				SendClientMessage(playerid, COLOR_GREEN,"|15 Kamion sofõr |16 Farmer |17 Fûnyíró |18 Építész");
				SendClientMessage(playerid, COLOR_GREEN,"|19 Páncélkészítõ |20 Kukás-Kivéve |21 favágó |22 Hullaszállító");
				SendClientMessage(playerid, COLOR_GREEN,"|23 MUNKA_TAXI |24 MUNKA_SWAT |25 LSberlo |26 SFberlo |27 Hajóberlo");
				SendClientMessage(playerid, COLOR_GREEN,"|28 SSS |29 CROSS |30 Pénzszállító |31 Önkéntes |32 Vadász |33 Hitman");
				return 1;
			}
			new model = NINCS;
			new munka = strval(param[2]);
			if(munka < 0 || munka > MAX_MUNKA) return Msg(playerid, "Hibás munka ID");
			if(IsNumeric(param[3]))
				model = strval(param[3]);
			else
				model = GetVehicleModelIDFromName(param[3]);

			if(model < 400 || model > 611)
				return Msg(playerid, "Ilyen jármûtípus nem létezik");

			//new model2 = model - 400;

			new szin[2];
			szin[0] = strval(param[4]);
			szin[1] = strval(param[5]);			
			
			new Float:posx, Float:posy, Float:posz, Float:angle;
			GetPlayerPos(playerid, posx, posy, posz);
			GetPlayerFacingAngle(playerid, angle);
			new vw=GetPlayerVirtualWorld(playerid);
			new interior=GetPlayerInterior(playerid);
			
			
			new id = NINCS;
			for(new k = 0; k < MAX_MUNKAKOCSI; k++)
			{
				if(!MunkaKocsi[munka][k][kVan])
				{
					id = k;
					break;
				}
			}

			if(id == NINCS)
				return Msg(playerid, "Elérte a maxot!");
			
			MunkaKocsi[munka][id][kVan] = true;
			MunkaKocsi[munka][id][kID] = UjKocsi(model, posx, posy, posz, angle,szin[0],szin[1], interior, vw, CAR_TYPE_MK, munka, id);

			MunkaKocsi[munka][id][kModel] = model;
			MunkaKocsi[munka][id][kInt] = interior;
			MunkaKocsi[munka][id][kVW] = vw;

			
			MunkaKocsi[munka][id][kPos][0] = posx;
			MunkaKocsi[munka][id][kPos][1] = posy;
			MunkaKocsi[munka][id][kPos][2] = posz;
			MunkaKocsi[munka][id][kPos][3] = angle;
			
			MunkaKocsi[munka][id][kSzin][0] = szin[0];
			MunkaKocsi[munka][id][kSzin][1] = szin[1];
			
			KmSzamol[MunkaKocsi[munka][id][kID]]=0;
			//KocsiAllapot[MunkaKocsi[munka][id][kID]]=0;
			CarPart[MunkaKocsi[munka][id][kID]][cKerekek] = 0.0;
			CarPart[MunkaKocsi[munka][id][kID]][cMotorolaj] = 0.0;
			MunkaKocsiMentes(munka, id);

			Msg(playerid, "Jármû lerakva");
			
		}
		else if(egyezik(param[1], "töröl"))
		{
			

			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû");

			new id = NINCS;
			new munka;
			for(new k = 0; k < MAX_MUNKAKOCSI; k++)
			{
				for(new kk = 0; kk  <MAX_MUNKA; kk++)
				{
					if(!MunkaKocsi[kk][k][kVan]) continue;

					if(MunkaKocsi[kk][k][kVan] && MunkaKocsi[kk][k][kID] == kocsi)
					{
						munka=kk;
						id = k;
						break;
					}
				}
			}
			if(id == NINCS) return Msg(playerid, "Nem alap kocsi");

			new model2 = MunkaKocsi[munka][id][kModel] - 400;

			DestroyVehicle(MunkaKocsi[munka][id][kID]);
			MunkaKocsi[munka][id][kVan] = false;

			MunkaKocsiMentes(munka, id);
			SendFormatMessage(playerid, COLOR_YELLOW, "Törölted %d munka %s kocsiját.",munka,vehName[model2]);
	

		}
		else if(egyezik(param[1], "park"))
		{
			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû");

			new id = NINCS;
			new munka;
			for(new k = 0; k < MAX_MUNKAKOCSI; k++)
			{
				for(new kk = 0; kk  <MAX_MUNKA; kk++)
				{
					if(!MunkaKocsi[kk][k][kVan]) continue;

					if(MunkaKocsi[kk][k][kVan] && MunkaKocsi[kk][k][kID] == kocsi)
					{
						munka=kk;
						id = k;
						break;
					}
				}
			}
			if(id == NINCS) return Msg(playerid, "Nem alap kocsi");
			
			new Float:x, Float:y, Float:z, Float:a;
			GetVehiclePos(kocsi, x, y, z);
			GetVehicleZAngle(kocsi, a);

			//new panelek, ajto, vilagitas, gumi, Float:elet;
			//GetVehicleDamageStatus(kocsi, panelek, ajto, vilagitas, gumi);
			//GetVehicleHealth(kocsi, elet);

			DestroyVehicle(MunkaKocsi[munka][id][kID]);

			MunkaKocsi[munka][id][kInt] = GetPlayerInterior(playerid);
			MunkaKocsi[munka][id][kVW] = GetPlayerVirtualWorld(playerid);

			MunkaKocsi[munka][id][kID] = UjKocsi(MunkaKocsi[munka][id][kModel], x, y, z, a, MunkaKocsi[munka][id][kSzin][0], MunkaKocsi[munka][id][kSzin][1], MunkaKocsi[munka][id][kInt], MunkaKocsi[munka][id][kVW], CAR_TYPE_MK, munka, id);
			MunkaKocsi[munka][id][kPos][0] = x;
			MunkaKocsi[munka][id][kPos][1] = y;
			MunkaKocsi[munka][id][kPos][2] = z;
			MunkaKocsi[munka][id][kPos][3] = a;

			MunkaKocsiMentes(munka, id);


			Msg(playerid, "Leparkoltad");
		}
		else if(egyezik(param[1], "szín"))
		{
			new szin[2];
			szin[0] = strval(param[2]);
			szin[1] = strval(param[3]);
			new id = NINCS;
			new munka;
			
			if(params < 3)
				return Msg(playerid, "Használata: /ak szín [szín1] [szín2]");

			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 10.0)
				return Msg(playerid, "A közeledben nincs jármû");
			
			if(szin[0] < 0 && szin[0] > 255) return SendClientMessage(playerid, COLOR_YELLOW, "Az 1. szín minimum 0 és max 255 lehet!");
			if(szin[1] < 0 && szin[1] > 255) return SendClientMessage(playerid, COLOR_YELLOW, "A 2. szín minimum 0 és max 255 lehet!");
			
			
			for(new k = 0; k < MAX_MUNKAKOCSI; k++)
			{
				for(new kk = 0; kk  <MAX_MUNKA; kk++)
				{
					if(!MunkaKocsi[kk][k][kVan]) continue;

					if(MunkaKocsi[kk][k][kVan] && MunkaKocsi[kk][k][kID] == kocsi)
					{
						munka=kk;
						id = k;
						break;
					}
				}
			}
			if(id == NINCS) return Msg(playerid, "Nem alap kocsi");
			
			SetVehicleColor(kocsi, szin[0], szin[1]);
			Msg(playerid, "Jármû átfestve");
			
			new Float:x, Float:y, Float:z, Float:a;
			GetVehiclePos(kocsi, x, y, z);
			GetVehicleZAngle(kocsi, a);
			
			DestroyVehicle(MunkaKocsi[munka][id][kID]);

			MunkaKocsi[munka][id][kInt] = GetPlayerInterior(playerid);
			MunkaKocsi[munka][id][kVW] = GetPlayerVirtualWorld(playerid);
			MunkaKocsi[munka][id][kSzin][0] = szin[0];
			MunkaKocsi[munka][id][kSzin][1] = szin[1];
			
			MunkaKocsi[munka][id][kID] = UjKocsi(MunkaKocsi[munka][id][kModel], x, y, z, a, MunkaKocsi[munka][id][kSzin][0], MunkaKocsi[munka][id][kSzin][1], MunkaKocsi[munka][id][kInt], MunkaKocsi[munka][id][kVW], CAR_TYPE_MK, munka, id);
			MunkaKocsi[munka][id][kPos][0] = x;
			MunkaKocsi[munka][id][kPos][1] = y;
			MunkaKocsi[munka][id][kPos][2] = z;
			MunkaKocsi[munka][id][kPos][3] = a;
			MunkaKocsiMentes(munka, id);
		}
	}
	if(egyezik(cmd, "/frakciókocsi") || egyezik(cmd, "/frakciokocsi") || egyezik(cmd, "/fkocsi") || egyezik(cmd, "/fk"))
	{
		new frakcio = PlayerInfo[playerid][pMember];
		if(frakcio == 0 && !Admin(playerid, 1) && !IsScripter(playerid))
			return 1;

		new leader = 1;
		if(PlayerInfo[playerid][pLeader] == 0 || PlayerInfo[playerid][pLeader] != PlayerInfo[playerid][pMember])
			leader = 0;

		if(params < 1)
		{
			if(PlayerInfo[playerid][pAdmin]>1) Msg(playerid, "Használata: /frakciókocsi [frakcióban]");
			if(leader) Msg(playerid, "Használata: /frakciókocsi [elad / vesz / szín / park / rang / lista / helyzet / zár / parkhely / (U)tolsó(H)asználat / oldcar]");
			else Msg(playerid, "Használata: /frakciókocsi [lista / helyzet / zár / (U)tolsó(H)asználat / oldcar]");

			return 1;
		}
		if(egyezik(param[1], "vesz") && leader)
		{
			if(params < 2)
				return Msg(playerid, "Használata: /frakciókocsi vesz [Model neve / száma]");

			new model = NINCS;
			if(IsNumeric(param[2]))
				model = strval(param[2]);
			else
				model = GetVehicleModelIDFromName(param[2]);

			if(model < 400 || model > 611)
				return Msg(playerid, "Ilyen jármûtípus nem létezik");

			new model2 = model - 400;

			if(JarmuAra[model2][jFrakciok][0] == NINCS || !JarmuAra[model2][jVeheto])
				return Msg(playerid, "Ezt a jármûvet senki sem veheti meg");

			if(JarmuAra[model2][jFrakciok][0] != 0)
			{
				new bool:van;
				for(new j = 0; j < MAX_FRAKCIO; j++)
				{
					if(JarmuAra[model2][jFrakciok][j] == frakcio)
					{
						van = true;
						break;
					}
				}

				if(!van)
					return Msg(playerid, "Ezt a jármûvet csak kiválasztott frakciók vehetik meg");
			}

			if(FrakcioInfo[frakcio][fPenz] < JarmuAra[model2][jAra])
				{ SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Az ára %dFt, nektek csak %dFt van", JarmuAra[model2][jAra], FrakcioInfo[frakcio][fPenz]); return 1; }

			if(!IsAt(playerid, IsAt_KereskedoHQ))
				return Msg(playerid, "Nem vagy az autókereskedõnél");

			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				if(!FrakcioKocsi[frakcio][k][fVan])
				{
					id = k;
					break;
				}
			}

			if(id == NINCS)
				return Msg(playerid, "Több jármûvek már nem rendelhettek");

			FrakcioKocsi[frakcio][id][fVan] = true;
			FrakcioKocsi[frakcio][id][fID] = UjKocsi(model, 2123.584, -1136.486, 25.054, 0.0, 0, 0, .type = CAR_TYPE_FK, .uid = frakcio, .uid2 = id);
			FrakcioKocsi[frakcio][id][fModel] = model;
			FrakcioKocsi[frakcio][id][fPos] = Float:{2123.584, -1136.486, 25.054, 0.0};
			FrakcioKocsi[frakcio][id][fSzin] = {0, 0};
			FrakcioKocsi[frakcio][id][fRang] = 0;

			KmSzamol[FrakcioKocsi[frakcio][id][fID]]=0;
			//KocsiAllapot[FrakcioKocsi[frakcio][id][fID]]=0;
			CarPart[FrakcioKocsi[frakcio][id][fID]][cKerekek] = 0.0;
			CarPart[FrakcioKocsi[frakcio][id][fID]][cMotorolaj]= 0.0;
			FrakcioKocsiMentes(frakcio, id);

			FrakcioSzef(frakcio, -JarmuAra[model2][jAra],40);
			
			Msg(playerid, "Sikeresen megvettétek a jármûvet");
			Cselekves(playerid, "vett egy jármûvet");

			new msg[128];
			format(msg, 128, "<< %s vett egy jármûvet: %s, %dFtért >>", ICPlayerName(playerid), vehName[model2], JarmuAra[model2][jAra]);
			foreach(Jatekosok, p)
			{
				if(PlayerInfo[p][pMember] == frakcio)
					SendClientMessage(p, COLOR_YELLOW, msg);
			}
		}
		else if(egyezik(param[1], "utolsóhasználat") || egyezik(param[1], "utolsohasznalat") || egyezik(param[1], "uh"))
		{
		    if(params < 2) return Msg(playerid, "Használata: /frakciókocsi (U)tolsó(H)asználat [JármûID]");
			new kocsiid = strval(param[2]);
			if(!IsVehicleConnected(kocsiid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Érvénytelen JármûID! A jármû nincs spawnolva!");
			if(IsFrakcioKocsi(kocsiid) != PlayerInfo[playerid][pMember] && !SAdmin(playerid, 1)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ez a jármû nem a te frakciódé!");
			if(strlen(UtoljaraHasznalta[kocsiid]) < 1)
			    SendFormatMessage(playerid, COLOR_GREEN, "JármûID: %d | Típus: %s | Legutolsó használó: Nincs adat!",kocsiid, GetVehicleModelName(GetVehicleModel(kocsiid)-400));
			else
				SendFormatMessage(playerid, COLOR_GREEN, "JármûID: %d | Típus: %s | Legutolsó használó: %s",kocsiid, GetVehicleModelName(GetVehicleModel(kocsiid)-400), UtoljaraHasznalta[kocsiid]);
		}
		else if(egyezik(param[1], "oldcar"))
		{
		    if(params < 2) return Msg(playerid, "Használata: /fk oldcar [JármûID]");
			new kocsi = strval(param[2]);
			if(!IsVehicleConnected(kocsi)) return Msg(playerid, "Nincs ilyen jármû");				
			if(IsFrakcioKocsi(kocsi) != PlayerInfo[playerid][pMember] && !SAdmin(playerid, 1)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ez a jármû nem a te frakciódé!");
			if(strlen(KocsiHasznal[kocsi]) < 1)
			    SendFormatMessage(playerid, COLOR_GREEN, "JármûID: %d | Legutolsó használó: Nincs adat!",kocsi);
			else
				SendFormatMessage(playerid, COLOR_GREEN, "JármûID: %d | Legutolsó használó: %s!", kocsi, KocsiHasznal[kocsi]);
		}
		else if(egyezik(param[1], "aelad"))
		{
			if(!Admin(playerid, 1337) && IsScripter(playerid)) return Msg(playerid,"Csak FõAdmin vagy Scripter!");

			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû");

			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				for(new kk = 0; kk  <MAX_FRAKCIO; kk++)
				{
					if(!FrakcioKocsi[kk][k][fVan]) continue;

					if(FrakcioKocsi[kk][k][fVan] && FrakcioKocsi[kk][k][fID] == kocsi)
					{
						frakcio=kk;
						id = k;
						break;
					}
				}
			}
			if(id == NINCS) return Msg(playerid, "Nem frakció kocsi");

			new model2 = FrakcioKocsi[frakcio][id][fModel] - 400;

			DestroyVehicle(FrakcioKocsi[frakcio][id][fID]);
			FrakcioKocsi[frakcio][id][fVan] = false;

			FrakcioKocsiMentes(frakcio, id);
			SendFormatMessage(playerid, COLOR_YELLOW, "Eladtad a %s frakció %s kocsiját.",Szervezetneve[frakcio-1][1],vehName[model2]);
			new msg[128];
			format(msg, 128, "<< Admin %s eladta az egyik jármûveteket: %s. >>", PlayerName(playerid), vehName[model2]);
			foreach(Jatekosok, p)
			{
				if(PlayerInfo[p][pMember] == frakcio)
					SendClientMessage(p, COLOR_YELLOW, msg);
			}
		}
		else if(egyezik(param[1], "frakcióban"))
		{
			if(PlayerInfo[playerid][pAdmin]<1) return Msg(playerid,"Csak admin");
			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû");

			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				for(new kk = 0; kk  <MAX_FRAKCIO; kk++)
				{
					if(!FrakcioKocsi[kk][k][fVan]) continue;

					if(FrakcioKocsi[kk][k][fVan] && FrakcioKocsi[kk][k][fID] == kocsi)
					{
						frakcio=kk;
						id = k;
						break;
					}
				}
			}
			if(id == NINCS) return Msg(playerid, "Nem frakció kocsi");
			SendFormatMessage(playerid, COLOR_YELLOW, "Ez %s frakcióé. ID: %d",Szervezetneve[frakcio-1][1],frakcio);

		}
		else if(egyezik(param[1], "lista"))
		{
			SendClientMessage(playerid, COLOR_YELLOW, "=[ Frakció jármûveitek ]=");
			new db;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				if(!FrakcioKocsi[frakcio][k][fVan]) continue;

				if(!FrakcioKocsi[frakcio][k][fRang])
					SendFormatMessage(playerid, COLOR_WHITE, "[%d.] %s - Rendszám: %d", db+1, GetVehicleModelName( FrakcioKocsi[frakcio][k][fModel] ), FrakcioKocsi[frakcio][k][fID]);
				else
					SendFormatMessage(playerid, COLOR_WHITE, "[%d.] %s - Rendszám: %d - Rang: %d", db+1, GetVehicleModelName( FrakcioKocsi[frakcio][k][fModel] ), FrakcioKocsi[frakcio][k][fID], FrakcioKocsi[frakcio][k][fRang]);

				db++;
			}
			if(db >= MAX_FRAKCIOKOCSI)
				SendFormatMessage(playerid, COLOR_YELLOW, "%ddb jármûvetek van", MAX_FRAKCIOKOCSI);
			else if(db > 0)
				SendFormatMessage(playerid, COLOR_YELLOW, "=[ %ddb jármûvetek van, még %ddb rendelhetõ ]=", db, (MAX_FRAKCIOKOCSI - db));
			else
				SendFormatMessage(playerid, COLOR_YELLOW, "=[ Nincs egy jármûvetek sem, de %ddb rendelhetõ ]=", MAX_FRAKCIOKOCSI);
		}
		else if(egyezik(param[1], "helyzet"))
		{
			if(PlayerInfo[playerid][pLeader] != frakcio)
				return Msg(playerid, "Csak a leader használhatja");

			if(params < 2)
				return Msg(playerid, "Használata: /frakciókocsi helyzet [ rendszám ]");

			new rendszam = strval(param[2]);
			if(rendszam < 1 || rendszam >= MAX_VEHICLES || !IsVehicleConnected(rendszam))
				return Msg(playerid, "Nincs ilyen jármû");

			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				if(!FrakcioKocsi[frakcio][k][fVan]) continue;

				if(FrakcioKocsi[frakcio][k][fID] == rendszam)
				{
					id = k;
					break;
				}
			}
			if(id == NINCS)
				return Msg(playerid, "Ez nem a ti jármûvetek");

			new Float:x, Float:y, Float:z;
			GetVehiclePos(rendszam, x, y, z);
			SetPlayerCheckpoint(playerid, x, y, z, 5);

			Msg(playerid, "Jelezve a radaron");
		}
		else if(egyezik(param[1], "elad") && leader)
		{
			if(!IsAt(playerid, IsAt_KereskedoHQ))
				return Msg(playerid, "Nem vagy az autókereskedõnél");

			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû");

			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				if(FrakcioKocsi[frakcio][k][fVan] && FrakcioKocsi[frakcio][k][fID] == kocsi)
				{
					id = k;
					break;
				}
			}
			if(id == NINCS)
				return Msg(playerid, "Ez nem a ti jármûvetek");

			new model2 = FrakcioKocsi[frakcio][id][fModel] - 400;

			KmSzamol[FrakcioKocsi[frakcio][id][fID]]=0;
			DestroyVehicle(FrakcioKocsi[frakcio][id][fID]);
			FrakcioKocsi[frakcio][id][fVan] = false;

			FrakcioKocsiMentes(frakcio, id);

			new penz = floatround(float(JarmuAra[model2][jAra]) * 0.25);
			FrakcioSzef(frakcio, penz,41);

			SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Eladtad, így kaptatok %dFtot", penz);
			Cselekves(playerid, "eladott egy jármûvet");

			new msg[128];
			format(msg, 128, "<< %s eladott egy jármûvet: %s, %dFtért >>", ICPlayerName(playerid), vehName[model2], penz);
			foreach(Jatekosok, p)
			{
				if(PlayerInfo[p][pMember] == frakcio)
					SendClientMessage(p, COLOR_YELLOW, msg);
			}
		}
		else if(egyezik(param[1],"parkhely"))
		{
			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû");

			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				if(FrakcioKocsi[frakcio][k][fVan] && FrakcioKocsi[frakcio][k][fID] == kocsi)
				{
					id = k;
					break;
				}
			}
			if(id == NINCS)
				return Msg(playerid, "Ez nem a ti jármûvetek");
		
			if(FrakcioKocsi[frakcio][id][fInt] > 0 || FrakcioKocsi[frakcio][id][fVW] > 0) return SendFormatMessage(playerid, COLOR_YELLOW,"A jármû valamilyen garázsban van.((VW %d INT %d))",FrakcioKocsi[frakcio][id][fVW],FrakcioKocsi[frakcio][id][fInt]);
			SetPlayerCheckpoint(playerid,FrakcioKocsi[frakcio][id][fPos][0],FrakcioKocsi[frakcio][id][fPos][1],FrakcioKocsi[frakcio][id][fPos][2],6);
		
		}
		else if(egyezik(param[1], "park") && leader)
		{
			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû");

			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				if(FrakcioKocsi[frakcio][k][fVan] && FrakcioKocsi[frakcio][k][fID] == kocsi)
				{
					id = k;
					break;
				}
			}
			if(id == NINCS)
				return Msg(playerid, "Ez nem a ti jármûvetek");

			new Float:x, Float:y, Float:z, Float:a;
			GetVehiclePos(kocsi, x, y, z);
			GetVehicleZAngle(kocsi, a);

			new panelek, ajto, vilagitas, gumi, Float:elet;
			GetVehicleDamageStatus(kocsi, panelek, ajto, vilagitas, gumi);
			GetVehicleHealth(kocsi, elet);

			DestroyVehicle(FrakcioKocsi[frakcio][id][fID]);

			FrakcioKocsi[frakcio][id][fInt] = GetPlayerInterior(playerid);
			FrakcioKocsi[frakcio][id][fVW] = GetPlayerVirtualWorld(playerid);

			FrakcioKocsi[frakcio][id][fID] = UjKocsi(FrakcioKocsi[frakcio][id][fModel], x, y, z, a, FrakcioKocsi[frakcio][id][fSzin][0], FrakcioKocsi[frakcio][id][fSzin][1], FrakcioKocsi[frakcio][id][fInt], FrakcioKocsi[frakcio][id][fVW], CAR_TYPE_FK, frakcio, id);
			FrakcioKocsi[frakcio][id][fPos][0] = x;
			FrakcioKocsi[frakcio][id][fPos][1] = y;
			FrakcioKocsi[frakcio][id][fPos][2] = z;
			FrakcioKocsi[frakcio][id][fPos][3] = a;

			FrakcioKocsiMentes(frakcio, id);
			ChangeVehiclePaintjob(kocsi, FrakcioKocsi[frakcio][id][fMatrica]);
			UpdateVehicleDamageStatus(FrakcioKocsi[frakcio][id][fID], panelek, ajto, vilagitas, gumi);
			SetVehicleHealth(FrakcioKocsi[frakcio][id][fID], elet);

			Msg(playerid, "Leparkoltad");
		}
		else if(egyezik(param[1], "tuning") && leader)
		{
			if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "A jármû mellett kell állnod");
			if(params < 2) return Msg(playerid, "/fk tuning [Alien / XFLOW / Kerék / Matrica / Hidraulika / Levesz]");
			if(!IsAt(playerid, IsAt_Szerelohely)) return Msg(playerid, "Nem vagy tuning mûhelyben.");

			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû");

			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				if(FrakcioKocsi[frakcio][k][fVan] && FrakcioKocsi[frakcio][k][fID] == kocsi)
				{
					id = k;
					break;
				}
			}
			if(id == NINCS)
				return Msg(playerid, "Ez nem a ti jármûvetek");
				
			if(frakcio == 1 || frakcio == 2 || frakcio == 4 || frakcio == 7 || frakcio == 9 || frakcio == 12 || frakcio == 14 || frakcio == 16 || frakcio == 19 || frakcio == 20) return Msg(playerid,"Nektem nem!");

			if(egyezik(param[2], "levesz"))
			{
				if(params < 3) return Msg(playerid, "/fk tuning levesz [Kerék / Kasztni / Matrica / Hidraulika]");

				if(egyezik(param[3], "Kerék") || egyezik(param[3], "Kerek"))
				{
					FrakcioKocsi[frakcio][id][fKerek] = 0;
					Msg(playerid, "Kerék leszedve.");
					FrakcioKocsiMentes(frakcio, id);
				}
				if(egyezik(param[3], "Kasztni"))
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 0;
					Msg(playerid, "Kasztni leszedve.");
					FrakcioKocsiMentes(frakcio, id);
				}
				if(egyezik(param[3], "Matrica"))
				{
					FrakcioKocsi[frakcio][id][fMatrica] = 3;
					Msg(playerid, "Matrica leszedve.");
					FrakcioKocsiMentes(frakcio, id);
				}
				if(egyezik(param[3], "hidraulika"))
				{
					if(FrakcioKocsi[frakcio][id][fHidraulika] == 0) return Msg(playerid,"Nincs ezen a kocsin hidraulika!");
					FrakcioKocsi[frakcio][id][fHidraulika] = 0;
					Msg(playerid, "Hidraulika kiszedve");
					FrakcioKocsiMentes(frakcio, id);
				}
			}
			if(egyezik(param[2], "hidraulika"))
			{
				if(FrakcioKocsi[frakcio][id][fHidraulika] == 1) return Msg(playerid,"Ezen a kocsin van hidraulika!");
				if(FrakcioInfo[frakcio][fPenz] < 2000000) { Msg(playerid, "Nincs elég pénz a széfben 2 Millió Ft kell!"); return 1; }
				FrakcioKocsi[frakcio][id][fHidraulika] = 1;
				FrakcioKocsiMentes(frakcio, id);
				AddVehicleComponent(kocsi, 1087);
				BizPenz(BIZ_TUNING, 2000000);
				Msg(playerid,"Felrakva!");
			}
			if(egyezik(param[2], "matrica"))
			{
				if(params < 3)
				{
					Msg(playerid, "/fk tuning matrica [0-2]");
					Msg(playerid, "Figyelmeztetés: Csak lowrider és tuning kocsikra, ha másra rakod a pénzt nem kapod vissza!");
					return 1;
				}
				new matrica = strval(param[3]);
				if(matrica < 0 || matrica > 2) return Msg(playerid, "0-2 legyen a matrica száma.");
				if(FrakcioInfo[frakcio][fPenz] < 15000000) { Msg(playerid, "Nincs elég pénz a széfben 15 Millió Ft kell!"); return 1; }

				ChangeVehiclePaintjob(kocsi, (matrica));
				FrakcioKocsi[frakcio][id][fMatrica] = matrica;
				FrakcioKocsiMentes(frakcio, id);
				FrakcioSzef(frakcio, -15000000,42);
				BizPenz(BIZ_TUNING, 15000000);
				Msg(playerid, "Matrica felrakva.");
			}
			if(egyezik(param[2], "Alien"))
			{
				if(FrakcioInfo[frakcio][fPenz] < 5000000) { Msg(playerid, "Nincs elég pénz a széfben 5 Millió Ft kell!"); return 1; }
				if(FrakcioKocsi[frakcio][id][fModel] == 560)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 1;
					Msg(playerid, "Alien Tuning felszerelve.");
					BizPenz(BIZ_TUNING, 5000000);
					FrakcioSzef(frakcio, -5000000,42);
					AddVehicleComponent(kocsi, 1026);
					AddVehicleComponent(kocsi, 1027);
					AddVehicleComponent(kocsi, 1032);
					AddVehicleComponent(kocsi, 1169);
					AddVehicleComponent(kocsi, 1138);
					AddVehicleComponent(kocsi, 1141);
					AddVehicleComponent(kocsi, 1028);
					FrakcioKocsiMentes(frakcio, id);
				}
				if(FrakcioKocsi[frakcio][id][fModel] == 562)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 1;
					Msg(playerid, "Alien Tuning felszerelve.");
					BizPenz(BIZ_TUNING, 5000000);
					FrakcioSzef(frakcio, -5000000,42);
					AddVehicleComponent(kocsi, 1034);
					AddVehicleComponent(kocsi, 1038);
					AddVehicleComponent(kocsi,1036);
					AddVehicleComponent(kocsi, 1040);
					AddVehicleComponent(kocsi, 1147);
					AddVehicleComponent(kocsi, 1149);
					AddVehicleComponent(kocsi, 1171);
					FrakcioKocsiMentes(frakcio, id);
				}
				if(FrakcioKocsi[frakcio][id][fModel] == 559)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 1;
					Msg(playerid, "Alien Tuning felszerelve.");
					FrakcioSzef(frakcio, -5000000,42);
					BizPenz(BIZ_TUNING, 5000000);
					AddVehicleComponent(kocsi, 1065);
					AddVehicleComponent(kocsi, 1067);
					AddVehicleComponent(kocsi, 1069);
					AddVehicleComponent(kocsi, 1071);
					AddVehicleComponent(kocsi, 1159);
					AddVehicleComponent(kocsi, 1160);
					AddVehicleComponent(kocsi, 1162);
					FrakcioKocsiMentes(frakcio, id);
				}
				if(FrakcioKocsi[frakcio][id][fModel] == 558)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 1;
					Msg(playerid, "Alien Tuning felszerelve.");
					BizPenz(BIZ_TUNING, 5000000);
					
					FrakcioSzef(frakcio, -5000000,42);
					AddVehicleComponent(kocsi, 1088);
					AddVehicleComponent(kocsi, 1090);
					AddVehicleComponent(kocsi, 1092);
					AddVehicleComponent(kocsi, 1094);
					AddVehicleComponent(kocsi, 1164);
					AddVehicleComponent(kocsi, 1166);
					AddVehicleComponent(kocsi, 1168);
					FrakcioKocsiMentes(frakcio, id);
				}
				if(FrakcioKocsi[frakcio][id][fModel] == 561)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 1;
					Msg(playerid, "Alien Tuning felszerelve.");
					BizPenz(BIZ_TUNING, 5000000);
					FrakcioSzef(frakcio, -5000000,42);
					AddVehicleComponent(kocsi, 1055);
					AddVehicleComponent(kocsi, 1056);
					AddVehicleComponent(kocsi, 1058);
					AddVehicleComponent(kocsi, 1062);
					AddVehicleComponent(kocsi, 1064);
					AddVehicleComponent(kocsi, 1154);
					AddVehicleComponent(kocsi, 1155);
					FrakcioKocsiMentes(frakcio, id);
				}
				if(FrakcioKocsi[frakcio][id][fModel] == 565)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 1;
					Msg(playerid, "Alien Tuning felszerelve.");
					BizPenz(BIZ_TUNING, 5000000);
					FrakcioSzef(frakcio, -5000000,42);
					AddVehicleComponent(kocsi, 1046);
					AddVehicleComponent(kocsi, 1047);
					AddVehicleComponent(kocsi, 1049);
					AddVehicleComponent(kocsi, 1051);
					AddVehicleComponent(kocsi, 1054);
					AddVehicleComponent(kocsi, 1150);
					AddVehicleComponent(kocsi, 1153);
					FrakcioKocsiMentes(frakcio, id);
				}
			}
			if(egyezik(param[2], "Xflow"))
			{
				if(FrakcioInfo[frakcio][fPenz] < 5000000) { Msg(playerid, "Nincs elég pénz a széfben 5 Millió Ft kell!"); return 1; }
				if(FrakcioKocsi[frakcio][id][fModel] == 560)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 2;
					Msg(playerid, "Xflow Tuning felszerelve.");
					BizPenz(BIZ_TUNING, 5000000);
					FrakcioSzef(frakcio, -5000000,42);
					AddVehicleComponent(kocsi, 1029);
					AddVehicleComponent(kocsi, 1030);
					AddVehicleComponent(kocsi, 1031);
					AddVehicleComponent(kocsi, 1133);
					AddVehicleComponent(kocsi, 1139);
					AddVehicleComponent(kocsi, 1140);
					AddVehicleComponent(kocsi, 1170);
					FrakcioKocsiMentes(frakcio, id);
				}
				if(FrakcioKocsi[frakcio][id][fModel] == 562)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 2;
					Msg(playerid, "Xflow Tuning felszerelve.");
					BizPenz(BIZ_TUNING, 5000000);
					FrakcioSzef(frakcio, -5000000,42);
					AddVehicleComponent(kocsi, 1035);
					AddVehicleComponent(kocsi, 1037);
					AddVehicleComponent(kocsi, 1039);
					AddVehicleComponent(kocsi, 1041);
					AddVehicleComponent(kocsi, 1146);
					AddVehicleComponent(kocsi, 1148);
					AddVehicleComponent(kocsi, 1172);
					FrakcioKocsiMentes(frakcio, id);
				}
				if(FrakcioKocsi[frakcio][id][fModel] == 559)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 2;
					Msg(playerid, "Xflow Tuning felszerelve.");
					BizPenz(BIZ_TUNING, 5000000);
					FrakcioSzef(frakcio, -5000000,42);
					AddVehicleComponent(kocsi, 1066);
					AddVehicleComponent(kocsi, 1068);
					AddVehicleComponent(kocsi, 1070);
					AddVehicleComponent(kocsi, 1072);
					AddVehicleComponent(kocsi, 1158);
					AddVehicleComponent(kocsi, 1161);
					AddVehicleComponent(kocsi, 1173);
					FrakcioKocsiMentes(frakcio, id);
				}
				if(FrakcioKocsi[frakcio][id][fModel] == 558)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 2;
					Msg(playerid, "Xflow Tuning felszerelve.");
					BizPenz(BIZ_TUNING, 5000000);
					FrakcioSzef(frakcio, -5000000,42);
					AddVehicleComponent(kocsi, 1089);
					AddVehicleComponent(kocsi, 1091);
					AddVehicleComponent(kocsi, 1093);
					AddVehicleComponent(kocsi, 1095);
					AddVehicleComponent(kocsi, 1163);
					AddVehicleComponent(kocsi, 1165);
					AddVehicleComponent(kocsi, 1167);
					FrakcioKocsiMentes(frakcio, id);
				}
				if(FrakcioKocsi[frakcio][id][fModel] == 561)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 2;
					Msg(playerid, "Xflow Tuning felszerelve.");
					BizPenz(BIZ_TUNING, 5000000);
					FrakcioSzef(frakcio, -5000000,42);
					AddVehicleComponent(kocsi, 1057);
					AddVehicleComponent(kocsi, 1059);
					AddVehicleComponent(kocsi, 1050);
					AddVehicleComponent(kocsi, 1061);
					AddVehicleComponent(kocsi, 1063);
					AddVehicleComponent(kocsi, 1156);
					AddVehicleComponent(kocsi, 1157);
					FrakcioKocsiMentes(frakcio, id);
				}
				if(FrakcioKocsi[frakcio][id][fModel] == 565)
				{
					FrakcioKocsi[frakcio][id][fKasztni] = 2;
					Msg(playerid, "Xflow Tuning felszerelve.");
					BizPenz(BIZ_TUNING, 5000000);
					FrakcioSzef(frakcio, -5000000,42);
					AddVehicleComponent(kocsi, 1045);
					AddVehicleComponent(kocsi, 1048);
					AddVehicleComponent(kocsi, 1050);
					AddVehicleComponent(kocsi, 1052);
					AddVehicleComponent(kocsi, 1053);
					AddVehicleComponent(kocsi, 1151);
					AddVehicleComponent(kocsi, 1152);
					FrakcioKocsiMentes(frakcio, id);
				}
			}
			if(egyezik(param[2], "kerék") || egyezik(param[2], "kerek"))
			{
				if(params < 3) return Msg(playerid, "/fk tuning kerék [1-13]");
				new kerek = strval(param[3]);
				if(kerek < 1 || kerek > 13) return Msg(playerid, "Kerék csak 1-13 lehet.");
				if(FrakcioInfo[frakcio][fPenz] < 50000) { Msg(playerid, "Nincs elég pénz a széfben 50 000 Ft kell!"); return 1; }
				BizPenz(BIZ_TUNING, 50000);
				FrakcioSzef(frakcio, -50000,43);
				new k = kerek+1072;
				FrakcioKocsi[frakcio][id][fKerek] = k;
				AddVehicleComponent(kocsi, kerek);
				FrakcioKocsiMentes(frakcio, id);
				Msg(playerid, "Kerék felszerelve(Resizni kell a kocsit hogy rajta legyen).");
			}
		}
		else if(egyezik(param[1], "rang") && leader)
		{
			if(params < 2)
				return Msg(playerid, "Használat: /frakciókocsi rang [ minimum rang ]");

			new rang = strval(param[2]);
			if(rang < 0 || rang > OsszRang[ leader ])
				return SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Minimum 0, maximum %d!", OsszRang[ leader ]);

			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû");

			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				if(FrakcioKocsi[frakcio][k][fVan] && FrakcioKocsi[frakcio][k][fID] == kocsi)
				{
					id = k;
					break;
				}
			}
			if(id == NINCS)
				return Msg(playerid, "Ez nem a ti jármûvetek");

			FrakcioKocsi[frakcio][id][fRang] = rang;

			FrakcioKocsiMentes(frakcio, id);

			Msg(playerid, "Rang átírva");
		}
		else if((egyezik(param[1], "szín") || egyezik(param[1], "szin")) && leader)
		{
			if(!IsAt(playerid, IsAt_Festo)) return Msg(playerid, "Nem vagy egy festõnél sem! (Pay 'n' Spray)");

			if(params < 3)
				return Msg(playerid, "/frakciókocsi szín [szín 1] [szín 2]");

			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû");

			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				if(FrakcioKocsi[frakcio][k][fVan] && FrakcioKocsi[frakcio][k][fID] == kocsi)
				{
					id = k;
					break;
				}
			}
			if(id == NINCS)
				return Msg(playerid, "Ez nem a ti jármûvetek");

			new model2 = FrakcioKocsi[frakcio][id][fModel] - 400;

			new szin1, szin2;
			szin1 = strval(param[2]);
			szin2 = strval(param[3]);

			if(szin1 < 0 || szin1 > 255 || szin2 < 0 || szin2 > 255)
				return Msg(playerid, "A színnek 0 és 255 között kell lennie");

			if(FrakcioInfo[frakcio][fPenz] < 150000)
				{ SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Az ára 150,000Ft, nektek csak %dFt van", FrakcioInfo[frakcio][fPenz]); return 1; }
			FrakcioSzef(frakcio, -150000,43);
			BizPenz(BIZ_FIXCAR, 100000);

			FrakcioKocsi[frakcio][id][fSzin][0] = szin1;
			FrakcioKocsi[frakcio][id][fSzin][1] = szin2;

			SetVehicleColor(kocsi, szin1, szin2);

			FrakcioKocsiMentes(frakcio, id);

			Msg(playerid, "Lefestetted");
			Cselekves(playerid, "lefestett egy jármûvet");

			new msg[128];
			format(msg, 128, "<< %s átfestette az egyik jármûvet: %s (%d), színei: %d, %d >>", ICPlayerName(playerid), vehName[ model2 ], kocsi, szin1, szin2);
			foreach(Jatekosok, p)
			{
				if(PlayerInfo[p][pMember] == frakcio)
					SendClientMessage(p, COLOR_YELLOW, msg);
			}
		}
		else if(egyezik(param[1], "zar") || egyezik(param[1], "zár") || egyezik(param[1], "lock"))
		{
			new kocsi;
			kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû");

			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				if(FrakcioKocsi[frakcio][k][fVan] && FrakcioKocsi[frakcio][k][fID] == kocsi)
				{
					id = k;
					break;
				}
			}
			if(id == NINCS)
				return Msg(playerid, "Ez nem a ti jármûvetek");
				
			if(PlayerInfo[playerid][pRank] < FrakcioKocsi[frakcio][id][fRang]) return Msg(playerid, "Ezt a kocsit nem nyithatod ki!");

			SetVehicleIndex(playerid, kocsi, true, true, true);
			VehicleInfo[kocsi][Kozos] = 1;
			if(!Locked(kocsi))
			{
				LockCar(kocsi);
				SendFormatMessage(playerid, COLOR_WHITE, "Kocsi bezárva! [Id: %d]", kocsi);
				Cselekves(playerid, "bezárta a jármûvét.",0);
			}
			else
			{
				UnLockCar(kocsi);
				SendFormatMessage(playerid, COLOR_WHITE, "Kocsi nyitva! [Id: %d]", kocsi);
				Cselekves(playerid, "kinyitotta a jármûvét.",0);
			}
			new Float:pos[3];
			GetPlayerPos(playerid, ArrExt(pos));
			foreach(Jatekosok, p)
			{
				if(PlayerToPoint(10, p, ArrExt(pos))) 
					PlayerPlaySound(p, 1145, 0.0, 0.0, 0.0);
			}
			SetTimerEx("Indexvege", 500, false, "dd", kocsi, playerid);
		}
		return 1;
	}

	if(egyezik(cmd, "/lowryder"))
	{
		if(!IsScripter(playerid)) return 1;
		
		if(params < 1) return Msg(playerid, "/lowryder [töröl/felrak]");
		
		new kocsi  = GetPlayerVehicleID(playerid);
		
		if(egyezik(param[1],"töröl"))
		{
			for(new x = 1000; x < 1194; x++)
			RemoveVehicleComponent(kocsi, x);
			
		
		}
		if(egyezik(param[1],"felrak"))
		{
		
			if(params < 2) return Msg(playerid,"/lowryder felrak component");
			new component = strval(param[2]);
			
		
			AddVehicleComponent(kocsi, component);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Component %d felrakva!", component);
		}
		if(egyezik(param[1],"taxi"))
		{
		
			AddVehicleComponent(kocsi, 1023);
			AddVehicleComponent(kocsi, 1005);
		
		}
		
		return 1;
	}
	if(egyezik(cmd, "/fbi"))
	{
		
		if(!LMT(playerid, FRAKCIO_FBI)) return Msg(playerid, "Nem használhatod ezt a parancsot!");
		if(params < 1) return Msg(playerid, "Használat: /fbi [Öltöny / Páncél / HRT]");
		/*if(egyezik(param[1],"felszereles") || egyezik(param[1],"felszerelés"))
		{
			if(OnDuty[playerid] == 0)
			{
				if(!PlayerToPoint(10,playerid,1776.9928,-1305.2573,13.6280) && !PlayerToPoint(10, playerid, 254.5128,76.6169,1003.6406) && !PlayerToPoint(10, playerid, 765.4164,-1361.2086,13.6391) && !PlayerToPoint(10, playerid, 279.9878,1855.0756,8.7759) && !PlayerToPoint(10, playerid, 226.2606,122.4216,999.0523)) return Msg(playerid, "Nem vagy az FBI bázison!");
				Cselekves(playerid, "átöltözött a munkaruhájába!");
				
				SetPlayerArmour(playerid, 100);
				Munkaruha(playerid, 1);
				OnDuty[playerid] = 1;
				if((PlayerInfo[playerid][pKotszer] + 10) < MAXKOTSZER) PlayerInfo[playerid][pKotszer] += 10;
			}
			else
			{
				if(!PlayerToPoint(10,playerid,1776.9928,-1305.2573,13.6280) && !PlayerToPoint(10, playerid, 254.5128,76.6169,1003.6406) && !PlayerToPoint(10, playerid, 765.4164,-1361.2086,13.6391) && !PlayerToPoint(10, playerid, 279.9878,1855.0756,8.7759) && !PlayerToPoint(10, playerid, 226.2606,122.4216,999.0523)) return Msg(playerid, "Nem vagy az FBI bázison!");
				
				SetPlayerArmour(playerid, 0);
				//ResetWeapon(playerid);
				WeaponResetAll(playerid);
				OnDuty[playerid] = 0;
				Cselekves(playerid, "visszaöltözött!");
				Munkaruha(playerid, 0);
			}	
		}*/
		if(egyezik(param[1],"hrt"))
		{
			if(!PlayerToPoint(10,playerid,1776.9928,-1305.2573,13.6280) && !PlayerToPoint(10, playerid, 254.5128,76.6169,1003.6406) && !PlayerToPoint(10, playerid, 765.4164,-1361.2086,13.6391) && !PlayerToPoint(10, playerid, 279.9878,1855.0756,8.7759) && !PlayerToPoint(10, playerid, 226.2606,122.4216,999.0523)) return Msg(playerid, "Nem vagy az FBI bázison!");
			SetPlayerSkin(playerid, 18);
			
			WeaponResetAll(playerid);
			
			if(FrakcioInfo[FRAKCIO_FBI][fDeagle][1] > 30 && FrakcioInfo[FRAKCIO_FBI][fDeagle][0] > 0)
			{
				WeaponGiveWeapon(playerid, WEAPON_DEAGLE, 30);
				FrakcioInfo[FRAKCIO_FBI][fDeagle][0]--;
				FrakcioInfo[FRAKCIO_FBI][fDeagle][1] -=30;
			}
			else Msg(playerid, "Nincs elég deagle raktáron!");
					
			if(FrakcioInfo[FRAKCIO_FBI][fMp5][1] > 150 && FrakcioInfo[FRAKCIO_FBI][fMp5][0] > 0)	
			{
				WeaponGiveWeapon(playerid, WEAPON_MP5, 200);
				FrakcioInfo[FRAKCIO_FBI][fMp5][0]--;
				FrakcioInfo[FRAKCIO_FBI][fMp5][1] -=200;
			}
			else Msg(playerid, "Nincs elég mp5 raktáron!");
			
			if(FrakcioInfo[FRAKCIO_FBI][fM4][1] > 250 && FrakcioInfo[FRAKCIO_FBI][fM4][0] > 0)
			{
				WeaponGiveWeapon(playerid, WEAPON_M4, 250);
				FrakcioInfo[FRAKCIO_FBI][fM4][0]--;
				FrakcioInfo[FRAKCIO_FBI][fM4][1] -=250;
			}
			else Msg(playerid, "Nincs elég m4 raktáron!");
			
			if(FrakcioInfo[FRAKCIO_FBI][fSniper][1] > 30 && FrakcioInfo[FRAKCIO_FBI][fSniper][0] > 0)
			{
				WeaponGiveWeapon(playerid, WEAPON_SNIPER, 30);
				FrakcioInfo[FRAKCIO_FBI][fSniper][0]--;
				FrakcioInfo[FRAKCIO_FBI][fSniper][1] -=30;
			}
			else Msg(playerid, "Nincs elég sniper raktáron!");
			
			if(FrakcioInfo[FRAKCIO_FBI][fCombat][1] > 60 && FrakcioInfo[FRAKCIO_FBI][fCombat][0] > 0)
			{
				WeaponGiveWeapon(playerid, WEAPON_COMBAT, 60);
				FrakcioInfo[FRAKCIO_FBI][fCombat][0]--;
				FrakcioInfo[FRAKCIO_FBI][fCombat][1] -=60;
			}
			else Msg(playerid, "Nincs elég combat raktáron!");
			
			WeaponGiveWeapon(playerid, WEAPON_KNIFE);
			WeaponGiveWeapon(playerid, WEAPON_PARACHUTE);
			
			Cselekves(playerid, "felvette a HRT felszerelést.");
			return 1;
		}
		else if(egyezik(param[1], "páncél") || egyezik(param[1], "pancel"))
		{
			if(!PlayerToPoint(10,playerid,1776.9928,-1305.2573,13.6280) && !PlayerToPoint(10, playerid, 254.5128,76.6169,1003.6406) && !PlayerToPoint(10, playerid, 765.4164,-1361.2086,13.6391) && !PlayerToPoint(10, playerid, 279.9878,1855.0756,8.7759) && !PlayerToPoint(10, playerid, 226.2606,122.4216,999.0523)) return Msg(playerid, "Nem vagy az FBI bázison!");
			if(OnDuty[playerid] == 0) return Msg(playerid, "Nem vagy szolgálatban!");
			SetPlayerArmour(playerid, 100);
			Cselekves(playerid, "felvett egy új golyóálló mellényt a páncélszekrénybõl.");
			return 1;
		}
		else if(egyezik(param[1],"öltöny") || egyezik(param[1], "oltony"))
		{
			if(!PlayerToPoint(10,playerid,1776.9928,-1305.2573,13.6280) && !PlayerToPoint(10, playerid, 254.5128,76.6169,1003.6406) && !PlayerToPoint(10, playerid, 765.4164,-1361.2086,13.6391) && !PlayerToPoint(10, playerid, 279.9878,1855.0756,8.7759) && !PlayerToPoint(10, playerid, 226.2606,122.4216,999.0523)) return Msg(playerid, "Nem vagy az FBI bázison!");
			SetPlayerSkin(playerid, 166);
			Cselekves(playerid, "felvette az öltönyt.");
			return 1;
		}
		// Ideiglenesen kivéve -----------------------------------------------------
		/*else if(egyezik(param[1], "beépülés") || egyezik(param[1], "beepules"))
		{
			if(!MunkaLeader(playerid, FRAKCIO_FBI)) return Msg(playerid, "Ez a parancs csak leaderek számára elérhetõ!");
			if(!FBIBeepules)
			{
				Msg(playerid, "Engedélyezted mindenki számára a beépülést.");
				FBIBeepules = true;
			}
			else
			{
				Msg(playerid, "Betiltottad azok számára a beépülést, akiknek nincs rangjuk hozzá.");
				FBIBeepules = false;
			}
			return 1;
		}
		else if(egyezik(param[1], "álnév") || egyezik(param[1], "alnev"))
		{
			if(!MunkaLeader(playerid, FRAKCIO_FBI)) return Msg(playerid, "Ez a parancs csak leaderek számára elérhetõ!");
			if(!FBIAlnev)
			{
				Msg(playerid, "Engedélyezted mindenki számára az álnevet.");
				FBIAlnev = true;
			}
			else
			{
				Msg(playerid, "Betiltottad azok számára az álnevet, akiknek nincs rangjuk hozzá.");
				FBIAlnev = false;
			}
			return 1;
		}*/

	}
	if(egyezik(cmd, "/cia"))
	{
		
		if(!LMT(playerid, FRAKCIO_CIA)) return Msg(playerid, "Nem használhatod ezt a parancsot!");
		if(params < 1) return Msg(playerid, "Használat: /cia [Öltöny / Páncél / álkulcs]");
		if(egyezik(param[1], "páncél") || egyezik(param[1], "pancel"))
		{
			if(!PlayerToPoint(10,playerid,1776.9928,-1305.2573,13.6280)) return Msg(playerid, "Nem vagy a CIA bázison!");
			if(OnDuty[playerid] == 0) return Msg(playerid, "Nem vagy szolgálatban!");
			SetPlayerArmour(playerid, 100);
			Cselekves(playerid, "felvett egy új golyóálló mellényt a páncélszekrénybõl.");
			return 1;
		}
		else if(egyezik(param[1],"öltöny") || egyezik(param[1], "oltony"))
		{
			if(!PlayerToPoint(10,playerid,1776.9928,-1305.2573,13.6280)) return Msg(playerid, "Nem vagy a CIA bázison!");
			SetPlayerSkin(playerid, 166);
			Cselekves(playerid, "felvette az öltönyt.");
			return 1;
		}
		else if(egyezik(param[1], "alkulcs") || egyezik(param[1], "álkulcs"))
		{
	    if(IsPlayerConnected(playerid))
	    {
            if(LMT(playerid, FRAKCIO_CIA) || Admin(playerid, 1337))
            {
	            new hazak = sizeof(HouseInfo);
                for(new i = 0; i < hazak; i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
						
						
					    new HazBelso = HouseInfo[i][hBelso];
					    SetPlayerInterior(playerid,IntInfo[HazBelso][iNumber]);
						SetPlayerVirtualWorld(playerid, i);

						SetPlayerPos(playerid,IntInfo[HazBelso][iExitX],IntInfo[HazBelso][iExitY],IntInfo[HazBelso][iExitZ]);
						GameTextForPlayer(playerid, "~r~Betortel a hazba", 5000, 1);
						Cselekves(playerid, "kinyitotta a ház ajtaját", 1);
						PlayerInfo[playerid][pLocal] = i;
						HouseInfo[i][hLock] = 0;
						Format(_tmpString, "[/alkulcs] %s - %d-s ház", PlayerName(playerid), i);
						EgyebLog(_tmpString);
						SendRadioMessageFormat(FRAKCIO_CIA, TEAM_AZTECAS_COLOR, "** [Figyelem] %s kinyitotta a Class út %d ajtaját!", PlayerName(playerid), i);
					}
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Nem vagy CIA ügynök!");
			    return 1;
            }
		}
		return 1;
		}

	}
	if(egyezik(cmd, "/szájkendõ") || egyezik(cmd, "/szajkendo") || egyezik(cmd,"/kendõ"))
	{
	    if(PlayerInfo[playerid][pSzajkendo] == 0) return Msg(playerid,"Nincs szájkendõd! 24/7-ben vehetsz!");
	    if(!LegalisSzervezetTagja(playerid))
	    {
	        if(NemMozoghat(playerid)) return Msg(playerid,"Nem mozoghatsz...");
	        if(Szajkendo[playerid] == 0)
	        {
				ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0, 1);
	        	SetPlayerAttachedObject( playerid, ATTACH_SLOT_KENDO_MASZK, 18912, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
				Cselekves(playerid,"felveszi a szájkendõt...",1);
                Msg(playerid,"Felvetted a Szájkendõt!");
				Szajkendo[playerid] = 1;
		 	}
 			else
 			{
				RemovePlayerAttachedObject(playerid, ATTACH_SLOT_KENDO_MASZK);
				Cselekves(playerid,"levette a szájkendõt...",1);
				Msg(playerid,"Levetted a szájkendõt!");
				Szajkendo[playerid] = 0;
 			}
	    }
	    else
	    {
	        Msg(playerid,"Csak illegális szervezet tagjainak!");
	    }
	}
	if(egyezik(cmd, "/pizza"))
	{
		if(!AMT(playerid, MUNKA_PIZZAS)) return Msg(playerid, "Nem vagy pizzafutár!");
		if(params < 1) return Msg(playerid, "/pizza [szállít/bepakol]");
		if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy kocsiban!");
		if(!IsKocsi(GetPlayerVehicleID(playerid), "Pizza")) return Msg(playerid, "Ez nem pizzás robogó!");
		if(PlayerInfo[playerid][pMotorJogsi] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nincs motor jogosítványod. Így nem dolgozhatsz!");

		if(egyezik(param[1], "szállít") || egyezik(param[1], "szallit"))
		{
			if(Munkaban[playerid] != MUNKA_PIZZAS)
			{
				if(!PlayerToPoint(20, playerid, 2110, -1777, 13)) return Msg(playerid, "Nem vagy a pizzahut melletti parkolóban!");
				if(LevelAKocsiban[GetPlayerVehicleID(playerid)] == 0) return Msg(playerid, "Nincs nálad pizza!");
				Munkaban[playerid] = MUNKA_PIZZAS;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "A munkát elkezdted, menj a checkpoint felé. A robogóban %d darab pizza van!", LevelAKocsiban[GetPlayerVehicleID(playerid)]);
				new haz = random(MAXHAZ);
				while(HouseInfo[haz][Van] != 1 || HouseInfo[haz][hTipus] != 1)
					haz = random(MAXHAZ);
				MunkaCheckpoint[playerid] = haz;
				SetPlayerCheckpoint(playerid, HouseInfo[haz][hEntrancex], HouseInfo[haz][hEntrancey], HouseInfo[haz][hEntrancez], 5);
				return 1;
			}
			else
			{
				Munkaban[playerid] = NINCS;
				MunkaCheckpoint[playerid] = NINCS;
				DisablePlayerCheckpoint(playerid);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "A munkát befejezted. A munkádért kapott pénzt fizetéskor megkapod!");
				return 1;
			}
		}
		else if(egyezik(param[1], "bepakol"))
		{
			if(!PlayerToPoint(20, playerid, 2110, -1777, 13)) return Msg(playerid, "Nem vagy a pizzahut melletti parkolóban!");
			LevelAKocsiban[GetPlayerVehicleID(playerid)] = MAX_PIZZA;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Raktál a jármûvedbe %d darab pizzát!", MAX_PIZZA);
			return 1;
		}
		else return Msg(playerid, "/pizza [szállít/bepakol]");
	}
	if(egyezik(cmd, "/postás") || egyezik(cmd, "/postas"))
	{
		if(!AMT(playerid, MUNKA_POSTAS)) return Msg(playerid, "Nem vagy postás!");
		if(Munkaban[playerid] != MUNKA_POSTAS)
		{
			if(!PlayerToPoint(20, playerid, -1866, -134, 11)) return Msg(playerid, "Itt nem kezdheted el!");
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy kocsiban!");
			new kocsi = GetPlayerVehicleID(playerid);
			if(!IsKocsi(kocsi, "Postas")) return Msg(playerid, "Ez nem postáskocsi!");
			if(params < 1) return Msg(playerid, "Használat: /postás [LS/SF]");
			if(egyezik(param[1], "ls"))
			{
				new check = random(sizeof(PostasCheckpointokLS));
				MunkaCheckpoint[playerid] = check;
				SetPlayerCheckpoint(playerid, PostasCheckpointokLS[check][0], PostasCheckpointokLS[check][1], PostasCheckpointokLS[check][2], 5);
				Munkaban[playerid] = MUNKA_POSTAS;
				Posta[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Elkezdtél dolgozni, menj a checkpoint felé!");
				MunkaCheckpoint[playerid] = check;
				MunkaCheckpoint2[playerid] = NINCS;
				GetPlayerPos(playerid, MunkaStarthely[playerid][0], MunkaStarthely[playerid][1], MunkaStarthely[playerid][2]);
			}
			else if(egyezik(param[1], "sf"))
			{
				new check = random(sizeof(PostasCheckpointokSF));
				MunkaCheckpoint[playerid] = check;
				SetPlayerCheckpoint(playerid, PostasCheckpointokSF[check][0], PostasCheckpointokSF[check][1], PostasCheckpointokSF[check][2], 5);
				Munkaban[playerid] = MUNKA_POSTAS;
				Posta[playerid] = 2;
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Elkezdtél dolgozni, menj a checkpoint felé!");
				MunkaCheckpoint[playerid] = check;
				MunkaCheckpoint2[playerid] = NINCS;
				GetPlayerPos(playerid, MunkaStarthely[playerid][0], MunkaStarthely[playerid][1], MunkaStarthely[playerid][2]);
			}
			else return Msg(playerid, "Használat: /postás [LS/SF]");
		}
		else
		{
			Munkaban[playerid] = NINCS;
			MunkaCheckpoint[playerid] = NINCS;
			DisablePlayerCheckpoint(playerid);
			Posta[playerid] = 0;
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "A munkát befejezted. A munkádért kapott pénzt fizetéskor megkapod!");
		}
		return 1;
	}
	if(egyezik(cmd, "/feltölt") || egyezik(cmd, "/feltolt"))
	{
		if(!AMT(playerid, MUNKA_POSTAS)) return Msg(playerid, "Nem vagy postás!");
		if(!PlayerToPoint(10, playerid, -1865, -127, 11) && !PlayerToPoint(10, playerid, -1858, -127, 11)) return Msg(playerid, "Itt nem töltheted fel!");
		if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Kocsiban nem lehet!");
		new kocsi = GetClosestVehicle(playerid);
		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 7.0) return Msg(playerid, "Nincs jármû a közeledben!");
		if(!IsKocsi(kocsi, "Postas")) return Msg(playerid, "Ez nem postás autó!");
		new tipus = GetVehicleModel(kocsi);
		if(tipus == 509)
		{
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Feltöltöttél %d darab levelet a bicikli kosarába!", MAX_LEVEL_BICIKLI);
			LevelAKocsiban[kocsi] = MAX_LEVEL_BICIKLI;
			return 1;
		}
		else if(tipus == 498)
		{
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Feltöltöttél %d darab levelet az autó csomagtartójába!", MAX_LEVEL_KOCSI);
			LevelAKocsiban[kocsi] = MAX_LEVEL_KOCSI;
			return 1;
		}
		return 1;
	}

	if(egyezik(cmd, "/lift"))
	{
		if(!IsACop(playerid) && !Admin(playerid, 1) && !IsScripter(playerid)) return Msg(playerid, "Nem használhatod!");
		if(params < 1) return Msg(playerid, "Használat: /lift [fel/le]");
		if(!PlayerToPoint(3, playerid, -1387.7341308594, -178.13723754883, 13.795417785645) && !PlayerToPoint(3, playerid, -1387.7341308594, -178.13723754883, 25.295417785645)) return Msg(playerid, "Nem vagy a liftnél");
		if(egyezik(param[1], "fel")) // fel
		{
			MoveDynamicObject(FBILift[0], -1386.4052734375, -175.3232421875, 26.415866851807, 5);
			MoveDynamicObject(FBILift[1], -1386.4738769531, -175.36943054199, 15.157948493958, 2);
			MoveDynamicObject(FBILift[2], -1386.4675292969, -175.37225341797, 15.157948493958, 2);
			MoveDynamicObject(FBILift[3], -1384.7634277344, -176.15118408203, 26.440265655518, 2);
			MoveDynamicObject(FBILift[4], -1388.0417480469, -174.60539245605, 26.440265655518, 2);
		}
		else if(egyezik(param[1], "le")) //le
		{
			MoveDynamicObject(FBILift[0], -1386.4052734375, -175.3232421875, 15.199687004089, 5);
			MoveDynamicObject(FBILift[1], -1386.4638671875, -175.35809326172, 26.440265655518, 2);
			MoveDynamicObject(FBILift[2], -1386.4593505859, -175.35487365723, 26.440265655518, 2);
			MoveDynamicObject(FBILift[3], -1384.7703857422, -176.16192626953, 15.157948493958, 2);
			MoveDynamicObject(FBILift[4], -1388.0495605469, -174.60585021973, 15.157948493958, 2);
		}
		else return Msg(playerid, "Használat: /lift [fel/le]");
	}
	if(egyezik(cmd, "/come"))
	{
		ApplyAnimation(playerid, "POLICE",  "CopTraf_Come",  1, 0, 0, 1, 1, 0);
		return 1;
	}
	if(egyezik(cmd, "/ninja"))
	{
		if(!LMT(playerid, FRAKCIO_YAKUZA)) return Msg(playerid, "Nem vagy a Yakuza tagja!");
		if(egyezik(param[1], "engedély") || egyezik(param[1], "engedely"))
		{
			if(!Munkarang(playerid, 7)) return Msg(playerid, "Minimum 7-es rang!");
			if(Ninjaengedely == false)
			{
				//format(string, sizeof(string), "%s kinyitotta a ninja raktárat!", PlayerName(playerid));
				SendRadioMessageFormat(FRAKCIO_YAKUZA, COLOR_LIGHTGREEN, "%s kinyitotta a ninja raktárat!", ICPlayerName(playerid));
				Ninjaengedely = true;
				return 1;
			}
			else
			{
				//format(string, sizeof(string), "%s bezárta a ninja raktárat!", PlayerName(playerid));
				SendRadioMessageFormat(FRAKCIO_YAKUZA, COLOR_LIGHTGREEN, "%s bezárta a ninja raktárat!", ICPlayerName(playerid));
				Ninjaengedely = false;
				return 1;
			}
		}
		if(egyezik(param[1], "felvesz"))
		{
			if(Ninjaengedely == false) return Msg(playerid, "Nincs nyitva a ninjaraktár!");
			if(!PlayerToPoint(3, playerid, FrakcioInfo[FRAKCIO_YAKUZA][fPosX], FrakcioInfo[FRAKCIO_YAKUZA][fPosY], FrakcioInfo[FRAKCIO_YAKUZA][fPosZ])) return Msg(playerid, "Nem vagy a raktár közelében.");
			new bool:van = false;
			for(new x = 0; x < MAX_FEGYVERRAKTAR_SLOT; x++)
			{
				if(FrakcioInfo[FRAKCIO_YAKUZA][fFegyver][x] == WEAPON_KATANA)
				{
					van = true;
					
					
					new slot = WeaponGiveWeapon(playerid, WEAPON_KATANA);
					if(slot < 0)
						Msg(playerid, "Nem tudtad kivenni a fegyvert");
					else
					{
						Msg(playerid, "Kivettél egy katanát a raktárból!");
						SetPlayerSkin(playerid, 204);
						FrakcioInfo[FRAKCIO_YAKUZA][fFegyver][x] = 0;
					}
					
					break;
				}
			}
			if(van == false) return Msg(playerid, "Nincs katana a raktárban!");
			return 1;
		}
		if(egyezik(param[1], "visszarak"))
		{
			new bool:van = false;
			
			if(WeaponHaveWeapon(playerid, WEAPON_KATANA) == NINCS)
				return Msg(playerid, "Nincs nálad katana!");
				
			if(!PlayerToPoint(3, playerid, FrakcioInfo[FRAKCIO_YAKUZA][fPosX], FrakcioInfo[FRAKCIO_YAKUZA][fPosY], FrakcioInfo[FRAKCIO_YAKUZA][fPosZ])) return Msg(playerid, "Nem vagy a raktár közelében.");
			for(new x = 0; x < MAX_FEGYVERRAKTAR_SLOT; x++)
			{
				if(FrakcioInfo[FRAKCIO_YAKUZA][fFegyver][x] == 0)
				{
					FrakcioInfo[FRAKCIO_YAKUZA][fFegyver][x] = WEAPON_KATANA;
					Msg(playerid, "Beraktad a raktárba!");
					//new fegyo, ammo;
					//GetPlayerWeaponData(playerid, 1, fegyo, ammo);
					
					Munkaruha(playerid, 1);
					//FegyverElvesz(playerid, 8);
					WeaponTakeWeapon(playerid, WEAPON_KATANA);
					van = true;
					break;
				}
			}
			if(van == false) return Msg(playerid, "Nincs hely a raktárban!");
			return 1;
		}
	}
	if(egyezik(cmd, "/noname"))
	{
		if(!Admin(playerid,1337) && !IsHitmanDutyban(playerid)) return 1;

		if(NoName[playerid])
		{
			NoName[playerid] = false;
			Msg(playerid, "Az adminok most már látják a neved");

			NevMutatas(playerid, 1);
		}
		else
		{
			NoName[playerid] = true;
			Msg(playerid, "Az adminok most már nem látják a neved");

			NevMutatas(playerid, 0);
		}

		return 1;
	}

	if(egyezik(cmd, "/felfüggeszt") || egyezik(cmd, "/felfuggeszt"))
	{
		if(!MunkaLeader(playerid, FRAKCIO_SCPD) && !MunkaLeader(playerid, FRAKCIO_FBI) && !MunkaLeader(playerid, FRAKCIO_CIA) && !MunkaLeader(playerid, FRAKCIO_SFPD) && !MunkaLeader(playerid, FRAKCIO_NAV) && !MunkaLeader(playerid, FRAKCIO_KATONASAG) && !Admin(playerid, 1337)) return 1;

		new result[128], player;
		if(sscanf(pms, "us[128]", player, result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /felfüggeszt [Játékos] [Oka]");

		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");

		if(PlayerInfo[player][pMember] != PlayerInfo[playerid][pMember] && !Admin(playerid, 1337)) return Msg(playerid, "Csak a saját alkalmazottaidat!");
		SendFormatMessageToAll(COLOR_LIGHTRED, "<< %s felfüggesztve %s által | Oka: %s >>", ICPlayerName(player), ICPlayerName(playerid), result);
		Msg(playerid, "Sikeres felfüggesztés");
		
		strcpy(PlayerInfo[player][pFrakcioTiltOk], "Felfügesztés hatóság által", 64);
		PlayerInfo[player][pFrakcioTiltIdo]=25;

		PlayerInfo[player][pMember] = 0;
		PlayerInfo[player][pLeader] = 0;
		return 1;
	}

	if(egyezik(cmd, "/célpont") || egyezik(cmd, "/celpont"))
	{
		if(Felberelve[playerid] == NINCS) return Msg(playerid, "Nincs megbízásod.");
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Célpont: %s, Vérdíj: %dFt", PlayerName(Felberelve[playerid]), FelberelveOsszeg[playerid]);
		Cselekves(playerid, "megnézett egy SMS-t.");
	}
	if(egyezik(cmd, "/sisak"))
	{
		if(SisakotVesz[playerid] == 1) return 1;
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) return Msg(playerid, "Szállj fel a jármûre.");
		if(!Bikes(GetPlayerVehicleID(playerid))) return Msg(playerid, "Ebben a jármûben nem használhatod.");
		if(Sisak[playerid] == 0)
		{
			Freeze(playerid);
			ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0, 1);
			Cselekves(playerid, "felveszi a bukósisakot...");
			SisakotVesz[playerid] = 1;
			SetTimerEx("SisakFel", 5000, false, "i", playerid);
		}
		else
		{
			Msg(playerid, "Levetted a bukósisakot.");
			RemovePlayerAttachedObject(playerid, ATTACH_SLOT_SISAK);
			Cselekves(playerid, "levette a bukósisakot...");
			Sisak[playerid] = 0;
		}
	}
	if(egyezik(cmd, "/fizetés") || egyezik(cmd, "/fizetes"))
	{

		if(PlayerInfo[playerid][pLeader] < 1) return Msg(playerid, "Nem vagy frakció leader!");

		new rang, penz;
		rang = strval(param[1]);
		penz = strval(param[2]);
		if(!Admin(playerid,1337))
			if(penz < 0 || penz > 500000) return Msg(playerid, "Minimum 0, maximum 500,000Ft");
		if(params < 2) return Msg(playerid, "Használat: /fizetés [rang] [összeg]");
		if(rang > 12 || rang < 0) return Msg(playerid, "0-12");
		SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Fizetés beállítva! %d rang fizetése: %d Ft", rang, penz);
		FrakcioInfo[PlayerInfo[playerid][pMember]][fFizetes][rang] = penz;
		return 1;
	}
	if(egyezik(cmd, "/fizetések") || egyezik(cmd, "/fizetesek"))
	{
		if(PlayerInfo[playerid][pMember] == 0) return Msg(playerid, "Nincs frakciód!");
		new y = OsszRang[PlayerInfo[playerid][pMember]]+1;
		for(new x = 0; x < y; x++)
			SendFormatMessage(playerid, COLOR_GRAD1, "%d rang: %sFt", x, FormatNumber(FrakcioInfo[PlayerInfo[playerid][pMember]][fFizetes][x] , 0, ',' ));
		return 1;
	}
	if(egyezik(cmd, "/útzár") || egyezik(cmd, "/utzar"))
	{
		if(!LMT(playerid, FRAKCIO_SCPD) && !LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA) && !LMT(playerid, FRAKCIO_SFPD) && !LMT(playerid, FRAKCIO_NAV) && !LMT(playerid, FRAKCIO_KATONASAG)) return 1;
		if(params < 1)
			return Msg(playerid, "Használata: /útzár [ lerak / felvesz]");

		if(egyezik(param[1], "lerak"))
		{
			if(Utzarak[playerid][uVan])
				return Msg(playerid, "Már raktál le egy útzárat! Elõbb azt vedd fel!");
			if(params < 2)
				return Msg(playerid, "Használata: /útzár lerak [ kicsi / nagy ]");

			if(egyezik(param[2], "kicsi"))
			{
				if(FloodCheck(playerid)) return 1;
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
					return Msg(playerid, "Csak gyalog rakhatsz le!");

				Msg(playerid, "Leraksz egy kicsi útzárat...");
				Cselekves(playerid, "lerak egy kicsi útzárat...");

				Freeze(playerid);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);

				SetTimerEx("Utzar", 3000, false, "dd", playerid, UTZAR_KICSI);
			}
			else if(egyezik(param[2], "nagy"))
			{
				if(FloodCheck(playerid)) return 1;
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
					return Msg(playerid, "Csak gyalog rakhatsz le!");

				Msg(playerid, "Leraksz egy nagy útzárat...");
				Cselekves(playerid, "lerak egy nagy útzárat...");

				Freeze(playerid);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);

				SetTimerEx("Utzar", 3000, false, "dd", playerid, UTZAR_NAGY);
			}
			else
				Msg(playerid, "Használata: /útzár lerak [ kicsi / nagy ]");
		}
		else if(egyezik(param[1], "felvesz"))
		{
			if(!Utzarak[playerid][uVan])
				return Msg(playerid, "Nem raktál le egy útzárat sem! Elõbb azt rakj le!");

			if(!PlayerToPoint(3.0, playerid, Utzarak[playerid][uHely][0], Utzarak[playerid][uHely][1], Utzarak[playerid][uHely][2]) || GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
				return Msg(playerid, "Nem vagy az útzárad mellett!");

			if(FloodCheck(playerid)) return 1;

			Freeze(playerid);
			ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);

			SetTimerEx("Utzar", 3000, false, "dd", playerid, UTZAR_TOROL);
			Msg(playerid, "Felveszed az útzárad...");
			Cselekves(playerid, "felveszi az útzárát...");

		}
		else
			Msg(playerid, "Használata: /útzár [ lerak / felvesz]");

		return 1;
	}

	if(egyezik(cmd, "/aunshock"))
	{
		if(!Admin(playerid, 1337))
			if(!Admin(playerid, 3) && !AdminDuty[playerid]) return Msg(playerid, "Admin3-tól adminszolgálatban!");
			
			
		if(params < 1) return Msg(playerid, "Használat: /aunshock [rendszám]");

		new rendszam = strval(param[1]);

		if(rendszam < 1 || rendszam >= MAX_VEHICLES || !IsVehicleConnected(rendszam)) return Msg(playerid, "Nincs ilyen jármû!");

		ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s levette a sokkolást a %d rendszámú jármûrõl >>", PlayerName(playerid), rendszam);
		Msg(playerid, "Levetted a sokkolást!");
		KocsiSokkolva[rendszam] = 0;
		return 1;
	}
	if(egyezik(cmd, "/shock"))
	{
		if(!IsACop(playerid)) return 1;

		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Msg(playerid, "Nem vagy sofõr!");
        if(!EzzelShockolhat(veh)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezzel a jármûvel nem sokkolhatsz!");
		if(KocsitSokkolt[playerid] > 0) return Msg(playerid, "Már sokkoltál... várj egy kicsit!");
		if(KocsiSokkolva[veh] > 0) return Msg(playerid, "Sokkolt kocsival nem tudsz sokkolni!");
		if(PlayerRaceInfo[playerid][xVersenyen] != NINCS) return Msg(playerid, "Versenyen nem sokkolhatsz!");
		if(CarPart[veh][cAkkumulator] < 20.0) return Msg(playerid, "Az akkumulátor töltöttsége túl alacsony(20 alatt)");//akku
		if(CarPart[veh][cElektronika] >= 100.0) return Msg(playerid, "Az elektronika tönkrement, így nem tudod bekapcsolni!");

		if(Sokkol[playerid] || IsValidDynamicObject(SokkObject[veh]))
		{
			Sokkol[playerid] = false;
			if(IsValidDynamicObject(SokkObject[veh])) DestroyDynamicObject(SokkObject[veh]);
			SokkObject[veh] = INVALID_OBJECT_ID;
			Msg(playerid, "Levetted a célzást!");
			return 1;
		}

		new Float:sokktav;
		if(params < 1)
			sokktav = 5.0;
		else
			sokktav = floatstr(param[1]);

		if(sokktav < 5.0 || sokktav > 15.0) return Msg(playerid, "Minimum 5, maximum 15!");

		Sokkol[playerid] = true;
		SokkTav[playerid] = sokktav;
		
		SokkObject[veh] = CreateDynamicObject(18642, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle(SokkObject[veh], veh, 0.0, sokktav, 1.0, 0.0, 0.0, 0.0);
		CarPart[veh][cElektronika] += 0.01;
		
		Cselekves(playerid, "bekapcsolta a sokkolási célkeresztet");
		Msg(playerid, "Ha megvan a cél, nyomd meg a CTRL billentyût. Ha még sem szeretnél sokkolni, írd be újra a /shock parancsot!");

		return 1;
	}
	
	if(egyezik(cmd, "/sziréna") || egyezik(cmd, "/szirena"))
	{
		new kocsi = GetPlayerVehicleID(playerid);
		if(!IsACop(playerid) && !IsHitman(playerid)) return Msg(playerid, "Csak a rendõrség tagjainak!");
		if(!Munkarang(playerid,3) && !LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA) && !LMT(playerid, FRAKCIO_KATONASAG) && !IsHitman(playerid)) return Msg(playerid, "A-A");
		if(CarPart[kocsi][cElektronika] >= 100.0) return Msg(playerid, "Az elektronika tönkrement, így nem tudod bekapcsolni!");
		if(params < 1) return Msg(playerid, "Használat: /sziréna [Nagy / Kicsi]");

		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Msg(playerid, "Nem vagy sofõr!");

		if(egyezik(param[1], "kicsi"))
		{
			if(!IsValidDynamicObject(Szirena[kocsi]))
			{
				if(IsValidDynamicObject(Nkszirena[kocsi])) return Msg(playerid,"Ezen a jármûvön már van nagy sziréna...");
				//if(IsValidDynamicObject(Nbszirena[kocsi])) return Msg(playerid,"Ezen a jármûvön már van nagy sziréna...");
				new Float:OffX, Float: OffY, Float:OffZ;
				if(!SzirenaPozicio(pveh, OffX, OffY, OffZ))
					return Msg(playerid, "Erre nem rakhatsz szirénát!");

				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(playerid, X, Y, Z);
				Szirena[kocsi] = CreateDynamicObject(18646, X, Y, Z, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(Szirena[kocsi], veh, OffX, OffY, OffZ, 0.0, 0.0, 0.0);
				Cselekves(playerid, "rakott egy szirénát a jármûvére",1);
				CarPart[kocsi][cElektronika] += 0.01;
			}
			else
			{
				if(IsValidDynamicObject(Szirena[kocsi]))
					DestroyDynamicObject(Szirena[kocsi]),Szirena[kocsi]=INVALID_OBJECT_ID;
			
				Cselekves(playerid, "levette a szirénát a jármûvérrõl",1);
			}
			Streamer_Update(playerid);
			
			
		}
		else if(egyezik(param[1], "nagy"))
		{
			if(params < 2) return Msg(playerid, "Használat: /sziréna nagy [Felszerel / Leszerel]");

			if(egyezik(param[2], "felszerel"))
			{
				if(IsValidDynamicObject(Nkszirena[kocsi])) return Msg(playerid,"Ezen a jármûvön már van sziréna...");

				new Float:OffX, Float: OffY, Float:OffZ;
				if(!NszirenaPozicio(pveh, OffX, OffY, OffZ))
					return Msg(playerid, "Erre nem rakhatsz nagy szirénát!");

				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(playerid, X, Y, Z);
				Nkszirena[kocsi] = CreateDynamicObject(19419, X, Y, Z, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(Nkszirena[kocsi], veh, OffX, OffY, OffZ, 0.0, 0.0, 0.0);
				Cselekves(playerid, "felszereli a szirénát, és bekapcsolja",1);
			}
			else if(egyezik(param[2], "leszerel"))
			{
				if(IsValidDynamicObject(Nkszirena[kocsi]))
					DestroyDynamicObject(Nkszirena[kocsi]), Nkszirena[kocsi]=INVALID_OBJECT_ID, Cselekves(playerid, "kikapcsolta, és levette a jármûjérõl a szirénát",1);
			}
			/*else if(egyezik(param[2], "be"))
			{
				if(IsValidDynamicObject(Nbszirena[kocsi]))
				{
					if(!IsValidDynamicObject(Nkszirena[kocsi])) return Msg(playerid,"Mit kapcsolsz be? Elõször szereld fel....");

					new Float:OffX, Float: OffY, Float:OffZ;
					if(!NszirenaPozicio(pveh, OffX, OffY, OffZ))
						return Msg(playerid, "Erre nem rakhatsz nagy szirénát!");

					new Float:X, Float:Y, Float:Z;
					GetPlayerPos(playerid, X, Y, Z);
					Nbszirena[kocsi] = CreateDynamicObject(19419, X, Y, Z, 0.0, 0.0, 0.0);
					AttachDynamicObjectToVehicle(Nbszirena[kocsi], veh, OffX, OffY, OffZ, 0.0, 0.0, 0.0);
					Cselekves(playerid, "bekapcsolta a nagy szirénát",1);
				}
				else
				{
					Cselekves(playerid, "kikapcsolta a nagy szirénát",1);
					if(IsValidDynamicObject(Nkszirena[kocsi]))
						DestroyDynamicObject(Nbszirena[kocsi]), Nbszirena[kocsi]=INVALID_OBJECT_ID;
					
				}
			}*/
			Streamer_Update(playerid);
		}
		return 1;
	}
	
	if(egyezik(cmd, "/war"))
	{
		if(!IsRyan(playerid)) return Msg(playerid, "Ideiglenesen kivéve!");
		if(ResiVan[1]) return Msg(playerid, "Szerver restart van/lesz, vagy SCRIPTER letiltotta a wart.");
		if(LegalisSzervezetTagja(playerid) || Civil(playerid)) return 1;

		if(!MunkaLeader(playerid, PlayerInfo[playerid][pMember]))
			return Msg(playerid, "Csak a leader indíthatja el!");

		if(Harcol[playerid])
			return Msg(playerid, "Jelenleg harcolsz!");
		
		if(PlayerInfo[playerid][pHetiAktivitas] < HETI_AKTIVITAS_WAR) return SendFormatMessage(playerid, COLOR_LIGHTRED,"A heti aktivitásod nem elég magas. Minimum %d óra kell!",HETI_AKTIVITAS_WAR);
		if(PlayerInfo[playerid][pHaviAktivitas] < HAVI_AKTIVITAS_WAR) return SendFormatMessage(playerid, COLOR_LIGHTRED,"A havi aktivitásod nem elég magas. Minimum %d óra kell!",HETI_AKTIVITAS_WAR);
		
		new teruletek;
		for(new x = 0; x < MAXTERULET; x++)
		{
			if(!TeruletInfo[x][Van]) continue;
			if(TeruletInfo[x][tTulaj] == PlayerInfo[playerid][pMember])
				teruletek++;
	
		}
		if(teruletek >= TERULET_FRAKCIO_LIMIT)
			return SendFormatMessage(playerid, COLOR_LIGHTRED, "Már %d területetek van! Minden frakció %d területet birtokolhat csak", teruletek, TERULET_FRAKCIO_LIMIT), 1;

		new terulet = NINCS;
		for(new x = 0; x < MAXTERULET; x++)
		{
			if(!TeruletInfo[x][Van]) continue;
			if(IsPlayerInDynamicArea(playerid, TeruletInfo[x][tArea]))
			{
				terulet = x;
				break;
			}
		}

		if(terulet == NINCS)
			return Msg(playerid, "Nem vagy egy területnél sem!");

		if(TeruletInfo[terulet][tHarc])
			return Msg(playerid, "Ezen a területen jelenleg harc folyik!");

		if(TeruletInfo[terulet][tTulaj] == PlayerInfo[playerid][pMember])
			return Msg(playerid, "Ez a ti területetek!");

		if(HarcVan)
			return Msg(playerid, "Jelenleg harc van az egyik területen!");

		new kulonbseg = UnixTime - FrakcioInfo[ PlayerInfo[playerid][pMember] ][fUtolsoTamadas];
		if(kulonbseg < TERULET_VARAKOZAS_FRAKCIO)
			{ SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Már támadtatok az elmúlt %d órában! A következõ támadás %d perc múlva lehetséges", (TERULET_VARAKOZAS_FRAKCIO / 3600), (TERULET_VARAKOZAS_FRAKCIO - kulonbseg) / 60); return 1; }

		new barat, ellenseg;
		foreach(Jatekosok, p)
		{
			if(LMT(p, TeruletInfo[terulet][tTulaj]) && !AFK[p])
				ellenseg++;
			else if(LMT(p, PlayerInfo[playerid][pMember]) && !AFK[p])
				barat++;
		}

		/*if(ellenseg < 5 || FrakcioInfo[TeruletInfo[terulet][tTulaj]][fTamadott] < UnixTime)
			return Msg(playerid, "Minimum 5 ember szükséges az ellenségtõl!");*/
			
		
        if(barat < 5) 
			return Msg(playerid, "Minimum 5 ember szükséges tõletek!");
		if(FrakcioInfo[TeruletInfo[terulet][tTulaj]][fTamadott] < UnixTime && ellenseg < 5)
			return Msg(playerid, "Minimum 5 ember szükséges az ellenségtõl!");
		/*else if(ellenseg < 5)
			return Msg(playerid, "Minimum 5 ember szükséges az ellenségtõl!");*/

		new mikor = UnixTime - TeruletInfo[terulet][tFoglalva];
		new mennyi = TERULET_VARAKOZAS - mikor;

		if(mikor < TERULET_VARAKOZAS)
			{ SendFormatMessage(playerid, COLOR_RED, "ClassRPG: A területet %d perce foglalták el! A következõ foglalás %d perc múlva lehetséges", (mikor / 60), (mennyi / 60)); return 1; }

		if(params < 1) // || strval(param[1]) != 1 || !IsNumeric(param[1]) || strval(param[1]) != 0 && strval(param[1]) != 1)
			return Msg(playerid, "/war [lõfegyver: 0 (nem engedélyezett) / 1 (engedélyezett)]");

		new lofegyver = strval(param[1]);
		if(lofegyver != 0 && lofegyver != 1)
			return Msg(playerid, "/war [lõfegyver: 0 (nem engedélyezett) / 1 (engedélyezett)]");



		TeruletInfo[terulet][tVarakozasIdo] = 900; //900
		TeruletInfo[terulet][tHarcolok][0] = TeruletInfo[terulet][tTulaj]; // Védõk
		TeruletInfo[terulet][tHarcolok][1] = PlayerInfo[playerid][pLeader]; // Támadók
		TeruletInfo[terulet][tLofegyver] = lofegyver;

		foreach(Jatekosok, p)
		{
			if(LMT(p, TeruletInfo[terulet][tTulaj]))
			{
				Msg(p, "==========[ FIGYELEM! TÁMADÁS! ]==========", false);
				SendFormatMessage(p, COLOR_LIGHTRED, "Figyelmeztetés: Az egyik frakció (%s) megtámadta a területeteket: %s", Szervezetneve[ TeruletInfo[terulet][tHarcolok][1] - 1 ][0], TeruletInfo[terulet][tNev]);
				Msg(p, "Figyelmeztetés: Ha nem megy oda legalább egy tag harcolni, a területet õk szerzik meg!", false);
				if(TeruletInfo[terulet][tLofegyver] == 1) {Msg(p, "Lõvös war lesz");} else {Msg(p, "Ütös war lesz");}
			}
			else if(LMT(p, TeruletInfo[terulet][tHarcolok][1]))
			{
				Msg(p, "==========[ FIGYELEM! TÁMADÁS! ]==========", false);
				SendFormatMessage(p, COLOR_LIGHTRED, "Figyelmeztetés: Megtámadtátok a területet: %s - A területet birtokolja: %s", TeruletInfo[terulet][tNev], Szervezetneve[ TeruletInfo[terulet][tHarcolok][0] - 1 ][0]);
				Msg(p, "Figyelmeztetés: Ha nem megy oda legalább egy tag harcolni, a területet marad az övék!", false);
				if(TeruletInfo[terulet][tLofegyver] == 1) {Msg(p, "Lõvös war lesz");} else {Msg(p, "Ütös war lesz");}
			}
		}

		HarcVan = true;
		
		
		return 1;
	}
	
	if(egyezik(cmd, "/kocsiba"))
	{
		if(!Admin(playerid, 5)) return 1;

		if(params < 3) return Msg(playerid, "Használata: /kocsiba [játékos] [kocsi] [ülõhely 0-3]");

		new player = ReturnUser(param[1]);
		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos");

		new kocsi = strval(param[2]);
		if(!IsVehicleConnected(kocsi)) return Msg(playerid, "Hibás kocsi!");

		new ules = strval(param[3]);
		if(ules < 0 || ules > 3) return Msg(playerid, "Hibás ülés!");

		PutPlayerInVehicle(player, kocsi, ules);
		
		format(_tmpString, sizeof(_tmpString), "<< Admin %s kocsiba(id:%d ülés:%d) rakta %s-t! >>", AdminName(playerid), kocsi, ules, PlayerName(player));
		SendMessage(SEND_MESSAGE_ADMIN,_tmpString,COLOR_LIGHTRED,PlayerInfo[playerid][pAdmin]);
		
		return 1;
	}
	if(egyezik(cmd, "/csendvan"))
	{
		if(!Admin(playerid, 5)) return 1;
		if(Csendvan)
		{
			SendFormatMessageToAll(COLOR_LIGHTGREEN, "Admin %s kikapcsolta a némítást! Most már ti is beszélhettek!", PlayerName(playerid));
			Csendvan = false;
		}
		else if(!Csendvan)
		{
			SendFormatMessageToAll(COLOR_LIGHTGREEN, "Admin %s bekapcsolta a némítást! Mostmár csak az adminok beszélhetnek!", PlayerName(playerid));
			Csendvan = true;
		}
		return 1;
	}
	if(egyezik(cmd,"/radar"))
	{
		if(!LMT(playerid, FRAKCIO_KATONASAG)) return Msg(playerid, "Csak katonaság");
		if(params < 1) return Msg(playerid,"/radar [be / ki / enged]");
		if(egyezik(param[1],"be"))
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || PlayerToPoint(10, playerid, 213.6858,1822.7659,6.4141))
			{
				RadarBe[playerid]=1;
				new szamlalo=0;
				foreach(Jatekosok, x)
				{
					new carid = GetPlayerVehicleID(x);
					if(IsARepulo(carid) && GetVehicleSpeed(carid)>20)
					{
						szamlalo++;
						if(IsACopCar(carid))
							SetPlayerMarkerForPlayer(playerid, x, COLOR_BLUE);
						elseif(IsAKatonaCar(carid))
							SetPlayerMarkerForPlayer(playerid, x, COLOR_DARKBLUE);
						elseif(AdminDuty[x])
							SetPlayerMarkerForPlayer(playerid, x, COLOR_INVISIBLE);
						elseif(RepulesEngedely[carid] > UnixTime)
							SetPlayerMarkerForPlayer(playerid, x, COLOR_GREEN);
						else
							SetPlayerMarkerForPlayer(playerid, x, COLOR_RED);
					}
				}
				SendFormatMessage(playerid, COLOR_LIGHTBLUE,"Radar bekapcsolva! %d találat a légtérben",szamlalo);
			}
			else Msg(playerid,"Nem vagy jármûben vagy radarszobában");
		}
		if(egyezik(param[1],"ki"))
		{
			RadarBe[playerid]=0;
			foreach(Jatekosok, x)
			{
				new carid = GetPlayerVehicleID(x);
				if(IsARepulo(carid) && GetVehicleSpeed(carid)>20 && GetPlayerState(x) == PLAYER_STATE_DRIVER)
					SetPlayerMarkerForPlayer(playerid, x, COLOR_INVISIBLE);
			}
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Radar kikapcsolva!");
		}
		if(egyezik(param[1],"enged"))
		{
			if(params<3) return Msg(playerid, "/radar enged [rendszám] [IRL perc]");

			new v = strval(param[2]);
			new ido = strval(param[3]);
			if(v == INVALID_VEHICLE_ID) return Msg(playerid, "Nincs ilyen jármû");
			if(ido < 1 || ido > 120) return Msg(playerid, "Minimum 1, maximum 120 perc!");
			RepulesEngedely[v] = UnixTime+ido*60;
			SendFormatMessage(playerid,COLOR_GREEN,"Engedélyezted a %d rendszámú repülõnek %d percre a légtér használatát", v, ido);
			foreach(Jatekosok, x)
			{
				if(GetPlayerVehicleID(x) == v && GetPlayerState(x) == PLAYER_STATE_DRIVER)
				{
					SendFormatMessage(x,COLOR_YELLOW,"%s katona alkalmazott engedélyezte neked %d perc a légtér használatát",ICPlayerName(playerid), ido); 
					break;
				}
			}
			tformat(128, "[Figyelmeztetés] %s engedélyezte %d rendszámú repülõnek %d percre a légtér használatát", ICPlayerName(playerid), v, ido);
			SendMessage(SEND_MESSAGE_RADIO, _tmpString, COLOR_GREEN, PlayerInfo[playerid][pMember]);
		}
		if(egyezik(param[1], "tilt"))
		{
			if(params < 2) return Msg(playerid, "/radar tilt [rendszám]");

			new v = strval(param[2]);
			if(v == INVALID_VEHICLE_ID) return Msg(playerid, "Nincs ilyen jármû");
			RepulesEngedely[v] = 0;
			SendFormatMessage(playerid,COLOR_GREEN,"Tiltottad a %d rendszámú repülõnek a légtér használatát", v);
			foreach(Jatekosok, x)
			{
				if(GetPlayerVehicleID(x) == v && GetPlayerState(x) == PLAYER_STATE_DRIVER)
				{
					SendFormatMessage(x,COLOR_YELLOW,"%s katona alkalmazott tiltotta neked a légtér használatát",ICPlayerName(playerid));
					break;
				}
			}
			tformat(128, "[Figyelmeztetés] %s tiltotta %d rendszámú repülõnek a légtér használatát", ICPlayerName(playerid), v);
			SendMessage(SEND_MESSAGE_RADIO, _tmpString, COLOR_GREEN, PlayerInfo[playerid][pMember]);
		}
	}
	if(egyezik(cmd, "/fejlesztések") || egyezik(cmd, "/fejlesztesek"))
	{
	    if(playerid != NINCS) return Msg(playerid, "Átmenetileg nem elérhetõ! http://classrpg.net oldalon a frissítések topicban láthatod.");
	}
	if(egyezik(cmd, "/ssspm"))
	{
		if(PlayerInfo[playerid][pLevel] > 6) return Msg(playerid, "Ez csak kis LVL játékosoknak van");
		if(FloodCheck(playerid)) return 1;
		new szamol;
		foreach(Jatekosok, x)
		{
			if(SSSDuty[x] == 1)
				szamol++;
		}
		if(szamol < 1) return Msg(playerid, "Nincs szolgálatban SSS munkatárs");

		new uzenet[128];
		if(sscanf(pms, "s[128]",uzenet)) return Msg(playerid, "Használata: /ssspm [üzenet]");

		format(string, sizeof(string), "* [%d]SSSpm: %s: %s", playerid, PlayerName(playerid), uzenet);
		SendMessage(SEND_MESSAGE_SSS, string, COLOR_GREEN);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		foreach(Jatekosok, x)
		{
			if(SSSCheck[x])
				SendFormatMessage(x, 0xFF7318FF, "[%d]%s üzen: %s", playerid, Nev(playerid), uzenet);
		}
		return 1;
	}
	if(egyezik(cmd,"/svá"))
	{
		if(PlayerInfo[playerid][pSSS] < 1) return Msg(playerid,"Csak SSS tagok");
		if(SSSDuty[playerid] !=1 ) return Msg(playerid, "Csak SSS duty-ba");

		new kinek, uzenet[128], valasz[128];
		if(sscanf(pms, "rs[128]", kinek, uzenet)) return Msg(playerid, "/svá [játékos] [üzenet]");
		if(kinek == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
		if(PlayerInfo[kinek][pLevel] > 6) return Msg(playerid, "A-A csak kis lvl-nek");

		Format(tmp, " %s válaszolt neki: %s | Üzenet: %s", PlayerName(playerid), Nev(kinek), uzenet);
		format(valasz, 128,"%s SSS segítõ: %s",PlayerName(playerid), uzenet);
		PlayerInfo[playerid][pSSSValaszok]++;

		SendClientMessage(kinek, 0x99FF00AA, valasz);
		SendMessage(SEND_MESSAGE_SSS, tmp, COLOR_LIGHTRED);
		foreach(Jatekosok, x)
		{
			if(SSSCheck[x])
				SendClientMessage(x, COLOR_LIGHTBLUE, tmp);
		}
		return 1;
	}
	if(egyezik(cmd, "/sss"))
	{
		if(params < 1)
		{
			Msg(playerid, "Használat: /sss [Funkció]");
			Msg(playerid, "Funkció: tagok | Rádió: /srs");
			if(PlayerInfo[playerid][pSSS] > 0) Msg(playerid, "lenyomoz, kezdõk, töröl, duty, gov | Egyéb: /srs /támogat");
			if(PlayerInfo[playerid][pSSS] > 5) Msg(playerid, "Leader funkciók: invite, uninvite, tagok, széf, adomány, dutyban, válaszok, check, chat, nulláz");
			if(egyezik(PlayerName(playerid), "Terno_Tommys")) Msg(playerid, "Admin funkció: Makeleader");
			return 1;
		}
		if(egyezik(param[1], "chat"))
		{
			if(PlayerInfo[playerid][pSSS] < 6) return Msg(playerid, "Nem vagy SSS leader!");
			if(ssschat == 1)
			{
				ssschat = 0;
				foreach(Jatekosok, x)
				{
					if(PlayerInfo[x][pSSS] > 0 || SSSinfo[x] == 1 && GetPlayerVirtualWorld(x)==103)
					{
						if(gFam[x] == 0)
							SendFormatMessage(x, COLOR_LIGHTRED, "<< %s kikapcsolta az SSS chatet! >>", PlayerName(playerid));
					}
				}
			}
			else
			{
				ssschat = 1;
				foreach(Jatekosok, x)
				{
					if(PlayerInfo[x][pSSS] > 0 || SSSinfo[x] == 1 && GetPlayerVirtualWorld(x)==103)
					{
						if(gFam[x] == 0)
							SendFormatMessage(x, COLOR_LIGHTRED, "<< %s bekapcsolta az SSS chatet! >>", PlayerName(playerid));
					}
				}
			}
		}
		if(egyezik(param[1], "gov"))
		{
			if(PlayerInfo[playerid][pSSS] < 1) return Msg(playerid, "Csak SSS tagok");
			new uzi[128];
			if(sscanf(pms, "{s[32]}s[128]", uzi))	return SendClientMessage(playerid, COLOR_GREEN, "Használat: /sss gov [Szöveg]");
			if(SzovegEllenorzes(playerid, uzi, "/sss gov", ELLENORZES_MINDKETTO)) return 1;
			foreach(Jatekosok, x)
			{
				if(PlayerInfo[x][pLevel] < 5 || Admin(x, 1) || PlayerInfo[x][pSSS] >= 1)
					SendFormatMessage(x, COLOR_ORANGE, "[%d]Segítõ Szeretet Szolgálat: %s", playerid, uzi);
			}
			return 1;
		}
		if(egyezik(param[1], "válaszok") || egyezik(param[1], "valaszok"))
		{
			if(PlayerInfo[playerid][pSSS] < 6) return Msg(playerid, "Nem vagy SSS leader!");
			if(params < 2)
			{
				Msg(playerid, "/sss válaszok");
				SendClientMessage(playerid, COLOR_YELLOW, "===============[Válaszok]===============");
				foreach(Jatekosok, x)
				{
					if(PlayerInfo[x][pSSS] > 0)
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[%d]%s | Válaszok: %d", x, PlayerName(x), PlayerInfo[x][pSSSValaszok]);
				}
				SendClientMessage(playerid, COLOR_YELLOW, "===============[Válaszok]===============");
				return 1;
			}
			else
			{

					if(params < 2) return Msg(playerid,"Hazsnálata:/sss válaszok [Játékos / ID]");
					new jatekos = ReturnUser(param[2]);
					if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos");
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "%s | Válaszok: %d",PlayerName(jatekos), PlayerInfo[jatekos][pSSSValaszok]);
				
			}	
			return 1;
		}
		if(egyezik(param[1], "check"))
		{
			if(PlayerInfo[playerid][pSSS] < 5) return Msg(playerid, "Rang 5 -tõl!");
			if(SSSCheck[playerid])
			{
				SSSCheck[playerid] = false;
				Msg(playerid, "Most már nem látod, hogy mit válaszolnak/írnak.");
			}
			else
			{
				SSSCheck[playerid] = true;
				Msg(playerid, "Most már látod, hogy mit válaszolnak/írnak.");
			}
		}
		if(egyezik(param[1],"lenyomoz"))
		{
			if(PlayerInfo[playerid][pSSS] < 1) return Msg(playerid, "Csak SSS tagok");
			if(params < 1) return Msg(playerid, "/sss lenyomoz [Játékos]");
			giveplayerid = ReturnUser(param[2]);
			if(giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nincs belépve");
			if(PlayerInfo[giveplayerid][pLevel] > 5) return Msg(playerid, "Nagy rang miatt nem nyomozható le");
			Msg(playerid, "Megjelölve a térképen. Csak OOC használhatod fel az infót!!!");
			SendFormatMessage(playerid, COLOR_GREEN,"Összes vagyona: %s Ft || LVL: %d",FormatNumber( OsszesPenz(giveplayerid), 0, ',' ),PlayerInfo[giveplayerid][pLevel]);
			SetPlayerMarkerForPlayer(playerid, giveplayerid, 0x3F5D99FF);
		}
		if(egyezik(param[1], "invite"))
		{
			if(PlayerInfo[playerid][pSSS] < 6) return Msg(playerid, "Nem vagy SSS leader!");
			if(params < 2) return Msg(playerid, "/sss invite [Játékos]");
			giveplayerid = ReturnUser(param[2]);
			if(giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nincs belépve");
			if(PlayerInfo[giveplayerid][pSSS] != 0) return Msg(playerid, "Õ már az SSS tagja!");
			PlayerInfo[giveplayerid][pSSS] = 1;
			format(string, sizeof(string), "Bevetted %s-t az SSS-be!", PlayerName(giveplayerid));
			Msg(playerid, string);
			SendClientMessage(giveplayerid,0xFF7318FF, "Sikeresen bevettek a Segítõ Szeretet Szolgálatba, parancsokat az /sss -el nézheted meg!");
		}
		if(egyezik(param[1], "nulláz") || egyezik(param[1], "nullaz"))
		{
			if(PlayerInfo[playerid][pSSS] < 6) return Msg(playerid, "Nem vagy SSS leader!");
			if(params < 2) return Msg(playerid, "/sss nulláz [Játékos]");
			giveplayerid = ReturnUser(param[2]);
			if(giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nincs belépve");
			if(PlayerInfo[giveplayerid][pSSSValaszok] == 0) return Msg(playerid, "Neki egy darab válasza sincs!");
			PlayerInfo[giveplayerid][pSSSValaszok] = 0;
			format(string, sizeof(string), "Nulláztad %s SSS válaszait!", PlayerName(giveplayerid));
			Msg(playerid, string);
		}
		if(egyezik(param[1], "uninvite"))
		{
			if(PlayerInfo[playerid][pSSS] < 6) return Msg(playerid, "Nem vagy SSS leader!");
			if(params < 2) return Msg(playerid, "/sss uninvite [Játékos]");
			giveplayerid = ReturnUser(param[2]);
			if(giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nincs belépve");
			if(PlayerInfo[giveplayerid][pSSS] == 0) return Msg(playerid, "Õ nem az SSS tagja!");
			PlayerInfo[giveplayerid][pSSS] = 0;
			format(string, sizeof(string), "Kirúgtad %s-t az SSS-bõl!", PlayerName(giveplayerid));
			Msg(playerid, string);
			SendClientMessage(giveplayerid,0xFF7318FF, "Sajnálom, kirúgtak a Segítõ Szeretet Szolgálatból!");
		}
		if(egyezik(param[1], "giverank"))
		{
			if(PlayerInfo[playerid][pSSS] < 6) return Msg(playerid, "Nem vagy SSS leader!");
			if(params < 3) return Msg(playerid, "/sss giverank [Játékos] [rang]");
			giveplayerid = ReturnUser(param[2]);
			if(giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nincs belépve");
			if(PlayerInfo[giveplayerid][pSSS] == 0) return Msg(playerid, "Õ nem az SSS tagja!");
			new level;
			level = strval(param[3]);
			if(level > 6 || level < 1) return Msg(playerid, "1-6!");
			PlayerInfo[giveplayerid][pSSS] = level;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Rangot(%d) adtál neki: %s", level, PlayerName(giveplayerid));
			SendFormatMessage(giveplayerid, 0x99FF00AA, "* %s elõléptetett rang %d segítõvé! ",PlayerName(playerid), level);
			format(string, sizeof(string), "* %s rangot kapott, új rangja: %s", PlayerName(giveplayerid), SSSRangok[PlayerInfo[giveplayerid][pSSS]]);
			foreach(Jatekosok, x)
			{
				if(PlayerInfo[x][pSSS] > 0)
					SendClientMessage(x,0xFF7318FF, string);
			}
		}
		if(egyezik(param[1], "adomány"))
		{
		
			if(PlayerInfo[playerid][pSSS] < 6) return Msg(playerid, "Nem vagy SSS leader!");
			new Tagok;
			foreach(Jatekosok, i)
			{
				if(OsszesPenz(i) < 400000)
					Tagok += 1;
			}
			if(params < 2)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Használata: /sss adomány [összeg]");
			    SendClientMessage(playerid, COLOR_GREY, "");
			    SendFormatMessage(playerid, COLOR_GREY, "Kassza: %s Ft, Rászorulók: %d fõ", FormatNumber( SSSSzef , 0, ',' ),Tagok);
			    return 1;
			}
			new penz = strval(param[2]);
			if(penz > 2000000) return Msg(playerid, "Kérlek ilyen sokat ne osztogass egyszerre!");

			if(SSSSzef < 1) return Msg(playerid,"A kasszában nincs pénz!");
			

			if(Tagok >= 1)
			{
				new price = floatround(penz / Tagok);
				foreach(Jatekosok, i)
				{
					if(OsszesPenz(i) < 400000)
					{
						format(string, sizeof(string), "* SSS igazgatója támogatta a rászorúlókat. A részed: %d",price);
						SendClientMessage(i, COLOR_LIGHTBLUE, string);
						GiveMoney(i, price);
						SSSSzef -= price;
					}
				}
				SendFormatMessage(playerid, COLOR_GREY, " Átutaltál %dFt-t a rászorúlók számára. %d civil van, fejenként %dFt-t kaptak!", penz, Tagok, price);
				foreach(Jatekosok,x)
				{
					if(PlayerInfo[x][pSSS] != 0)
						SendFormatMessage(x, COLOR_LIGHTGREEN, "%s  Adományt utalt át, %dFt-ott a rászorúlók számára. %d civil van, fejenként %dFt-t kaptak!", PlayerName(playerid), penz, Tagok, price);
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Nincs fennt rászorúló!");
				return 1;
			}

		}
		if(egyezik(param[1], "széf") || egyezik(param[1], "szef"))
		{
			if(PlayerInfo[playerid][pSSS] < 1) return Msg(playerid, "Csak SSS tagok");
			if(params < 2) return Msg(playerid, "/sss széf  [ki / be ]");
			if(egyezik(param[2], "be"))
			{
				if(params < 3) return Msg(playerid,"Mennyit?");
				new penz = strval(param[3]);
				if(!BankkartyaFizet(playerid, penz)) return Msg(playerid, "Nincs ennyi pénzed!");
				SSSSzef +=penz;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "SSS széf: Beraktál: %s Ft-ott, tartalma %s Ft", FormatNumber( penz, 0, ',' ), FormatNumber( SSSSzef, 0, ',' ));
				format(string, 128, "<< [SSS]%s Betett SSS széfbe %s ft-ott >>",PlayerName(playerid), FormatNumber(penz, 0, ',' ));
				Log("Szef",string);
				
			}
			if(egyezik(param[2], "ki"))
			{
				if(PlayerInfo[playerid][pSSS] < 6) return Msg(playerid, "Nem vagy SSS leader!");
				if(params < 3) return Msg(playerid,"Mennyit?");
				new penz = strval(param[3]);
				if(penz < 0) return Msg(playerid, "a-a");
				SSSSzef -=penz;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "SSS széf: Kivettél: %s Ft-ott, tartalma %s Ft", FormatNumber( penz, 0, ',' ) ,FormatNumber( SSSSzef, 0, ',' ));
				GiveMoney(playerid, penz);
				
				format(string, 128, "<< [SSS]%s kivett SSS széfbõl %s ft-ott >>",PlayerName(playerid), FormatNumber(penz, 0, ',' ));
				Log("Szef",string);
			}

		}
		if(egyezik(param[1], "tagok"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "==========Segítõ Szeretet Szolgálat =========");
			foreach(Jatekosok, x)
			{
				if(PlayerInfo[x][pSSS] > 0)
				SendFormatMessage(playerid, COLOR_GREY, "[%d]%s | Rang: %s(%d) | Telefonszám: %s", x, PlayerName(x), SSSRangok[PlayerInfo[x][pSSS]], PlayerInfo[x][pSSS], FormatNumber( PlayerInfo[x][pPnumber], 0, '-' ));
			}

			SendClientMessage(playerid, COLOR_WHITE, "========== SSS ==========");
		}
		if(egyezik(param[1], "dutyban"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "========== SSS Dutysok =========");
			foreach(Jatekosok, x)
			{
				if(PlayerInfo[x][pSSS] > 0)
				{
					if(SSSDuty[x] == 1)
						SendFormatMessage(playerid, COLOR_GREY, "[%d]%s | Rang: %s(%d)", x, PlayerName(x), SSSRangok[PlayerInfo[x][pSSS]], PlayerInfo[x][pSSS]);
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, "========== SSS Dutysok ==========");
		}
		if(egyezik(param[1], "makeleader"))
		{
			if(!IsTerno(playerid) && SQLID(playerid) != 4038) return 1;
			if(params < 2) return Msg(playerid, "/sss makeleader [Játékos]");
			giveplayerid = ReturnUser(param[2]);
			if(giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nincs belépve");
			PlayerInfo[giveplayerid][pSSS] = 7;
			format(string, sizeof(string), "%s kinevezte %s-t SSS leaderré!", PlayerName(playerid), PlayerName(giveplayerid));
			ABroadCast(COLOR_LIGHTRED, string, 1);
		}
		if(egyezik(param[1],"töröl"))
		{
			if(PlayerInfo[playerid][pSSS] < 1) return Msg(playerid, "Csak SSS tagok");
			foreach(Jatekosok, x)
			{
				if(PlayerInfo[x][pLevel] < 6)
					SetPlayerMarkerForPlayer(playerid, x, COLOR_INVISIBLE);
			}
			Msg(playerid,"Jelzések törölve");
		}
		if(egyezik(param[1],"duty"))
		{
			if(PlayerInfo[playerid][pSSS] < 1) return Msg(playerid, "Csak SSS tagok");
			if(SSSDuty[playerid] == 1)
			{
				SSSDuty[playerid] = NINCS;
				foreach(Jatekosok, x)
				{
					if(PlayerInfo[x][pLevel] < 6 || PlayerInfo[x][pSSS]>0)
					{
						SendClientMessage(x, COLOR_WHITE,"====================Segítõ Szeretet Szolgálat====================");
						SendFormatMessage(x, COLOR_LIGHTRED,"SSS tagja: %s, kilépett a szolgálatból. Már ne keresd tovább!!!",PlayerName(playerid));
						SetPlayerMarkerForPlayer(x, playerid, COLOR_INVISIBLE);
					}
				}
			}
			else
			{
				SSSDuty[playerid]=1;
				foreach(Jatekosok, x)
				{
					if(PlayerInfo[x][pLevel] < 6 || PlayerInfo[x][pSSS]>0)
					{
						SendClientMessage(x, COLOR_WHITE, "======================Segítõ Szeretet Szolgálat==============================");
						SendFormatMessage(x, COLOR_LIGHTRED,"SSS tagja: %s, Segítõ szolgálatba állt. Felkeresheted õt, és kérhetsz tõle segítséget.",PlayerName(playerid));
						SendClientMessage(x, COLOR_LIGHTRED, "Írhatsz a szolgálatban lévõ SSS tagoknak a /ssspm [szöveg] paranccsal!");
						SetPlayerMarkerForPlayer(x, playerid, COLOR_LIGHTRED);
					}
				}
			}
		}
        if(egyezik(param[1],"kezdõk"))
		{
			if(PlayerInfo[playerid][pSSS] < 1) return Msg(playerid, "Csak SSS tagok");
			foreach(Jatekosok, x)
			{
				if(PlayerInfo[x][pLevel] < 6 && OsszesPenz(x) < 900000)
				{
					SendFormatMessage(playerid, COLOR_GREEN,"[%d]%s || Összes vagyona: %s Ft || LVL: %d",x,PlayerName(x),FormatNumber( OsszesPenz(x), 0, ',' ),PlayerInfo[x][pLevel]);
					SetPlayerMarkerForPlayer(playerid, x, 0x3F5D99FF);
				}
			}
		}
	}
	if(egyezik(cmd, "/srs"))
	{
		if(GetPlayerVirtualWorld(playerid)==103)
		{
			SSSinfo[playerid]=1;
		}
		else
		{SSSinfo[playerid]=0;}
		if(PlayerInfo[playerid][pSSS] == 0 && SSSinfo[playerid]!=1) return Msg(playerid, "Csak SSS tagjai, vagy SSS irodában!!!");
		if(ssschat == 0) return Msg(playerid, "Sajnálom, de az SSS Chat ki van kapcsolva!");

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /srs [SSS Üzeneted]");

		if(SzovegEllenorzes(playerid, result, "/sss", ELLENORZES_MINDKETTO)) return 1;
		new szoveg[128];
		if(SSSinfo[playerid] == 1) format(szoveg, sizeof(szoveg), "Irodából ügyfél ");

		format(string, sizeof(string), "[%d] %s %s(%d): %s", playerid, SSSRangok[PlayerInfo[playerid][pSSS]], PlayerName(playerid), PlayerInfo[playerid][pLevel],result);
		foreach(Jatekosok, x)
		{
			if(PlayerInfo[x][pSSS] > 0 || SSSinfo[x] == 1 && GetPlayerVirtualWorld(x)==103)
			{
			    if(gFam[x] == 0)
					SendClientMessage(x, COLOR_LIGHTGREEN, string);
			}
		}
	}
	if(egyezik(cmd, "/támogat") || egyezik(cmd, "/tamogat"))
	{
		if(PlayerInfo[playerid][pSSS] == 0 && !Admin(playerid, 2)) return Msg(playerid, "Nem vagy az SSS tagja!");
		new tamogat;
		if(Admin(playerid, 2)) tamogat=150000;
		if(PlayerInfo[playerid][pSSS] == 1) tamogat=50000;
		if(PlayerInfo[playerid][pSSS] == 2) tamogat=100000;
		if(PlayerInfo[playerid][pSSS] == 3) tamogat=150000;
		if(PlayerInfo[playerid][pSSS] == 4) tamogat=200000;
		if(PlayerInfo[playerid][pSSS] == 5) tamogat=250000;		
		if(PlayerInfo[playerid][pSSS] == 6) tamogat=300000;
		if(PlayerInfo[playerid][pSSS] == 7) tamogat=350000;		
		
		if(SSSTamogatas[giveplayerid] > 1500000)
		{
			Msg(giveplayerid,"SSS akart neked adni támogatást, de te már meghaladtad a maximális 1,5 Milliós támogatást!");
			Msg(playerid, "Meghaladta a maximális 1,5 milliós támogatást, nem kaphat többet.");
			return 1;
		}
		if(params < 1) return Msg(playerid, "/támogat [Játékos]");
		giveplayerid = ReturnUser(param[1]);
		if(giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nincs belépve");
		if(Penztkapott[giveplayerid] && PlayerInfo[playerid][pSSS] < 5) return Msg(playerid, "Õ már kapott támogatást!");
		if(PlayerInfo[giveplayerid][pLevel] > 5) return Msg(playerid, "LVL 5 fölöttieknek nem adhatsz!");
		if(OsszesPenz(giveplayerid) > 400000) return Msg(playerid, "Neki már van pénze!");
		if(playerid == giveplayerid) return Msg(playerid, "Magadnak nem!");
		if(SSSSzef < tamogat) return Msg(playerid, "Nincs elég pénz a széfben!");
		SSSSzef -= tamogat;
		if(PlayerInfo[giveplayerid][pBankSzamla] == 0)
		{
			Msg(playerid, "Neki nincs bankszámlája, ezért készpénzben kapta az összeget!");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Nincs bankszámlája, ezért támogattad készpénzben %s Ft-al.",FormatNumber( tamogat, 0, ',' ));
			SendFormatMessage(giveplayerid, COLOR_LIGHTGREEN, "Kaptál a Segítõ Szeretet Szolgálattól ((SSS)) %s Ft készpénzben! Elérhetõségünk:((/sss tagok ||)", FormatNumber( tamogat, 0, ',' ));
			GiveMoney(giveplayerid, tamogat);
			SSSTamogatas[giveplayerid] +=tamogat;
			Penztkapott[giveplayerid] = true;
		}
		else
		{
			PlayerInfo[giveplayerid][pAccount] += tamogat;

			SendFormatMessage(giveplayerid, COLOR_LIGHTGREEN, "Kaptál a Segítõ Szeretet Szolgálattól ((SSS)) %sFt készpénzben! Elérhetõségünk:((/sss tagok || )", FormatNumber( tamogat, 0, ',' ));
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Adtál neki az SSS széfbõl %s Ft-ott", FormatNumber( tamogat, 0, ',' ));
			SSSTamogatas[giveplayerid] +=tamogat;
			Penztkapott[giveplayerid] = true;
		}
		foreach(Jatekosok,x)
		{
			if(PlayerInfo[x][pSSS] != 0)
				SendFormatMessage(x, COLOR_LIGHTGREEN, "%s adott %s-nek az SSS Széfbõl %s forintot!", PlayerName(playerid), PlayerName(giveplayerid), FormatNumber( tamogat, 0, ',' ));
		}
	}

	if(egyezik(cmd, "/adomány") || egyezik(cmd, "/adomany"))
	{

		if(params < 1)
		{
			Msg(playerid, "=================[Frakciók]=================");
			Msg(playerid, "Használat: /adomany [frakció ID | neve ] [összeg]");
			Msg(playerid, "A nevek rövidítésével is mûködik!");
			SendFormatMessage(playerid, COLOR_LIGHTRED, "1. %s 2. %s 3. %s 4. %s 5. %s", Szervezetneve[0][0], Szervezetneve[1][0], Szervezetneve[2][0], Szervezetneve[3][0], Szervezetneve[4][0]);
			SendFormatMessage(playerid, COLOR_LIGHTRED, "6. %s 7. %s 8. %s 9. %s 10. %s", Szervezetneve[5][0], Szervezetneve[6][0], Szervezetneve[7][0], Szervezetneve[8][0], Szervezetneve[9][0]);
			SendFormatMessage(playerid, COLOR_LIGHTRED, "11. %s 12. %s 13. %s 14. %s 15. %s", Szervezetneve[10][0], Szervezetneve[11][0], Szervezetneve[12][0], Szervezetneve[13][0], Szervezetneve[14][0]);
			SendFormatMessage(playerid, COLOR_LIGHTRED, "16. %s 17. %s 18. %s 19. %s 20. %s 21. %s", Szervezetneve[15][0], Szervezetneve[16][0], Szervezetneve[17][0], Szervezetneve[18][0], Szervezetneve[19][0], Szervezetneve[20][0]);
			Msg(playerid,"=================[Speciális]=================");
			SendClientMessage(playerid, COLOR_LIGHTRED, "22. SSS");
			Msg(playerid,"=================[/adomány]=================");
			return 1;
		}
		if(params < 2) return Msg(playerid, "Használat: /adomany [frakció ID | neve ] [összeg]");
		new frakcioid=strval(param[1]);
		if(!IsAt(playerid, IsAt_ATM) && !IsAt(playerid, IsAt_Bank)) return Msg(playerid, "Csak bankban vagy ATM-nél lehet");

		new penz;
		penz = strval(param[2]);
		if(penz < 1000) return Msg(playerid, "Minimum 1000 forint!");
		if(!BankkartyaFizet(playerid, penz,false)) return Msg(playerid, "Nincs ennyi pénzed!");
		if(frakcioid == 0)
			frakcioid=NINCS;
		else
			frakcioid--;
		for(new x=0; x<21; x++)
		{
			if(egyezik(param[1], Szervezetneve[x][0]) || egyezik(param[1], Szervezetneve[x][1]) || egyezik(param[1], Szervezetneve[x][2]) || frakcioid == x)
			{
				x++;
				if(LMT(playerid, x)) return Msg(playerid, "Saját frakciódnak nem lehet. Használd a széfet");
				FrakcioSzef(x, penz,44);
				x--;
				SendRadioMessageFormat(x+1, COLOR_LIGHTGREEN, "%s támogatta a %s -t %s forinttal!", PlayerName(playerid), Szervezetneve[x][0], FormatNumber( penz, 0, ',' ));
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Támogattad a %s-t %d forinttal!",Szervezetneve[x][0],penz);
				BankkartyaFizet(playerid, penz);
				
				
				return 1;
			}
		}
		if(egyezik(param[1], "sss") ||  frakcioid == 22)
		{
			Msg(playerid, "Támogattad az SSS-t!");
			SSSSzef += penz;
			BankkartyaFizet(playerid, penz);
			for(new y = 0; y < MAX_PLAYERS; y++)
			{
				if(PlayerInfo[y][pSSS] >= 1)
					SendFormatMessage(y, COLOR_LIGHTGREEN,  "%s támogatta az SSS-t %s forinttal!", PlayerName(playerid), FormatNumber( penz, 0, ',' ));
			}
			return 1;
		}
		Msg(playerid,"Valamit elírtál szerintem");
		return 1;
	}
	if(egyezik(cmd, "/licit"))
	{
		if(!Aukcio[aElinditva])
			return Msg(playerid, "Nincs aukció elindítva");

		if(!Aukciozik[playerid])
			return Msg(playerid, "Jelenleg nem aukciózol. Ha szeretnél aukciózni, írd be: /aukció részvétel");

		//if(!PlayerToPoint(10.0, playerid, 319.203, 130.035, 1007.965))
		//	return Msg(playerid, "Nem vagy az aukciós helyen");

		if(params < 1)
			return Msg(playerid, "Használata: /licit [összeg] vagy /licit ppont vagy /licit arany [mennyiség]");

		if(!IsNumeric(param[1]) && !egyezik(param[1], "ppont") && !egyezik(param[1], "arany"))
			return Msg(playerid, "Egy számot adj meg!");

		new osszeg, minemeles;

		if(egyezik(param[1], "ppont"))
			osszeg = NINCS;
		else if(egyezik(param[1], "arany"))
			osszeg = -2;
		else
			osszeg = strval(param[1]);

		if(osszeg != NINCS)
		{
			if(Aukcio[aTipus] == ARVERES_TIPUS_KOCSI && PlayerInfo[playerid][pPcarkey] != NINCS)
				return Msg(playerid, "Aukció: Már van egy jármûved, így nem licitálhatsz rá", false);

			if(Aukcio[aTipus] == ARVERES_TIPUS_HAZ && PlayerInfo[playerid][pPhousekey] != NINCS)
				return Msg(playerid, "Aukció: Már van egy házad, így nem licitálhatsz rá", false);

			if(Aukcio[aLicit] < 10000) minemeles = 500;
			else if(Aukcio[aLicit] < 100000) minemeles = 5000;
			else if(Aukcio[aLicit] < 1000000) minemeles = 50000;
			else minemeles = 100000;

			if(osszeg < (Aukcio[aLicit] + minemeles))
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Aukció: A jelenlegi licit %dFt, minimum %dFtot kell licitálnod! A minimum emelés %dFt", Aukcio[aLicit], (Aukcio[aLicit] + minemeles), minemeles);
				return 1;
			}

			if(osszeg > PlayerInfo[playerid][pAccount] && osszeg > GetMoney(playerid))
				return Msg(playerid, "Aukció: Nincs elég pénzed!", false);

			if(Aukcio[aLicitalo] == playerid)
				return Msg(playerid, "Aukció: Minek licitálsz magad ellen?", false);
		}
		else
		{
			if(Aukcio[aTipus] == ARVERES_TIPUS_KOCSI && PlayerInfo[playerid][pPcarkey] != NINCS && PlayerInfo[playerid][pPcarkey2] != NINCS && PlayerInfo[playerid][pPcarkey3] != NINCS)
				return Msg(playerid, "Aukció: Már van három jármûved jármûved, így nem licitálhatsz rá", false);

			if(Aukcio[aTipus] == ARVERES_TIPUS_HAZ && PlayerInfo[playerid][pPhousekey] != NINCS && PlayerInfo[playerid][pPhousekey2] != NINCS && PlayerInfo[playerid][pPhousekey3] != NINCS)
				return Msg(playerid, "Aukció: Már van három házad, így nem licitálhatsz rá", false);

			if(egyezik(param[1], "ppont") && PlayerInfo[playerid][pPremiumPont] < 1)
				return Msg(playerid, "Nincs prémiumpontod");
			
			if(egyezik(param[1], "arany") && PlayerInfo[playerid][pArany] < 1)
				return Msg(playerid, "Nincs aranyad");
			
			if(egyezik(param[1], "ppont"))
				PlayerInfo[playerid][pPremiumPont]--;
			
			if(egyezik(param[1], "arany"))
				PlayerInfo[playerid][pArany]--;

			new result[128];

			if(Aukcio[aTipus] == ARVERES_TIPUS_HAZ)
			{
				HouseInfo[Aukcio[aID]][hOwned] = 1;
				HouseInfo[Aukcio[aID]][hCsak] = 0;
				strmid(HouseInfo[Aukcio[aID]][hOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), MAX_PLAYER_NAME);
				HouseInfo[Aukcio[aID]][hTulaj] = PlayerInfo[playerid][pID];
				HouseInfo[Aukcio[aID]][hDate] = UnixTime;
				HazUpdate(Aukcio[aID], HAZ_Owned, HAZ_Csak, HAZ_Owner, HAZ_Date, HAZ_Tulaj);

				HazUrites(Aukcio[aID]);
				
				CorrectPlayerDatas(playerid);
				Msg(playerid, "Aukció: Gratulálunk. Most már tiéd a ház!", false, COLOR_LIGHTBLUE);
				if(egyezik(param[1], "ppont"))
					format(result, 128, "Árverés vezetõ: Eladva! %s megvette a házat 1db prémiumpontért", ICPlayerName(playerid), Aukcio[aLicit]);
				else
					format(result, 128, "Árverés vezetõ: Eladva! %s megvette a házat 1db aranyrúdért", ICPlayerName(playerid), Aukcio[aLicit]);

				foreach(Jatekosok, x)
				{
					if(Aukciozik[x] && x != playerid)
						SendClientMessage(x, COLOR_LIGHTBLUE, result);
				}

				Aukcio[aElinditva] = false;
				Aukcio[aVarakozas] = 0;
				Aukcio[aTipus] = 0;

				foreach(Jatekosok, x)
				{
					Licitalt[x] = false;
					Aukciozik[x] = false;
				}
				NPCArveresUpdate();

			}
			else if(Aukcio[aTipus] == ARVERES_TIPUS_KOCSI)
			{
				CarInfo[Aukcio[aID]][cOwned] = 1;
				strmid(CarInfo[Aukcio[aID]][cOwner], PlayerName(playerid), 0, strlen(PlayerName(playerid)), MAX_PLAYER_NAME);
				CarInfo[Aukcio[aID]][cTulaj] = PlayerInfo[playerid][pID];
				CarInfo[Aukcio[aID]][cDate] = UnixTime;
				CarUpdate(Aukcio[aID], CAR_Owned, CAR_Owner, CAR_Tulaj, CAR_Date);

				CorrectPlayerDatas(playerid);
				Msg(playerid, "Aukció: Gratulálunk. A jármûved kint áll a parkolóban!", false, COLOR_LIGHTBLUE);
				if(egyezik(param[1], "ppont"))
					format(result, 128, "Árverés vezetõ: Eladva! %s megvette a jármûvet 1db prémiumpontért", ICPlayerName(playerid), Aukcio[aLicit]);
				else
					format(result, 128, "Árverés vezetõ: Eladva! %s megvette a házat 1db aranyrúdért", ICPlayerName(playerid), Aukcio[aLicit]);

				foreach(Jatekosok, x)
				{
					if(Aukciozik[x] && x != playerid)
						SendClientMessage(x, COLOR_LIGHTBLUE, result);
				}

				Aukcio[aElinditva] = false;
				Aukcio[aVarakozas] = 0;
				Aukcio[aTipus] = 0;

				foreach(Jatekosok, x)
				{
					Licitalt[x] = false;
					Aukciozik[x] = false;
				}
				NPCArveresUpdate();
			}
			else
				Msg(playerid, "Hiba történt");
			return 1;
		}

		if(!PlayerToPoint(10.0, playerid, 319.203, 130.035, 1007.965))
		{
			Cselekves(playerid, "licitált SMSben");
			format(string, sizeof(string), "Árverés vezetõ: Új licit! Licitáló: %s [SMSben], összeg: %s Ft", ICPlayerName(playerid), FormatNumber( osszeg, 0, ',' ));
		}
		else
			format(string, sizeof(string), "Árverés vezetõ: Új licit! Licitáló: %s, összeg: %sFt", ICPlayerName(playerid), FormatNumber( osszeg, 0, ',' ));
		ProxDetector(B_Normal, ArveresNPC, string, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE);

		foreach(Jatekosok, x)
		{
			if(Aukciozik[x] && !PlayerToPoint(10.0, x, 319.203, 130.035, 1007.965) && x != playerid)
				SendClientMessage(x, COLOR_LIGHTBLUE, string);
		}

		if(Aukcio[aLicitalo] != NINCS && Aukcio[aLicitalo] != INVALID_PLAYER_ID)
		{
			Licitalt[Aukcio[aLicitalo]] = false;
			Msg(Aukcio[aLicitalo], "Aukció: Túl licitáltak", false);
		}

		Licitalt[playerid] = true;
		Aukcio[aLicitalo] = playerid;
		Aukcio[aLicit] = osszeg;
		Aukcio[aIdo] = 0;
		//Licit(playerid, true, osszeg);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aukció: Sikeresen licitáltál");

		NPCArveresUpdate();

		return 1;
	}

	if(egyezik(cmd, "/rejtett"))
	{
		if(Szint(playerid)  < 5) return Msg(playerid, "Minimum 5ös szint.");
		if(!Rejtett[playerid])
		{
			Msg(playerid, "Hívószám kikapcsolva.");
			Rejtett[playerid] = 1;
			return 1;
		}
		Msg(playerid, "Hívószám bekapcsolva.");
		Rejtett[playerid] = 0;
		return 1;
	}

	if(egyezik(cmd, "/belépés") || egyezik(cmd, "/belepes"))
	{
		Msg(playerid, "/nyit");
		return 1;
	}
	if(egyezik(cmd, "/base"))
	{
		return Msg(playerid, "/pda");

	}

	if(egyezik(cmd, "/aukció") || egyezik(cmd, "/aukcio"))
	{
		if(params < 1)
		{
			Msg(playerid, "Használata: /aukció [funkció]", false);
			Msg(playerid, "Funkciók: árverések, részvétel", false);
			if(Admin(playerid, 1337))
			Msg(playerid, "Admin: hozzáad, töröl, indít, licit, eladható");
			return 1;
		}

		if(egyezik(param[1], "részvétel") || egyezik(param[1], "reszvetel"))
		{
			if(!Aukcio[aElinditva])
				return Msg(playerid, "Jelenleg nincs aukció!");

			if(Aukciozik[playerid])
				Msg(playerid, "Most már nem veszel részt az aukción");
			else
				Msg(playerid, "Most már részt veszel az aukción, így látod ki és mennyit licitál");

			Aukciozik[playerid] = !Aukciozik[playerid];
		}
		else if(egyezik(param[1], "eladható") || egyezik(param[1], "eladhato"))
		{
			if(!Admin(playerid, 1337)) return 1;
			if(params < 2)
				return Msg(playerid, "Használata: /aukció eladható [ház / kocsi]", false);

			new mettol = 1, db, bool:haz, darab = 10;

			if(egyezik(param[2], "ház") || egyezik(param[2], "haz")) haz = true;
			else if(egyezik(param[2], "kocsi")) haz = false;
			else return Msg(playerid, "Használata: /aukció eladható [ház / kocsi]", false);

			if(params > 2)
				mettol = strval(param[3]);

			if(params > 3)
				darab = strval(param[4]);

			if(mettol < 1 || mettol > 30)
				return Msg(playerid, "Hiba: Minimum egytõl, maximum 30tól!", false);

			if(darab < 3 || darab > 20)
				return Msg(playerid, "Hiba: Minimum 3, maximum 20db!", false);

			if(haz) for(new x = 0; x < MAXHAZ; x++)
			{
				if(HouseInfo[x][Van] != 1 || !InaktivCucc(x, INAKTIV_HAZ) || HouseInfo[x][hOwned] == 0) continue;

				db++;
				if(db >= mettol)
					SendFormatMessage(playerid, COLOR_GREY, "Ház: Class u. %d - Hely: %s", x, Haztipus(HouseInfo[x][hTipus]));

				if((db - mettol + 1) >= darab)
					break;
			}
			else for(new x = 0; x < MAXVSKOCSI; x++)
			{
				if(CarInfo[x][Van] != 1 || !InaktivCucc(x, INAKTIV_KOCSI)) continue;

				db++;
				if(db >= mettol)
					SendFormatMessage(playerid, COLOR_GREY, "JármûID: %d - V-s Rendszám: %d - Model: %s", x, CarInfo[x][cId], GetVehicleModelName(CarInfo[x][cId], true));

				if((db - mettol + 1) >= darab)
					break;
			}
			SendFormatMessage(playerid, COLOR_GREY, "%d darab találat", db);
		}
		else if(egyezik(param[1], "licit"))
		{
			if(!Admin(playerid, 1337)) return 1;
			if(Aukcio[aElinditva])
			{
				if(Aukcio[aLicitalo] != NINCS)
					SendFormatMessage(playerid, COLOR_GREY, "Utolsó licitáló: %s - %dFt", ICPlayerName(Aukcio[aLicitalo]), Aukcio[aLicit]);
				else if(Aukcio[aLicitalo] == INVALID_PLAYER_ID)
					SendFormatMessage(playerid, COLOR_GREY, "A licitáló kilépett: %s - %dFt", Aukcio[aLicitaloVolt], Aukcio[aLicit]);
				else
					SendClientMessage(playerid, COLOR_GREY, "Nem licitáltak még");
				/*if(Aukcio[aLicitalok][0] != NINCS)
					SendFormatMessage(playerid, COLOR_GREY, "Elõzõ licitáló: %s - %dFt", PlayerName(Aukcio[aLicitalok][0]), Aukcio[aLicitek][0]);
				if(Aukcio[aLicitalok][1] != NINCS)
					SendFormatMessage(playerid, COLOR_GREY, "Elõzõ licitáló: %s - %dFt", PlayerName(Aukcio[aLicitalok][1]), Aukcio[aLicitek][1]);
				if(Aukcio[aLicitalok][2] != NINCS)
					SendFormatMessage(playerid, COLOR_GREY, "Elõzõ licitáló: %s - %dFt", PlayerName(Aukcio[aLicitalok][2]), Aukcio[aLicitek][2]);*/
			}
			else
				SendClientMessage(playerid, COLOR_GREY, "Nincs elindítva árverés");
		}
		else if(egyezik(param[1], "indít") || egyezik(param[1], "indit"))
		{
			if(!Admin(playerid, 1337)) return 1;

			if(Aukcio[aElinditva])
				return Msg(playerid, "Aukció: Már van elindítva aukció", false);
			if(params < 2)
				return Msg(playerid, "Használata: /aukció indít [kikiáltási ár] [késleltetési idõ percben - 0=ki] [automatikus részvétel: 0 / 1]", false);

			new ar, ido, slot = NINCS;
			ar = strval(param[2]);

			if(params < 3)
				ido = 0;
			else
				ido = strval(param[3]);

			if(ar < 1)
				return Msg(playerid, "Aukció: A minimum 1Ft!", false);
			if(ido < 0 || ido > 15)
				return Msg(playerid, "Aukció: A minimum 1perc, a maximum 15perc, vagy 0 a kikapcsoláshoz", false);

			for(new x = 0; x < MAXAUKCIO; x++)
			{
				if(AukcioVarolista[x][vVan])
				{
					if(AukcioVarolista[x][vTipus] == ARVERES_TIPUS_HAZ)
					{
						if(AukcioVarolista[x][vID] < 0 || AukcioVarolista[x][vID] >= MAXHAZ || HouseInfo[AukcioVarolista[x][vID]][Van] != 1 || !InaktivCucc(AukcioVarolista[x][vID], INAKTIV_HAZ))
						{
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Class u. %d törölve a várólistáról", AukcioVarolista[x][vID]);
							AukcioVarolista[x][vVan] = false;
							AukcioVarolista[x][vTipus] = 0;
						}
						else { slot = x; break; }
					}
					else if(AukcioVarolista[x][vTipus] == ARVERES_TIPUS_KOCSI)
					{
						if(AukcioVarolista[x][vID] < 0 || AukcioVarolista[x][vID] >= MAXVSKOCSI || CarInfo[AukcioVarolista[x][vID]][Van] != 1 || !InaktivCucc(AukcioVarolista[x][vID], INAKTIV_KOCSI))
						{
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "JármûID: %d V-s Rendszám: %d törölve a várólistáról", AukcioVarolista[x][vID], CarInfo[AukcioVarolista[x][vID]][cId]);
							AukcioVarolista[x][vVan] = false;
							AukcioVarolista[x][vTipus] = 0;
						}
						else { slot = x; break; }
					}
				}
			}
			if(slot == NINCS)
				return Msg(playerid, "Aukció: A várólista üres", false);

			if(params >= 4 && strval(param[4]) == 1)
				Aukciozik[playerid] = true;

			Aukcio[aID] = AukcioVarolista[slot][vID];
			Aukcio[aTipus] = AukcioVarolista[slot][vTipus];
			Aukcio[aKezdoLicit] = ar;
			Aukcio[aLicit] = ar;
			Aukcio[aIdo] = 0;
			Aukcio[aVarakozas] = 0;

			AukcioVarolista[slot][vVan] = false;

			new uzenet[128];
			if(ido > 0)
			{
				Aukcio[aElinditva] = false;
				Aukcio[aVarakozas] = ido * 60;
				switch(Aukcio[aTipus])
				{
					case ARVERES_TIPUS_HAZ: format(uzenet, 128, "Aukciós ház: Árverés indul %dperc mulva egy házra. Elhelyezkedés: %s, kikiáltási ár: %sFt - /aukció részvétel", ido, Haztipus(HouseInfo[Aukcio[aID]][hTipus]), FormatNumber( ar, 0, ',' ));
					case ARVERES_TIPUS_KOCSI: format(uzenet, 128, "Aukciós ház: Árverés indul %dperc mulva egy kocsira. Model: %s, kikiáltási ár: %sFt - /aukció részvétel", ido, GetVehicleModelName(CarInfo[Aukcio[aID]][cId], true), FormatNumber( ar, 0, ',' ));
				}
			}
			else
			{
				Aukcio[aElinditva] = true;
				Aukcio[aVarakozas] = 0;
				switch(Aukcio[aTipus])
				{
					case ARVERES_TIPUS_HAZ: format(uzenet, 128, "Aukciós ház: Árverés indult egy házra. Elhelyezkedés: %s, kikiáltási ár: %sFt - /aukció részvétel", Haztipus(HouseInfo[Aukcio[aID]][hTipus]), FormatNumber( ar, 0, ',' ));
					case ARVERES_TIPUS_KOCSI: format(uzenet, 128, "Aukciós ház: Árverés indult egy kocsira. Model: %s, kikiáltási ár: %sFt - /aukció részvétel", GetVehicleModelName(CarInfo[Aukcio[aID]][cId], true), FormatNumber( ar, 0, ',' ));
				}
			}

			if(Aukcio[aTipus] == ARVERES_TIPUS_KOCSI)
			{
				LicitKocsi = CarInfo[Aukcio[aID]][cId];
				LockCar(LicitKocsi);
				
				//ACrs[carid]=true;
				ParkCar(Aukcio[aID], -2684.219, -30.470, 4.335, 92.563);
				//ACrs[carid]=false;

				CarInfo[Aukcio[aID]][cOwned] = 0;
				strmid(CarInfo[Aukcio[aID]][cOwner], "Nincs_Tulaj", 0, strlen("Nincs_Tulaj"), 20);
				CarInfo[Aukcio[aID]][cTulaj] = NINCS;

				CarUpdate(Aukcio[aID], CAR_Owned, CAR_Owner, CAR_Tulaj);
			}

			foreach(Jatekosok, x)
			{
				if(Szint(x) > 4)
					SendClientMessage(x, COLOR_ORANGE, uzenet);
			}

			Aukcio[aLicitalo] = NINCS;

			NPCArveresUpdate();

			/*Aukcio[aLicitalok] = {NINCS, NINCS, NINCS};
			Aukcio[aLicitek] = {0, 0, 0};*/
		}
		else if(egyezik(param[1], "töröl") || egyezik(param[1], "torol"))
		{
			if(!Admin(playerid, 1337)) return 1;

			if(params < 2)
				return Msg(playerid, "Használata: /aukció töröl [várólista ID]", false);

			new slot = strval(param[2]) - 1;
			if(slot < 0 || slot >= MAXAUKCIO || !AukcioVarolista[slot][vVan])
				return Msg(playerid, "Aukció: Hibás várólista ID", false);

			AukcioVarolista[slot][vTipus] = 0;
			AukcioVarolista[slot][vVan] = false;

			ABroadCastFormat(1, COLOR_LIGHTRED, "<< Aukció: %s törölt a várólistáról egy árverést >>", PlayerName(playerid));
		}
		else if(egyezik(param[1], "hozzáad") || egyezik(param[1], "hozzaad"))
		{
			if(!Admin(playerid, 1337)) return 1;

			new slot = NINCS, bool:talalt;
			for(new x = 0; x < MAXAUKCIO; x++) if(!AukcioVarolista[x][vVan]) { slot = x; break; }

			if(slot == NINCS)
				return Msg(playerid, "Aukció: Tele a várólista", false);
			if(params < 3)
				return Msg(playerid, "Használata: /aukció hozzáad [ház / kocsi] [házszám / rendszám]", false);

			new id = strval(param[3]);
			if(egyezik(param[2], "ház") || egyezik(param[2], "haz"))
			{
				if(id < 0 || id >= MAXHAZ || !HouseInfo[id][Van])
					return Msg(playerid, "Aukció: Nincs ilyen ház", false);
				if(!InaktivCucc(id, INAKTIV_HAZ) ||  HouseInfo[id][hOwned] == 0)
					return Msg(playerid, "Aukció: Ez a ház még nem eladható", false);

				for(new x = 0; x < MAXAUKCIO; x++) if(AukcioVarolista[x][vID] == id && AukcioVarolista[x][vTipus] == ARVERES_TIPUS_HAZ) { talalt = true; break; }
				if(Aukcio[aID] == id && Aukcio[aTipus] == ARVERES_TIPUS_HAZ || talalt)
					return Msg(playerid, "Aukció: Ez már várólistán van", false);

				AukcioVarolista[slot][vVan] = true;
				AukcioVarolista[slot][vTipus] = ARVERES_TIPUS_HAZ;
				AukcioVarolista[slot][vID] = id;

				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Aukció: %s hozzáadott a várólistához egy házat >>", PlayerName(playerid));
				
				new result[128];

				new garazs = sizeof(GarazsInfo);
				for(new h = 0; h < garazs; h++)
				{
					if(GarazsInfo[h][hHaz]==id)
					{
						DestroyDynamicPickup(GarazsPickup[h]);
						format(result, 128, "DELETE FROM %s WHERE ID='%d'", SQL_DB_Garazs, h); doQuery( result );
						GarazsInfo[h][hEladva] = 0;
						GarazsInfo[h][hEntrancex] = 0.0;
						GarazsInfo[h][hEntrancey] = 0.0;
						GarazsInfo[h][hEntrancez] = 0.0;
						GarazsInfo[h][Van] = 0;
					}
				}
			}
			else if(egyezik(param[2], "kocsi"))
			{
				if(id < 0 || id >= MAXVSKOCSI || !CarInfo[id][Van])
					return Msg(playerid, "Aukció: Nincs ilyen kocsi", false);
				if(!InaktivCucc(id, INAKTIV_KOCSI))
					return Msg(playerid, "Aukció: Ez a kocsi még nem eladható", false);

				for(new x = 0; x < MAXAUKCIO; x++) if(AukcioVarolista[x][vID] == id && AukcioVarolista[x][vTipus] == ARVERES_TIPUS_KOCSI) { talalt = true; break; }
				if(Aukcio[aID] == id && Aukcio[aTipus] == ARVERES_TIPUS_KOCSI || talalt)
					return Msg(playerid, "Aukció: Ez már várólistán van", false);

				AukcioVarolista[slot][vVan] = true;
				AukcioVarolista[slot][vTipus] = ARVERES_TIPUS_KOCSI;
				AukcioVarolista[slot][vID] = id;

				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Aukció: %s hozzáadott a várólistához egy kocsit >>", PlayerName(playerid));
			}
			else
				Msg(playerid, "Használata: /aukció hozzáad [ház / kocsi] [házszám / rendszám]", false);
		}
		if(egyezik(param[1], "árverések") || egyezik(param[1], "arveresek"))
		{
			Msg(playerid, "==========[ Árverések ]==========", false, COLOR_WHITE);
			if(!Aukcio[aElinditva] && Aukcio[aVarakozas] == 0)
				Msg(playerid, "Aukció: Jelenleg nincs folyamatban árverés", false);
			else if(!Aukcio[aElinditva] && Aukcio[aVarakozas] > 0)
			{
				if(Aukcio[aTipus] == ARVERES_TIPUS_HAZ)
					SendFormatMessage(playerid, COLOR_YELLOW, "Aukció: Árverés hamarosan (%dmp) - Class u. %d - Hely: %s - Kikiáltási ár: %sFt", Aukcio[aVarakozas], Aukcio[aID], Haztipus(HouseInfo[Aukcio[aID]][hTipus]), FormatNumber( Aukcio[aKezdoLicit], 0, ',' ));
				else if(Aukcio[aTipus] == ARVERES_TIPUS_KOCSI)
					SendFormatMessage(playerid, COLOR_YELLOW, "Aukció: Árverés hamarosan (%dmp) - JármûID: %d - Model: %s - Kikiáltási ár: %sFt", Aukcio[aVarakozas], CarInfo[Aukcio[aID]][cId], GetVehicleModelName(CarInfo[Aukcio[aID]][cId], true), FormatNumber( Aukcio[aKezdoLicit], 0, ',' ));
			}
			else
			{
				if(Aukcio[aLicit] == 0)
				{
					if(Aukcio[aTipus] == ARVERES_TIPUS_HAZ)
						SendFormatMessage(playerid, COLOR_YELLOW, "Aukció: Árverés folyamatban - Class u. %d - Hely: %s - Kikiáltási ár: %sFt", Aukcio[aID], Haztipus(HouseInfo[Aukcio[aID]][hTipus]), FormatNumber( Aukcio[aKezdoLicit], 0, ',' ));
					else if(Aukcio[aTipus] == ARVERES_TIPUS_KOCSI)
						SendFormatMessage(playerid, COLOR_YELLOW, "Aukció: Árverés folyamatban - JármûID: %d - Model: %s - Kikiáltási ár: %sFt", CarInfo[Aukcio[aID]][cId], GetVehicleModelName(CarInfo[Aukcio[aID]][cId], true), FormatNumber( Aukcio[aKezdoLicit], 0, ',' ));
				}
				else
				{
					if(Aukcio[aTipus] == ARVERES_TIPUS_HAZ)
						SendFormatMessage(playerid, COLOR_YELLOW, "Aukció: Árverés folyamatban - Class u. %d - Hely: %s - Utolsó licit: %sFt", Aukcio[aID], Haztipus(HouseInfo[Aukcio[aID]][hTipus]), FormatNumber( Aukcio[aLicit], 0, ',' ));
					else if(Aukcio[aTipus] == ARVERES_TIPUS_KOCSI)
						SendFormatMessage(playerid, COLOR_YELLOW, "Aukció: Árverés folyamatban - JármûID: %d - Model: %s - Utolsó licit: %sFt", CarInfo[Aukcio[aID]][cId], GetVehicleModelName(CarInfo[Aukcio[aID]][cId], true), FormatNumber( Aukcio[aLicit], 0, ',' ));
				}
			}
			for(new varolista = 0; varolista < MAXAUKCIO; varolista++)
			{
				if(AukcioVarolista[varolista][vVan])
				{
					if(AukcioVarolista[varolista][vTipus] == ARVERES_TIPUS_HAZ)
						SendFormatMessage(playerid, COLOR_YELLOW, "[%d]Várólista: Class u. %d - Hely: %s", (varolista+1), AukcioVarolista[varolista][vID], Haztipus(HouseInfo[AukcioVarolista[varolista][vID]][hTipus]));
					else if(AukcioVarolista[varolista][vTipus] == ARVERES_TIPUS_KOCSI)
						SendFormatMessage(playerid, COLOR_YELLOW, "[%d]Várólista: JármûID: %d - Model: %s", (varolista+1), CarInfo[AukcioVarolista[varolista][vID]][cId], GetVehicleModelName(CarInfo[AukcioVarolista[varolista][vID]][cId], true));
				}
			}
		}
		return 1;
	}


	if(egyezik(cmd, "/beköt") || egyezik(cmd, "/bekot"))
	{
		if(Szint(playerid) < 10) return Msg(playerid, "10es szinttõl!");
		if(params < 2) return Msg(playerid, "/beköt [száj / szem] [játékos neve / id]");
		new p = ReturnUser(param[2]);
		if(p == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos");
		if(egyezik(param[1], "száj") || egyezik(param[1], "szaj"))
		{
			if(!Leutve[p] && !PlayerTied[p]) return Msg(playerid, "A játékos nincs leütve / megkötözve.");
			if(GetDistanceBetweenPlayers(playerid, p) > 5.0) return Msg(playerid, "Õ nincs a közeledben");
			if(!SzajBekotve[p])
			{
				Msg(playerid, "Bekötötted a száját.");
				Msg(p, "Bekötötték a szádat, így nem tudsz beszélni.");
				SzajBekotve[p] = 1;
				Cselekves(playerid, "bekötötte a valakinek a száját", 1);
				return 1;
			}
			Msg(playerid, "Levetted a kötést a szájáról.");
			Msg(p, "Levették a kötést a szádról, újra tudsz beszélni.");
			SzajBekotve[p] = 0;
			Cselekves(playerid, "levette valakinek a kötést a szájáról", 1);
			return 1;
		}
		if(egyezik(param[1], "szem"))
		{
			if(!Leutve[p] && !PlayerTied[p]) return Msg(playerid, "A játékos nincs leütve / megkötözve.");
			if(GetDistanceBetweenPlayers(playerid, p) > 5.0) return Msg(playerid, "Õ nincs a közeledben");
			if(!SzemBekotve[p])
			{
				Msg(playerid, "Bekötötted a szemét.");
				Msg(p, "Bekötötték a szemed, így nem látsz semmit.");
				SzemBekotve[p] = 1;
				Feketeseg(p, true);
				Cselekves(playerid, "bekötötte a valakinek a szemét", 1);
				return 1;
			}
			Msg(playerid, "Levetted a kötést a szemérõl.");
			Msg(p, "Levették a kötést a szemedrõl, újra látsz.");
			SzemBekotve[p] = 0;
			Feketeseg(p, false);
			Cselekves(playerid, "levette valakinek a kötést a szemérõl", 1);
			return 1;
		}
	}

	if(egyezik(cmd, "/sebességkorlát") || egyezik(cmd, "/sebessegkorlat") || egyezik(cmd, "/sk"))
	{
		if(params < 1)
			return Msg(playerid, "Használata: /sebességkorlát [50-130 vagy 0]");

		new seb = strval(param[1]);
		if(seb < 50 && seb != 0 || seb > 130)
			return Msg(playerid, "Használata: /sebességkorlát [50-130 vagy 0]");

		if(veh && IsABicikli(veh)) return Msg(playerid, "Biciklin nem módosítható");
		if(veh && GetVehicleModel(veh) == 532) return Msg(playerid, "a-a");

		SebessegKorlat[playerid] = seb;
		SendFormatMessage(playerid, COLOR_LIGHTRED, "* Sebességkorlát beállítva: %d km/h", seb);

		return 1;
	}

	if(egyezik(cmd, "/elvesz"))
	{
		if(params < 1)
		{
			Msg(playerid,"/elvesz [Mit]");
			SendClientMessage(playerid,COLOR_LIGHTRED,"Amit elvehetsz: Kaja, Kokain, Heroin, Mati, Cigi, Kötszer, Fegyver, Armor, Rádió, Csipogó, Pénz, Jelvény");
			return 1;
		}
		if(IsACop(playerid) && OnDuty[playerid] == 1) return Msg(playerid, "Mégis miért rabolsz ki valakit szolgálatban? ((/take))");

		new p = KozelbenValaki(playerid, 2.0);
		if(p == NINCS) return Msg(playerid, "A közeledben nincs senki!");

		//if(Szunet[p]) return Msg(playerid, "Épp ESC-el várj mire visszatér!");

		if(Animban[playerid])
			return Msg(playerid, "Animban?");

		if(p == playerid)
			return Msg(playerid, "Magadtól akarod elvenni?");

		if(!NemMozoghat(p) && !PlayerInfo[p][pMegad])
			return Msg(playerid, "A játékos nincs leütve / megkötözve / animban / cuffolva / nem adta meg magát");

		if(NemMozoghat(playerid))
			return Msg(playerid, "Leütve / megkötözve / animban / cuffolva nem lehet!");

		if(Paintballozik[playerid] || Paintballozik[p])
			return Msg(playerid, "Paintballon nem lehet!");

		if(PlayerInfo[playerid][pJailed] == 3 || PlayerInfo[playerid][pJailed] == 6)
		{
			Cselekves(playerid, "rabolni akart adminjailban, de kapott +15perc idõt :)", 0, true);
			PlayerInfo[playerid][pJailTime] += 900;
			return 1;
		}

		if(FloodCheck(playerid)) return 1;
		if(AnimIdo[p] > 0) return Msg(playerid, "Õ csak elesett!");
		if(egyezik(param[1], "fegyver") || egyezik(param[1], "weapon"))
		{
			if(Szint(playerid) < WEAPON_MIN_LEVEL)
				return Msg(playerid, "A fegyver csak az 5. szinttõl engedélyezett");
			
			if(PlayerInfo[playerid][pFegyverTiltIdo] > 0)
				return Msg(playerid, "El vagy tiltva a fegyver használattól!");
			
			if(params < 2)
				return Msg(playerid, "Használata: /elvesz fegyver [fegyvernév / ID]");
			
			new weapon;
			
			weapon = GetGunFromString(param[2]);
			
			if(weapon < 1 || weapon > MAX_WEAPONS)
				return Msg(playerid, "Hibás fegyvernév / ID");

			if(WeaponHaveWeapon(p, weapon) < 0)
				return Msg(playerid, "Neki nincs ilyen fegyvere");
			
			if(WeaponCanHoldWeapon(playerid, weapon) < 0)
				return Msg(playerid, "Nem tudod elvenni tõle, mert túl sok fegyver van már nálad");
			
			if(!WeaponTakeWeapon(p, weapon))
				return Msg(playerid, "Nem tudod elvenni tõle");
			
			WeaponGiveWeapon(playerid, weapon);

			new wepname[32]; wepname = GetGunName(weapon);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél tõle egy %s-t", wepname);
			SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled egy %s-t", wepname);
			format(_tmpString, 128, "elvett egy %s-t", wepname), Cselekves(playerid, wepname);
			new log[256];
			format(log, sizeof(log), "%s elvett %s tipusú fegyvert %s-tol/tõl", PlayerName(playerid), wepname, PlayerName(p));
			Log("Fegyver", log);
		}
		else if(egyezik(param[1], "ammo") || egyezik(param[1], "lõszer") || egyezik(param[1], "loszer"))
		{
			if(Szint(playerid) < WEAPON_MIN_LEVEL)
				return Msg(playerid, "A fegyver csak az 5. szinttõl engedélyezett");
			
			if(PlayerInfo[playerid][pFegyverTiltIdo] > 0)
				return Msg(playerid, "El vagy tiltva a fegyver használattól!");
			
			if(params < 2)
				return Msg(playerid, "Használata: /elvesz lõszer [fegyvernév / ID]");
				
			new weapon;			
			weapon = GetGunFromString(param[2]);
			
			if(weapon < 1 || weapon > MAX_WEAPONS)
				return Msg(playerid, "Hibás fegyvernév / ID");

			if(WeaponData[weapon][wType] == WEAPON_TYPE_HAND)
				return Msg(playerid, "Ez a fegyver nem lõszer alapú");

			if(!WeaponHaveAmmo(p, weapon, 1))
				return Msg(playerid, "Neki nincs lõszere ehhez a fegyverhez");
			
			new ammo = max(0, min(WeaponMaxAmmo(weapon) - WeaponAmmo(playerid, weapon), WeaponAmmo(p, weapon)));
			//if(WeaponCanHoldAmmo(playerid, weapon, ammo))
				//return Msg(playerid, "Nem tudod elvenni tõle, mert túl sok fegyver van már nálad");
			
			if(!WeaponTakeAmmo(p, weapon))
				return Msg(playerid, "Nem tudod elvenni tõle");
			
			if(ammo)
				WeaponGiveAmmo(playerid, weapon, ammo);

			if(ammo)
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél tõle %ddb %s lõszert", ammo, GunName(weapon));
			else
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Nálad nincs hely már lõszernek, ezért a lõszer amit elvettél, törlõdött");
				
			SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvették tõled a %s fegyver lõszereit", GunName(weapon));
			format(_tmpString, 128, "elvette a %s fegyver lõszereit tõle: %s", GunName(weapon), Nev(p)), Cselekves(playerid, GunName(weapon));
			
			new log[256];
			format(log, sizeof(log), "%s elvett %d darab %s tipusú lõszert %s-tol/tõl", PlayerName(playerid), ammo, GunName(weapon), PlayerName(p));
			Log("Fegyver", log);
		}
		else if(egyezik(param[1], "ruha"))
		{
			if(params < 2)
				return Msg(playerid, "Használata: /elvesz ruha [csere / elvesz] - csere: õ megkapja a te skined, te az övét - elvesz: õ nem kap semmit");

			new player = GetClosestPlayer(playerid);
			if(GetDistanceBetweenPlayers(playerid, player) > 5.0)
				return Msg(playerid, "Nincs senki a közeledben");

			if(NemMozoghat(playerid))
				return Msg(playerid, "Animban / sokkolva / cuffolva / leütve / megkötözve nem használható");

			if(!NemMozoghat(player) && !PlayerInfo[player][pMegad])
				return Msg(playerid, "Csak animban / sokkolva / cuffolva / leütve / megkötözve használható, vagy ha megadta magát");

			if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(player))
				return Msg(playerid, "Neked is, és neked is jármûben, vagy jármûn kívül kell lenned");

			new ove = GetPlayerSkin(player);

			if(MunkaFolyamatban[playerid])
				return Msg(playerid, "Várj");

			if(egyezik(param[2], "csere"))
			{
				SetTimerEx("Munkavege", MunkaIdo[9], 0, "ddd", playerid, M_RUHACSERE, player);
				Cselekves(playerid, "elveszi valaki ruháját");
				Freeze(playerid);
				Freeze(player);
				MunkaFolyamatban[playerid] = 1;
				if(!IsPlayerInAnyVehicle(playerid))
					ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
			}
			else if(egyezik(param[2], "elvesz"))
			{
				if(ove == 252)
					return Msg(playerid, "Rajta nincs ruha");

				SetTimerEx("Munkavege", MunkaIdo[9], 0, "ddd", playerid, M_RUHAELVESZ, player);
				Cselekves(playerid, "elveszi valaki ruháját");
				SendClientMessage(playerid, COLOR_GREEN, "Elveszed valaki ruháit");
				SendClientMessage(player, COLOR_GREEN, "Ellopják a ruháidat");
				Freeze(playerid);
				Freeze(player);
				MunkaFolyamatban[playerid] = 1;
				if(!IsPlayerInAnyVehicle(playerid))
					ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
			}
		}
		else if(egyezik(param[1], "material") || egyezik(param[1], "mati"))
		{
			new pmats = PlayerInfo[p][pMats];
			new mats = PlayerInfo[playerid][pMats];
			if(pmats < 1) return Msg(playerid, "A játékosnál nincs material.");
			if(mats >= MAXMATI) return Msg(playerid, "Nem lehet nálad több material.");
			PlayerInfo[playerid][pMats] += pmats;
			PlayerInfo[p][pMats] -= pmats;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél %ddb materialt tõle", pmats);
			SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled %ddb materialt.", pmats);
			Cselekves(playerid, "elvette valakinek a materialjait");
		}
		else if(egyezik(param[1], "pénz") || egyezik(param[1], "penz"))
		{
			if(GetMoney(p)< 1) return Msg(playerid, "A játékosnál nincs pénz.");
			new ppenz=GetMoney(p);
			GetMoney(playerid)+=GetMoney(p);
			GetMoney(p)=0;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél %d FT pénzt tõle", ppenz);
			SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled %d FT pénzt.", ppenz);
			Cselekves(playerid, "elvette valakinek a pénzét");
		}
		else if(egyezik(param[1], "kokain"))
		{
			new felesleg, volt;
			if(PlayerInfo[p][pKokain] < 1)
				return Msg(playerid, "A játékosnál nincs kokain.");

			volt = PlayerInfo[p][pKokain];
			PlayerInfo[playerid][pKokain] += PlayerInfo[p][pKokain];
			PlayerInfo[p][pKokain] = 0;

			if(PlayerInfo[playerid][pKokain] > MAXKOKAIN)
			{
				felesleg = PlayerInfo[playerid][pKokain] - MAXKOKAIN;
				PlayerInfo[playerid][pKokain] = MAXKOKAIN;
			}

			if(felesleg == 0)
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél %dg kokaint tõle", volt);
				SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled %dg kokaint.", volt);
			}
			else
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél %dg kokaint tõle, de mivel csak %d lehet nálad ezért itthagysz %d grammot.", volt, MAXKOKAIN, felesleg);
				SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled %dg kokaint.", volt);
			}
			Cselekves(playerid, "elvette valakinek a kokainjait");
		}
		else if(egyezik(param[1], "telefon"))
		{
		    Msg(playerid, "Átmenetileg kiszedve, ha fontos dobja el az illetõ!");
			/*PlayerInfo[p][pPnumber] = 0;
			Msg(playerid, "* Elvetted a telefonját.", false, COLOR_LIGHTBLUE);
			SendClientMessage(p, COLOR_LIGHTBLUE, "* Elvették a telefonod.");
			Cselekves(playerid, "elvette valakinek a telefonját");*/
			return 1;
		}
		else if(egyezik(param[1], "heroin"))
		{
			new felesleg, volt;
			if(PlayerInfo[p][pHeroin] < 1)
				return Msg(playerid, "A játékosnál nincs heroin.");

			volt = PlayerInfo[p][pHeroin];
			PlayerInfo[playerid][pHeroin] += PlayerInfo[p][pHeroin];
			PlayerInfo[p][pHeroin] = 0;

			if(PlayerInfo[playerid][pHeroin] > MAXHEROIN)
			{
				felesleg = PlayerInfo[playerid][pHeroin] - MAXHEROIN;
				PlayerInfo[playerid][pHeroin] = MAXHEROIN;
			}

			if(felesleg == 0)
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél %dg heroint tõle", volt);
				SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled %dg heroint.", volt);
			}
			else
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél %dg heroint tõle, de mivel csak %d lehet nálad ezért itthagysz %d grammot.", volt, MAXHEROIN, felesleg);
				SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled %dg heroint.", volt);
			}
			Cselekves(playerid, "elvette valakinek a heroinjait");
		}
		else if(egyezik(param[1], "marihuana"))
		{
			new felesleg, volt;
			if(PlayerInfo[p][pMarihuana] < 1)
				return Msg(playerid, "A játékosnál nincs marihuana.");

			volt = PlayerInfo[p][pMarihuana];
			PlayerInfo[playerid][pMarihuana] += PlayerInfo[p][pMarihuana];
			PlayerInfo[p][pMarihuana] = 0;

			if(PlayerInfo[playerid][pMarihuana] > MAXMARIHUANA)
			{
				felesleg = PlayerInfo[playerid][pMarihuana] - MAXMARIHUANA;
				PlayerInfo[playerid][pMarihuana] = MAXMARIHUANA;
			}

			if(felesleg == 0)
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél %dg marihuánát tõle", volt);
				SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled %dg marihuánát.", volt);
			}
			else
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél %dg marihuánát tõle, de mivel csak %d lehet nálad ezért itthagysz %d grammot.", volt, MAXMARIHUANA, felesleg);
				SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled %dg heroint.", volt);
			}
			Cselekves(playerid, "elvette valakinek a marihuánáit");
		}
		else if(egyezik(param[1], "cigi"))
		{
			new pcigi = PlayerInfo[p][pCigi];
			if(PlayerInfo[p][pCigi] < 1) return Msg(playerid, "A játékosnál nincs cigi.");
			PlayerInfo[playerid][pCigi] += pcigi;
			PlayerInfo[p][pCigi] -= pcigi;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél %ddb cigit tõle", pcigi);
			SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled %ddb cigit.", pcigi);
			Cselekves(playerid, "elvette valakinek a cigieit");
		}
		else if(egyezik(param[1], "mellény") || egyezik(param[1], "melleny"))
		{
			new Float:armor;
			new Float:armor2;
			GetPlayerArmour(playerid, armor);
			GetPlayerArmour(p, armor2);
			if(armor != 0) return Msg(playerid, "Van mellényed!");
			if(armor2 == 0) return Msg(playerid, "Nincs mellénye!");
			SetPlayerArmour(playerid, armor2);
			SetPlayerArmour(p, 0);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Elvetted az armorát");
		    SendClientMessage(p, COLOR_LIGHTBLUE, "Elvették az armorod");
			Cselekves(playerid, "elvette valakinek az armorját");
		}
		else if(egyezik(param[1], "kötszer") || egyezik(param[1], "kotszer"))
		{
		    if(playerid == playerid) return Msg(playerid, "Jelenleg nem veheted el tõle. Kérd meg, hogy adja át.");
			new felesleg, volt;
			if(PlayerInfo[p][pKotszer] < 4)
				return Msg(playerid, "A játékosnál nincs kötszer.");

			volt = PlayerInfo[p][pKotszer]-3;
			PlayerInfo[playerid][pKotszer] += volt;
			PlayerInfo[p][pKotszer] = 3;

			if((PlayerInfo[playerid][pKotszer]-3) > MAXKOTSZER)
			{
				felesleg = PlayerInfo[playerid][pKotszer] - MAXKOTSZER;
				PlayerInfo[playerid][pKotszer] = (MAXKOTSZER-3);
			}

			if(felesleg == 0)
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél %ddb kötszert tõle", volt);
				SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled %ddb kötszert.", volt);
			}
			else
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvettél %ddb kötszert tõle, de mivel csak %d lehet nálad ezért itthagysz %d darabot.", volt, MAXKOTSZER, felesleg);
				SendFormatMessage(p, COLOR_LIGHTBLUE, "* Elvettek tõled %ddb kötszert.", volt);
			}
			Cselekves(playerid, "elvette valakinek a kötszereit");
		}
		else if(egyezik(param[1], "rádió") || egyezik(param[1], "radio"))
		{
			if(!PlayerInfo[p][pRadio])
				return Msg(playerid, "Nincs rádiója");

			PlayerInfo[p][pRadio] = 0;
			Msg(playerid, "* Elvetted a rádióját.", false, COLOR_LIGHTBLUE);
			SendClientMessage(p, COLOR_LIGHTBLUE, "* Elvették a rádiód.");
			Cselekves(playerid, "elvette valakinek a rádióját");
		}
		else if(egyezik(param[1], "csipogó") || egyezik(param[1], "csipogo"))
		{
			if(!PlayerInfo[p][pCsipogo])
				return Msg(playerid, "Nincs csipogója");

			PlayerInfo[p][pCsipogo] = 0;
			Msg(playerid, "* Elvetted a csipogóját.", false, COLOR_LIGHTBLUE);
			SendClientMessage(p, COLOR_LIGHTBLUE, "* Elvették a csipogód.");
			Cselekves(playerid, "elvette valakinek a csipogóját");
		}
		else if(egyezik(param[1], "jelvény") || egyezik(param[1], "jelveny"))
		{
			if(Jelvenytlopott[p] || Jelvenytlopott[playerid])
				return Msg(playerid, "Õ is lopta a jelvényét, vagy te már loptál jelvényt!");
				
			if(Jelvenytloptak[p])
				return Msg(playerid, "Tõle már valaki ellopta a jelvényt!");
				
			if(!IsACop(p))
				return Msg(playerid, "Ha õ nem rendõr, akkor ne vedd már el tõle a jelvényt!");

			Jelvenytloptak[p] = true;
			Jelvenytlopott[playerid] = true;
			JelvenyNeve[playerid] = ICPlayerName(p);
			JelvenySzervezet[playerid] = PlayerInfo[p][pMember];
			JelvenyRangnev[playerid] = PlayerInfo[p][pRank];
			JelvenytLopta[playerid] = playerid;
			PlayerInfo[p][pJelveny] = 0;
			Msg(playerid, "* Elvetted a jelvényét.", false, COLOR_LIGHTBLUE);
			SendClientMessage(p, COLOR_LIGHTBLUE, "* Elvették a jelvényed.");
			Cselekves(playerid, "elvette valakinek a jelvényét");
		}
		return 1;
	}
	
	if(egyezik(cmd, "/fegyverszállítás") || egyezik(cmd, "/fegyverszallitas") || egyezik(cmd,"/fsz"))
	{
		if(params < 1)
		{
			Msg(playerid, "/fegyverszállítás [funkció]");
			Msg(playerid, "Funkció: Kezd, Befejez, Kirabol, Bepakol, Lead, Átnéz", false);
			Msg(playerid, "Rendelési paraméterek: Rendel, Lista, Megnéz, Töröl", false);
			return 1;
		}
		if(egyezik(param[1], "rendel"))
		{
		    if(!IsACop(playerid)) return Msg(playerid, "Nem vagy rendvédelmi szervezet tagja!");
			if(params < 2) return Msg(playerid, "/fsz rendel [lõszer / fegyver]");
		   
			
			new id=NINCS;
			if(egyezik(param[2],"lõszer") || egyezik(param[2],"loszer"))
				id=1;
			if(egyezik(param[2],"fegyver"))
				id=0;
			
			if(id == NINCS) return Msg(playerid, "/fsz rendel [loszer/fegyver]");
			new fegyverek[10];
			if(sscanf(pms, "{s[32]s[32]}dddddddddd", fegyverek[0],fegyverek[1],fegyverek[2],fegyverek[3],fegyverek[4],fegyverek[5],fegyverek[6],fegyverek[7],fegyverek[8],fegyverek[9]))
			{
				Msg(playerid, "Az alábbi mezõkbe add meg a rendelni kívánt fegyverek darabszámát!");
				Msg(playerid, "Használata: /fsz rendel [lõszer|fegyver] [Combat] [M4] [Sniper] [Deagle] [MP5] [silenced] [Shoutgun] [rifle] [ak47] [Parachute]");
				return true;
			} 

			new i = -1;
			for(;++i < MAX_FSZ_RENDELES;)
			{
				if(FszInfo[i][fszFrakcio] == PlayerInfo[playerid][pMember] && FszInfo[i][fszVan])
					Msg(playerid, "A szervezeted már adott le rendelést! Így már több rendelésetek lesz!");
			}


			new x = UjRendelesIndex();
			if(x == NINCS) return Msg(playerid, "Jelenleg nem adhatsz le rendelést, kérlek próbáld meg késõbb!");

			SendRadioMessageFormat(FRAKCIO_FBI, COLOR_YELLOW, "<< %s fegyverszállítást rendelt! Szervezet: %s ((/fegyverszállítás lista)) >>", ICPlayerName(playerid), Szervezetneve[PlayerInfo[playerid][pMember] - 1][0]);
			
			if(id == 1)
				SendClientMessage(playerid, COLOR_LIGHTRED, "Rendelésed rögzítettük! Az FBI hamarosan leszállítja a megrendelt lõszereket!");
			else
				SendClientMessage(playerid, COLOR_LIGHTRED, "Rendelésed rögzítettük! Az FBI hamarosan leszállítja a megrendelt fegyvereket!");
				
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Combat: %ddb | M4: %ddb | Sniper: %ddb | Deagle: %ddb | MP5: %ddb", fegyverek[0],fegyverek[1],fegyverek[2],fegyverek[3],fegyverek[4]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Silenced: %ddb | Shoutgun: %ddb | Rifle: %ddb | Ak47 %ddb | Ejtõernyõ: %ddb",fegyverek[5],fegyverek[6],fegyverek[7],fegyverek[8],fegyverek[9]);
			
			
			FszInfo[x][fszVan] = true;
			format(FszInfo[x][fszNev], MAX_PLAYER_NAME, PlayerName(playerid));
			
			FszInfo[x][fszCombat][id] = fegyverek[0];
			FszInfo[x][fszM4][id] = fegyverek[1];
			FszInfo[x][fszSniper][id] =fegyverek[2];
			FszInfo[x][fszDeagle][id] = fegyverek[3];
			FszInfo[x][fszMP5][id] = fegyverek[4];
			FszInfo[x][fszSilenced][id] = fegyverek[5];
			FszInfo[x][fszShoutgun][id] = fegyverek[6];
			FszInfo[x][fszRifle][id] = fegyverek[7];
			FszInfo[x][fszAk47][id] = fegyverek[8];
			FszInfo[x][fszParachute] = fegyverek[9];
			
		
			FszInfo[x][fszFrakcio] = PlayerInfo[playerid][pMember];
			FszInfo[x][fszTipus] = id;
		
			FszMuvelet(1);
				
		}
		if(egyezik(param[1], "lista"))
		{
		    if(!LMT(playerid, FRAKCIO_ONKORMANYZAT)) return Msg(playerid, "Nem vagy az Önkormányzat tagja!");
			
		    SendClientMessage(playerid, COLOR_ORANGE, "======= [ Rendelés lista ] =======");
		    new i = NINCS, szam = NINCS;
		    for(;++i < MAX_FSZ_RENDELES;)
		    {
		        if(!FszInfo[i][fszVan]) continue;
				if(FszInfo[i][fszTipus] == 1)
					SendFormatMessage(playerid, COLOR_GREEN, "Megrendelõ neve: %s | Szervezet: %s | Lõszerek | Rendelés ID: %d", FszInfo[i][fszNev],Szervezetneve[FszInfo[i][fszFrakcio]-1][0], i);
				else
					SendFormatMessage(playerid, COLOR_GREEN, "Megrendelõ neve: %s | Szervezet: %s | Fegyverek | Rendelés ID: %d", FszInfo[i][fszNev],Szervezetneve[FszInfo[i][fszFrakcio]-1][0], i);
					
          		szam++;
		    }
		    if(szam == NINCS) return Msg(playerid, "Jelenleg nincs teljesítetlen rendelés!");
			else return Msg(playerid, "A rendelés részleteinek megtekintéséhez használd a '/fegyverszállítás Megnéz' parancsot!");

		}
		if(egyezik(param[1], "megnéz") || egyezik(param[1], "megnez"))
		{
		    if(!LMT(playerid, FRAKCIO_ONKORMANYZAT)) return Msg(playerid, "Nem vagy az Önkormányzat tagja!");
			
		    if(params != 2)
		        return Msg(playerid, "Használata: /fegyverszállítás Megnéz [Rendelés ID]");

			new x = strval(param[2]);
			if(!FszInfo[x][fszVan])
				return Msg(playerid, "Nincs ilyen rendelés a listában! Ellenõrizd a '/fegyverszállítás lista' paranccsal.");

			new id = FszInfo[x][fszTipus];
			if(id == 1)
				SendClientMessage(playerid, COLOR_ORANGE, "======= [ Rendelés adatai LÕSZEREK] =======");
			else
				SendClientMessage(playerid, COLOR_ORANGE, "======= [ Rendelés adatai FEGYVEREK] =======");
				
			SendFormatMessage(playerid, COLOR_GREEN, "Megrendelõ neve: %s | Szervezet: %s | Rendelés ID: %d", FszInfo[x][fszNev],Szervezetneve[FszInfo[x][fszFrakcio]-1][0], x);
			SendFormatMessage(playerid, COLOR_GREEN, "Combat: %ddb | M4: %ddb | Sniper: %ddb", FszInfo[x][fszCombat][id],FszInfo[x][fszM4][id],FszInfo[x][fszSniper][id]);
			SendFormatMessage(playerid, COLOR_GREEN, "Deagle: %ddb | MP5: %ddb | Silenced: %ddb | ", FszInfo[x][fszDeagle][id],FszInfo[x][fszMP5][id],FszInfo[x][fszSilenced][id]);
			SendFormatMessage(playerid, COLOR_GREEN, "Shoutgun: %ddb | Rifle %ddb | Ak47 %ddb | Ejtõernyõ: %ddb",FszInfo[x][fszShoutgun][id],FszInfo[x][fszRifle][id],FszInfo[x][fszAk47][id],FszInfo[x][fszParachute]);
		}
		if(egyezik(param[1], "töröl") || egyezik(param[1], "torol"))
		{
		    if(!LMT(playerid, FRAKCIO_ONKORMANYZAT)) return Msg(playerid, "Nem vagy az Önkormányzat tagja!");
		    if(params != 2)
		        return Msg(playerid, "Használata: /fegyverszállítás Töröl [Rendelés ID]");

			new x = strval(param[2]);
			if(!FszInfo[x][fszVan])
				return Msg(playerid, "Nincs ilyen rendelés a listában! Ellenõrizd a '/fegyverszállítás lista' paranccsal.");

            FszInfo[x][fszVan] = false;
            FszMuvelet(1);
			SendClientMessage(playerid, COLOR_ORANGE, "Rendelés sikeresen törölve!");
		}
		if(egyezik(param[1], "bepakol"))
		{
		    if(FloodCheck(playerid)) return 1;
			if(!LMT(playerid, FRAKCIO_ONKORMANYZAT)) return Msg(playerid, "Nem vagy az Önkormányzat tagja!");
			if(!Munkarang(playerid, 7)) return Msg(playerid, "Minimum rang 7!");
			new ara;
			
			
			if(params < 4)
			{
				Msg(playerid, "/fegyverszállítás bepakol [fegyver | loszer ] [fegyver] [szám]");
				Msg(playerid, "Fegyverek és lõszerek: silenced, deagle, mp5, m4, shotgun, combat, sniper, rifle, ak47, ejtõernyõ", false);
				SendFormatMessage(playerid,COLOR_YELLOW,"[FEGYVEREK]:Silenced: %d Ft, Shotgun: %dvFt, Deagle: %d Ft, Mp5: %d Ft, M4: %d Ft, Sniper: %d Ft, Combat: %d Ft,Rifle: %d, AK47 %d, Ejtõernyõ %ddb",FE_SILENCED,FE_SHOTGUN,FE_DEAGLE,FE_MP5,FE_M4,FE_SNIPER,FE_COMBAT,FE_RIFLE,FE_AK47,FE_Parachute);
				SendFormatMessage(playerid,COLOR_YELLOW,"[LÕSZEREK]Silenced: %d Ft, Shotgun: %dvFt, Deagle: %d Ft, Mp5: %d Ft, M4: %d Ft, Sniper: %d Ft, Combat: %d Ft,Rifle: %d, AK47 %d, Ejtõernyõ %ddb",LO_SILENCED,LO_SHOTGUN,LO_DEAGLE,LO_MP5,LO_M4,LO_SNIPER,LO_COMBAT,LO_RIFLE,LO_AK47,LO_Parachute);
				return 1;
			}
			if(!PlayerToPoint(20, playerid, 2682.427, -2524.759, 13.237))
			{
				Msg(playerid, "Nem vagy a felvevõhelyen!");
				SetPlayerCheckpoint(playerid, 2682.427, -2524.759, 13.237, 20);
				return 1;
			}
			if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Kocsiban?");
			new car = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, car) > 5.0) return Msg(playerid, "Nincs jármû a közeledben!");
			new szam;
			szam = strval(param[4]);

			if(GetVehicleModel(car) != 433) return Msg(playerid, "Ez nem fegyverszállító kocsi!");
			

			if(szam < 1) return Msg(playerid, "A-a!");
			
			new id = NINCS;
			if(egyezik(param[2],"lõszer"))
				id=1;
			if(egyezik(param[2],"fegyver"))
				id=0;
			
			if(0 < id < 1) return Msg(playerid, "/fsz bepakol [fegyver|lõszer] [fegyverneve][db]");
			
			
			if(egyezik(param[3], "silenced"))
			{
				if(id == 1)
				{
					if(szam + Szallito[car][szSilenced][id] > MAX_LOSZER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a lõszerbõl maximum %ddb szállítható!",MAX_LOSZER);
					ara = szam*LO_SILENCED;
				}
				else
				{
					if(szam + Szallito[car][szSilenced][id] > MAX_FEGYVER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a fegyverbõl maximum %ddb szállítható!",MAX_FEGYVER);
					ara = szam*FE_SILENCED;
				}
				if(FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] < ara) return SendFormatMessage(playerid,COLOR_YELLOW,"A szállításhoz nincs elég pénz a széfbe. Ára: %s", FormatNumber( ara, 0, ',' ));
				
				Szallito[car][szSilenced][id] += szam;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d darabot a fegyverszállítóba!", szam);
				SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "HQ: %s fegyverraktárban pakol fegyverszállításra. Silenced: %d DB", ICPlayerName(playerid),szam);
				FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -=ara;
			
			}
			else if(egyezik(param[3], "ejtõernyõ"))
			{
				if(id == 1)
				{
					if(szam + Szallito[car][szDeagle][id] > MAX_LOSZER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a lõszerbõl maximum %ddb szállítható!",MAX_LOSZER);
					ara = szam*LO_Parachute;
				}
				else
				{
					if(szam + Szallito[car][szDeagle][id] > MAX_FEGYVER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a fegyverbõl maximum %ddb szállítható!",MAX_FEGYVER);
					ara = szam*LO_Parachute;
				}
				if(FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] < ara) return SendFormatMessage(playerid,COLOR_YELLOW,"A szállításhoz nincs elég pénz a széfbe. Ára: %s", FormatNumber( ara, 0, ',' ));
				
				Szallito[car][szParachute] += szam;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d darabot a fegyverszállítóba!", szam);
				SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "HQ: %s fegyverraktárban pakol fegyverszállításra. EJTÕERNYÕ: %d DB", ICPlayerName(playerid),szam);
				FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -=ara;
			}
			else if(egyezik(param[3], "deagle"))
			{
				if(id == 1)
				{
					if(szam + Szallito[car][szDeagle][id] > MAX_LOSZER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a lõszerbõl maximum %ddb szállítható!",MAX_LOSZER);
					ara = szam*LO_DEAGLE;
				}
				else
				{
					if(szam + Szallito[car][szDeagle][id] > MAX_FEGYVER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a fegyverbõl maximum %ddb szállítható!",MAX_FEGYVER);
					ara = szam*FE_DEAGLE;
				}
				if(FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] < ara) return SendFormatMessage(playerid,COLOR_YELLOW,"A szállításhoz nincs elég pénz a széfbe. Ára: %s", FormatNumber( ara, 0, ',' ));
				
				Szallito[car][szDeagle][id] += szam;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d darabot a fegyverszállítóba!", szam);
				SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "HQ: %s fegyverraktárban pakol fegyverszállításra. DEAGLE: %d DB", ICPlayerName(playerid),szam);
				FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -=ara;
			}
			else if(egyezik(param[3], "shotgun"))
			{
			    if(id == 1)
				{
					if(szam + Szallito[car][szShoutgun][id] > MAX_LOSZER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a lõszerbõl maximum %ddb szállítható!",MAX_LOSZER);
					ara = szam*LO_SHOTGUN;
				}
				else
				{
					if(szam + Szallito[car][szShoutgun][id] > MAX_FEGYVER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a fegyverbõl maximum %ddb szállítható!",MAX_FEGYVER);
					ara = szam*FE_SHOTGUN;
				}
				if(FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] < ara) return SendFormatMessage(playerid,COLOR_YELLOW,"A szállításhoz nincs elég pénz a széfbe. Ára: %s", FormatNumber( ara, 0, ',' ));
				
				Szallito[car][szShoutgun][id] += szam;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d darabot a fegyverszállítóba!", szam);
				SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "HQ: %s fegyverraktárban pakol fegyverszállításra. Shotgun: %d DB", ICPlayerName(playerid),szam);
				FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -=ara;
			}
			else if(egyezik(param[3], "mp5"))
			{
			    if(id == 1)
				{
					if(szam + Szallito[car][szMP5][id] > MAX_LOSZER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a lõszerbõl maximum %ddb szállítható!",MAX_LOSZER);
					ara = szam*LO_MP5;
				}
				else
				{
					if(szam + Szallito[car][szMP5][id] > MAX_FEGYVER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a fegyverbõl maximum %ddb szállítható!",MAX_FEGYVER);
					ara = szam*FE_MP5;
				}
				if(FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] < ara) return SendFormatMessage(playerid,COLOR_YELLOW,"A szállításhoz nincs elég pénz a széfbe. Ára: %s", FormatNumber( ara, 0, ',' ));
				
				Szallito[car][szMP5][id] += szam;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d darabot a fegyverszállítóba!", szam);
				SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "HQ: %s fegyverraktárban pakol fegyverszállításra. MP5: %d DB", ICPlayerName(playerid),szam);
				FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -=ara;
			}
			else if(egyezik(param[3], "M4"))
			{
			    if(id == 1)
				{
					if(szam + Szallito[car][szM4][id] > MAX_LOSZER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a lõszerbõl maximum %ddb szállítható!",MAX_LOSZER);
					ara = szam*LO_M4;
				}
				else
				{
					if(szam + Szallito[car][szM4][id] > MAX_FEGYVER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a fegyverbõl maximum %ddb szállítható!",MAX_FEGYVER);
					ara = szam*FE_M4;
				}
				if(FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] < ara) return SendFormatMessage(playerid,COLOR_YELLOW,"A szállításhoz nincs elég pénz a széfbe. Ára: %s", FormatNumber( ara, 0, ',' ));
				
				Szallito[car][szM4][id] += szam;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d darabot a fegyverszállítóba!", szam);
				SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "HQ: %s fegyverraktárban pakol fegyverszállításra. M4: %d DB", ICPlayerName(playerid),szam);
				FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -=ara;
			}
			else if(egyezik(param[3], "combat"))
			{
			    if(id == 1)
				{
					if(szam + Szallito[car][szCombat][id] > MAX_LOSZER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a lõszerbõl maximum %ddb szállítható!",MAX_LOSZER);
					ara = szam*LO_COMBAT;
				}
				else
				{
					if(szam + Szallito[car][szCombat][id] > MAX_FEGYVER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a fegyverbõl maximum %ddb szállítható!",MAX_FEGYVER);
					ara = szam*FE_COMBAT;
				}
				if(FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] < ara) return SendFormatMessage(playerid,COLOR_YELLOW,"A szállításhoz nincs elég pénz a széfbe. Ára: %s", FormatNumber( ara, 0, ',' ));
				
				Szallito[car][szCombat][id] += szam;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d darabot a fegyverszállítóba!", szam);
				SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "HQ: %s fegyverraktárban pakol fegyverszállításra. COMBAT: %d DB", ICPlayerName(playerid),szam);
				FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -=ara;
			}
			else if(egyezik(param[3], "sniper"))
			{
			    if(id == 1)
				{
					if(szam + Szallito[car][szSniper][id] > MAX_LOSZER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a lõszerbõl maximum %ddb szállítható!",MAX_LOSZER);
					ara = szam*LO_SNIPER;
				}
				else
				{
					if(szam + Szallito[car][szSniper][id] > MAX_FEGYVER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a fegyverbõl maximum %ddb szállítható!",MAX_FEGYVER);
					ara = szam*FE_SNIPER;
				}
				if(FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] < ara) return SendFormatMessage(playerid,COLOR_YELLOW,"A szállításhoz nincs elég pénz a széfbe. Ára: %s", FormatNumber( ara, 0, ',' ));
				
				Szallito[car][szSniper][id] += szam;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d darabot a fegyverszállítóba!", szam);
				SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "HQ: %s fegyverraktárban pakol fegyverszállításra. SNIPER: %d DB", ICPlayerName(playerid),szam);
				FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -=ara;
			}
			else if(egyezik(param[3], "rifle"))
			{
			    if(id == 1)
				{
					if(szam + Szallito[car][szRifle][id] > MAX_LOSZER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a lõszerbõl maximum %ddb szállítható!",MAX_LOSZER);
					ara = szam*LO_RIFLE;
				}
				else
				{
					if(szam + Szallito[car][szRifle][id] > MAX_FEGYVER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a fegyverbõl maximum %ddb szállítható!",MAX_FEGYVER);
					ara = szam*FE_RIFLE;
				}
				if(FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] < ara) return SendFormatMessage(playerid,COLOR_YELLOW,"A szállításhoz nincs elég pénz a széfbe. Ára: %s", FormatNumber( ara, 0, ',' ));
				
				Szallito[car][szRifle][id] += szam;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d darabot a fegyverszállítóba!", szam);
				SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "HQ: %s fegyverraktárban pakol fegyverszállításra. RIFLE: %d DB", ICPlayerName(playerid),szam);
				FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -=ara;
			}
			else if(egyezik(param[3], "ak47"))
			{
			    if(id == 1)
				{
					if(szam + Szallito[car][szAk47][id] > MAX_LOSZER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a lõszerbõl maximum %ddb szállítható!",MAX_LOSZER);
					ara = szam*LO_AK47;
				}
				else
				{
					if(szam + Szallito[car][szAk47][id] > MAX_FEGYVER) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ebbõl a fegyverbõl maximum %ddb szállítható!",MAX_FEGYVER);
					ara = szam*FE_AK47;
				}
				if(FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] < ara) return SendFormatMessage(playerid,COLOR_YELLOW,"A szállításhoz nincs elég pénz a széfbe. Ára: %s", FormatNumber( ara, 0, ',' ));
				
				Szallito[car][szAk47][id] += szam;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d darabot a fegyverszállítóba!", szam);
				SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "HQ: %s fegyverraktárban pakol fegyverszállításra. SNIPER: %d DB", ICPlayerName(playerid),szam);
				FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -=ara;
			}

		}
		else if(egyezik(param[1], "átnéz") || egyezik(param[1], "atnez"))
		{
			new car = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, car) > 5.0) return Msg(playerid, "Nincs jármû a közeledben!");

			if(GetVehicleModel(car) != 433) return Msg(playerid, "Ez nem fegyverszállító kocsi!");

			SendFormatMessage(playerid, COLOR_LIGHTGREEN,"[Lõszerek] Silenced: %d | Deagle: %d | Shotgun: %d | Combat: %d | Mp5: %d | M4: %d | Sniper: %d | Rifle: %d | Ak47: %d",Szallito[car][szSilenced][1],Szallito[car][szDeagle][1],Szallito[car][szShoutgun][1],Szallito[car][szCombat][1],Szallito[car][szMP5][1],Szallito[car][szM4][1],Szallito[car][szSniper][1],Szallito[car][szRifle][1],Szallito[car][szAk47][1]);
			

			SendFormatMessage(playerid, COLOR_LIGHTGREEN,"[Fegyverek] Silenced: %d | Deagle: %d | Shotgun: %d | Combat: %d | Mp5: %d | M4: %d | Sniper: %d | Rifle: %d | Ak47: %d | Ejtõernyõ: %d",Szallito[car][szSilenced][0],Szallito[car][szDeagle][0],Szallito[car][szShoutgun][0],Szallito[car][szCombat][0],Szallito[car][szMP5][0],Szallito[car][szM4][0],Szallito[car][szSniper][0],Szallito[car][szRifle][0],Szallito[car][szAk47][0],Szallito[car][szParachute]);
			return 1;
		}
		else if(egyezik(param[1], "kezd"))
		{
		    if(FloodCheck(playerid)) return 1;
			if(!LMT(playerid, FRAKCIO_ONKORMANYZAT)) return Msg(playerid, "Nem vagy az Önkormányzat tagja!");
			if(!Munkarang(playerid, 7)) return Msg(playerid, "Minimum rang 7!");
			if(fszallit == 1) return Msg(playerid, "Már van elkezdett szállítás!");
			if(!PlayerToPoint(20, playerid, 2682.427, -2524.759, 13.237))
			{
				Msg(playerid, "Nem vagy a Fegyenctelep melletti raktáron!");
				SetPlayerCheckpoint(playerid, 2682.427, -2524.759, 13.237, 20);
				return 1;
			}
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy kocsiban!");
			new car = GetPlayerVehicleID(playerid);

			if(GetPlayerDistanceFromVehicle(playerid, car) > 5.0) return Msg(playerid, "Nincs jármû a közeledben!");
			if(pveh != 433) return Msg(playerid, "Ez nem fegyverszállító kocsi!");
			CopMsgFormat(COLOR_LIGHTGREEN, "%s megkezdte a fegyverszállítást!", ICPlayerName(playerid));
			CopMsg(COLOR_LIGHTGREEN, "================[A szállítás tartalma]================");
			
			format(_tmpString, 128, "[Lõszerek] Silenced: %d | Deagle: %d | Shotgun: %d | Combat: %d | Mp5: %d | M4: %d | Sniper: %d | Rifle: %d | Ak47: %d",
				Szallito[car][szSilenced][1],Szallito[car][szDeagle][1],Szallito[car][szShoutgun][1],Szallito[car][szCombat][1],Szallito[car][szMP5][1],
				Szallito[car][szM4][1],Szallito[car][szSniper][1],Szallito[car][szRifle][1],Szallito[car][szAk47][1]
			);
			CopMsg(COLOR_LIGHTGREEN, _tmpString);
				
			format(_tmpString, 128, "[Fegyverek] Silenced: %d | Deagle: %d | Shotgun: %d | Combat: %d | Mp5: %d | M4: %d | Sniper: %d | Rifle: %d | Ak47: %d | Ejtõernyõ: %d",
				Szallito[car][szSilenced][0],Szallito[car][szDeagle][0],Szallito[car][szShoutgun][0],Szallito[car][szCombat][0],Szallito[car][szMP5][0],Szallito[car][szM4][0],
				Szallito[car][szSniper][0],Szallito[car][szRifle][0],Szallito[car][szAk47][0],Szallito[car][szParachute]
			);
			CopMsg(COLOR_LIGHTGREEN, _tmpString);
			fszallit = 1;
		}
		else if(egyezik(param[1], "lead"))
		{
			if(params < 4)
			{
				Msg(playerid, "/fegyverszállítás lead [fegyver|loszer] [fegyverneve] [szám]");
				Msg(playerid, "Fegyverek: silenced, deagle, mp5, m4, shotgun, combat, sniper, rifle, ak47, ejtõernyõ", false);
				return 1;
			}
			if(FloodCheck(playerid)) return 1;
			if(fszallit == 0) return Msg(playerid, "Nincs elkezdett szállítás!");
			new szam;
			szam = strval(param[4]);
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy kocsiban!");
			new car = GetPlayerVehicleID(playerid);

			if(pveh != 433) return Msg(playerid, "Ez nem fegyverszállító kocsi!");
			
			new frakcio = NINCS;
			
			if(PlayerToPoint(FrakcioInfo[FRAKCIO_SCPD][fFPosR], playerid, FrakcioInfo[FRAKCIO_SCPD][fFPosX],FrakcioInfo[FRAKCIO_SCPD][fFPosY],FrakcioInfo[FRAKCIO_SCPD][fFPosZ],FrakcioInfo[FRAKCIO_SCPD][fFVW],FrakcioInfo[FRAKCIO_SCPD][fFINT]))
				frakcio = FRAKCIO_SCPD;
			else if(PlayerToPoint(FrakcioInfo[FRAKCIO_NAV][fFPosR], playerid, FrakcioInfo[FRAKCIO_NAV][fFPosX],FrakcioInfo[FRAKCIO_NAV][fFPosY],FrakcioInfo[FRAKCIO_NAV][fFPosZ],FrakcioInfo[FRAKCIO_NAV][fFVW],FrakcioInfo[FRAKCIO_NAV][fFINT]))
				frakcio = FRAKCIO_NAV;
			else if(PlayerToPoint(FrakcioInfo[FRAKCIO_FBI][fFPosR], playerid, FrakcioInfo[FRAKCIO_FBI][fFPosX],FrakcioInfo[FRAKCIO_FBI][fFPosY],FrakcioInfo[FRAKCIO_FBI][fFPosZ],FrakcioInfo[FRAKCIO_FBI][fFVW],FrakcioInfo[FRAKCIO_FBI][fFINT]))
				frakcio = FRAKCIO_FBI;
			else if(PlayerToPoint(FrakcioInfo[FRAKCIO_CIA][fFPosR], playerid, FrakcioInfo[FRAKCIO_CIA][fFPosX],FrakcioInfo[FRAKCIO_CIA][fFPosY],FrakcioInfo[FRAKCIO_CIA][fFPosZ],FrakcioInfo[FRAKCIO_CIA][fFVW],FrakcioInfo[FRAKCIO_CIA][fFINT]))
				frakcio = FRAKCIO_CIA;
			else if(PlayerToPoint(FrakcioInfo[FRAKCIO_SFPD][fFPosR], playerid, FrakcioInfo[FRAKCIO_SFPD][fFPosX],FrakcioInfo[FRAKCIO_SFPD][fFPosY],FrakcioInfo[FRAKCIO_SFPD][fFPosZ],FrakcioInfo[FRAKCIO_SFPD][fFVW],FrakcioInfo[FRAKCIO_SFPD][fFINT]))
				frakcio = FRAKCIO_SFPD;
			else if(PlayerToPoint(FrakcioInfo[FRAKCIO_KATONASAG][fFPosR], playerid, FrakcioInfo[FRAKCIO_KATONASAG][fFPosX],FrakcioInfo[FRAKCIO_KATONASAG][fFPosY],FrakcioInfo[FRAKCIO_KATONASAG][fFPosZ],FrakcioInfo[FRAKCIO_KATONASAG][fFVW],FrakcioInfo[FRAKCIO_KATONASAG][fFINT]))
				frakcio = FRAKCIO_KATONASAG;
			
			
			if(frakcio == NINCS) return  Msg(playerid, "Nem vagy egy leadó helynél sem!");
			
			new id=NINCS, maxraktar;
			if(egyezik(param[2],"fegyver"))
				id=0,maxraktar=MAX_FEGYVER_RAKTAR;
			if(egyezik(param[2],"lõszer") || egyezik(param[2],"loszer"))
				id=1,maxraktar=MAX_FEGYVER_LOSZER;
			
			if(id == NINCS) return Msg(playerid, "/fegyverszállítás lead [fegyver|loszer] [fegyverneve] [szám]");
			
			if(egyezik(param[3], "silenced"))
			{
				
				if(FrakcioInfo[frakcio][fSilenced][id]+szam > maxraktar) 
					return SendFormatMessage(playerid, COLOR_YELLOW,"Ennyi nem fér bele a raktárba. Maximum %d DB",maxraktar);
				
				if(szam > Szallito[car][szSilenced][id]) return Msg(playerid, "Ennyi nincs a kocsiban!");
				CopMsgFormat(COLOR_LIGHTGREEN, "%s leadott %d db %s-t!", ICPlayerName(playerid), szam,param[2]);
				FrakcioInfo[frakcio][fSilenced][id] += szam;
				Szallito[car][szSilenced][id] -= szam;
			}
			else if(egyezik(param[3], "ejtõernyõ"))
			{
				if(FrakcioInfo[frakcio][fParachute]+szam > maxraktar) 
					return SendFormatMessage(playerid, COLOR_YELLOW,"Ennyi nem fér bele a raktárba. Maximum %d DB",maxraktar);
				
				if(szam > Szallito[car][szParachute]) return Msg(playerid, "Ennyi nincs a kocsiban!");
				CopMsgFormat(COLOR_LIGHTGREEN, "%s leadott %d db %s-t!", ICPlayerName(playerid), szam,param[2]);
				FrakcioInfo[frakcio][fParachute] += szam;
				Szallito[car][szParachute] -= szam;
			}
			else if(egyezik(param[3], "deagle"))
			{
				if(FrakcioInfo[frakcio][fDeagle][id]+szam > maxraktar) 
					return SendFormatMessage(playerid, COLOR_YELLOW,"Ennyi nem fér bele a raktárba. Maximum %d DB",maxraktar);
				
				if(szam > Szallito[car][szDeagle][id]) return Msg(playerid, "Ennyi nincs a kocsiban!");
				CopMsgFormat(COLOR_LIGHTGREEN, "%s leadott %d db %s-t!", ICPlayerName(playerid), szam,param[2]);
				FrakcioInfo[frakcio][fDeagle][id] += szam;
				Szallito[car][szDeagle][id] -= szam;
			}
			else if(egyezik(param[3], "shotgun"))
			{
				if(FrakcioInfo[frakcio][fShotgun][id]+szam > maxraktar) 
					return SendFormatMessage(playerid, COLOR_YELLOW,"Ennyi nem fér bele a raktárba. Maximum %d DB",maxraktar);
				
				if(szam > Szallito[car][szShoutgun][id]) return Msg(playerid, "Ennyi nincs a kocsiban!");
				CopMsgFormat(COLOR_LIGHTGREEN, "%s leadott %d db %s-t!", ICPlayerName(playerid), szam,param[2]);
				FrakcioInfo[frakcio][fShotgun][id] += szam;
				Szallito[car][szShoutgun][id] -= szam;
			}
			else if(egyezik(param[3], "mp5"))
			{
				if(FrakcioInfo[frakcio][fMp5][id]+szam > maxraktar) 
					return SendFormatMessage(playerid, COLOR_YELLOW,"Ennyi nem fér bele a raktárba. Maximum %d DB",maxraktar);
				
				if(szam > Szallito[car][szMP5][id]) return Msg(playerid, "Ennyi nincs a kocsiban!");
				CopMsgFormat(COLOR_LIGHTGREEN, "%s leadott %d db %s-t!", ICPlayerName(playerid), szam,param[2]);
				FrakcioInfo[frakcio][fMp5][id] += szam;
				Szallito[car][szMP5][id] -= szam;
			}
			else if(egyezik(param[3], "M4"))
			{
				if(FrakcioInfo[frakcio][fM4][id]+szam > maxraktar) 
					return SendFormatMessage(playerid, COLOR_YELLOW,"Ennyi nem fér bele a raktárba. Maximum %d DB",maxraktar);
				
				if(szam > Szallito[car][szM4][id]) return Msg(playerid, "Ennyi nincs a kocsiban!");
				CopMsgFormat(COLOR_LIGHTGREEN, "%s leadott %d db %s-t!", ICPlayerName(playerid), szam,param[2]);
				FrakcioInfo[frakcio][fM4][id] += szam;
				Szallito[car][szM4][id] -= szam;
			}
			else if(egyezik(param[3], "combat"))
			{
				if(FrakcioInfo[frakcio][fCombat][id]+szam > maxraktar) 
					return SendFormatMessage(playerid, COLOR_YELLOW,"Ennyi nem fér bele a raktárba. Maximum %d DB",maxraktar);
				
				if(szam > Szallito[car][szCombat][id]) return Msg(playerid, "Ennyi nincs a kocsiban!");
				CopMsgFormat(COLOR_LIGHTGREEN, "%s leadott %d db %s-t!", ICPlayerName(playerid), szam,param[2]);
				FrakcioInfo[frakcio][fCombat][id] += szam;
				Szallito[car][szCombat][id] -= szam;
			}
			else if(egyezik(param[3], "sniper"))
			{
				if(FrakcioInfo[frakcio][fSniper][id]+szam > maxraktar) 
					return SendFormatMessage(playerid, COLOR_YELLOW,"Ennyi nem fér bele a raktárba. Maximum %d DB",maxraktar);
				
				if(szam > Szallito[car][szSniper][id]) return Msg(playerid, "Ennyi nincs a kocsiban!");
				CopMsgFormat(COLOR_LIGHTGREEN, "%s leadott %d db %s-t!", ICPlayerName(playerid), szam,param[2]);
				FrakcioInfo[frakcio][fSniper][id] += szam;
				Szallito[car][szSniper][id] -= szam;
			}
			else if(egyezik(param[3], "rifle"))
			{
				if(FrakcioInfo[frakcio][fRifle][id]+szam > maxraktar) 
					return SendFormatMessage(playerid, COLOR_YELLOW,"Ennyi nem fér bele a raktárba. Maximum %d DB",maxraktar);
				
				if(szam > Szallito[car][szRifle][id]) return Msg(playerid, "Ennyi nincs a kocsiban!");
				CopMsgFormat(COLOR_LIGHTGREEN, "%s leadott %d db %s-t!", ICPlayerName(playerid), szam,param[2]);
				FrakcioInfo[frakcio][fRifle][id] += szam;
				Szallito[car][szRifle][id] -= szam;
			}
			else if(egyezik(param[3], "ak47"))
			{
				if(FrakcioInfo[frakcio][fAk47][id]+szam > maxraktar) 
					return SendFormatMessage(playerid, COLOR_YELLOW,"Ennyi nem fér bele a raktárba. Maximum %d DB",maxraktar);
				
				if(szam > Szallito[car][szAk47][id]) return Msg(playerid, "Ennyi nincs a kocsiban!");
				CopMsgFormat(COLOR_LIGHTGREEN, "%s leadott %d db %s-t!", ICPlayerName(playerid), szam,param[2]);
				FrakcioInfo[frakcio][fAk47][id] += szam;
				Szallito[car][szAk47][id] -= szam;
			}
			
		}
		else if(egyezik(param[1], "befejez"))
		{
			if(fszallit == 0) return Msg(playerid, "Nincs elkezdett szállítás");
			if(!LMT(playerid, FRAKCIO_ONKORMANYZAT)) return Msg(playerid, "Nem vagy az Önkormányzat tagja!");
			if(!Munkarang(playerid, 7)) return Msg(playerid, "Minimum rang 7!");
			for(new car = 0; car < MAX_VEHICLES; car++)
			{
				Szallito[car][szSilenced][1]=0;
				Szallito[car][szDeagle][1]=0;
				Szallito[car][szShoutgun][1]=0;
				Szallito[car][szCombat][1]=0;
				Szallito[car][szMP5][1]=0;
				Szallito[car][szM4][1]=0; 
				Szallito[car][szSniper][1]=0;
				Szallito[car][szRifle][1]=0; 
				Szallito[car][szAk47][1]=0;
				Szallito[car][szParachute]=0;
			}
			CopMsgFormat(COLOR_LIGHTGREEN, "%s befejezte a szállítást!", ICPlayerName(playerid));
			fszallit = 0;
		}
		else if(egyezik(param[1], "kirabol"))
		{
			if(FloodCheck(playerid)) return 1;
			if(params < 2) return Msg(playerid, "/fsz kirabol [lõszer|fegyver]");
			if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "A-a! Kocsiban nem!");
			new car;
           	car = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, car) > 5.0) return Msg(playerid, "Nincs jármû a közeledben!");
			if(GetVehicleModel(car) != 433) return Msg(playerid, "Ez nem fegyverszállító");
			
			new id = NINCS;
			if(egyezik(param[2],"lõszer") || egyezik(param[2],"loszer"))
				id=1;
			if(egyezik(param[2],"fegyver"))
				id=0;
			
			if(id == NINCS) return Msg(playerid, "/fsz kirabol [lõszer|fegyver]");
			
			new teli=true;
			if(Szallito[car][szDeagle][id] > 0)
			{
				if(id == 1)
				{
					new venni = max(0, min(Szallito[car][szDeagle][id], WeaponMaxAmmo(WEAPON_DEAGLE) - WeaponAmmo(playerid, WEAPON_DEAGLE)));
					if(venni>0)
						WeaponGiveAmmo(playerid, WEAPON_DEAGLE, venni),Szallito[car][szDeagle][id] -=venni,teli=false;
					
				}
				else
				{
					if(WeaponCanHoldWeapon(playerid, WEAPON_DEAGLE, 0) >= 0)
						WeaponGiveWeapon(playerid, WEAPON_DEAGLE, .maxweapon = 0),Szallito[car][szDeagle][id] --,teli=false;
						
					
				}	
				
			}
			if(Szallito[car][szSilenced][id] > 0)
			{
				
				if(id == 1)
				{
					new venni = max(0, min(Szallito[car][szSilenced][id], WeaponMaxAmmo(WEAPON_SILENCED) - WeaponAmmo(playerid, WEAPON_SILENCED)));
					if(venni>0)
						WeaponGiveAmmo(playerid, WEAPON_SILENCED, venni),Szallito[car][szSilenced][id] -=venni,teli=false;
					print("fut3");
				}
				else
				{
					if(WeaponCanHoldWeapon(playerid, WEAPON_SILENCED, 0) >= 0)
						WeaponGiveWeapon(playerid, WEAPON_SILENCED, .maxweapon = 0),Szallito[car][szSilenced][id] --,teli=false;
						
					
				}	
				
			}
			if(Szallito[car][szCombat][id] > 0)
			{
				if(id == 1)
				{
					new venni = max(0, min(Szallito[car][szCombat][id], WeaponMaxAmmo(WEAPON_COMBAT) - WeaponAmmo(playerid, WEAPON_COMBAT)));
					if(venni>0)
						WeaponGiveAmmo(playerid, WEAPON_COMBAT, venni),Szallito[car][szCombat][id] -=venni,teli=false;
					
				}
				else
				{
					if(WeaponCanHoldWeapon(playerid, WEAPON_COMBAT, 0) >= 0)
						WeaponGiveWeapon(playerid, WEAPON_COMBAT, .maxweapon = 0),Szallito[car][szCombat][id] --,teli=false;
						
					
				}	
				
			}
			if(Szallito[car][szShoutgun][id] > 0)
			{
				if(id == 1)
				{
					new venni = max(0, min(Szallito[car][szShoutgun][id], WeaponMaxAmmo(WEAPON_SHOTGUN) - WeaponAmmo(playerid, WEAPON_SHOTGUN)));
					if(venni>0)
						WeaponGiveAmmo(playerid, WEAPON_SHOTGUN, venni),Szallito[car][szShoutgun][id] -=venni,teli=false;
					
				}
				else
				{
					if(WeaponCanHoldWeapon(playerid, WEAPON_SHOTGUN, 0) >= 0)
						WeaponGiveWeapon(playerid, WEAPON_SHOTGUN, .maxweapon = 0),Szallito[car][szShoutgun][id] --,teli=false;
						
					
				}	
				
			}
			if(Szallito[car][szMP5][id] > 0)
			{
				if(id == 1)
				{
					new venni = max(0, min(Szallito[car][szMP5][id], WeaponMaxAmmo(WEAPON_MP5) - WeaponAmmo(playerid, WEAPON_SHOTGUN)));
					if(venni>0)
						WeaponGiveAmmo(playerid, WEAPON_MP5, venni),Szallito[car][szMP5][id] -=venni,teli=false;
					
				}
				else
				{
					if(WeaponCanHoldWeapon(playerid, WEAPON_MP5, 0) >= 0)
						WeaponGiveWeapon(playerid, WEAPON_MP5, .maxweapon = 0),Szallito[car][szMP5][id] --,teli=false;
						
					
				}	
				
			}
			if(Szallito[car][szM4][id] > 0)
			{
				if(id == 1)
				{
					new venni = max(0, min(Szallito[car][szM4][id], WeaponMaxAmmo(WEAPON_M4) - WeaponAmmo(playerid, WEAPON_M4)));
					if(venni>0)
						WeaponGiveAmmo(playerid, WEAPON_M4, venni),Szallito[car][szM4][id] -=venni,teli=false;
					
				}
				else
				{
					if(WeaponCanHoldWeapon(playerid, WEAPON_M4, 0) >= 0)
						WeaponGiveWeapon(playerid, WEAPON_M4, .maxweapon = 0),Szallito[car][szM4][id] --,teli=false;
						
					
				}	
				
			}
			if(Szallito[car][szSniper][id] > 0)
			{
				if(id == 1)
				{
					new venni = max(0, min(Szallito[car][szSniper][id], WeaponMaxAmmo(WEAPON_SNIPER) - WeaponAmmo(playerid, WEAPON_SNIPER)));
					if(venni>0)
						WeaponGiveAmmo(playerid, WEAPON_SNIPER, venni),Szallito[car][szSniper][id] -=venni,teli=false;
					
				}
				else
				{
					if(WeaponCanHoldWeapon(playerid, WEAPON_SNIPER, 0) >= 0)
						WeaponGiveWeapon(playerid, WEAPON_SNIPER, .maxweapon = 0),Szallito[car][szSniper][id] --,teli=false;
						
					
				}	
				
			}
			if(Szallito[car][szRifle][id] > 0)
			{
				if(id == 1)
				{
					new venni = max(0, min(Szallito[car][szRifle][id], WeaponMaxAmmo(WEAPON_RIFLE) - WeaponAmmo(playerid, WEAPON_RIFLE)));
					if(venni>0)
						WeaponGiveAmmo(playerid, WEAPON_RIFLE, venni),Szallito[car][szRifle][id] -=venni,teli=false;
					
				}
				else
				{
					if(WeaponCanHoldWeapon(playerid, WEAPON_RIFLE, 0) >= 0)
						WeaponGiveWeapon(playerid, WEAPON_RIFLE, .maxweapon = 0),Szallito[car][szRifle][id] --,teli=false;
						
					
				}	
				
			}
			if(Szallito[car][szAk47][id] > 0)
			{
				if(id == 1)
				{
					new venni = max(0, min(Szallito[car][szAk47][id], WeaponMaxAmmo(WEAPON_AK47) - WeaponAmmo(playerid, WEAPON_AK47)));
					if(venni>0)
						WeaponGiveAmmo(playerid, WEAPON_AK47, venni),Szallito[car][szAk47][id] -=venni,teli=false;
					
				}
				else
				{
					if(WeaponCanHoldWeapon(playerid, WEAPON_AK47, 0) >= 0)
						WeaponGiveWeapon(playerid, WEAPON_AK47, .maxweapon = 0),Szallito[car][szAk47][id] --,teli=false;
						
					
				}	
				
			}
			
			if(teli)
				return Msg(playerid, "Nem fér el több nálad!");
			else
				return Cselekves(playerid,"kipakolt a kocsiból fegyvert/lõszert");
		}
		return 1;
	}
	if(egyezik(cmd, "/páncélszekrény") || egyezik(cmd, "/pancelszekreny"))
	{
		new frakcio = PlayerInfo[playerid][pMember];
		if(!PlayerToPoint(3, playerid, FrakcioInfo[frakcio][fPosX], FrakcioInfo[frakcio][fPosY], FrakcioInfo[frakcio][fPosZ])) return Msg(playerid, "Nem vagy a széf közelében.");
		if(FloodCheck(playerid)) return 1;
		if(LegalisSzervezetTagja(playerid) || PlayerInfo[playerid][pMember] == 0) return Msg(playerid, "Nem vagy illegális szervezet tagja!");
		if(params < 2)
		{
			Msg(playerid, "Használat: /páncélszekrény [funkció] [slot]");
			Msg(playerid, "Funkciók: Berak, kivesz, megnéz");
			return 1;
		}
		new slot = strval(param[2]);
		if(egyezik(param[1], "berak"))
		{
			if(params < 2) return Msg(playerid, "/páncélszekrény berak [1-50]");
			if(slot < 1 || slot > 50) return Msg(playerid, "1-50!");
			new Float:armor;
			GetPlayerArmour(playerid, armor);
			new pancel =  floatround(armor);
			if(armor < 10) return Msg(playerid, "Ez a mellény már túl sérült! ((Minimum 10 armor!)");
			if(FrakcioInfo[frakcio][fMelleny][slot] > 0) return Msg(playerid, "Itt már van mellény!");
			FrakcioInfo[frakcio][fMelleny][slot] = pancel;
			SetPlayerArmour(playerid, 0);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál a mellényszekrénybe egy mellényt. Hely: %d, állapota: %d százalék!", slot, floatround(armor));
			SaveMelleny();
			return 1;
		}
		else if(egyezik(param[1], "kivesz"))
		{
			if(!Munkarang(playerid, FrakcioInfo[PlayerInfo[playerid][pMember]][fRaktarRang])) return Msg(playerid, "Nincs elég magas rangod!");
			if(slot < 1 || slot > 50) return Msg(playerid, "/páncélszekrény kivesz [1-50]");
			new Float:armor;
			GetPlayerArmour(playerid, armor);
			if(armor > 0) return Msg(playerid, "Már van rajtad mellény!");
			if(FrakcioInfo[frakcio][fMelleny][slot] < 5) return Msg(playerid, "Itt nincs mellény!");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél egy mellényt a mellényszekrénybõl. Hely: %d, állapota: %d százalék!", slot, FrakcioInfo[frakcio][fMelleny][slot]);
			SetPlayerArmour(playerid, FrakcioInfo[frakcio][fMelleny][slot]);
			FrakcioInfo[frakcio][fMelleny][slot] = 0;
			SaveMelleny();
			return 1;
		}
		else if(egyezik(param[1], "megnéz") ||egyezik(param[1], "megnez"))
		{
			if(slot < 1 || slot > 5)
				return Msg(playerid, "/páncélszekrény kivesz [1-5]");
				
			new mettol = (((slot-1)*10)+1);
			new meddig = (slot*10);
			SendClientMessage(playerid, COLOR_YELLOW, "========[Páncélszekrény]=======");
			for(new x = mettol; x <= meddig; x++)
			{
				if(FrakcioInfo[frakcio][fMelleny][x] < 1)
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[%d] Üres", x);
				else SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[%d] Állapota: %d százalék", x, FrakcioInfo[frakcio][fMelleny][x]);
			}
			return 1;
		}
		else return Msg(playerid, "Funkciók: Berak, Kivesz, Megnéz");
	}

//szállítás
	//========================================================================================================================================//
	if(egyezik(cmd, "/jelszó") || egyezik(cmd, "/jelszo"))
	{
		if(PlayerInfo[playerid][pLeader] != 2) return Msg(playerid, "Nem vagy leader.");
		new leader = PlayerInfo[playerid][pLeader];
		if(params < 1) return Msg(playerid, "/jelszó [Új jelszó]");

		if(strfind(param[1], ",") != NINCS || strfind(param[1], "\\") != NINCS)
			Msg(playerid, "Hibás karakterek a jelszóban!");

		if(strlen(param[1]) > 16)
			Msg(playerid, "A jelszó maximum 16 karakter hosszú lehet");

		FrakcioInfo[leader][fJelszo] = param[1];
		Msg(playerid, "Jelszó beállítva!");
	}

	if(egyezik(cmd, "/jegy"))
	{
		if(FloodCheck(playerid, 1, 3)) return 1;

		new time = UnixTime;
		if(params < 1)
		{
			if(!JegyEllenor(playerid))
				Msg(playerid, "Használata: /jegy [megnéz / vesz / megmutat / büntet]", false);
			else
				Msg(playerid, "Használata: /jegy [megnéz / vesz / megmutat]", false);
			return 1;
		}

		if(egyezik(param[1], "megnéz") || egyezik(param[1], "megnez"))
		{
			if(PlayerInfo[playerid][pJegy] == 0)
			{
				Msg(playerid, "Jegy / Bérlet: Nincs", false);
				Cselekves(playerid, "megnézte, hogy van-e jegye vagy bérlete, de sajnos nincs");
			}
			else if(PlayerInfo[playerid][pJegy] == 1)
			{
				Msg(playerid, "Jegy: Van", false);
				Cselekves(playerid, "megnézte a jegyét");
			}
			else if(PlayerInfo[playerid][pJegy] > time)
			{
				new kulonbseg, ora, perc;
				kulonbseg = PlayerInfo[playerid][pJegy] - UnixTime;
				ora = floatround((float(kulonbseg) / 3600.0), floatround_floor);
				perc = floatround((float(kulonbseg) / 60.0), floatround_floor) % 60;
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Bérlet: Van - Még %dóra és %dpercig", ora, perc);
				Cselekves(playerid, "megnézte meddig érvényes a bérlete");
			}
		}
		else if(egyezik(param[1], "megmutat"))
		{
			if(PlayerInfo[playerid][pJegy] == 0 || PlayerInfo[playerid][pJegy] > 1 && PlayerInfo[playerid][pJegy] < UnixTime)
				return Msg(playerid, "Nincs jegyed!");

			if(params < 2)
				return Msg(playerid, "/jegy megmutat [Név / ID]");

			new player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID)
				return Msg(playerid, "Nincs ilyen játékos");
			if(GetDistanceBetweenPlayers(player, playerid) > 3.0)
				return Msg(playerid, "Nincs a közeledben");
			if(!JegyEllenor(player))
				return Msg(playerid, "Õ nem jegy ellenõr!");

			if(PlayerInfo[playerid][pJegy] == 1)
			{
				SendFormatMessage(player, COLOR_LIGHTGREEN, "Van érvényes jegye neki: %s", ICPlayerName(playerid));
				Msg(playerid, "Felmutattad a jegyed az ellenõrnek");
				Cselekves(playerid, "felmutatta a jegyét az ellenõrnek");
			}
			else if(PlayerInfo[playerid][pJegy] > time)
			{
				new kulonbseg, ora, perc;
				kulonbseg = PlayerInfo[playerid][pJegy] - time;
				ora = floatround((float(kulonbseg) / 3600.0), floatround_floor);
				perc = floatround((float(kulonbseg) / 60.0), floatround_floor) % 60;
				SendFormatMessage(player, COLOR_LIGHTGREEN, "Bérlet: Van érvényes bérlete neki: %s - Még %dóra és %dpercig", ICPlayerName(playerid), ora, perc);
				Msg(playerid, "Felmutattad a bérleted az ellenõrnek");
				Cselekves(playerid, "felmutatta a bérletét az ellenõrnek");
			}
		}
		else if(egyezik(param[1], "büntet") || egyezik(param[1], "buntet"))
		{
			if(!JegyEllenor(playerid))
				return Msg(playerid, "Nem vagy jegy ellenõr!");

			new busz = NPCBuszban(playerid);
			if(busz == NINCS)
				return Msg(playerid, "Nem vagy buszon!");

			if(params < 2)
				return Msg(playerid, "/jegy büntet [Név / ID]");

			new player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID)
				return Msg(playerid, "Nincs ilyen játékos");
			if(GetDistanceBetweenPlayers(player, playerid) > 3.0)
				return Msg(playerid, "Nincs a közeledben");
			if(JegyEllenor(player))
				return Msg(playerid, "Õ jegy ellenõr!");
			if(JegyBuntetve[player])
				return Msg(playerid, "Õ már meg lett büntetve!");
			if(player == playerid)
				return Msg(playerid, "Magadat akarod megbüntetni? Mi vagy te perverz? :O");
			if(PlayerInfo[player][pJegy] > 0)
				return Msg(playerid, "Neki van jegye / bérlete!");

			GiveMoney(player, -20000);
			FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] += 20000;
			Msg(playerid, "Megbüntetted");
			Msg(player, "Az adóellenõr megbüntetett 20000Ftra");
			Cselekves(player, "bírságot kapott az ellenõrtõl és kifizette");
			JegyBuntetve[player] = true;
		}
		else if(egyezik(param[1], "vesz"))
		{
			if(PlayerInfo[playerid][pJegy] > 0)
				return Msg(playerid, "Már van jegyed vagy bérleted!");

			if(params < 2)
				return Msg(playerid, "/jegy vesz [sima - 1000Ft (leszállásig) / bérlet - 15,000Ft (1nap)]");

			if(!IsAt(playerid, IsAt_Buszmegallo))
				return Msg(playerid, "Nem vagy buszmegállóban!");

			if(egyezik(param[2], "sima"))
			{
				if(GetMoney(playerid) < 1000)
					return Msg(playerid, "Az ára 1000Ft");
				GiveMoney(playerid, -1000);
				Cselekves(playerid, "vett egy jegyet");
				PlayerInfo[playerid][pJegy] = 1;
			}
			else if(egyezik(param[2], "berlet") || egyezik(param[2], "bérlet"))
			{
				if(GetMoney(playerid) < 15000)
					return Msg(playerid, "Az ára 15,000Ft");
				GiveMoney(playerid, -15000);
				Cselekves(playerid, "vett egy bérletet");
				PlayerInfo[playerid][pJegy] = time + 86400;
			}
		}

		return 1;
	}

	if(egyezik(cmd, "/menetrend"))
	{
		if(params < 1) return Msg(playerid, "/menetrend [busz / vonat / villamos / járatszám]");
		
		new nidmin= NINCS,nidmax= NINCS;
		if(egyezik(param[1], "busz"))
			nidmin=0,nidmax=5;
		if(egyezik(param[1], "vonat"))
			nidmin=5,nidmax=10;
		if(egyezik(param[1], "villamos"))
			nidmin=10,nidmax=13;
		
		if(nidmin != NINCS)
		{
			new buszok, kovetkezo, ido;
			Msg(playerid, "==========[ Tömeg közlekedési menetrend ]==========", false, COLOR_YELLOW);
			for(new x = nidmin; x < nidmax; x++)
			{
				if(NPC_Vezetok[x][nConnected])
				{
					buszok++;

					if(NPC_Vezetok[x][nHolTart] == NPC_Vezetok[x][nMegallokSzama])
						kovetkezo = 0;
					else
						kovetkezo = NPC_Vezetok[x][nHolTart];

					ido = NPC_Vezetok[x][nMenetIdo];

					if(NPC_Vezetok[x][nMegallt])
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "%s | Következõ megálló: %s (Áll: %s)", NPC_Vezetok[x][nNev], NPC_MegallokNeve[x][kovetkezo], MegalloNev(x, NPC_MEGALLO_JELENLEGI));
					else
					{
						if(ido > 0)
							SendFormatMessage(playerid, COLOR_LIGHTGREEN, "%s | Következõ megálló: %s (%dmp)", NPC_Vezetok[x][nNev], NPC_MegallokNeve[x][kovetkezo], ido);
						else
							SendFormatMessage(playerid, COLOR_LIGHTGREEN, "%s | Következõ megálló: %s (késik)", NPC_Vezetok[x][nNev], NPC_MegallokNeve[x][kovetkezo]);
					}
				}
			}
			if(buszok == 0)
				Msg(playerid, "Jelenleg nincs egy jármû sem");
		}
		else
		{
			new id = strval(param[1]);
			if(id < 1 || id > MAX_NPC_SOFOR || !NPC_Vezetok[id-1][nConnected]) return Msg(playerid, "Nincs ilyen járat");
			id--;

			new kovetkezo;
			if(NPC_Vezetok[id][nHolTart] == NPC_Vezetok[id][nMegallokSzama])
				kovetkezo = 0;
			else
				kovetkezo = NPC_Vezetok[id][nHolTart];

			SendFormatMessage(playerid, COLOR_YELLOW, "==========[ %s: megállók ]==========", NPC_Vezetok[id][nNev]);
			for(new x = 0; x < MAX_MEGALLO; x++)
			{
				if(NPC_Megallok[id][x][0] == 0.0) continue;
				/*if(kovetkezo == x)
				{
					new ido = NPC_Vezetok[id][nMenetIdo];
					if(ido > 0)
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[#%d >> %d] %s", (x+1), ido, NPC_MegallokNeve[id][x]);
					else
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[#%d >>] %s", (x+1), NPC_MegallokNeve[id][x]);
				}*/
				if(NPC_Vezetok[id][nMegallt] && Megallo(id, NPC_MEGALLO_JELENLEGI) == x)
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[#%d - Áll] %s", (x+1), NPC_MegallokNeve[id][x]);
				else
				{
					if(kovetkezo == x)
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[#%d >>] %s", (x+1), NPC_MegallokNeve[id][x]);
					else
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[#%d] %s", (x+1), NPC_MegallokNeve[id][x]);
				}
			}
		}
		return 1;
	}
	/*if(egyezik(cmd, "/örökkulcs"))
	{
		if(!Admin(playerid, 1338) && !IsScripter(playerid)) return Msg(playerid,"Egyenlõre fejlesztés alatt, addig nem használható!");
		if(params < 1) return Msg(playerid, "/örökkulcs [ad / elvesz]");
		if(PlayerInfo[playerid][pPcarkey] == NINCS && PlayerInfo[playerid][pPcarkey2] == NINCS && PlayerInfo[playerid][pPcarkey3] == NINCS) return Msg(playerid, "Nincs jármûved.");
		new jarmu;
		if(egyezik(param[1], "ad"))
		{
			if(params < 3) return Msg(playerid, "/kulcs jármû [1/2/3] [Játékos]");
			new melyik = strval(param[2]);
			new kinek = ReturnUser(param[3]);
			if(kinek == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
			if(GetDistanceBetweenPlayers(playerid, kinek) > 2) return Msg(playerid, "Nincs a közeledben a játékos.");
			if(melyik > 3 || melyik < 1)
				return Msg(playerid, "/örökkulcs jármû [1/2/3] [Név / ID]");
			if(melyik == 1)
			{
				if(PlayerInfo[playerid][pPcarkey] == NINCS) return true;
				jarmu = PlayerInfo[playerid][pPcarkey];
			}
			if(melyik == 2)
			{
				if(PlayerInfo[playerid][pPcarkey2] == NINCS) return true;
				jarmu = PlayerInfo[playerid][pPcarkey2];
			}
			if(melyik == 3)
			{
				if(PlayerInfo[playerid][pPcarkey3] == NINCS) return true;
				jarmu = PlayerInfo[playerid][pPcarkey3];
			}
			if(CarInfo[jarmu][cKulcsok][0] != NINCS && CarInfo[jarmu][cKulcsok][1] != NINCS) return Msg(playerid,"Csak két pótkulcs van hozzá");
			if(PlayerInfo[kinek][pOrokKulcs][0] != NINCS && PlayerInfo[kinek][pOrokKulcs][1] != NINCS) return Msg(playerid,"Nála már több mint 2 kulcs van");
			if(CarInfo[jarmu][cKulcsok][0] == NINCS || CarInfo[jarmu][cKulcsok][1] == NINCS)
			{
				CarInfo[jarmu][cKulcsok][0] = PlayerInfo[kinek][pID];
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Átattad a jármûved kulcsait(örökbe) neki: %s | V-s Rendszám: %d | JármûID: %d", ICPlayerName(kinek), jarmu, CarInfo[jarmu][cId]);
				SendFormatMessage(kinek, COLOR_LIGHTGREEN, "* %s oda adta a jármûve kulcsait(örökbe) | V-s Rendszám: %d | JármûID: %d", ICPlayerName(playerid), jarmu, CarInfo[jarmu][cId]);
				if(PlayerInfo[kinek][pOrokKulcs][0] == NINCS && PlayerInfo[kinek][pOrokKulcs][1] == NINCS)
				{
					PlayerInfo[kinek][pOrokKulcs][0] = CarInfo[jarmu][cId];
				}	
				Cselekves(playerid, "átad egy kulcsot valakinek...");	
				return 1;
			}
			if(CarInfo[jarmu][cKulcsok][0] != NINCS || CarInfo[jarmu][cKulcsok][1] == NINCS)
			{
				CarInfo[jarmu][cKulcsok][1] = PlayerInfo[kinek][pID];
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Átattad a jármûved kulcsait(örökbe) neki: %s | V-s Rendszám: %d | JármûID: %d", ICPlayerName(kinek), jarmu, CarInfo[jarmu][cId]);
				SendFormatMessage(kinek, COLOR_LIGHTGREEN, "* %s oda adta a jármûve kulcsait(örökbe) | V-s Rendszám: %d | JármûID: %d", ICPlayerName(playerid), jarmu, CarInfo[jarmu][cId]);
				if(PlayerInfo[kinek][pOrokKulcs][0] != NINCS && PlayerInfo[kinek][pOrokKulcs][1] == NINCS)
				{
					PlayerInfo[kinek][pOrokKulcs][1] = CarInfo[jarmu][cId];
				}	
				Cselekves(playerid, "átad egy kulcsot valakinek...");	
				return 1;
			}
			if(CarInfo[jarmu][cKulcsok][0] == NINCS || CarInfo[jarmu][cKulcsok][1] != NINCS)
			{
				CarInfo[jarmu][cKulcsok][0] = PlayerInfo[kinek][pID];
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Átattad a jármûved kulcsait(örökbe) neki: %s | V-s Rendszám: %d | JármûID: %d", ICPlayerName(kinek), jarmu, CarInfo[jarmu][cId]);
				SendFormatMessage(kinek, COLOR_LIGHTGREEN, "* %s oda adta a jármûve kulcsait(örökbe) | V-s Rendszám: %d | JármûID: %d", ICPlayerName(playerid), jarmu, CarInfo[jarmu][cId]);
				if(PlayerInfo[kinek][pOrokKulcs][0] == NINCS && PlayerInfo[kinek][pOrokKulcs][1] != NINCS)
				{
					PlayerInfo[kinek][pOrokKulcs][0] = CarInfo[jarmu][cId];
				}	
				Cselekves(playerid, "átad egy kulcsot valakinek...");	
				return 1;
			}
		}
		else if(egyezik(param[1], "elvesz"))
		{
			if(PlayerInfo[playerid][pPcarkey] == NINCS && PlayerInfo[playerid][pPcarkey2] == NINCS && PlayerInfo[playerid][pPcarkey3] == NINCS)
				return Msg(playerid, "Nincs jármûved");

			if(params < 2)
				return Msg(playerid, "Használata: /örökkulcs elvesz [Név / ID]");


			new melyik = strval(param[2]);
			new kitol = ReturnUser(param[3]);
			if(kitol == INVALID_PLAYER_ID)
				return Msg(playerid, "Nincs ilyen játékos");
			if(kitol == playerid)
				return Msg(playerid, "Na ne viccelj...");
			if(GetDistanceBetweenPlayers(playerid, kitol) > 2) return Msg(playerid, "Nincs a közeledben a játékos.");
			if(melyik > 3 || melyik < 1)
				return Msg(playerid, "/örökkulcs elvesz [Név / ID]");
			
			new kocsija[9];
			kocsija[0] = CarInfo[PlayerInfo[playerid][pPcarkey]][cKulcsok][0];
			kocsija[1] = CarInfo[PlayerInfo[playerid][pPcarkey]][cKulcsok][1];
			kocsija[2] = CarInfo[PlayerInfo[playerid][pPcarkey2]][cKulcsok][0];
			kocsija[3] = CarInfo[PlayerInfo[playerid][pPcarkey2]][cKulcsok][1];
			kocsija[4] = CarInfo[PlayerInfo[playerid][pPcarkey3]][cKulcsok][0];
			kocsija[5] = CarInfo[PlayerInfo[playerid][pPcarkey3]][cKulcsok][1];
			kocsija[6] = CarInfo[PlayerInfo[playerid][pPcarkey]][cId];
			kocsija[7] = CarInfo[PlayerInfo[playerid][pPcarkey2]][cId];
			kocsija[8] = CarInfo[PlayerInfo[playerid][pPcarkey3]][cId];
			
 		
			new ID = PlayerInfo[kitol][pID];
			new kulcsa[2]; 
			kulcsa[0] = PlayerInfo[kitol][pOrokKulcs][0];
			kulcsa[1] = PlayerInfo[kitol][pOrokKulcs][1];
			
			if(ID == kocsija[0] || ID == kocsija[1] || ID == kocsija[2] || ID == kocsija[3] || ID == kocsija[4] || ID == kocsija[5])
			{	
				if(ID == kocsija[0])
					CarInfo[PlayerInfo[playerid][pPcarkey]][cKulcsok][0] = NINCS;
				
				if(ID == kocsija[1])
					CarInfo[PlayerInfo[playerid][pPcarkey]][cKulcsok][1] = NINCS;
		
				if(ID == kocsija[2])
					CarInfo[PlayerInfo[playerid][pPcarkey2]][cKulcsok][0] = NINCS;
				
				if(ID == kocsija[3])
					CarInfo[PlayerInfo[playerid][pPcarkey2]][cKulcsok][1] = NINCS;
				
				if(ID == kocsija[4])
					CarInfo[PlayerInfo[playerid][pPcarkey3]][cKulcsok][0] = NINCS;
		
				if(ID == kocsija[5])
					CarInfo[PlayerInfo[playerid][pPcarkey3]][cKulcsok][1] = NINCS;
				
				if(kulcsa[0] == kocsija[6])
					PlayerInfo[kitol][pOrokKulcs][0] = NINCS;
				
				if(kulcsa[0] == kocsija[7])
					PlayerInfo[kitol][pOrokKulcs][0] = NINCS;

				if(kulcsa[0] == kocsija[8])
					PlayerInfo[kitol][pOrokKulcs][0] = NINCS;
					
				if(kulcsa[1] == kocsija[6])
					PlayerInfo[kitol][pOrokKulcs][1] = NINCS;
					
				if(kulcsa[1] == kocsija[7])
					PlayerInfo[kitol][pOrokKulcs][1] = NINCS;	

				if(kulcsa[1] == kocsija[8])
					PlayerInfo[kitol][pOrokKulcs][1] = NINCS;
		
				SendFormatMessage(kitol, COLOR_LIGHTRED, "ClassRPG: %s elvette tõled a kulcsot(örök), amit adott", ICPlayerName(playerid));
				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Visszavetted a kulcsot(örök), amit neki adtál: %s", ICPlayerName(kitol));
			}
			else
				return Msg(playerid, "Nem adtál neki kulcsot");
		}
		return 1;
	}*/		
	if(egyezik(cmd, "/kulcs"))
	{
		if(params < 1) return Msg(playerid, "/kulcs [jármû / elvesz ]");
		new p;
		//new haz;
		new jarmu;
		/*if(egyezik(param[1], "ház") || egyezik(param[1], "haz"))
		{
			if(PlayerInfo[playerid][pPhousekey] == NINCS && PlayerInfo[playerid][pPhousekey2] == NINCS) return Msg(playerid, "Nincs házad.");
			if(PlayerInfo[playerid][pPhousekey] != NINCS && PlayerInfo[playerid][pPhousekey2] != NINCS)
			{
				if(params < 3) return Msg(playerid, "/kulcs ház [1/2] [játékos neve / id]");
				new melyik = strval(param[2]);
				p = ReturnUser(param[3]);
				if(p == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
				if(melyik == 1)
					haz = PlayerInfo[playerid][pPhousekey];
				if(melyik == 2)
					haz = PlayerInfo[playerid][pPhousekey2];

				if(GetDistanceBetweenPlayers(playerid, p) > 2) return Msg(playerid, "Nincs a közeledben a játékos.");
				HazKulcs[p] = haz;
			}
			else
			{
				if(params < 2) return Msg(playerid, "/kulcs ház [játékos neve / id]");
				p = ReturnUser(param[2]);
				if(p == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
				if(GetDistanceBetweenPlayers(playerid, p) > 2) return Msg(playerid, "Nincs a közeledben a játékos.");
				haz = PlayerInfo[playerid][pPhousekey];
				HazKulcs[p] = haz;
			}
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Átattad a házad kulcsaid neki: %s", PlayerName(p));
			SendFormatMessage(p, COLOR_LIGHTGREEN, "* %s oda adta a háza kulcsait.", PlayerName(playerid));
			Cselekves(playerid, "átad egy kulcsot valakinek...");
		}*/
		if(egyezik(param[1], "jármû") || egyezik(param[1], "jarmu"))
		{
			if(PlayerInfo[playerid][pPcarkey] == NINCS && PlayerInfo[playerid][pPcarkey2] == NINCS && PlayerInfo[playerid][pPcarkey3] == NINCS) return Msg(playerid, "Nincs jármûved.");
			//if(PlayerInfo[playerid][pPcarkey] != NINCS && PlayerInfo[playerid][pPcarkey2] != NINCS && PlayerInfo[playerid][pPcarkey3] != NINCS)
			//{
			if(params < 3) return Msg(playerid, "/kulcs jármû [1/2/3] [Játékos]");
			new melyik = strval(param[2]);
			p = ReturnUser(param[3]);
			if(p == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
			if(melyik > 3 || melyik < 1)
				return Msg(playerid, "/kulcs jármû [1/2/3] [Játékos]");
			if(melyik == 1)
			{
				if(PlayerInfo[playerid][pPcarkey] == NINCS) return true;
				jarmu = PlayerInfo[playerid][pPcarkey];
			}
			if(melyik == 2)
			{
				if(PlayerInfo[playerid][pPcarkey2] == NINCS) return true;
				jarmu = PlayerInfo[playerid][pPcarkey2];
			}
			if(melyik == 3)
			{
				if(PlayerInfo[playerid][pPcarkey3] == NINCS) return true;
				jarmu = PlayerInfo[playerid][pPcarkey3];
			}
			if(GetDistanceBetweenPlayers(playerid, p) > 2) return Msg(playerid, "Nincs a közeledben a játékos.");
			JarmuKulcs[p] = CarInfo[jarmu][cId];
			/*}
			else
			{
				if(params < 2) return Msg(playerid, "/kulcs jármû [játékos neve / id]");
				p = ReturnUser(param[2]);
				if(p == -1) return Msg(playerid, "Nincs ilyen játékos.");
				if(GetDistanceBetweenPlayers(playerid, p) > 2) return Msg(playerid, "Nincs a közeledben a játékos.");
				jarmu = PlayerInfo[playerid][pPcarkey];
				JarmuKulcs[p] = CarInfo[jarmu][cId];
			}*/
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Átadtad a jármûved kulcsait neki: %s | V-s Rendszám: %d | JármûID: %d", ICPlayerName(p), jarmu, CarInfo[jarmu][cId]);
			SendFormatMessage(p, COLOR_LIGHTGREEN, "* %s oda adta a jármûve kulcsait | V-s Rendszám: %d | JármûID: %d", ICPlayerName(playerid), jarmu, CarInfo[jarmu][cId]);
			Cselekves(playerid, "átad egy kulcsot valakinek...");
		}
		else if(egyezik(param[1], "elvesz"))
		{
			if(PlayerInfo[playerid][pPcarkey] == NINCS && PlayerInfo[playerid][pPcarkey2] == NINCS && PlayerInfo[playerid][pPcarkey3] == NINCS)
				return Msg(playerid, "Nincs jármûved");

			if(params < 2)
				return Msg(playerid, "Használata: /kulcs elvesz [Játékos]");

			p = ReturnUser(param[2]);
			if(p == INVALID_PLAYER_ID)
				return Msg(playerid, "Nincs ilyen játékos");
			if(GetDistanceBetweenPlayers(playerid, p) > 2) return Msg(playerid, "Nincs a közeledben a játékos.");

			if(JarmuKulcs[p] == PlayerInfo[playerid][pPcarkey] || JarmuKulcs[p] == PlayerInfo[playerid][pPcarkey2] || JarmuKulcs[p] == PlayerInfo[playerid][pPcarkey3])
			{
				SendFormatMessage(p, COLOR_LIGHTRED, "ClassRPG: %s elvette tõled a kulcsot, amit adott", ICPlayerName(playerid));
				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Visszavetted a kulcsot, amit neki adtál: %s", ICPlayerName(p));
				JarmuKulcs[p] = NINCS;
			}
			else
				return Msg(playerid, "Nem adtál neki kulcsot");
		}
		return 1;
	}
	/*
	if(egyezik(cmd, "/contract") || egyezik(cmd, "/vérdíj"))
	{
		if(PlayerInfo[playerid][pLevel] < 3) return Msg(playerid, "Minimum 3as szint.");
		new result[128];
   		if(sscanf(pms, "uds[128]", giveplayerid, moneys, result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /contract [Játékos] [Összeg] [Oka]");

		if(giveplayerid == playerid) return Msg(playerid, "Elment az eszed? Ez öngyilkosság == örökban");
		if(giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
		//new minimum = (PlayerInfo[giveplayerid][pLevel] * 10000);
		new minimum = (PlayerInfo[giveplayerid][pLevel] * 3000);
		minimum = minimum < 30000 ? 30000 : minimum;


		if(PlayerInfo[giveplayerid][pLevel] < 5) return Msg(playerid, "A játékos 5-ös szint alatt van, ezért nem rakhatsz rá vérdíjat.");
		if(moneys < minimum)
		{
			SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: A vérdíjnak minimum %dFt-nak kell lennie!", minimum);
			return 1;
		}

		if(GetMoney(playerid) < moneys) return Msg(playerid, "Nincs ennyi pénzed.");
		GiveMoney(playerid, -moneys);
		if(!IsHitman(giveplayerid))
		{
			PlayerInfo[giveplayerid][pHeadValue] += moneys/2;

			format(string, sizeof(string), "* Valaki azt akarja, hogy öljétek meg %s-t, %dFt-ért.Oka: %s", PlayerName(giveplayerid), moneys,  (result));
			SendMessage(SEND_MESSAGE_HITMAN, string, COLOR_YELLOW);
		}
		format(string, sizeof(string), "* %s-ra/re %dFt-os vérdíjat tûztél ki, oka: %s", PlayerName(giveplayerid), moneys, (result));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		foreach(Jatekosok, i)
		{
			if(PlayerInfo[i][pAdmin] > 4)
			{
				format(string, sizeof(string), "Hitman: %s %dFtos vérdíjat tûzött ki %s fejére, oka: %s", PlayerName(playerid), moneys, PlayerName(giveplayerid), (result));
				SendClientMessage(i, COLOR_GREY, string);
			}
		}
	}*/

	if(egyezik(cmd, "/kilépések") || egyezik(cmd, "/kilepesek"))
	{

		if(Kilepesek[playerid])
		{
			Kilepesek[playerid] = false;
			Msg(playerid, "(( Most már nem látod, hogy kik lépnek ki a közeledben. ))");
		}
		else
		{
			Kilepesek[playerid] = true;
			Msg(playerid, "(( Most már látod, hogy kik lépnek ki a közeledben. ))");
		}
	}
	
	if(egyezik(cmd, "/traffipax") || egyezik(cmd, "/trafi"))
	{
		if(!IsACop(playerid)) return Msg(playerid, "Nem vagy rendõr!");
		if(!OnDuty[playerid]) return Msg(playerid, "Nem vagy szolgálatban!");
		if(!TrafiPax[playerid][tAktiv])
		{
			if(params < 1) return Msg(playerid, "Használata: /traffipax [max sebesség]");
			new sebesseg = strval(param[1]);
			
			
			if(sebesseg != 5 && sebesseg != 10 && sebesseg != 20 && sebesseg != 30 && sebesseg != 40 && sebesseg != 50 && sebesseg != 60 && sebesseg != 70 && sebesseg != 80 && sebesseg != 90 && sebesseg != 100 && sebesseg != 110 && sebesseg != 120 && sebesseg != 130 && sebesseg != 140)
				return Msg(playerid, "A sebeség érték 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, vagy 140 lehet");
				
			if(!IsPlayerInAnyVehicle(playerid))
			{
				Cselekves(playerid, "lerakott egy traffipaxot és beállította a sebességet");
				TrafiPax[playerid][tAktiv] = true;
				TrafiPax[playerid][tSebesseg] = sebesseg;

				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);

				TrafiPax[playerid][tPosX] = x;
				TrafiPax[playerid][tPosY] = y;
				TrafiPax[playerid][tPosZ] = z;

			}
			else
			{
				Cselekves(playerid, "elõvette a traffipaxot és beállította a sebességet");
				TrafiPax[playerid][tAktiv] = true;
				TrafiPax[playerid][tSebesseg] = sebesseg;

				new Float:x, Float:y, Float:z, car = GetPlayerVehicleID(playerid);
				GetVehiclePos(car, x, y, z);

				TrafiPax[playerid][tPosX] = x;
				TrafiPax[playerid][tPosY] = y;
				TrafiPax[playerid][tPosZ] = z;

			}
		}
		else
		{
			Cselekves(playerid, "elrakta a traffipaxot");
			TrafiPax[playerid][tAktiv] = false;
			
		}
		return 1;
	}

	if(egyezik(cmd, "/pluszido") || egyezik(cmd, "/pluszidõ"))
	{
		if(!OnDuty[playerid]) return Msg(playerid, "Nem vagy szolgálatban");
		if(!IsACop(playerid)) return Msg(playerid, "Nem vagy rendõr");
		if(PlayerInfo[playerid][pRank] < 4 && !LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA) && !Admin(playerid, 1337)) return Msg(playerid, "Csak 4es rangtól!");
		if(params < 2)
			return Msg(playerid, "Használata: /pluszidõ [játékos] [idõ - percben]");

		new jatekos = ReturnUser(param[1]), ido = strval(param[2]);

		if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Érvénytelen játékos");
		if(ido < 1) return Msg(playerid, "Minimum egy perc!");
		if(ido > 60) return Msg(playerid, "Maximum egy óra!");
		if(PlayerInfo[jatekos][pJailed] < 1) return Msg(playerid, "A játékos nincs börtönben!");
		if(PlayerInfo[jatekos][pJailTime] >= 3600) return Msg(playerid, "Hova adsz már neki jailt? Nem elég szerinted?");

		if(FloodCheck(playerid, 5)) return 1;

		PlayerInfo[jatekos][pJailTime] += ido * 60;
		JailTime[playerid] += ido * 60;

		Msg(jatekos, "Egy rendvédelmis plusz börtön idõt adott");
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Plusz %d percet adtál neki: %s, így még %d percig van börtönben", ido, ICPlayerName(jatekos), PlayerInfo[jatekos][pJailTime] / 60);
		ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s plusz idõt (%d perc) adott neki: %s >>", PlayerName(playerid), ido, PlayerName(jatekos));

		return 1;
	}

	if(egyezik(cmd, "/zsak") || egyezik(cmd, "/zsák"))
	{
		new kocsi = GetClosestVehicle(playerid);
		if(IsMunkaKocsi(kocsi) == MUNKA_PENZ) return Msg(playerid, "Munka kocsival NEM LEHET!");
		if(params < 1)
		{
			Msg(playerid, "Használata: /zsák [funkció]");
			Msg(playerid, "[Funkciók] vesz, berak, kivesz, kirak, segítség, töröl(Tartalmát is törli!)", false);
			return 1;
		}

		if(FloodCheck(playerid)) return 1;

		if(egyezik(param[1], "segítség") || egyezik(param[1], "segitseg"))
		{
			Msg(playerid, "===[ Segítség ]===", false);
			Msg(playerid, "vesz: üres zsák kivétele, berak: a zsák bepakolása, kivesz: pénzes zsák kivétele, kirak: pénz kipakolása a zsákból", false);
		}
		else if(egyezik(param[1], "vesz"))
		{
			
			if(Locked(kocsi)) return SendClientMessage(playerid, COLOR_YELLOW, "Ez a jármû zárva van!");
			if(JatekosZsak[playerid] >= 0) return Msg(playerid, "Már vettél ki zsákot!");
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 6.0) return Msg(playerid, "Nincs jármû a közeledben!");
			if(GetVehicleModel(kocsi) != 428) return Msg(playerid, "Ez nem pénzszállító!");
			JatekosZsak[playerid] = 0;
			Cselekves(playerid, "kivett egy zsákot a pénzszállítóból");
			Freeze(playerid, 1500); ApplyAnimation(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
			SetPlayerAttachedObject(playerid, ATTACH_SLOT_ZSAK_PAJZS_BILINCS, 1550, 1, 0.1, -0.3, 0, 0, 40, 0, 1, 1, 1);

		}
		else if(egyezik(param[1], "info"))
		{
			
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 6.0) return Msg(playerid, "Nincs jármû a közeledben!");
			if(GetVehicleModel(kocsi) != 428) return Msg(playerid, "Ez nem pénzszállító!");
			if(Locked(kocsi)) return SendClientMessage(playerid, COLOR_YELLOW, "Ez a jármû zárva van!");
			Cselekves(playerid, "megnézte a pénzszállító tartalmát.");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "A pénzszállítóban %dFt van", PenzszallitoPenz[kocsi]);

		}
		else if(egyezik(param[1], "berak"))
		{
			if(JatekosZsak[playerid] < 0) return Msg(playerid, "Nincs zsákod");
			if(JatekosZsak[playerid] == 0) return Msg(playerid, "A zsákod üres :(");
			
			
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 6.0) return Msg(playerid, "Nincs jármû a közeledben!");
			if(GetVehicleModel(kocsi) != 428) return Msg(playerid, "Ez nem pénzszállító!");
			
			
			if(Locked(kocsi)) return SendClientMessage(playerid, COLOR_YELLOW, "Ez a jármû zárva van!");

			if((PenzszallitoPenz[kocsi] + JatekosZsak[playerid]) <= MAXPENZSZALLITOPENZ)
			{
				PenzszallitoPenz[kocsi] += JatekosZsak[playerid];
				JatekosZsak[playerid] = NINCS;
				Cselekves(playerid, "bepakolt egy pénzzel teli zsákot a pénzszállítóba");
				RemovePlayerAttachedObject(playerid, ATTACH_SLOT_ZSAK_PAJZS_BILINCS);
				Freeze(playerid, 1500); ApplyAnimation(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
			}
			else
				Msg(playerid, "A pénzszállító tele van!");
		}
		else if(egyezik(param[1], "töröl"))
		{
			if(JatekosZsak[playerid] < 0) return Msg(playerid, "Nincs is zsákod, akkor mit akarsz törölni? -.-");
			JatekosZsak[playerid] = NINCS;
			RemovePlayerAttachedObject(playerid, ATTACH_SLOT_ZSAK_PAJZS_BILINCS);
			Msg(playerid, "Zsákod és tartalma sikeresen törölve!");
		}
		else if(egyezik(param[1], "kivesz"))
		{
			if(JatekosZsak[playerid] > 0) return Msg(playerid, "Nálad már van zsák");

			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 6.0) return Msg(playerid, "Nincs jármû a közeledben!");
			if(GetVehicleModel(kocsi) != 428) return Msg(playerid, "Ez nem pénzszállító!");
			if(Locked(kocsi)) return SendClientMessage(playerid, COLOR_YELLOW, "Ez a jármû zárva van!");

			if(PenzszallitoPenz[kocsi] < 1) return Msg(playerid, "A pénzszállítóban nincs pénz");
			

			new kivesz = MAXZSAKPENZ;
			if(PenzszallitoPenz[kocsi] < MAXZSAKPENZ) kivesz = PenzszallitoPenz[kocsi];

			JatekosZsak[playerid] = kivesz;
			PenzszallitoPenz[kocsi] -= kivesz;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél egy zsák pénzt a pénzszállítóból, tartalma: %dFt", kivesz);
			Cselekves(playerid, "kivett egy pénzzel teli zsákot a pénzszállítóból");
			Freeze(playerid, 1500); ApplyAnimation(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
			SetPlayerAttachedObject(playerid, ATTACH_SLOT_ZSAK_PAJZS_BILINCS, 1550, 1, 0.1, -0.3, 0, 0, 40, 0, 1, 1, 1);
		}
		else if(egyezik(param[1], "kirak"))
		{
			if(Rabol[playerid] != 0) return Msg(playerid, "Miközben rabolod?");
			if(JatekosZsak[playerid] == NINCS) return Msg(playerid, "Nincs zsákod");
			if(JatekosZsak[playerid] == 0) return Msg(playerid, "A zsákod üres");

			new szef, melo = PlayerInfo[playerid][pMember];
			if(PlayerToPoint(15.0, playerid, 2143.797, 1641.955, 993.576))
				szef = 1;
			else if(!LegalisSzervezetTagja(playerid) && !Civil(playerid) && PlayerToPoint(2.0, playerid, FrakcioInfo[melo][fPosX], FrakcioInfo[melo][fPosY], FrakcioInfo[melo][fPosZ]))
				szef = 2;

			if(szef == 0) return Msg(playerid, "Nem vagy széfnél!");
			else if(szef == 1)
			{
				if(BankSzefRablas == NINCS) BankSzef += JatekosZsak[playerid];
				else BankSzefRablas += JatekosZsak[playerid];

				JatekosZsak[playerid] = NINCS;
				Cselekves(playerid, "visszarakott egy zsák pénzt a bank széfjébe");
				Freeze(playerid, 1500); ApplyAnimation(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
				RemovePlayerAttachedObject(playerid, ATTACH_SLOT_ZSAK_PAJZS_BILINCS);
			}
			else if(szef == 2)
			{
				FrakcioInfo[melo][fPenz] += JatekosZsak[playerid];
				JatekosZsak[playerid] = NINCS;
				Cselekves(playerid, "berakta a lopott pénzt a széfbe");
				Freeze(playerid, 1500); ApplyAnimation(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
				RemovePlayerAttachedObject(playerid, ATTACH_SLOT_ZSAK_PAJZS_BILINCS);
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/kamera"))
	{
		if(!IsACop(playerid) && !IsHitman(playerid)) return Msg(playerid, "Ezt nem használhatod!");
		if(params < 1)
		{
			Msg(playerid, "Használata: /kamera [kamera ID]");
			Msg(playerid, "[SF-Bank kamerák] Kivül: 1, 2, 3 | Belül: 4, 5, 6 | Széf: 7, 8, 9, 10, 11, 12, 13 ,14, 15, 16, 17, 18");
			Msg(playerid, "[LS-Bank kamerák] Belül: 19, 20, 21 Kivül: 22 ");
			Msg(playerid, "[Térfigyelõ kamerák] LS Határ: 23, 24 | LS Városháza: 25, 26 | LS Déli benzinkút: 27 | LS Északi benzinkút: 28");
			Msg(playerid, "[Térfigyelõ kamerák] SF Alagút: 29, 30 | SF vasútállomás: 31");
			Msg(playerid, "Kikapcsoláshoz: \"ki\"");
			return 1;
		}
		if(egyezik(param[1], "ki") && Kamera[playerid])
		{
			if(Kamera[playerid] == NINCS) return Msg(playerid, "Nem is kamerázol!");
		    TogglePlayerControllable(playerid, 1);
			//Tele(playerid, 240.3513,81.1932,1005.0391, false, 0, 6);
			Kamera[playerid] = NINCS;
			MelyikKamera[playerid] = NINCS;
			SetCameraBehindPlayer(playerid);
			
			Tele(playerid, Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2], false, Unspec[playerid][sVW], Unspec[playerid][sINT]);
			return Msg(playerid, "Kamera kikapcsolva");
		}
		new kamera = strval(param[1]);
		if(kamera > 0 && kamera <= 31)
		{
			if(
			!PlayerToPoint(1.5, playerid, 215.443, 151.270, 1003.023) && // LSPD - int: 3, vw: 144
			!PlayerToPoint(1.5, playerid, 240.3513,81.1932,1005.0391) &&
			!PlayerToPoint(1.5, playerid,1607.59997559,-1835.59997559,14.60000038) &&
			!PlayerToPoint(1.5, playerid,1332.09997559,541.79998779,1069.30004883) &&
			!PlayerToPoint(1.5, playerid,2049.00000000,-2569.80004883,13.19999981) &&
			!PlayerToPoint(1.5, playerid,230.950,114.205,1003.218) && //sfpd
			!PlayerToPoint(1.5, playerid,213.3100,1826.3129,6.4141) &&
			!PlayerToPoint(1.5, playerid,213.2647,1819.3121,6.4216) &&
			!PlayerToPoint(1.5, playerid,237.974, 71.358, 1005.039) &&
			!PlayerToPoint(1.5, playerid, 2104.7690,-2541.8882,13.5659) &&
			!PlayerToPoint(1.5, playerid, 1357.4242,1367.8223,10.9557) &&
			!PlayerToPoint(1.5, playerid, 1362.4702,1367.8223,10.9557) &&
			!PlayerToPoint(1.5, playerid, 2547.284, -1286.155, 1060.984) &&
			Kamera[playerid] == NINCS) return Msg(playerid, "Nem vagy a számítógép elõtt");
			
			if(Kamera[playerid] == NINCS)
			{
				GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
				Unspec[playerid][sVW] = GetPlayerVirtualWorld(playerid);
				Unspec[playerid][sINT] = GetPlayerInterior(playerid);
			}
			Freeze(playerid);
			Kamera[playerid] = kamera;

			if(kamera <= 3) Tele(playerid, -1943.552, 550.390, 37.267, false, 0, 0); // SF bank kívül
			else if(21 >= kamera >= 19) Tele(playerid, 1918.29959229, -2428.31927467, 10.9656142578, false, 1555, 0); // LS bank belül
			else if(kamera <= 22) Tele(playerid, 1447.0922, -1035.0599, 20, false, 0, 0); // LS bank kívül
			else if(kamera == 23) Tele(playerid, 32.8127, -1516.1107, -1.4058, false, 0, 0); // LS határ
			else if(kamera == 24) Tele(playerid, 69.5301, -1547.3535, 0.7020, false, 0, 0); // LS határ
			else if(kamera == 25) Tele(playerid,1441.6880, -1755.9028, 7.9034, false, 0, 0);//LS Városháza
			else if(kamera == 26) Tele(playerid,1465.6407, -1756.8179, 21.9892, false, 0, 0);//LS Városháza
			else if(kamera == 27) Tele(playerid,1925.3287, -1771.5802, 11.5173, false, 0, 0);//LS déli benzinkút
			else if(kamera == 28) Tele(playerid,1014.0941, -926.2975, 40.6561, false, 0, 0);//LS északi benzinkút
			else if(kamera == 29) Tele(playerid,-894.8271, -1101.0953, 93.0126, false, 0, 0);//SF alagút
			else if(kamera == 30) Tele(playerid,-1222.5817, -789.4741, 64.3133, false, 0, 0);//SF alagút
			else if(kamera == 31) Tele(playerid,-1982.8337, 110.0123, 22.7714, false, 0, 0);//SF vasútállomás
			if(Hackeltkamera == false)
			{
				if(4 <= kamera <= 6) Tele(playerid, 2325.446, -10.469, 26.742, false, 1555, 0); // SF bank belül
				else if(7 <= kamera <= 13) Tele(playerid, 2144.606, 1594.452, 999.755, false, 1555, 1); // SF bank széf
				else if(kamera == 14) Tele(playerid, 2165.480, 1612.761, 999.972, false, 1555, 1); // SF bank széf
				else if(18 >= kamera >= 15) Tele(playerid, 2238.217, 1585.519, 999.971, false, 1555, 1); // SF bank széf
			}
			else
			{
				if(4 <= kamera <= 6) Tele(playerid, 2325.446, -10.469, 26.742, false, 1556, 0); // SF bank belül
				else if(7 <= kamera <= 13) Tele(playerid, 2144.606, 1594.452, 999.755, false, 1556, 1); // SF bank széf
				else if(kamera == 14) Tele(playerid, 2165.480, 1612.761, 999.972, false, 1556, 1); // SF bank széf
				else if(18 >= kamera >= 15) Tele(playerid, 2238.217, 1585.519, 999.971, false, 1556, 1); // SF bank széf
			}
			
			if(0 < kamera <= 18) MelyikKamera[playerid] = 1;//SF bank kamerák
			else if(19 <= kamera <= 22) MelyikKamera[playerid] = 2;//LS bank kamerák
			else if(23 <= kamera <= 31) MelyikKamera[playerid] = 3;//Térfigyelõ kamerák

			switch(kamera)
			{
				// SF Bank elõtti helyek
				case 1: { SetPlayerCameraPos(playerid, -1924.521, 588.865, 42.181); SetPlayerCameraLookAt(playerid, -1948.613, 564.146, 35.207); }
				case 2: { SetPlayerCameraPos(playerid, -1962.093, 588.351, 39.980); SetPlayerCameraLookAt(playerid, -1950.864, 566.055, 35.234); }
				case 3: { SetPlayerCameraPos(playerid, -1962.093, 588.351, 39.980); SetPlayerCameraLookAt(playerid, -1979.185, 558.746, 35.118); }

				// SF Bank belül
				case 4: { SetPlayerCameraPos(playerid, 2316.853, -17.153, 28.526); SetPlayerCameraLookAt(playerid, 2309.581, -8.211, 26.742); }
				case 5: { SetPlayerCameraPos(playerid, 2317.125, -0.169, 28.689); SetPlayerCameraLookAt(playerid, 2309.281, -9.862, 26.742); }
				case 6: { SetPlayerCameraPos(playerid, 2306.144, -17.321, 28.598); SetPlayerCameraLookAt(playerid, 2314.806, -1.466, 26.742); }

				// SF Széf felül, lent, és maga a széf
				case 7: { SetPlayerCameraPos(playerid, 2149.471, 1604.226, 1008.248); SetPlayerCameraLookAt(playerid, 2146.801, 1598.454, 1003.967); } // széf fent
				case 8: { SetPlayerCameraPos(playerid, 2142.929, 1604.062, 1003.821); SetPlayerCameraLookAt(playerid, 2150.481, 1602.958, 1001.970); } // széf közép
				case 9: { SetPlayerCameraPos(playerid, 2140.601, 1620.260, 1002.323); SetPlayerCameraLookAt(playerid, 2147.851, 1605.643, 1001.363); } // széf szellõzõ
				case 10: { SetPlayerCameraPos(playerid, 2151.853, 1606.368, 1003.096); SetPlayerCameraLookAt(playerid, 2143.480, 1619.888, 1000.968); } // széf szellõzõ 2
				case 11: { SetPlayerCameraPos(playerid, 2141.104, 1607.320, 996.070); SetPlayerCameraLookAt(playerid, 2147.659, 1624.965, 993.688); } // széf lent
				case 12: { SetPlayerCameraPos(playerid, 2144.004, 1626.562, 996.290); SetPlayerCameraLookAt(playerid, 2144.360, 1604.194, 993.568); } // széf lent 2
				case 13: { SetPlayerCameraPos(playerid, 2147.158, 1627.724, 996.374); SetPlayerCameraLookAt(playerid, 2143.953, 1641.954, 993.576); } // széf bent

				// SF Garázs fele
				case 14: { SetPlayerCameraPos(playerid, 2155.774, 1596.058, 1002.768); SetPlayerCameraLookAt(playerid, 2159.241, 1619.883, 999.967); } // széf lift

				// SF Garázs
				case 15: { SetPlayerCameraPos(playerid, 2226.284, 1621.254, 1003.014); SetPlayerCameraLookAt(playerid, 2224.382, 1598.751, 999.983); } // garázs
				case 16: { SetPlayerCameraPos(playerid, 2226.284, 1621.254, 1003.014); SetPlayerCameraLookAt(playerid, 2196.668, 1617.161, 999.972); } // garázs 2
				case 17: { SetPlayerCameraPos(playerid, 2216.615, 1595.099, 1002.567); SetPlayerCameraLookAt(playerid, 2222.118, 1570.528, 999.997); } // garázs lent
				case 18: { SetPlayerCameraPos(playerid, 2168.703, 1581.614, 1002.653); SetPlayerCameraLookAt(playerid, 2191.559, 1587.863, 999.978); } // garázs lent 2

				// LS Bank belül
				case 19: { SetPlayerCameraPos(playerid, 1894.67199229, -2429.68037467, 16.9999142578); SetPlayerCameraLookAt(playerid, 1904.86069229, -2426.21337467, 15.9999142578);  }
				case 20: { SetPlayerCameraPos(playerid, 1925.36969229, -2440.82577467, 16.5399142578); SetPlayerCameraLookAt(playerid, 1919.96179229, -2428.40717467, 14.9999142578); }
				case 21: { SetPlayerCameraPos(playerid, 1930.35009229, -2437.08617467, 18.5399142578); SetPlayerCameraLookAt(playerid, 1930.35009229, -2437.08617467, 10.5399142578); }
				//kivül
				case 22: { SetPlayerCameraPos(playerid, 1423.7068, -1045.5217, 36.2174); SetPlayerCameraLookAt(playerid, 1440.4279, -1036.3112, 30); }
				//Térfigyelõ kamerák
				//LS határ 
				case 23: { SetPlayerCameraPos(playerid, 41.13, -1517.58, 9.46); SetPlayerCameraLookAt(playerid, 51.5929, -1525.2882, 6.7844); }
				case 24: { SetPlayerCameraPos(playerid, 64.6270, -1546.2535, 9.4645); SetPlayerCameraLookAt(playerid, 50.8215, -1538.4445, 6.4109); }
				//Városháza
				case 25: { SetPlayerCameraPos(playerid, 1440.3658, -1756.2223, 26.0224); SetPlayerCameraLookAt(playerid, 1478.0836, -1734.6091, 15.1434); }
				case 26: { SetPlayerCameraPos(playerid, 1467.50, -1752.79, 24.25); SetPlayerCameraLookAt(playerid, 1479.0868, -1767.4955, 19.1645); }
				//LS Déli benzinkút
				case 27: { SetPlayerCameraPos(playerid, 1929.51, -1765.60, 15.72); SetPlayerCameraLookAt(playerid, 1938.2274, -1777.4841, 14.4064); }
				//LS Északi benzinkút
				case 28: { SetPlayerCameraPos(playerid, 1015.62, -928.00, 45.29); SetPlayerCameraLookAt(playerid, 1004.1381, -936.9189, 43.4445); }
				//SF alagút
				case 29: { SetPlayerCameraPos(playerid, -892.95, -1108.23, 105.70); SetPlayerCameraLookAt(playerid, -913.4893, -1092.3210, 102.0390); }
				case 30: { SetPlayerCameraPos(playerid, -1222.47, -782.34, 70.58); SetPlayerCameraLookAt(playerid, -1163.9612, -835.2014, 67.9231); }
				//SF vasútállomás
				case 31: { SetPlayerCameraPos(playerid, -1980.07, 109.42, 33.37); SetPlayerCameraLookAt(playerid, -1993.9071, 150.0355, 27.3390); }
				
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/bankszéf"))
	{
		if(!Admin(playerid, 1337)) return 1;
		if(params < 1)
		{
			if(!Admin(playerid, 5555)) return Msg(playerid,"/bankszéf set");
			SendFormatMessage(playerid, COLOR_WHITE, "Bank széf: %sFt", FormatInt(BankSzef));
			SendFormatMessage(playerid, COLOR_WHITE, "Bank széf (rablás alatt): %sFt", FormatInt(BankSzefRablas));

		}
		else if(egyezik(param[1], "set"))
		{
			if(!IsScripter(playerid)) return 1;
			if(params < 3) return Msg(playerid, "/bankszéf set [1/2] érték | 1: bankszéf 2: rabolérték");

			if(strval(param[2]) == 1)
				BankSzef = strval(param[3]);
			else
				BankSzefRablas = strval(param[3]);
			
			SendFormatMessage(playerid, COLOR_WHITE, "Bank széf: %sFt", FormatInt(BankSzef));
			SendFormatMessage(playerid, COLOR_WHITE, "Bank széf (rablás alatt): %sFt", FormatInt(BankSzefRablas));
			
			Msg(playerid, "Beállítva");
		}
		return 1;
	}

	if(egyezik(cmd, "/hitel"))
	{
	    if(PlayerInfo[playerid][pZarolva] == 1) return Msg(playerid, "Zárolt számlával mégis hogy akarsz hitelt felvenni?");
		if(params < 1)
			return Msg(playerid, "Használata: /hitel [felvesz / befizet / info]");

		if(GetPlayerVirtualWorld(playerid)==9999) return Msg(playerid, "Ez nem bank!");

		if(egyezik(param[1], "felvesz"))
		{
			if(!IsAt(playerid, IsAt_Bank))
				return Msg(playerid, "Nem vagy a bankban!");

			if(PlayerInfo[playerid][pHitel] > 1)
				return Msg(playerid, "Bank: Elobb az elozo hitelt vissza kell fizetned!", false);

			if(Szint(playerid) < 4)
				return Msg(playerid, "Hitel csak 4-es szinttol");

			new maxhitel, torleszto, honap, visszafizet;
			
			
			if(PlayerInfo[playerid][pMember] > NINCS)
				maxhitel=2*Szint(playerid) * FrakcioInfo[PlayerInfo[playerid][pMember]][fFizetes][PlayerInfo[playerid][pRank]];
			else
				maxhitel=Szint(playerid) * 300000;
			
			
			if(PlayerInfo[playerid][pAccount]*2 < maxhitel)
				maxhitel = PlayerInfo[playerid][pAccount]*2;
				
			
			if(maxhitel == 0)
				return Msg(playerid, "Nincs elég saját forgalmad, hogy hitelt vehess fel.");
				
			
			
			honap=Szint(playerid)*2;
			visszafizet = floatround(maxhitel*(1+(BANK_KAMAT/100)));
			
			torleszto= visszafizet / honap;
		
			
			if(maxhitel < 10001) return Msg(playerid, "A bank nem tud neked kölcsönt addni!");
			if(params < 2)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Használata: /hitel felvesz [összeg] - Minimum: 10000Ft - Maximum összeg: %s Ft", FormatInt(maxhitel));
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Kamat: A kamat %.3f%%.", BANK_KAMAT);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Az így maximális felvétel esetén %s Ft-ott fogsz vissza fizetni!",FormatInt(visszafizet));
				SendFormatMessage(playerid, COLOR_LIGHTRED, "A havi törleszto részleted maximális felvétel esetén: %s Ft %d hónapon át.",FormatInt(torleszto),honap);
				
				return 1;
			}
			new osszeg = strval(param[2]);

				
			if(osszeg < 10000 || osszeg >= maxhitel) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Bank: Az összeg minimum 10,000 és maximum %dFt lehet!", maxhitel);
	
			if(BankSzef < osszeg) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Bank: A banknak sajnos nincs ennyi pénze - A maximum felveheto összeg jelenleg %dFt", BankSzef);
	
			visszafizet = floatround(osszeg*(1+(BANK_KAMAT/100)));
			
			torleszto= visszafizet / honap;
			
			PlayerInfo[playerid][pHitel] = visszafizet;
			PlayerInfo[playerid][pTorleszto] = torleszto;
			PlayerInfo[playerid][pHitelOra] = honap;
			PlayerInfo[playerid][pHitelHatralek] = 0;
			
			BankSzef -= osszeg;
			GiveMoney(playerid, osszeg);

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Bank: Sikeresen felvettél %s Ft kölcsönt. %d órád van visszafizetni", FormatInt(osszeg), PlayerInfo[playerid][pHitelOra]);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Bank: Vissza fizetendo összeg kamattal együtt: %s Ft. A bank a kamat változtatás jogát fennttartja",FormatInt(visszafizet));
			Msg(playerid, "Ha nem fizeted a részleteket 5%% büntetést kapsz! 10 részlet késés után, a hátralékod kétszeresét levonjuk a számládról!");
			Cselekves(playerid, "kölcsönt vett fel a banktól");
		}
		else if(egyezik(param[1], "befizet"))
		{
			if(!IsAt(playerid, IsAt_Bank))
				return Msg(playerid, "Nem vagy a bankban!");

			if(PlayerInfo[playerid][pHitel] <= 0)
				return Msg(playerid, "Bank: Nem vettél fel hitelt / vissza törlesztetted.", false);

			if(params < 2)
				return Msg(playerid, "Használata: /hitel befizet [összeg]");

			new osszeg = strval(param[2]);
			if(osszeg < 1)
				return Msg(playerid, "Normális összeget írj már be...");

			if(osszeg > GetMoney(playerid))
				return Msg(playerid, "Nincs ennyi pénzed!");

			if(osszeg > PlayerInfo[playerid][pHitel])
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Bank: Csak %dFtot kell befizetned", PlayerInfo[playerid][pHitel]);
				return 1;
			}
			PlayerInfo[playerid][pHitel] -= osszeg;
			BankSzef += osszeg;
			GiveMoney(playerid, -osszeg);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Bank: Sikeresen törlesztettél %dFtot", osszeg);
			if(PlayerInfo[playerid][pHitel] <= 0 && PlayerInfo[playerid][pZarolva] == 1)
			{
				PlayerInfo[playerid][pZarolva] = 0;
				PlayerInfo[playerid][pFelvettHitel] = 0;
				Msg(playerid, "Bank: Törlesztetted az adósságod, feloldottuk a számlád.", false);
			}
			else if(PlayerInfo[playerid][pHitel] <= 0)
				Msg(playerid, "Bank: Sikeresen törlesztetted az összeset", false);
			Cselekves(playerid, "törlesztett a banknak");
		}
		else if(egyezik(param[1], "info"))
		{
			Msg(playerid, "==========[ Bank Hitel-Info ]==========");
			if(PlayerInfo[playerid][pHitel] <= 0)
				Msg(playerid, "Még nem vettél fel hitelt", false);
			else
			{
				SendFormatMessage(playerid, COLOR_GREY, "Jelenlegi tartozásod: %s Ft - Határidõ: %d óra - Havi törlesztõd %s Ft", FormatInt(PlayerInfo[playerid][pHitel]),PlayerInfo[playerid][pHitelOra], FormatInt(PlayerInfo[playerid][pTorleszto]));
			}
		}

		return 1;
	}

	if(egyezik(cmd, "/sendrcon"))
	{
		if(!IsScripter(playerid)) return 1;
        new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /sendrcon [Paraméterek]");

		ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Rcon parancs futtatva - Parancs: %s - Admin: %s >>", result, PlayerName(playerid));
		SendFormatMessage(playerid, COLOR_LIGHTRED, "Parancs futtatva: %s", result);
		SendRconCommand(result);
		return 1;
	}
	if(egyezik(cmd, "/unbanip"))
	{
		if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;

		if(params < 1)
			return Msg(playerid, "Használata: /unbanip [ip]");

		if(strfind(param[1],".") == NINCS)
				return Msg(playerid, "Csak IP-t adhatsz meg!");

		format(cmd, 64, "unbanip %s", param[1]);
		ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s unbannolta õt: %s (SAMP) >>", AdminName(playerid), param[1]);
		SendFormatMessage(playerid, COLOR_LIGHTRED, "Parancs futtatva: %s", cmd);
		SendRconCommand(cmd);

		return 1;
	}
	if(egyezik(cmd, "/report"))
	{
		if(params < 1)
		{
			Msg(playerid, "Használata: /report [parancs]", false);
			Msg(playerid, "Parancsok: join, exit, status, channelstatus", false);
			if(Admin(playerid, 1) || IsScripter(playerid))
			{
				Msg(playerid, "Funkciók: view [channel] > Egy channel figyelése", false);
				Msg(playerid, "Funkciók: set [adminsegéd] [channel] > Adminsegéd berakása a channelre", false);
				Msg(playerid, "Funkciók: block [játékos] > Játékos blokkolása", false);
				Msg(playerid, "Funkciók: kick [játékos] [oka] > Kirúgás", false);
				Msg(playerid, "Funkciók: get [player] [channel] > Behívás channelre", false);
				Msg(playerid, "Funkciók: lock [channel] > Channel lezárása", false);

				if(Admin(playerid, 2) || IsScripter(playerid))
				{
					Msg(playerid, "Funkciók: title [channel] [téma] > Channel téma", false);
					Msg(playerid, "Funkciók: max [channel] [max] > Maximum játékos", false);
					Msg(playerid, "Funkciók: timeout [channel] [idõ] > Idõlimit", false);
					Msg(playerid, "Funkciók: seeing [channel] > A játékosok lássák egymást", false);
					Msg(playerid, "Funkciók: lock [channel] > Csatorna zárás / nyitás", false);
				}
				if(Admin(playerid, 1337) || IsScripter(playerid))
					Msg(playerid, "Funkciók: recount > Statisztikák újraszámolása");
			}
			return 1;
		}
		new channel = PlayerInfo[playerid][pReportChannel];
		new vchannel = PlayerInfo[playerid][pViewReportChannel];
		if(egyezik(param[1], "status"))
		{
			new szoveg[128], egyeb[20];
			Msg(playerid, "===========[ Channel Status ]===========", false, COLOR_LIGHTGREEN);
			for(new x = 0; x < MAX_CHANNEL; x++)
			{
				if(ReportChannel[x][rTimeOut] != 555)
					Format(egyeb, "| T: %ds*", ReportChannel[x][rTimeOut]);
				if(ReportChannel[x][rSeeing])
				{
					if(strlen(egyeb))
						Format(egyeb, "%s + MLE*", egyeb);
					else
						egyeb = "| MLE*";
				}
				if(x != 0)
				{
					if(ReportChannel[x][rClosed])
						Format(szoveg, "[Admin] ID: %d | Téma: %s | Zárva", x, ReportChannel[x][rTitle]);
					else
						Format(szoveg, "[Admin] ID: %d | Téma: %s | Adminok: %d | Játékosok: %d/%d %s", x, ReportChannel[x][rTitle], ReportChannel[x][rAdmins], ReportChannel[x][rMaxPlayers], ReportChannel[x][rPlayers], egyeb);
				}
				else
				{
					if(ReportChannel[x][rClosed])
						Format(szoveg, "[Admin/AS] ID: %d | Téma: %s | Zárva", x, ReportChannel[x][rTitle]);
					else
						Format(szoveg, "[Admin/AS] ID: %d | Téma: %s | Adminok: %d | Adminsegédek: %d | Játékosok: %d/%d %s", x, ReportChannel[x][rTitle], ReportChannel[x][rAdmins], ReportChannel[x][rAdminHelpers], ReportChannel[x][rMaxPlayers], ReportChannel[x][rPlayers], egyeb);
				}
				Msg(playerid, szoveg, false, COLOR_GREEN);
			}
			Msg(playerid, "Megjegyzés: T = Idõkorlát (ha eddig nem írsz, a rendszer kirúg) | MLE = Mindenki Látja Egymást", false, COLOR_WHITE);
			if(!Admin(playerid, 1))
				Msg(playerid, "Az összes channel figyelése: /report view all");
		}
		else if(egyezik(param[1], "channelstatus"))
		{
			//if(!Admin(playerid, 1)) return 1;
			if(params < 2)
				return Msg(playerid, "Használata: /report channelstatus [channel]");

			new szoba = strval(param[2]);
			if(szoba < NINCS || szoba >= MAX_CHANNEL)
				return Msg(playerid, "Hibás channel!");

			new count;
			Msg(playerid, "===========[ Channel Status ]===========", false, COLOR_LIGHTGREEN);
			for(new x = 0; x < MAX_PLAYERS; x++)
			{
				if(!IsPlayerConnected(x) || !Logged(x) || IsPlayerNPC(x) || !Admin(x, 1)) continue;

				if(PlayerInfo[x][pViewReportChannel] == szoba || PlayerInfo[x][pViewReportChannel] == 555)
				{
					count++;
					if(count == 1) Msg(playerid, "Adminisztrátorok a channelen:", false, COLOR_WHITE);
					if(!IsAllTerno(x) && !IsAllDenaro(x))
						Msg(playerid, AdminName(x), false, COLOR_GREEN);
				}
			}
			if(count == 0)
				Msg(playerid, "Adminisztrátorok a channelen: Nincs", false, COLOR_WHITE);

			count = 0;
			for(new x = 0; x < MAX_PLAYERS; x++)
			{
				if(!IsPlayerConnected(x) || !Logged(x) || IsPlayerNPC(x) || !IsAS(x)) continue;

				if(PlayerInfo[x][pViewReportChannel] == szoba || PlayerInfo[x][pViewReportChannel] == 555)
				{
					count++;
					if(count == 1) Msg(playerid, "Adminsegédek a channelen:", false, COLOR_WHITE);
					Msg(playerid, PlayerName(x), false, COLOR_GREEN);
				}
			}
			if(count == 0)
				Msg(playerid, "Adminsegédek a channelen: Nincs", false, COLOR_WHITE);

			count = 0;
			for(new x = 0; x < MAX_PLAYERS; x++)
			{
				if(!IsPlayerConnected(x) || !Logged(x) || IsPlayerNPC(x)) continue;

				if(PlayerInfo[x][pReportChannel] == szoba)
				{
					count++;
					if(count == 1) Msg(playerid, "Játékosok a channelen:", false, COLOR_WHITE);
					Msg(playerid, PlayerName(x), false, COLOR_GREEN);
				}
			}
			if(count == 0)
				Msg(playerid, "Játékosok a channelen: Nincs", false, COLOR_WHITE);

			Msg(playerid, "===========[ Channel Status ]===========", false, COLOR_LIGHTGREEN);
		}
		else if(egyezik(param[1], "join"))
		{
			if(Admin(playerid, 1) || IsScripter(playerid))
				return Msg(playerid, "Adminoknak /report view [channel]");
				
			if(PlayerInfo[playerid][pReportTilt] == 1)
				return SendFormatMessage(playerid, COLOR_LIGHTRED, "Hiba: El vagy tiltva a reportolástól! Tiltás oka: %s", PlayerInfo[playerid][pReportTiltOk]);
				
			ShowPlayerDialog(playerid,DIALOG_NINCS, DIALOG_STYLE_MSGBOX, "Figyelmeztetés!", "Report használati szabályzat!\n- Reportba mindig egybõl azt kell írnod mit szeretnél! Ne köszönges és várd a választ.\n- Sose xy-ont keresd, egybõl azzal kezdj mit szeretnél!\n-Tilos a flegmázás káromkodás reportban.\n \n Ezen szabályok megszegése büntetéssel járhat!!!" , "Elfogadom","Elfogadom");	
			if(params < 2)
				return Msg(playerid, "Használata: /report join [szoba]", false);

			if(reporttiltva[playerid] == 1)
				return Msg(playerid, "Nem tudsz reportolni!");

			new szoba = strval(param[2]);
			if(szoba < 0 || szoba >= MAX_CHANNEL)
				return Msg(playerid, "Hibás szoba! Kérlek nézd meg, hogy milyen szobák vannak! (/report status)");
			if(PlayerInfo[playerid][pReportTiltva])
				return Msg(playerid, "Nincs engedélyed reportolni!");
			if(ReportChannel[szoba][rClosed])
				return Msg(playerid, "Ez a channel zárva van!");
			if(PlayerInfo[playerid][pReportChannel] == szoba)
				return Msg(playerid, "Jelenleg is ebben a szobában vagy!");
			if(ReportChannel[szoba][rPlayers] >= ReportChannel[szoba][rMaxPlayers] && ReportChannel[szoba][rMaxPlayers] != 555)
				return Msg(playerid, "A channel megtelt! Próbáld késõbb, vagy menj egy másikba!");
			if(ReportChannel[szoba][rAdmins] < 1 && ReportChannel[szoba][rAdminHelpers] < 1)
				return Msg(playerid, "A channelen sajnos nincs se admin, se adminsegéd, így nem tudsz csatlakozni");

			Channel(playerid, szoba);

			new szoveg[96];
			if(ReportChannel[szoba][rTimeOut] != 555)
				Format(szoveg, "Csatlakoztál a channelhez! Üzenni az /ü(zenet) paranccsal tudsz. Ne feledd, a téma %s! Idõ: %dmp* | Kilépés: /report exit", ReportChannel[szoba][rTitle], ReportChannel[szoba][rTimeOut]);
			else
				Format(szoveg, "Csatlakoztál a channelhez! Üzenni az /ü(zenet) paranccsal tudsz. Ne feledd, a téma %s! Idõ: Nincs * | Kilépés: /report exit", ReportChannel[szoba][rTitle], ReportChannel[szoba][rTimeOut]);
			Msg(playerid, szoveg, false, COLOR_YELLOW);
			Msg(playerid, "*Megjegyzés: Az idõ azt jelenti, hogy ha X másodpercig nem írsz, a rendszer kirúg, hogy ne foglald a helyet feleslegesen!");
		}
		else if(egyezik(param[1], "exit"))
		{
			if(PlayerInfo[playerid][pAdmin] > 0)
			{
				if(PlayerInfo[playerid][pViewReportChannel] == NINCS)
					return Msg(playerid, "Jelenleg nem vagy channelen!");

				PlayerInfo[playerid][pViewReportChannel] = NINCS;
				Msg(playerid, "Kiléptél a channelrõl");
			}
			else
			{
				if(channel == NINCS)
					return Msg(playerid, "Jelenleg nem vagy channelen!");

				Channel(playerid, NINCS);
				Msg(playerid, "Kiléptél a channelrõl");
			}
		}
		else if(egyezik(param[1], "view"))
		{
			if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
			if(params < 2)
				return Msg(playerid, "Használata: /report view [channel]", false);

			new szoba;

			if(egyezik(param[2], "all")) 
			{
				if(PlayerInfo[playerid][pAdmin] < 1337) return Msg(playerid,"Csak fõadmin!");
				szoba = 555;
			}	
			else if(egyezik(param[2], "off")) szoba = NINCS;
			else szoba = strval(param[2]);

			if(vchannel == szoba)
				return Msg(playerid, "Már ezen a channelen vagy!");

			if(szoba < NINCS || szoba >= MAX_CHANNEL && szoba != 555)
				return Msg(playerid, "Érvénytelen channel!");

			Channel(playerid, szoba, true);

			if(szoba == 555 && PlayerInfo[playerid][pAdmin] >= 1337)
				Msg(playerid, "Csatlakoztál az összes channelhez, így látod, ki ír ide! Kilépés: /report view off");
			else if(szoba >= 0)
				Msg(playerid, "Csatlakoztál a channelhez, így látod, ki ír ide! Kilépés: /report view off");
			else
				Msg(playerid, "Mostmár nem látsz egy reportot sem");

			/*if(vchannel > 0) ReportChannel[channel][rAdmins]--;
			if(vchannel == 0) for(new x = 0; x < MAX_CHANNEL; x++) ReportChannel[x][rAdmins]--;

			if(szoba >= 0)
			{
				if(szoba != 555) ReportChannel[szoba][rAdmins]++;
				else for(new x = 0; x < MAX_CHANNEL; x++) ReportChannel[x][rAdmins]++;
				PlayerInfo[playerid][pViewReportChannel] = szoba;
				Msg(playerid, "Csatlakoztál a channelhez, így látod, ki ír ide! Kilépés: /report view off");
			}
			else
				Msg(playerid, "Mostmár nem látsz egy reportot sem");
			*/
		}
		else if(egyezik(param[1], "set"))
		{
			if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
			if(params < 3)
			{
				Msg(playerid, "Használata: /report set [adminsegéd/admin] [mód]", false);
				Msg(playerid, "Módok: Channel ID > Berakod egy bizonyos channelre", false);
				Msg(playerid, "Módok: all > Látják az összes AdminSegéd channelt", false);
				return 1;
			}
			new player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
			if(!Admin(player, 1) && !IsAS(player))
				return Msg(playerid, "Ja persze, egy sima játékost akarsz? -.-\"");

			new szoba;
			if(egyezik(param[3], "all")) szoba = 555;
			else szoba = strval(param[3]);

			if(szoba < 0 || szoba >= MAX_CHANNEL && szoba != 555)
				return Msg(playerid, "Hibás channel!");

			new uzenet[80];
			if(szoba == 555)
			{
				Format(uzenet, "%s mostmár az összes adminsegéd channelt látni fogja!", PlayerName(player));
				Msg(playerid, uzenet);
				Msg(player, "Az egyik admin beállította, hogy lásd az összes channelt!");
				Format(uzenet, "%s berakta %s-t az összes channelre", PlayerName(playerid), PlayerName(player));
				ABroadCast(COLOR_LIGHTRED, uzenet, 1);
			}
			else
			{
				Format(uzenet, "Beraktad %s-t a %d számú channelre!", PlayerName(player), szoba);
				Msg(playerid, uzenet);
				Format(uzenet, "Egy admin berakott téged a következõ channelre: %d", szoba);
				Msg(player, uzenet);
				Format(uzenet, "%s beraktad %s-t a következõ channelre: %d", PlayerName(playerid), PlayerName(player), szoba);
				ABroadCast(COLOR_LIGHTRED, uzenet, 1);
			}
			Channel(player, szoba, true);
		}
		else if(egyezik(param[1], "get"))
		{
			if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
			if(params < 3)
				return Msg(playerid, "Használata: /report get [player] [channel]");

			new player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID)
				return Msg(playerid, "Hibás játékos!");

			new szoba = strval(param[3]);
			if(szoba < 0 || szoba >= MAX_CHANNEL)
				return Msg(playerid, "Hibás channel!");

			if(PlayerInfo[player][pReportChannel] == szoba)
				return Msg(playerid, "Õ már ezen a channelen van");

			if(ReportChannel[szoba][rAdmins] < 1 && ReportChannel[szoba][rAdminHelpers] < 1)
				return Msg(playerid, "Ezen a channelen nincs se admin, se adminsegéd, így nem tudod behívni!");

			Channel(player, szoba);
			ABroadCastFormat(COLOR_LIGHTRED, 1, "%s behívta %s-t a channelre (ID: %d)", PlayerName(playerid), PlayerName(player), szoba);
			Msg(playerid, "Behívtad");
			Msg(player, "Az egyik adminisztrátor behívott téged az egyik channelre");
		}
		else if(egyezik(param[1], "timeout"))
		{
			if(!Admin(playerid, 2)) return 1;
			if(params < 3)
				return Msg(playerid, "Használata: /report timeout [channel] [idõ]", false);

			new szoba = strval(param[2]);
			if(szoba < 0 || szoba >= MAX_CHANNEL)
				return Msg(playerid, "Hibás channel!");

			new ido = strval(param[3]);
			if(ido < 5 || ido > 300 && ido != 555)
				return Msg(playerid, "Hibás érték! Minimum 5, maximum 300 (ha nincs limit 555)");

			if(ido != 555)
				ABroadCastFormat(COLOR_LIGHTRED, 1, "%s beállította az idõlimitet %dmásodpercre a channelen (Channel %d)", PlayerName(playerid), ido, szoba);
			else
				ABroadCastFormat(COLOR_LIGHTRED, 1, "%s levette az idõlimitet a channelrõl (Channel %d)", PlayerName(playerid), szoba);
			ReportChannel[szoba][rTimeOut] = ido;
		}
		else if(egyezik(param[1], "max"))
		{
			if(!Admin(playerid, 2)) return 1;
			if(params < 3)
				return Msg(playerid, "Használata: /report max [channel] [maxjátékos]", false);

			new szoba = strval(param[2]);
			if(szoba < 0 || szoba >= MAX_CHANNEL)
				return Msg(playerid, "Hibás channel!");

			new jatekos = strval(param[3]);
			if(jatekos < 1 || jatekos > 20 && jatekos != 555)
				return Msg(playerid, "Hibás érték! Minimum 1, maximum 20 (ha nincs limit 555)");

			if(jatekos != 555)
				ABroadCastFormat(COLOR_LIGHTRED, 1, "%s beállította a játékoslimitet %d játékosra a channelen (Channel %d)", PlayerName(playerid), jatekos, szoba);
			else
				ABroadCastFormat(COLOR_LIGHTRED, 1, "%s levette a játékos limitet a channelrõl (Channel %d)", PlayerName(playerid), szoba);
			ReportChannel[szoba][rMaxPlayers] = jatekos;
		}
		else if(egyezik(param[1], "lock"))
		{
			if(!Admin(playerid, 2)) return 1;
			if(params < 2)
				return Msg(playerid, "Használata: /report lock [channel]", false);

			new szoba = strval(param[2]);
			if(szoba < 0 || szoba >= MAX_CHANNEL)
				return Msg(playerid, "Hibás channel!");

			if(ReportChannel[szoba][rClosed])
			{
				ABroadCastFormat(COLOR_LIGHTRED, 1, "%s megnyitotta a channelt (Channel %d)", PlayerName(playerid), szoba);
				ReportChannel[szoba][rClosed] = 0;
			}
			else
			{
				ABroadCastFormat(COLOR_LIGHTRED, 1, "%s lezárta a channelt (Channel %d)", PlayerName(playerid), szoba);
				ReportChannel[szoba][rClosed] = 1;
			}
		}
		else if(egyezik(param[1], "block"))
		{
			if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
			if(params < 2)
				return Msg(playerid, "Használata: /report block [játékos]", false);

			new player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID)
				return Msg(player, "Érvénytelen játékos!");
			if(Admin(player, 1))
				return Msg(playerid, "Hogyne már... Admint? -.-\"");

			if(reporttiltva[player] == 0)
			{
				Msg(playerid, "Letiltottad");
				ABroadCastFormat(COLOR_LIGHTRED, 1, "%s letiltotta %s-t a reporttól", PlayerName(playerid), PlayerName(player));
				reporttiltva[player] = 1;

				if(PlayerInfo[player][pReportChannel] != NINCS)
					Channel(player, NINCS);
			}
			else
			{
				Msg(playerid, "Feloldottad");
				ABroadCastFormat(COLOR_LIGHTRED, 1, "%s feloldotta a tiltást a reportról neki: %s", PlayerName(playerid), PlayerName(player));
				reporttiltva[player] = 0;
			}
		}
		else if(egyezik(param[1], "title"))
		{
			if(!Admin(playerid, 2)) return 1;
			if(params < 3)
				return Msg(playerid, "Használata: /report title [channel] [téma]", false);

			new szoba = strval(param[2]);
			if(szoba < 0 || szoba >= MAX_CHANNEL)
				return Msg(playerid, "Hibás channel!");

			strtok(cmdtext, idx); strtok(cmdtext, idx);
			strmid(ReportChannel[szoba][rTitle], cmdtext, idx+1, strlen(cmdtext), 40);

			Msg(playerid, "Módosítottad");
			ABroadCastFormat(COLOR_LIGHTRED, 1, "%s módosította a channel (ID: %d) témáját: %s", PlayerName(playerid), szoba, ReportChannel[szoba][rTitle]);
		}
		else if(egyezik(param[1], "kick"))
		{
			if(!Admin(playerid, 1) && !IsScripter(playerid) && !IsAS(playerid)) return 1;
			if(params < 3)
				return Msg(playerid, "Használata: /report kick [játékos] [oka]", false);

			new jatekos = strval(param[2]), oka[40];
			if(jatekos == NINCS)
				return Msg(playerid, "Hibás játékos!");
			if(Admin(jatekos, 1))
				return Msg(playerid, "Hogyne már... Admint? -.-\"");
			if(PlayerInfo[jatekos][pReportChannel] == NINCS)
				return Msg(playerid, "Nincs channelen!");

			strtok(cmdtext, idx); strtok(cmdtext, idx);
			strmid(oka, cmdtext, idx+1, strlen(cmdtext), 40);

			for(new x = 0; x < MAX_PLAYERS; x++)
			{
				if(!IsPlayerConnected(x) || !Logged(x) || IsPlayerNPC(x)) continue;
				if(PlayerInfo[x][pViewReportChannel] == PlayerInfo[jatekos][pReportChannel] || PlayerInfo[x][pViewReportChannel] == 555 || PlayerInfo[x][pReportChannel] == PlayerInfo[jatekos][pReportChannel])
					SendFormatMessage(x, COLOR_LIGHTRED, "[Channel %d]%s-t kirúgta a channelrõl %s | Oka: %s", PlayerInfo[jatekos][pReportChannel], PlayerName(jatekos), PlayerName(playerid), oka);
			}
			Msg(jatekos, "Kirúgtak a channelrõl");

			Msg(playerid, "Kirúgtad");
			Channel(jatekos, NINCS);
			ABroadCastFormat(COLOR_LIGHTRED, 1, "%s kirúgta %s-t a channelrõl, oka: %s", PlayerName(playerid), PlayerName(jatekos), oka);
		}
		else if(egyezik(param[1], "recount"))
		{
			if(!Admin(playerid, 1337)) return 1;
			for(new c = 0; c < MAX_CHANNEL; c++)
			{
				ReportChannel[c][rAdmins] = 0;
				ReportChannel[c][rAdminHelpers] = 0;
				ReportChannel[c][rPlayers] = 0;
			}
			new chn, chna;
			for(new x = 0; x < MAX_PLAYERS; x++)
			{
				if(!IsPlayerConnected(x) || !Logged(x) || IsPlayerNPC(x)) continue;
				chn = PlayerInfo[x][pReportChannel]; chna = PlayerInfo[x][pViewReportChannel];
				if(chn != NINCS)
					ReportChannel[chn][rPlayers]++;
				if(chna != NINCS)
				{
					if(chna == 555)
					{
						if(Admin(x, 1))
							for(new v = 0; v < MAX_CHANNEL; v++) ReportChannel[v][rAdmins]++;
						else if(IsAS(x))
							for(new v = 0; v < MAX_CHANNEL; v++) ReportChannel[v][rAdminHelpers]++;
						else
							PlayerInfo[x][pViewReportChannel] = NINCS;
					}
					else
						if(Admin(x, 1))
							ReportChannel[chna][rAdmins]++;
						else if(IsAS(x))
							ReportChannel[chna][rAdminHelpers]++;
						else
							PlayerInfo[x][pViewReportChannel] = NINCS;
				}
			}
			Msg(playerid, "Statisztikák újraszámolva");
		}
		else if(egyezik(param[1], "seeing"))
		{
			if(!Admin(playerid, 2)) return 1;
			if(params < 2)
				return Msg(playerid, "Használata: /report seeing [channel]");

			new szoba;
			if(egyezik(param[2], "all")) szoba = 555;
			else szoba = strval(param[2]);

			if(szoba < 0 || szoba >= MAX_CHANNEL && szoba != 555)
				return Msg(playerid, "Hibás channel!");

			if(szoba == 555)
			{
				if(params < 3)
					return Msg(playerid, "Használata: /report seeing all [be/ki]");
				if(egyezik(param[3], "be"))
				{
					ABroadCastFormat(COLOR_LIGHTRED, 1, "%s engedélyezte az összes channelen, hogy a játékosok lássák egymást", PlayerName(playerid));
					for(new x = 0; x < MAX_CHANNEL; x++) ReportChannel[x][rSeeing] = 1;
				}
				else
				{
					ABroadCastFormat(COLOR_LIGHTRED, 1, "%s tiltotta az összes channelen, hogy a játékosok lássák egymást", PlayerName(playerid));
					for(new x = 0; x < MAX_CHANNEL; x++) ReportChannel[x][rSeeing] = 0;
				}
			}
			else
			{
				if(ReportChannel[szoba][rSeeing])
				{
					ABroadCastFormat(COLOR_LIGHTRED, 1, "%s tiltotta a channelen (ID: %d), hogy a játékosok lássák egymást", PlayerName(playerid), szoba);
					ReportChannel[szoba][rSeeing] = 0;
				}
				else
				{
					ABroadCastFormat(COLOR_LIGHTRED, 1, "%s engedélyezte a channelen (ID: %d), hogy a játékosok lássák egymást", PlayerName(playerid), szoba);
					ReportChannel[szoba][rSeeing] = 1;
				}
			}
		}
		else if(egyezik(param[1], "recount"))
		{
			if(!Admin(playerid, 1337)) return 1;
			for(new x = 0; x < MAX_CHANNEL; x++)
			{
				ReportChannel[x][rAdmins] = 0;
				ReportChannel[x][rAdminHelpers] = 0;
				ReportChannel[x][rPlayers] = 0;
				for(new y = 0; y < MAX_PLAYERS; y++)
				{
					if(!IsPlayerConnected(y) || IsPlayerNPC(y)) continue;
					if(PlayerInfo[y][pReportChannel] == x)
						ReportChannel[x][rPlayers]++;
					if(PlayerInfo[y][pViewReportChannel] == x || PlayerInfo[y][pViewReportChannel] == 555)
					{
						if(Admin(playerid, 1) || IsScripter(playerid))
							ReportChannel[x][rAdmins]++;
						else
							ReportChannel[x][rAdminHelpers]++;
					}
				}
			}
		}
		return 1;
	}

	if(egyezik(cmd, "/uzenet") || egyezik(cmd, "/üzenet") || egyezik (cmd, "/ü") || egyezik(cmd, "/u"))
	{
		if(reporttiltva[playerid] == 1) return Msg(playerid, "Nem tudsz reportolni");
		new szoba = PlayerInfo[playerid][pReportChannel];
		if(szoba == NINCS) return Msg(playerid, "Nem vagy channelen! Channelek: /report");

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /üzenet [Üzeneted]");

		if(SzovegEllenorzes(playerid, result, "/ü", ELLENORZES_MINDKETTO))
			return 1;

		if(ReportolasIdo[playerid] != 0)
			return Msg(playerid, "Nyugi, ne siess!");
		ReportolasIdo[playerid] = 15;

	
		
		
		if(strlen(result) > 90) return Msg(playerid, "Túl hosszú üzenet. Nem férne ki a képernyõre!");
		
		
		ReportUzenet(playerid, result);
		SendFormatMessage(playerid, COLOR_YELLOW, "[Channel %d]Reportod: %s", szoba, result);
		TudReportolni[playerid] = 0;
		return 1;
	}

	if(egyezik(cmd, "/cvá") || egyezik(cmd, "/cva"))
	{
		new szoba = PlayerInfo[playerid][pViewReportChannel], channel;
		if(szoba == NINCS) return Msg(playerid, "Nem vagy channelen! Channelek: /report");
		if(szoba == 555)
		{
			if(!IsNumeric(param[1]))
				return Msg(playerid, "Mivel az összes channelen fennt vagy, ezért vagy a /cváall-t használod, hogy mindenhova üzenj, vagy /cvá [channel] [szöveg]", false);
			channel = strval(param[1]);
			strtok(cmdtext, idx);
			if(channel < 0 || channel >= MAX_CHANNEL)
				return Msg(playerid, "Mivel az összes channelen fennt vagy, ezért vagy a /cváall-t használod, hogy mindenhova üzenj, vagy /cvá [channel] [szöveg]", false);
		}
		else channel = szoba;

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[120];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result) && szoba != 555)
			return Msg(playerid, "/cvá [üzenet]");
		else if(!strlen(result) && szoba == 555)
			return Msg(playerid, "/cvá [channel] [üzenet]");

		if(szoba == 555)
			ReportUzenet(playerid, result, true, false, channel);
		else
			ReportUzenet(playerid, result, true);
		return 1;
	}

	if(egyezik(cmd, "/resivan"))
	{
		if(!Admin(playerid, 1339) && !IsScripter(playerid)) return 1;
		if(params < 1) 
		{
			Msg(playerid, "/resivan [0 / 1/2/3]");
			Msg(playerid," 1: login akadályozás | 2: War indítás akadályozás | 3: Race indítás akadályozás");
			return 1;
		}
		new ertek = strval(param[1]);
		
		if(ertek < 0 || ertek > 3) return Msg(playerid,"Valamit elírtál");
		if(ertek == 1)
		{
			if(ResiVan[0])
			{
				Msg(playerid,"Login akadályozás kikapcsolva!");
				ResiVan[0] = false;
			}
			else
			{
				Msg(playerid,"Login akadályozás bekapcsolva!");
				ResiVan[0] = true;
			}
		}
		if(ertek == 2)
		{
			if(ResiVan[1])
			{
				Msg(playerid,"War indítás akadályozás kikapcsolva!");
				ResiVan[1] = false;
			}
			else
			{
				Msg(playerid,"War indítás akadályozás bekapcsolva!");
				ResiVan[1] = true;
			}
		}
		if(ertek == 3)
		{
			if(ResiVan[2])
			{
				Msg(playerid,"Race indítás akadályozás kikapcsolva!");
				ResiVan[2] = false;
			}
			else
			{
				Msg(playerid,"Race indítás akadályozás bekapcsolva!");
				ResiVan[2] = true;
			}
		}
		return 1;
	}

    if(egyezik(cmd, "/spawn"))
    {
		if(!IsScripter(playerid)) return 1;
		if(params != 1) return 1;

		new player = ReturnUser(param[1]);
		if(player == INVALID_PLAYER_ID) return 1;

		// TEMPORARYFIX03d
		SetSpawnInfo(playerid, SPAWNID, PlayerInfo[playerid][pChar],0.0,0.0,0.0,0,0,0,0,0,0,0);
		SpawnPlayer(player);
		SendFormatMessage(playerid, COLOR_WHITE, "Játékos: %s | PlayerID: %d spawnoltatva!", PlayerName(player), player);

        return 1;
    }
	if(egyezik(cmd,"/zsarukonline") || egyezik(cmd,"/zso"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;

		SendFormatMessage(playerid,COLOR_YELLOW, "Zsaruk szolgálatban: %d",ZsarukOnline());
	}
	if(egyezik(cmd, "/debug"))
	
	{
		if(!IsScripter(playerid)) return 1;
		if(params < 1)
		{
			Msg(playerid, "/debug [Funkció] [Paraméter]");
			Msg(playerid, "Funkciók: CorrectPlayerDatas [név] | gettime | getdate | hatar | report [játékos] | minimumfizuhoz | ZsarukOnline", false);
			Msg(playerid, "Funkciók: Csomagtarto | tuzido | onlinerecount|idojarasx | kocsikerek | fegyverinfo | mysqlupdater | csomagtarto", false);
			Msg(playerid, "time | saveaccounts | ccc | minimumfizuhoz | payday | terulettulaj | benzin | fekete | csomagtartocheck", false);
			Msg(playerid, "streamerStatus | streamer3DText | streamerObject | mysqllog | almaszedes | OnPlayerUpdate | warido | ado", false);
			Msg(playerid, "szerelések | fszmuvelet | psz | örökkulcs | kocsihiba | bizszazalek | bizmásodtulaj | fegyveridõ | kereskedo", false);
			Msg(playerid, "fegyverskill | lõtér | paintball | kereskedokocsi | fék | elektronika | motorolaj | akkumulátor | motor | szamolas", false);
			Msg(playerid, "progressbar | aranykamat | kozmunkaido | álmosság | objectInDistance | roncsderbi", false);
			return 1;
		}
		if(egyezik(param[1], "objectInDistance"))
		{
			if(params < 2)
				return Msg(playerid, "/debug objectInDistance [táv - 1 - 250]");
			
			new Float:tav = floatstr(param[2]);
			if(tav < 5.0 || tav > 250.0)
				return Msg(playerid, "Min 1, max 250");
				
			CallRemoteFunction("PrintObjectsInDistance", "df", playerid, tav);
		}
		if(egyezik(param[1], "almossag") || egyezik(param[1], "álmosság"))
		{
			if(params < 3) return Msg(playerid, "/debug álmosság [playerid] [érték - 0-100]");
			new id = ReturnUser(param[2]), ertek = strval(param[3]);
			if(id == INVALID_PLAYER_ID) return Msg(playerid, "Rossz ID");
			if(!IsNumeric(param[3])) return Msg(playerid, "Számot adj meg értéknek!");
			Almossag[id] = ertek;
			if(AlmossagBar[id] != INVALID_BAR_ID)
			{
				SetProgressBarValue( AlmossagBar[id], ertek );
				UpdateProgressBar( AlmossagBar[id], id );
				ShowProgressBarForPlayer(id, AlmossagBar[id]);
			}
			
			SendFormatMessage(playerid, COLOR_LIGHTRED, "Kész, beállítva %.1f-ra", Almossag[id]);
		}
		if(egyezik(param[1], "roncsderbi"))
		{
			if(params < 2) return Msg(playerid, "/debug roncsderbi [érték]");
			RoncsDerbi[rIdo] = strval(param[2]);
		
			return 1;
		}
		if(egyezik(param[1], "kozmunkaido"))
		{
			if(params < 2) return Msg(playerid, "Használata: /debug kozmunkaido [playerid] [idõ (óra)]");
			new id = ReturnUser(param[2]), time = strval(param[3]);
			if(id == INVALID_PLAYER_ID) return Msg(playerid, "Rossz ID");
			if(time < 0 || time > 3) return Msg(playerid, "0-3");
			PlayerInfo[id][pKozmunkaIdo] = time;
			SendFormatMessage(playerid, COLOR_LIGHTRED, "Kész, beállítva %d-ra", PlayerInfo[id][pKozmunkaIdo]);
		}
		if(egyezik(param[1],"progressbar"))
		{
			if(egyezik(param[2],"letrehoz"))
			{
				if(!IsPlayerNPC(playerid))
				{
					Iter_Add(Jatekosok, playerid);
					OnlineJatekosok++;
					EhsegBar[playerid] = CreateProgressBar(548, 27.0, _, _, 0xFF0000FF, 100.0);
					VizeletBar[playerid] = CreateProgressBar(548, 37.0, _, _, 0xFFFF00FF, 100.0);
					AlmossagBar[playerid] = CreateProgressBar(548, 17.0, _, _, 0x33CCFFFF, 100.0);
				}
				else SendFormatMessage(playerid,COLOR_YELLOW,"[HIBA]A rendszer téged NPC-nek jelölt meg. F8-al készíts képet errõl és jelezd bugok topicba! [hiba: %d]",IsPlayerNPC(playerid));
			}
		}
		if(egyezik(param[1], "akkumulátor") || egyezik(param[1], "akku") || egyezik(param[1], "akkumulator"))
		{
			if(params < 2) return Msg(playerid, "Használata: /debug akkumulátor [JármûID] [Érték]");

			new kocsi = strval(param[2]), ertek = strval(param[3]);
			CarPart[kocsi][cAkkumulator] = ertek;
			Msg(playerid, "Beállítva!");
		}
		if(egyezik(param[1], "motor"))
		{
			if(params < 2) return Msg(playerid, "Használata: /debug motor [JármûID] [Érték]");

			new kocsi = strval(param[2]), ertek = strval(param[3]);
			CarPart[kocsi][cMotor] = ertek;
			Msg(playerid, "Beállítva!");
		}
		if(egyezik(param[1], "motorolaj"))
		{
			if(params < 2) return Msg(playerid, "Használata: /debug motorolaj [JármûID] [Érték]");

			new kocsi = strval(param[2]), ertek = strval(param[3]);
			CarPart[kocsi][cMotorolaj] = ertek;
			Msg(playerid, "Beállítva!");
		}
		if(egyezik(param[1], "elektronika"))
		{
			if(params < 2) return Msg(playerid, "Használata: /debug elektronika [JármûID] [Érték]");

			new kocsi = strval(param[2]), ertek = strval(param[3]);
			CarPart[kocsi][cElektronika] = ertek;
			Msg(playerid, "Beállítva!");
		}
		if(egyezik(param[1], "fék") || egyezik(param[1], "fek"))
		{
			if(params < 2) return Msg(playerid, "Használata: /debug fék [JármûID] [Érték]");

			new kocsi = strval(param[2]), ertek = strval(param[3]);
			CarPart[kocsi][cFek] = ertek;
			Msg(playerid, "Beállítva!");
		}
		if(egyezik(param[1], "kereskedokocsi"))
		{
			if(!IsTerno(playerid)) return 1;
			new kocsi = PlayerInfo[playerid][pPcarkey], kocsi2 = PlayerInfo[playerid][pPcarkey2], kocsi3 = PlayerInfo[playerid][pPcarkey3];
			if(kocsi != NINCS)
				if(PlayerInfo[playerid][pPremiumPont] > 0 && kocsi2 != NINCS && kocsi3 != NINCS || PlayerInfo[playerid][pPremiumPont] < 1)
					return Msg(playerid, "Már van jármûved!");

			new kocsix = GetClosestVehicle(playerid);
			new car = IsAVsKocsi(kocsix);
		
			if(CarInfo[car][cOwned] != 0) return 1;

			CarInfo[car][cOwned] = 1;
			new nev[MAX_PLAYER_NAME];
			Format(nev, "%s", PlayerName(playerid));
			strmid(CarInfo[car][cOwner], nev, 0, strlen(nev), 25);
			CarInfo[car][cTulaj] = PlayerInfo[playerid][pID];
			CarInfo[car][cDate] = UnixTime;
			CarInfo[car][cKereskedo] = NINCS;
			CarInfo[car][cKulcsok][0] = NINCS;
			CarInfo[car][cKulcsok][1] = NINCS;
			CarUpdate(car, CAR_Owned, CAR_Owner, CAR_Tulaj, CAR_Date, CAR_KERESKEDO,CAR_Kulcsok1,CAR_Kulcsok2);

			CorrectPlayerDatas(playerid);

			Msg(playerid, "Gratulálunk, megvetted a jármûvet!.", false, COLOR_LIGHTGREEN);
			
			KereskedoKocsiElad[playerid] = NINCS;
			
			

		}
		if(egyezik(param[1], "paintball"))
		{
			for(new r = 0; r < sizeof(PaintballInfo); r++)
			{
				if(PaintballInfo[r][pbHasznalva])
				PaintballInfo[r][pbHasznalva] = false, SendFormatMessage(playerid, COLOR_LIGHTRED, "Paintball id: %d debugolva", r);
			}
			
			return 1;
		
		}
		if(egyezik(param[1], "loter") || egyezik(param[1], "lõtér"))
		{
			if(params < 2) return Msg(playerid,"Használata: /debug lõtér [Megfigyel / Lõterekszáma]");
			if(egyezik(param[2], "megfigyel"))
			{
				if(LoterFigyel[playerid] == true)
				{
					LoterFigyel[playerid] = false;
					Msg(playerid,"LõtérInfó kikapcsolva!");
				}
				else
				{
					LoterFigyel[playerid] = true;
					Msg(playerid,"LõtérInfó bekapcsolva!");
				}
			}	
			else if(egyezik(param[2], "lõterekszáma") || egyezik(param[2], "loterekszama"))
			{
				if(params < 3) return Msg(playerid,"Használata: /debug lõtér Lõterekszáma [DB]");
				{
					new loterek = strval(param[3]);
					new aktivloter;
					if(loterek < 1 || loterek > MAX_LOTER) return SendFormatMessage(playerid,COLOR_LIGHTRED,"A lõterek száma nem lehet kisebb, mint 1 és nem lehet nagyobb mint %d",MAX_LOTER);
					if(BizzInfo[BIZ_LOTER][bLocked] == 0) return Msg(playerid,"A lõteret zárd be és ürísd ki mindet, mielõtt állítod!");
					for(new l = 0; l < MaxLoter; l++)
					{
						if(LoterInfo[l][lHasznalva] == true)
						{
							aktivloter++;
						}
					}
					if(aktivloter > 0) return Msg(playerid,"Ahhoz, hogy a lõterek számát megnöveld, mindegyik lõtérnek üresnek kell lenni-e!");	
					LoterTorles();
					SendFormatMessage(playerid,COLOR_LIGHTRED,"A mûvelet elindult...összesen %d lõtér törölve lett!",MaxLoter);
					MaxLoter = loterek;
					SendClientMessage(playerid,COLOR_LIGHTRED,"A lõterek betöltése folyamatban...2 másodperc szükséges!");
					SetTimerEx("LoterBetoltes", 2000, false,"");
					SendFormatMessage(playerid,COLOR_LIGHTRED,"A MaxLõterek számát megnövelted, jelenlegi értéke: %d db",MaxLoter);
				}
			}
			if(egyezik(param[2], "lõtérhasználva") || egyezik(param[2], "loterhasznalva"))
			{
				for(new x = 0;x < MaxLoter; x++)
				{
					if(LoterInfo[x][lHasznalva] == true)
					{
						SendFormatMessage(playerid,COLOR_LIGHTRED,"%d lõtér használva van!",x);
					}
					else
						SendFormatMessage(playerid,COLOR_GREEN,"%d lõtér nincs használva!",x);
				}
				return 1;	
			}
		}
		if(egyezik(param[1], "fegyverskill"))
		{
			FegyverSkillFrissites(playerid);
			if(params < 2) return Msg(playerid,"Használata: /debug fegyverskill [Játékos/ID] [Pisztoly/Silenced/Deagle/Shotgun/Sawnoff/Combat/Mp5/AK47/M4/Sniper] [Skill]");
			new player = ReturnUser(param[2]);	
			if(!IsPlayerConnected(player)) return Msg(playerid,"Nincs ilyen játékos");
			if(params < 4) 
			{
				SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Pisztoly skille: %d/%d", PlayerInfo[player][pFegyverSkillek][0],MAX_SKILLFEGYVER);
				SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Silenced Pisztoly skille: %d/%d", PlayerInfo[player][pFegyverSkillek][1],MAX_SKILLFEGYVER);
				SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Deagle skille: %d/%d", PlayerInfo[player][pFegyverSkillek][2],MAX_SKILLFEGYVER);
				SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Shotgun skille: %d/%d", PlayerInfo[player][pFegyverSkillek][3],MAX_SKILLFEGYVER);
				SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Combat skille: %d/%d", PlayerInfo[player][pFegyverSkillek][5],MAX_SKILLFEGYVER);
				SendFormatMessage(playerid,COLOR_LIGHTBLUE,"MP5 skille: %d/%d", PlayerInfo[player][pFegyverSkillek][7],MAX_SKILLFEGYVER);
				SendFormatMessage(playerid,COLOR_LIGHTBLUE,"AK47 skille: %d/%d", PlayerInfo[player][pFegyverSkillek][8],MAX_SKILLFEGYVER);
				SendFormatMessage(playerid,COLOR_LIGHTBLUE,"M4 skille: %d/%d", PlayerInfo[player][pFegyverSkillek][9],MAX_SKILLFEGYVER);
				SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Sniper skille: %d/%d", PlayerInfo[player][pFegyverSkillek][10],MAX_SKILLFEGYVER);
				Msg(playerid,"Használata: /debug fegyverskill [Játékos/ID] [Pisztoly/Silenced/Deagle/Shotgun/Sawnoff/Combat/Mp5/AK47/M4/Sniper] [Skill]");
				return 1;
			}
			new skill;
			if(egyezik(param[3],"pisztoly")) skill = 0; 
			else if(egyezik(param[3],"silenced")) skill = 1;
			else if(egyezik(param[3],"deagle")) skill= 2; 
			else if(egyezik(param[3],"shotgun")) skill = 3;
			else if(egyezik(param[3],"sawnoff")) skill = 4; 
			else if(egyezik(param[3],"Combat")) skill = 5;
			else if(egyezik(param[3],"mp5")) skill = 7;
			else if(egyezik(param[3],"ak47")) skill= 8;
			else if(egyezik(param[3],"m4")) skill = 9;
			else if(egyezik(param[3],"sniper")) skill = 10;
			else return 1;
			new szam = strval(param[4]);
			PlayerInfo[player][pFegyverSkillek][skill] = szam;
			FegyverSkillFrissites(player);
			SendFormatMessage(player,COLOR_LIGHTBLUE,"Scripter átírta a fegyver tapasztalatod! Fegyver: %d || Szint: %d, Összes tapasztalat: %d",skill, szam, PlayerInfo[player][pFegyverSkillek][skill]);
			SendFormatMessage(playerid,COLOR_LIGHTBLUE,"A játékos fegyver tapasztalatát átírta! Fegyver: %d || Szint: %d, Összes tapasztalat: %d",skill, szam, PlayerInfo[player][pFegyverSkillek][skill]);
		}
		if(egyezik(param[1], "kereskedo"))
		{
			new kocsix = GetClosestVehicle(playerid);
			new kocsi = IsAVsKocsi(kocsix);
			if(GetPlayerDistanceFromVehicle(playerid, kocsix) > 5.5)
					return Msg(playerid, "A közeledben nincs jármû!");
			

			new player = ReturnUser(param[2]);	
			new nev[MAX_PLAYER_NAME];
			if(params < 2)
			{
				CarInfo[kocsi][cKereskedo] = NINCS;
				format(nev, sizeof(nev), "NINCS_TULAJ");
				strmid(CarInfo[kocsi][cOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
				SendFormatMessage(playerid, COLOR_YELLOW, "Kereskedõ érték átírva %d",CarInfo[kocsi][cKereskedo]);
								
			}
			else
			{
				if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "Nem online!");
				CarInfo[kocsi][cKereskedo] = PlayerInfo[player][pID];
				
				
				format(nev, sizeof(nev), "%s",PlayerName(player));
				strmid(CarInfo[kocsi][cOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
				
				SendFormatMessage(playerid, COLOR_YELLOW, "Kereskedõ érték átírva %s uid-jére: %d",PlayerName(player),CarInfo[kocsi][cKereskedo]);
			}	
			CarUpdate(kocsi, CAR_Owner, CAR_KERESKEDO);
			return 1;
		
		}
		if(egyezik(param[1],"fegyverido") || egyezik(param[1],"fegyveridõ"))
		{
			if(params < 2) return Msg(playerid,"Használata:/debug fegyveridõ [Átír/Megnéz]");
			if(egyezik(param[2],"átír") || egyezik(param[2],"atir"))
			{	
				if(params < 3) return Msg(playerid,"Használata:/debug fegyveridõ átír [Idõ]");
				
				new ido = strval(param[3]);
				for(new i = 0; i < MAX_DROP; i++)
				{
					if(DropInfo[i][dVan] && (DropInfo[i][dType] == DROP_TYPE_WEAPON || DropInfo[i][dType] == DROP_TYPE_AMMO))
					{
						if(IsPlayerInRangeOfPoint(playerid, 1.0, ArrExt(DropInfo[i][dPos])) && GetPlayerVirtualWorld(playerid) == DropInfo[i][dVW] && GetPlayerInterior(playerid) == DropInfo[i][dInt])
						{
							DropInfo[i][dTime] = UnixTime + ido;	
							SendFormatMessage(playerid,COLOR_LIGHTRED,"A fegyver törlõdési ideje átrírva %d másodpercre",DropInfo[i][dTime]);
						}
					}
				}
			}
			else if(egyezik(param[2],"megnéz") || egyezik(param[2],"megnez"))
			{
				for(new i = 0; i < MAX_DROP; i++)
				{
					if(DropInfo[i][dVan] && (DropInfo[i][dType] == DROP_TYPE_WEAPON || DropInfo[i][dType] == DROP_TYPE_AMMO))
					{
						if(IsPlayerInRangeOfPoint(playerid, 1.0, ArrExt(DropInfo[i][dPos])) && GetPlayerVirtualWorld(playerid) == DropInfo[i][dVW] && GetPlayerInterior(playerid) == DropInfo[i][dInt])
						{
							SendFormatMessage(playerid,COLOR_LIGHTRED,"A fegyver törlõdési ideje: %d másodperc",DropInfo[i][dTime]);
						}
					}
				}
			}
		}	
		if(egyezik(param[1], "bizmásodtulaj"))
		{
			if(params < 2) return Msg(playerid, "Használata: /debug bizmásodtulaj [biz] [PlayerID]");
			new biz = strval(param[2]);
			new id = strval(param[3]);
			BizzInfo[biz][bMTulajID] = id;	
			BizUpdate(biz, BIZ_MTulajID);
		}	
		if(egyezik(param[1], "bizszázalék"))
		{
			if(params < 2) return Msg(playerid, "Használata: /debug bizszázalék [biz] [százalék]");
			new biz = strval(param[2]);
			new szazalek = strval(param[3]);
			BizzInfo[biz][bSzazalek] = szazalek;
			BizUpdate(biz, BIZ_Szazalek);			
		}	

		if(egyezik(param[1], "ado"))
		{
			new player;
			if(sscanf(pms, "{s[32]}r(-1)", player))
				player = playerid;
			
			if(player == INVALID_PLAYER_ID || playerid == NINCS)
				player = playerid;
				
			SendFormatMessage(playerid, COLOR_WHITE, "Adó: %dFt", Ado(player));
		}
		
		if(egyezik(param[1], "örökkulcs"))
		{
			if(params < 2) return Msg(playerid, "Használata: /debug örökkulcs [Megnéz / Átír]");
			if(egyezik(param[2], "Megnéz"))
			{
				if(params < 3) return Msg(playerid, "Használata: /debug örökkulcs Megnéz [JármûID]");
				new kocsi = strval(param[3]);
				new szoveg[300];
				format(szoveg, 300,"Pótkulcsok(ennél a palyerIDnél vannak): %d || %d",CarInfo[kocsi][cKulcsok][0],CarInfo[kocsi][cKulcsok][1]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,szoveg);
				return 1;
			}
			if(egyezik(param[2], "átír"))
			{
				if(params < 4) return Msg(playerid, "Használata: /debug örökkulcs Átír JármûID slot PLAYERID");
				new kocsi = strval(param[3]);
				new slot = strval(param[4]);
				new UID = strval(param[5]);
				if(slot < 1 || slot > 2) return Msg(playerid," 1 vagy 2");
				if(slot == 1)
				{
					CarInfo[kocsi][cKulcsok][0] = UID;
					
				}
				if(slot == 2)
				{
					CarInfo[kocsi][cKulcsok][1] = UID;
				}		
			}	
		}
		
		if(egyezik(param[1], "ado"))
		{
			new player;
			if(sscanf(pms, "{s[32]}r(-1)", player))
				player = playerid;
			
			if(player == INVALID_PLAYER_ID || playerid == NINCS)
				player = playerid;
				
			SendFormatMessage(playerid, COLOR_WHITE, "Adó: %dFt", Ado(player));
		}
		
		if(egyezik(param[1], "psz"))
		{
			if(params < 3) return Msg(playerid,"/debug psz [kocsi] [pénz]");
			
			PenzszallitoPenz[strval(param[2])] =strval(param[3]);
			Msg(playerid, "Kész");
		}
		if(egyezik(param[1], "almaszedes") || egyezik(param[1], "almaszedés"))
		{
            if(params < 2) return Msg(playerid, "Használata: /debug almaszedes [JármûID] [Érték((1 vagy 0))]");
			new kocsi = strval(param[2]), ertek = strval(param[3]);
			if(ertek >= 2) return Msg(playerid, " 1 vagy 0!!!!!!");
			Almaszedeskozbe[kocsi] = ertek;
			Msg(playerid, "Kész");
		}
		/*if(egyezik(param[1], "kobject") || egyezik(param[1], "kobj"))
		{
            new objekt = GetClosestObject(playerid);
			new Float:tav = GetDistanceToObject(playerid,objekt);
			if(tav > 100.0) return SendClientMessage(playerid,0xFFFFFFFF,"(( Nem vagy Object közelében! ))");
			SendFormatMessage(playerid,0xFFFFFFFF,"(( Közeli Object: %d ))",objekt);
			new Float:X, Float:Y, Float:Z;
			GetDynamicObjectPos(objekt,X,Y,Z);
			SendFormatMessage(playerid,0xFFFFFFFF,"(( Pozíció: X: %f | Y: %f | Z: %f ))",X,Y,Z);
		}*/
		if(egyezik(param[1], "fszmuvelet") || egyezik(param[1], "fszmÛvelet"))
		{
			if(params < 2) return Msg(playerid, "/debug fszmuvelet [Betölt / Ment]");
		    if(egyezik(param[2], "ment"))
			{
			    FszMuvelet( 1 );
			    Msg(playerid, "Fegyverszállítás mentése!");
			}
			if(egyezik(param[2], "betölt") || egyezik(param[2], "betolt"))
			{
			    FszMuvelet( 2 );
			    Msg(playerid, "Fegyverszállítás betöltése!");
			}
		}
		
		if(egyezik(param[1], "szerelesek") || egyezik(param[1], "szerelések"))
		{
			if(params < 2) return Msg(playerid, "Használata: /debug szerelések [Játékos] [Érték]");
			new jatekos = ReturnUser(param[2]), ertek = strval(param[3]);
			if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
			PlayerInfo[jatekos][pSzerelt] = ertek;
			Msg(playerid, "Játékos szerelései átírva!");
		}
		if(egyezik(param[1], "oprc"))
		{
            OnPlayerRequestClass(playerid, GetPlayerSkin(playerid));
            Msg(playerid, "OnPlayerRequestClass meghívódott!");
		}
		if(egyezik(param[1], "femad"))
		{
            PlayerInfo[playerid][pFem] = 5;
            Msg(playerid, "5 fém beállítva");
		}
		if(egyezik(param[1], "mysqllog"))
		{
			if(params < 2) return Msg(playerid, "Használata: /debug mysqllog [0-7]");

			new opcio = strval(param[2]);
			if( opcio < 0 || opcio > 7 ) opcio = 0;

			SendFormatMessage(playerid, COLOR_WHITE, "mysql_log( %d );", opcio);

			ConfigVal("mysql-debug", opcio);
			mysql_log(opcio);
		}
		else if(egyezik(param[1], "streamer3DText"))
		{
			if(params < 2)
				return Msg(playerid, "2. paraméter hiányzik: meddig? max 5000 - ez a parancs kilistázza x-ig a 3dtext szövegeit");

			new meddig = strval(param[2]);
			if(meddig < 1 || meddig > 5000) meddig = 50;

			new db, szoveg[512];
			for(new x = 0; x < meddig; x++)
			{
				if(IsValidDynamic3DTextLabel( Text3D:x ))
				{
					db++;
					GetDynamic3DTextLabelText( Text3D:x, szoveg, 512 );
					printf("[Debug-3DText] %d = %s", x, szoveg);
				}
				meddig--;
			}

			printf("Lefuttatva: %d / %d", meddig, db);

			return 1;
		}
		else if(egyezik(param[1], "streamerObject"))
		{
			if(params < 2)
				return Msg(playerid, "2. paraméter hiányzik: meddig? max 50000 - ez a parancs kilistázza x-ig az objecteket");

			new meddig = strval(param[2]);
			if(meddig < 1 || meddig > 50000) meddig = 50;

			new db, szoveg[512];
			for(new x = 0; x < meddig; x++)
			{
				if(IsValidDynamic3DTextLabel( Text3D:x ))
				{
					db++;
					GetDynamic3DTextLabelText( Text3D:x, szoveg, 512 );
					printf("[Debug-3DText] %d = %s", x, szoveg);
				}
				meddig--;
			}

			printf("Lefuttatva: %d / %d", meddig, db);

			return 1;
		}
		else if(egyezik(param[1], "streamerStatus"))
		{
			SendClientMessage( playerid, COLOR_WHITE, "Streamer adatok: Felsõ korlát / Létrehozott / Számodra látható");
			SendFormatMessage( playerid, COLOR_YELLOW, "[Object] %d | %d | %d", Streamer_GetUpperBound(STREAMER_TYPE_OBJECT), CountDynamicObjects(), Streamer_CountVisibleItems(playerid, STREAMER_TYPE_OBJECT));
			SendFormatMessage( playerid, COLOR_YELLOW, "[Pickup] %d | %d | %d", Streamer_GetUpperBound(STREAMER_TYPE_PICKUP), CountDynamicPickups(), Streamer_CountVisibleItems(playerid, STREAMER_TYPE_PICKUP));
			SendFormatMessage( playerid, COLOR_YELLOW, "[CP] %d | %d | %d", Streamer_GetUpperBound(STREAMER_TYPE_CP), CountDynamicCPs(), Streamer_CountVisibleItems(playerid, STREAMER_TYPE_CP));
			SendFormatMessage( playerid, COLOR_YELLOW, "[RaceCP] %d | %d | %d", Streamer_GetUpperBound(STREAMER_TYPE_RACE_CP), CountDynamicRaceCPs(), Streamer_CountVisibleItems(playerid, STREAMER_TYPE_RACE_CP));
			SendFormatMessage( playerid, COLOR_YELLOW, "[MapIcon] %d | %d | %d", Streamer_GetUpperBound(STREAMER_TYPE_MAP_ICON), CountDynamicMapIcons(), Streamer_CountVisibleItems(playerid, STREAMER_TYPE_MAP_ICON));
			SendFormatMessage( playerid, COLOR_YELLOW, "[3DText] %d | %d | %d", Streamer_GetUpperBound(STREAMER_TYPE_3D_TEXT_LABEL), CountDynamic3DTextLabels(), Streamer_CountVisibleItems(playerid, STREAMER_TYPE_3D_TEXT_LABEL));
			SendFormatMessage( playerid, COLOR_YELLOW, "[Area] %d | %d | %d", Streamer_GetUpperBound(STREAMER_TYPE_AREA), CountDynamicAreas(), Streamer_CountVisibleItems(playerid, STREAMER_TYPE_AREA));
		}
		else if(egyezik(param[1], "ZsarukOnline"))
		{
			SendFormatMessage(playerid,COLOR_YELLOW, "Zsaruk online: %d",ZsarukOnline());
		}
		/*else if(egyezik(param[1], "kocsiallapot"))
		{

			if(params < 2) return Msg(playerid, "És a szám?");
			new Float:all;
			all=strval(param[2]);
			new kocsi = GetClosestVehicle(playerid);
			new Float:tav = GetPlayerDistanceFromVehicle(playerid, kocsi);
			if(tav >= 4) return SendClientMessage(playerid, COLOR_LIGHTRED, "A közeledben nincs jármû!");

			KocsiAllapot[kocsi]=all;
			SendFormatMessage(playerid, COLOR_YELLOW, "Állapot átírva: %3.f",KocsiAllapot[kocsi]);
		}*/
		/*else if(egyezik(param[1], "kocsihiba"))
		{

			if(params < 2) return Msg(playerid, "És a szám?");
			new all;
			all=strval(param[2]);
			new kocsi = GetClosestVehicle(playerid);
			new Float:tav = GetPlayerDistanceFromVehicle(playerid, kocsi);
			if(tav >= 4) return SendClientMessage(playerid, COLOR_LIGHTRED, "A közeledben nincs jármû!");

			KocsiHibas[kocsi] = all;
			SendFormatMessage(playerid, COLOR_YELLOW, "Állapot átírva: %d",KocsiHibas[kocsi]);
		}*/
		else if(egyezik(param[1], "warido"))
		{
			if(params < 2) return Msg(playerid, "/debug warido [Frakció ID]");
			new idke=strval(param[2]);
			FrakcioInfo[idke][fUtolsoTamadas] =0;

		}
		else if(egyezik(param[1], "tuzido"))
		{
			if(params < 2)
				SendFormatMessage(playerid, COLOR_WHITE, "Tuzido: %d", TuzIdo);
			else
			{
				TuzIdo = strval(param[2]);
				SendFormatMessage(playerid, COLOR_WHITE, "Tuzido: %d", TuzIdo);
			}
			return 1;
		}
		else if(egyezik(param[1], "onlinerecount"))
		{
			OnlineJatekosok = 0;
			foreach(Jatekosok, i)
				OnlineJatekosok++;

			Msg(playerid, "Kész");
		}
		else if(egyezik(param[1], "idojarasx"))
		{
			if(params < 2)
				return Msg(playerid,"id?");

			new ido = strval(param[2]);
			IdojarasValt(playerid, ido);
		}
		else if(egyezik(param[1], "kocsikerek"))
		{
			if(params < 2) return 1;
			new kocsi = strval(param[2]);
			if(kocsi < 1 || kocsi >= MAX_VEHICLES || !IsVehicleConnected(kocsi)) return 1;

			new panels, doors, lights, tires;
			GetVehicleDamageStatus(kocsi, panels, doors, lights, tires);
			if(tires == 15)
			{
				UpdateVehicleDamageStatus(kocsi, panels, doors, lights, 0);
				Msg(playerid, "Kerék megjavitva");
				CarPart[kocsi][cKerekek] = 0.0;
			}
			else
			{
				UpdateVehicleDamageStatus(kocsi, panels, doors, lights, 15);
				Msg(playerid, "Kerék kilyukasztva");
				CarPart[kocsi][cKerekek] = 100.0;
			}
		}
		else if(egyezik(param[1], "time"))
		{
			Msg(playerid, "Kész");
			SyncTime();
		}
		else if(egyezik(param[1], "respawncars"))
		{
			for(new car = 1; car < MAX_VEHICLES; car++)
			{
				if(IsVehicleConnected(car))
					DestroyVehicle(car);
			}
			for(new car = 0; car < sizeof(CreatedCars); car++)
				CreatedCars[car] = 0;
			AllCarSpawn();
		}
		else if(egyezik(param[1], "saveaccounts"))
		{
			if(FloodCheck(playerid, 5)) return 1;
			PlayerSave();
			Msg(playerid, "Mentés elindult... kb. 5-30mp");
		}
		else if(egyezik(param[1], "ccc"))
		{
			if(params < 2) return Msg(playerid, "HP?");
			new hp = strval(param[2]);

			if(hp < 0 || hp > 100000) return Msg(playerid, "Érvénytelen szám");

			if(IsPlayerInAnyVehicle(playerid))
				SetVehicleHealth(GetPlayerVehicleID(playerid), float(hp));
			else
				Msg(playerid, "Nem vagy kocsiban!");
		}
		else if(egyezik(param[1], "minimumfizuhoz"))
		{
			if(params < 2) return Msg(playerid, "Idõ?");
			new ido = strval(param[2]);
			MinimumFizuhoz = ido;
			Msg(playerid, "Kész");
		}
		
		else if(egyezik(param[1], "terulettulaj"))
		{
			if(params < 3) return Msg(playerid, "Terület és frakció?");
			new terulet = strval(param[2]), frakcio = strval(param[3]);
			TeruletInfo[terulet][tTulaj] = frakcio;
			Msg(playerid, "Beállítva!");
			TeruletUpdate(terulet, TERULET_Tulaj);
			TeruletFrissites();
		}
		
		else if(egyezik(param[1], "szamolas"))
		{
			if(params < 2) return Msg(playerid, "NPC playerid?");
			new npc = strval(param[2]);
			npc = NPC_ID[npc];
			if(npc < 0 || npc >= MAX_NPC_SOFOR || !NPC_Vezetok[npc][nConnected])
				return Msg(playerid, "Hiba");

			if(NPC_Vezetok[npc][nSzamolas])
			{
				NPC_Vezetok[npc][nSzamolas] = false;
				Msg(playerid, "Számolás kikapcsolva");
			}
			else
			{
				NPC_Vezetok[npc][nSzamolas] = true;
				Msg(playerid, "Számolás bekapcsolva");
			}
		}
		else if(egyezik(param[1], "varosban"))
		{
			if(params < 2) return Msg(playerid, "Játékos?");
			new jatekos = strval(param[2]);

			if(!RendesJatekos(jatekos))
				return Msg(playerid, "Hiba");

			if(PlayerPlace[jatekos][pCity])
				SendFormatMessage(playerid, COLOR_WHITE, "%s a városban van", PlayerName(jatekos));
			else
				SendFormatMessage(playerid, COLOR_WHITE, "%s nincs a városban", PlayerName(jatekos));
		}
		else if(egyezik(param[1], "spectateveh"))
		{
			if(params < 2) {TogglePlayerSpectating(playerid, 0); return 1; }
			TogglePlayerSpectating(playerid, 1);
			PlayerSpectateVehicle(playerid, strval(param[2]));
			Msg(playerid, "Spectate!");
		}
		else if(egyezik(param[1], "idojaras"))
		{
			IdojarasValtozas();
			Msg(playerid, "Kész!");
		}
		else if(egyezik(param[1], "megallo"))
		{
			if(params < 2) return Msg(playerid, "NPC?");
			new npc = strval(param[2]);
			for(new x = 0; x < MAX_MEGALLO; x++)
				SendFormatMessage(playerid, COLOR_WHITE, "Név: %s | X: %f | Y: %f | Z: %f", NPC_MegallokNeve[npc][x], NPC_Megallok[npc][x][0], NPC_Megallok[npc][x][1], NPC_Megallok[npc][x][2]);
		}
		/*else if(egyezik(param[1], "continueplayback"))
		{
			if(params < 2) return Msg(playerid, "NPC?");
			new npc = strval(param[2]);
			ContinueRecordingPlayback(npc);
			Msg(playerid, "Kész");
		}*/
		else if(egyezik(param[1], "benzin"))
		{
			if(params < 2) return Msg(playerid, "/debug benzin [benzin]");
			new benzin = strval(param[2]), kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 10.0) return Msg(playerid, "Nincs a közelben kocsi!");
			SendFormatMessage(playerid, COLOR_WHITE, "Új érték: %dl, régi: %dl", benzin, Gas[kocsi]);
			Gas[kocsi] = benzin;
		}
		else if(egyezik(param[1], "fekete"))
		{
			if(params < 3) return Msg(playerid, "Használat: /debug fekete [játékos] [0/1]");
			new user = ReturnUser(param[2]);
			if(user == INVALID_PLAYER_ID)
				return Msg(playerid, "Nincs ilyen játékos!");

			new igennem = strval(param[3]);
			if(igennem == 1)
			{
				Feketeseg(user, true);
				return Msg(playerid, "Sötétség!");
			}
			else if(igennem == 0)
			{
				Feketeseg(user, false);
				return Msg(playerid, "Fény!");
			}
			else
				return Msg(playerid, "0 vagy 1!");
		}
		else if(egyezik(param[1], "CorrectPlayerDatas"))
		{
			if(params < 2) return Msg(playerid, "Név?");
			new user = ReturnUser(param[2]);
			if(user == INVALID_PLAYER_ID)
				return Msg(playerid, "Nincs ilyen játékos!");

			CorrectPlayerDatas(user);
			Msg(playerid, "Kész!");
		}
		else if(egyezik(param[1], "gettime"))
			SendFormatMessage(playerid, COLOR_WHITE, "UnixTime = %d", UnixTime);
		else if(egyezik(param[1], "getdate"))
			SendFormatMessage(playerid, COLOR_WHITE, "getdate() = %d", getdate());
		else if(egyezik(param[1], "hatar"))
			SendFormatMessage(playerid, COLOR_WHITE, "Határ() = %d", hatar);
		else if(egyezik(param[1], "sound"))
		{
			if(params < 2)
				return Msg(playerid, "/debug sound [hang]");
			PlayerPlaySound(playerid, strval(param[2]), 0.0, 0.0, 0.0);
		}
		else if(egyezik(param[1], "payday"))
		{
			if(params < 2)
				return Msg(playerid, "/debug payday [idõ - percben!]");
			PlayerInfo[playerid][pPayDay] = strval(param[2]) * 60;
			SendFormatMessage(playerid, COLOR_WHITE, "PayDay: %dperc", strval(param[2]) * 60);
		}
		else if(egyezik(param[1], "adokitoltve"))
		{
			PlayerInfo[playerid][pAdoKitoltve] = 0;
			Msg(playerid, "Adó kitöltve 0ra téve");
		}
		else if(egyezik(param[1], "csomagtartocheck"))
		{
			new bool:ment;
			for(new x = 0; x < MAX_VEHICLES; x++)
			{
				ment = false;
				for(new y = 0, ys = carTrunk; y < ys; y++)
				{
					if(CarTrunk[x][carTrunk:y] < 0)
					{
						if(!ment)
						{
							SendFormatMessage(playerid, COLOR_GREY, "Kocsi %d resettelve mert minusz volt benne", x);
							ment = true;
						}
						CarTrunk[x][carTrunk:y] = 0;
					}
				}
			}
			//CsomagTartoMentes();
			Msg(playerid, "Kész");
		}
		else if(egyezik(param[1], "OnPlayerUpdate"))
		{
			OnPlayerUpdate(playerid);
			Msg(playerid, "OnPlayerUpdate Futtatva");
		}
		else if(egyezik(param[1], "mysqlupdater"))
		{
			MySQLUpdater();
			Msg(playerid, "MySQLUpdater Futtatva");
		}
		else if(egyezik(param[1], "report"))
		{
			if(params < 2) return Msg(playerid, "Név?");
			new player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID)
				return Msg(playerid, "Nincs ilyen játékos!");

			SendFormatMessage(playerid, COLOR_WHITE, "%s reportváltozójának az értéke: %d", PlayerName(player), TudReportolni[player]);
		}
		else if(egyezik(param[1], "csomagtarto"))
		{
			if(params < 2) return Msg(playerid, "/debug csomagtarto [minusz / plus]");
			if(egyezik(param[2], "minusz"))
			{
				new m = 0;
				for(new v = 0; v < MAX_VEHICLES; v++)
				{
					for(new s = 0, ss = carTrunk; s < ss; s++)
					{
						if(CarTrunk[v][carTrunk:s] < 0)
						{
							CarTrunk[v][carTrunk:s] = 0;
							m++;
						}
					}
				}
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Összesen %d jármûben volt MINUSZ cucc", m);
			}
			if(egyezik(param[2], "plus"))
			{
				new m = 0;
				for(new v = 0; v < MAX_VEHICLES; v++)
				{
					for(new s = 0, ss = carTrunk; s < ss; s++)
					{
						if(CarTrunk[v][carTrunk:s] > 10000)
						{
							CarTrunk[v][carTrunk:s] = 0;
							m++;
						}
					}
				}
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Összesen %d jármûben volt PLUS(10.000) cucc", m);
			}
		}

		return 1;
	}

	if(egyezik(cmd, "/versenyzõk") || egyezik(cmd, "/versenyzok"))
	{
		if(!IsDirector(playerid) && BViadal[playerid] == 0) return 1;

		ViadalRadar();

		SendFormatMessage(playerid, COLOR_YELLOW, "A célpontok bejelölve a radaron! Versenyzõk száma: %d", BVJatekosok);

		return 1;
	}

	if(egyezik(cmd, "/nevek"))
	{
		if(Admin(playerid, 1) || IsScripter(playerid))
		{
			if(Nevek[playerid])
			{
				Nevek[playerid] = 0;
				ShowNames(playerid, 0);
				Msg(playerid, "Nevek kikapcsolva!");
			}
			else
			{
				Nevek[playerid] = 1;
				ShowNames(playerid, 1);
				Msg(playerid, "Nevek bekapcsolva!");
			}
		}
		else if(PlayerInfo[playerid][pMember] > 0)
		{
			if(Nevek[playerid])
			{
				Nevek[playerid] = 0;
				ShowNames(playerid, 0);
				Msg(playerid, "Most már nem látod a frakció társaid nevét");
			}
			else
			{
				Nevek[playerid] = 1;
				ShowNames(playerid, 1);
				Msg(playerid, "Most már látod a frakció társaid nevét");
			}
		}
		return 1;
	}

	if(egyezik(cmd, "/loadversion"))
	{
		if(!Admin(playerid, 1338)) return 1;

		LoadVersion();
		Msg(playerid, "Mód verziója újratöltve!");

		return 1;
	}

	if(egyezik(cmd, "/alock"))
	{
		if(!Admin(playerid, 4)) return 1;

		new kocsi = GetClosestVehicle(playerid);

		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 6.0) return Msg(playerid, "Nincs a közeledben jármû!");

		if(!Locked(kocsi))
		{
			LockCar(kocsi);
			SendFormatMessage(playerid, COLOR_WHITE, "Kocsi bezárva! [Id: %d]", kocsi);

		}
		else
		{
			UnLockCar(kocsi);
			SendFormatMessage(playerid, COLOR_WHITE, "Kocsi nyitva! [Id: %d]", kocsi);
		}

		return 1;
	}

	if(egyezik(cmd, "/k") || egyezik(cmd, "/kereskedõ") || egyezik(cmd, "/kereskedo"))
	{
		if(PlayerInfo[playerid][pAutoker]<1 && !Admin(playerid, 1337))
			return Msg(playerid, "Nem vagy autókereskedõ!");

		if(params < 1)
		{
			Msg(playerid, "===============[ Autókereskedõ ]===============", false);
			Msg(playerid, "Használata: /k [parancs] [alparancs]", false, COLOR_WHITE);
			Msg(playerid, "Parancsok: park, árak, felirat, elad, ára, vesz, zár, lista, tulaj (Elsõ a V-s Rendszám, második a JármûID-je!)", false, COLOR_WHITE);
			return 1;
		}
		else if(egyezik(param[1], "árak"))
		{
			new kocsix = GetClosestVehicle(playerid);
			new vs = IsAVsKocsi(kocsix);
			if(GetPlayerDistanceFromVehicle(playerid, kocsix) > 5.5)
					return Msg(playerid, "A közeledben nincs jármû!");
					
			if(vs == NINCS) return Msg(playerid, "Ez nem V-s jármû!");
			if(params < 2)
			{
				SendFormatMessage(playerid,COLOR_YELLOW,"A model újonnan vett piaci ára: %s Ft",FormatInt(JarmuAra[ CarInfo[vs][cModel] - 400 ][jAra]));
				Msg(playerid,"/k árak model | megadja mennyiért tudnád cserélni");
			}
			else
			{
				new model = NINCS;
				if(IsNumeric(param[2]))
					model = strval(param[2]);
				else
					model = GetVehicleModelIDFromName(param[2]);

				if(model < 400 || model > 611)
					return Msg(playerid, "Ilyen jármûtípus nem létezik");

				new model2 = model - 400;
				if(JarmuAra[model2][jFrakciok][0] == NINCS || !JarmuAra[model2][jVeheto])
					return Msg(playerid, "Ezt a jármûvet senki sem veheti meg");

				if(JarmuAra[model2][jFrakciok][0] != 0)
				{
					new bool:van;
					for(new j = 0; j < MAX_FRAKCIO; j++)
					{
						if(JarmuAra[model2][jFrakciok][j] > 0)
						{
							van = true;
							break;
						}
					}
					if(van)
						return Msg(playerid, "Ezt a jármûvet csak egyes frakciók vehetik meg");
				}

				new km=floatround(KmSzamol[CarInfo[vs][cId]]/1000);
				new beszamitas;
				if(km > 15000)
					beszamitas = 0;
				else
					beszamitas = JarmuAra[ CarInfo[vs][cModel] - 400 ][jAra]-floatround(JarmuAra[ CarInfo[vs][cModel] - 400 ][jAra]/100*km/15000*100);
				
				KocsiAlakitAra[playerid]= 0;
				new uzike[512];
				if(beszamitas > JarmuAra[model2][jAra])
				{
					KocsiAlakitAra[playerid]=3000000;
					if(JarmuAra[model2][jAra] < 3000000)
						KocsiAlakitAra[playerid]= JarmuAra[model2][jAra]/2;
					if(CarInfo[vs][cOwned] == 0)
					{
						KocsiAlakitAra[playerid] = floatround(KocsiAlakitAra[playerid]/1.5);
						format(uzike, sizeof(uzike),""#COL_FEHER"A régi kereskedõi kocsi cserélési költsége az új kocsira "#COL_VKEK"%s "#COL_FEHER"Ft\n Kereskedõként 50 százelék kedvezményt kapsz!\nBiztos, hogy át akarod alakítani a jelenlegit?", FormatNumber( KocsiAlakitAra[playerid], 0, ',' ));
						
					}
					else
					{
						format(uzike, sizeof(uzike),""#COL_FEHER"A régi kocsid cserélési költsége az új kocsira "#COL_VKEK"%s "#COL_FEHER"Ft\nBiztos, hogy át akarod alakítani a jelenlegit?", FormatNumber( KocsiAlakitAra[playerid], 0, ',' ));
					}
				}
				else
				{
					if(CarInfo[vs][cNeon] > 0) beszamitas +=800000;
					switch(CarInfo[vs][cRiaszto])
					{
						case 1: beszamitas +=50000;
						case 2: beszamitas +=200000;
						case 3: beszamitas +=400000;
						case 4: beszamitas +=1500000;
						default: beszamitas +=0;
					}
					KocsiAlakitAra[playerid] = JarmuAra[model2][jAra]-beszamitas;
					if(CarInfo[vs][cOwned] == 0)
					{
						KocsiAlakitAra[playerid] = floatround(KocsiAlakitAra[playerid]/1.45);
						format(uzike, sizeof(uzike),""#COL_FEHER"A régi kereskedõi kocsi cserélési költsége az új kocsira "#COL_VKEK"%s "#COL_FEHER"Ft A régi kocsid beszámítják "#COL_VKEK"%s "#COL_FEHER"Ft -ba!\nKereskedõként kapsz 45 százalék kezdeményt. Így a csere "#COL_VKEK"%s "#COL_FEHER"Ft -ba fog kerülni!!!\n", FormatNumber(JarmuAra[model2][jAra], 0, ',' ),FormatNumber( beszamitas, 0, ',' ),FormatNumber( KocsiAlakitAra[playerid], 0, ',' ));
					
					}
					else
					{
						format(uzike, sizeof(uzike),""#COL_FEHER"A régi kocsid cserélési költsége az új kocsira "#COL_VKEK"%s "#COL_FEHER"Ft A régi kocsid beszámítják "#COL_VKEK"%s "#COL_FEHER"Ft -ba! Így a csere "#COL_VKEK"%s "#COL_FEHER"Ft -ba fog kerülni!!!\n", FormatNumber(JarmuAra[model2][jAra], 0, ',' ),FormatNumber( beszamitas, 0, ',' ),FormatNumber( KocsiAlakitAra[playerid], 0, ',' ));
					}
					ShowPlayerDialog(playerid,KERESKEDO_INFO, DIALOG_STYLE_MSGBOX, "INFO", uzike, "Rendben", "Kilép");	
				}
			}
	
		
			return 1;
		}
		else if(egyezik(param[1],"ára"))
		{
			if(params < 2) return Msg(playerid, "/k ára [érték]");
			
			new ara = strval(param[2]);
			new kocsix = GetClosestVehicle(playerid);
			new kocsi = IsAVsKocsi(kocsix);
			if(GetPlayerDistanceFromVehicle(playerid, kocsix) > 5.5)
					return Msg(playerid, "A közeledben nincs jármû!");
			
			if(CarInfo[kocsi][cOwned] != 0) return Msg(playerid, "Nem kereskedõ kocsi!");
			//new player = ReturnUser(param[2]);	
			if(CarInfo[kocsi][cKereskedo] !=  PlayerInfo[playerid][pID] && CarInfo[kocsi][cKereskedo] > 0) 
				return Msg(playerid, "Ezt a kocsit nem te vetted meg! Nem állíthatod át az árát!");
		
			CarInfo[kocsi][cValue] = ara;
			SendFormatMessage(playerid, COLOR_YELLOW, "A kocsi infó ára átírva %s FT-ra",FormatNumber( ara, 0, ',' ));
			CarUpdate(kocsi, CAR_Value, CAR_KERESKEDO);
			
			if(IsValidDynamic3DTextLabel(CarInfo[kocsi][cFelirat]))
				KereskedoFelirat(kocsi);
			return 1;
		
		}
		else if(egyezik(param[1],"felirat"))
		{
			
			new kocsix = GetClosestVehicle(playerid);
			new kocsi = IsAVsKocsi(kocsix);
			
			if(kocsi == NINCS)
				return Msg(playerid, "Ez nem V-s jármû");
			
			if(GetPlayerDistanceFromVehicle(playerid, kocsix) > 5.5)
				return Msg(playerid, "A közeledben nincs jármû!");
			
			if(params < 2) return Msg(playerid, "/k felirat [be/ki] [mind]");
				
			if(CarInfo[kocsi][cKereskedo] !=  PlayerInfo[playerid][pID] || CarInfo[kocsi][cKereskedo] < 0) 
				return Msg(playerid, "Ezt a kocsit nem te vetted meg! Nem rakhatsz rá feliratott!");
			
			if(CarInfo[kocsi][cOwned] != 0) return Msg(playerid, "Nem kereskedõ kocsi!");
			
			
			
			new h = 0;
			if(egyezik(param[2], "be"))
			{
				if(params == 3)
				{
				
					for(h = 0; h < MAXVSKOCSI; h++)
					{
						if(CarInfo[h][Van] == 1)
						{
							if(CarInfo[h][cOwned] == 0)
							{
								if(CarInfo[h][cKereskedo] == PlayerInfo[playerid][pID])
									KereskedoFelirat(h);
							}
						}
					}
					Msg(playerid,"Minden kocsidra felirat bekapcsolva");
				}
				else
				{
					
					KereskedoFelirat(kocsi);
					Msg(playerid, "Felirat bekapcsolva");
				}
				return 1;
			}
			if(egyezik(param[2], "ki"))
			{
				if(params == 3)
				{
				
					for(h = 0; h < MAXVSKOCSI; h++)
					{
						if(CarInfo[h][Van] == 1)
						{
							if(CarInfo[h][cOwned] == 0)
							{
								if(CarInfo[h][cKereskedo] == PlayerInfo[playerid][pID])
									KereskedoFelirat(h, true);
							}
						}
					}
					Msg(playerid,"Minden kocsidra felirat kikapcsolva");
				}
				else
				{
			
					KereskedoFelirat(kocsi, true);
					Msg(playerid,"Felirat kikapcsolva");
				}
				return 1;
			
			}
		
		}
		else if(egyezik(param[1],"vásárol"))
		{
		
		
			new kocsix = GetClosestVehicle(playerid);
			new kocsi = IsAVsKocsi(kocsix);
			if(GetPlayerDistanceFromVehicle(playerid, kocsix) > 5.5)
					return Msg(playerid, "A közeledben nincs jármû!");
			
			
			if(PlayerInfo[playerid][pAutoker]<1) return Msg(playerid, "Nem vagy kereskedõ!");
			
			if(CarInfo[kocsi][cOwned] != 0) return Msg(playerid, "Nem kereskedõ kocsi!");
				
			if(CarInfo[kocsi][cValue] < 200000) return Msg(playerid, "Hibás ár miatt nem eladó!");
			if(!BankkartyaFizet(playerid,CarInfo[kocsi][cValue])) return Msg(playerid, "Nincs elég pénzed rá!");	
				
			new nev[MAX_PLAYER_NAME];
			format(nev, sizeof(nev), "%s",PlayerName(playerid));
			strmid(CarInfo[kocsi][cOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
			
			
			KereskedoFelirat(kocsi, true);
			SendFormatMessage(playerid, COLOR_YELLOW,"Megvetted a kocsit %s Ft-ért",FormatInt(CarInfo[kocsi][cValue]));
			
			new kezelesikolt;
			kezelesikolt=floatround(float(CarInfo[kocsi][cValue]) *0.01);
			BankSzef += kezelesikolt;
			
			new kereskedoid =CarInfo[kocsi][cKereskedo];
			new kereskedo = OnlineUID(kereskedoid);
			CarInfo[kocsi][cKereskedo] = PlayerInfo[playerid][pID];
			CarInfo[kocsi][cKulcsok][0] = NINCS;
			CarInfo[kocsi][cKulcsok][1] = NINCS;
			CarUpdate(kocsi, CAR_Owner, CAR_KERESKEDO,CAR_Kulcsok1,CAR_Kulcsok2);
			new vetellog[256];
			if(kereskedo > NINCS)
			{				
				
				SendFormatMessage(kereskedo, COLOR_YELLOW,"%s megvette a jármûvedet Model %s || %s Ft || Kezelési költség: %s Ft || Bank utalt: %s Ft-ott.",ICPlayerName(playerid), GetVehicleModelName(GetVehicleModel(CarInfo[kocsi][cId])),FormatInt(CarInfo[kocsi][cValue]),kezelesikolt,FormatInt(CarInfo[kocsi][cValue]-kezelesikolt));
				PlayerInfo[kereskedo][pAccount] +=CarInfo[kocsi][cValue]-kezelesikolt;
					
				format(vetellog, 256, "[/v vásárol] - %s megkapta az utalást %s Ft.",PlayerName(kereskedo),FormatInt(CarInfo[kocsi][cValue]-kezelesikolt));
				EgyebLog(vetellog);
			}
			else
			{
				for(new slot;slot < MAX_KERESKEDO; slot++)
				{
					if(KeredkedoVetel[slot][kUID] < 1)
					{
						KeredkedoVetel[slot][kUID] = kereskedoid;					
						format(KeredkedoVetel[slot][kKOCSI],120,"%s",GetVehicleModelName(GetVehicleModel(CarInfo[kocsi][cId])));					
						KeredkedoVetel[slot][kAra] = CarInfo[kocsi][cValue]-kezelesikolt;
						format(vetellog, 256, "[/k vásárol] - UID: %d nem kapta meg az utalást, mentve az összeg: %s Ft. Kocsi %s",kereskedoid,FormatInt(CarInfo[kocsi][cValue]-kezelesikolt),GetVehicleModelName(GetVehicleModel(CarInfo[kocsi][cId])));
						EgyebLog(vetellog);
						SaveKereskedo();
						return 1;
					}
				}
			}				
		
		}
		else if(egyezik(param[1],"tulaj"))
		{
		
		
			new kocsix = GetClosestVehicle(playerid);
			new kocsi = IsAVsKocsi(kocsix);
			if(GetPlayerDistanceFromVehicle(playerid, kocsix) > 5.5)
					return Msg(playerid, "A közeledben nincs jármû!");
			
			if(CarInfo[kocsi][cOwned] != 0) return Msg(playerid, "Nem kereskedõ kocsi!");
			
			new player = ReturnUser(param[2]);	
			if(CarInfo[kocsi][cKereskedo] !=  PlayerInfo[playerid][pID] && CarInfo[kocsi][cKereskedo] > 0 && !Admin(playerid, 1337)) 
				return Msg(playerid, "Ezt a kocsit nem te vetted meg! Nem adhatod el!");

			if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "Nem online!");
			CarInfo[kocsi][cKereskedo] = PlayerInfo[player][pID];
			
			if(PlayerInfo[player][pAutoker]<1) return Msg(playerid, "Õ nem kereskedõ!");
			new nev[MAX_PLAYER_NAME];
			format(nev, sizeof(nev), "%s",PlayerName(player));
			strmid(CarInfo[kocsi][cOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
			
			SendFormatMessage(playerid, COLOR_YELLOW, "Eladva neki %s ",ICPlayerName(player));
			Msg(player, "A kollégád átadta a tulajdoni jogokat!");
			
			KereskedoFelirat(kocsi, true);
			
			CarUpdate(kocsi, CAR_Owner, CAR_KERESKEDO);
		
		}
		else if(egyezik(param[1],"zár") || egyezik(param[1], "zar") || egyezik(param[1], "lock"))
		{
			new carid;
			carid = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, carid) > 8.0)
				return Msg(playerid, "A közeledben nincs jármû!");

			new vs;
			vs = IsAVsKocsi(carid); 


			if(vs == NINCS) return Msg(playerid, "Ez nem kereskedõi jármû!");
			if(CarInfo[vs][cOwned] != 0) return Msg(playerid, "Ez nem kereskedõi jármû!");

			if(CarInfo[vs][cLock] == 1)
			{
				UnLockCar(carid);
				format(string, sizeof(string), "~w~Jarmu~n~~g~nyitva");
				GameTextForPlayer(playerid, string, 4000, 3);
				CarInfo[vs][cLock] = 0;

				Cselekves(playerid, "kinyitotta a jármûvét.",0);
			}
			else
			{
				LockCar(carid);
				format(string, sizeof(string), "~w~Jarmu~n~~r~zarva");
				GameTextForPlayer(playerid, string, 4000, 3);
				CarInfo[vs][cLock] = 1;
				Cselekves(playerid, "bezárta a jármûvét.", 0);
			}

			CarUpdate(vs, CAR_Lock);
			return 1;
		}
		if(egyezik(param[1], "lista"))
		{
			if(Nincsbelepve(playerid)) return 1;

			new h, eddig, osszeselado;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "================ Autókereskedõ jármûvek ================");
			format(string, sizeof(string), "Eladó:");
			for(h = 0; h < MAXVSKOCSI; h++)
			{
				if(CarInfo[h][Van] == 1)
				{
					if(CarInfo[h][cOwned] == 0)
					{
						eddig++;
						osszeselado++;

						format(string, sizeof(string), "[%d]Model: %s, Futott Km-er: %d KM, Rendszám: CLS-%d Eladó: %s", h,  GetVehicleModelName(GetVehicleModel(CarInfo[h][cId])),floatround(KmSzamol[CarInfo[h][cId]]/1000),CarInfo[h][cId],CarInfo[h][cOwner]); 

						SendClientMessage(playerid, COLOR_LIGHTGREEN, string);

						
					}
				}

				if((h+1) == MAXVSKOCSI)
				{
					if(osszeselado == 0)
						SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs egy kocsi sem!");
					
				}
			}
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "====================================================");
			return 1;
		}
		if(egyezik(param[1], "park"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy jármûben!");
			new carid = GetPlayerVehicleID(playerid);
			new kocsi = IsAVsKocsi(carid);
			if(kocsi == -1) return Msg(playerid, "Ez nem kereskedõi jármû!");
			if(CarInfo[kocsi][cOwned] != 0) return Msg(playerid, "Ez nem kereskedõi jármû!");
			//if(!IsAt(playerid, IsAt_KereskedoHQ)) return Msg(playerid, "Nem vagy a kereskedõ HQ-n!");

			new Float:x, Float:y, Float:z, Float:a;
			GetVehiclePos(CarInfo[kocsi][cId], x, y, z);
			GetVehicleZAngle(CarInfo[kocsi][cId], a);

			CarInfo[kocsi][cLocationx] = x;
			CarInfo[kocsi][cLocationy] = y;
			CarInfo[kocsi][cLocationz] = z;
			CarInfo[kocsi][cAngle] = a;
			format(string, sizeof(string), "~n~~g~Leparkoltad");
			GameTextForPlayer(playerid, string, 10000, 3);

		
			ACrs[carid]=true;
			ParkCar(kocsi, x, y, z, a, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
			Locker(CarInfo[kocsi][cId]);
			ACrs[carid]=false;

			SetPlayerPos(playerid,x,y,z+1);
			TogglePlayerControllable(playerid, 1);
			return 1;
		}
		else if(egyezik(param[1], "elad"))
		{
			if(PlayerInfo[playerid][pAutoker] < 1 && !Admin(playerid, 1337)) return Msg(playerid, "Nem vagy kereskedõ");
			new kocsix = GetClosestVehicle(playerid);
			new kocsi = IsAVsKocsi(kocsix);

			if(kocsi == NINCS)
				return 1;

			new player;
			player = GetClosestPlayer(playerid);

			if(GetDistanceBetweenPlayers(playerid, player) > 2)
				return Msg(playerid, "A közeledben nincs senki!");
				
			if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "A közeledben nincs senki! 1");

			if(IsPlayerNPC(player))
				return Msg(playerid, "Persze, majd az NPC elkocsikázik vele mi ? -.-");
				
			if(CarInfo[kocsi][cKereskedo] !=  PlayerInfo[playerid][pID] && CarInfo[kocsi][cKereskedo] > 0) 
				return Msg(playerid, "Ezt a kocsit nem te vetted meg! Nem adhatod el!");
	
			if(CarInfo[kocsi][cOwned] != 0) return Msg(playerid, "Nem kereskedõ kocsi!");
			
			if(PlayerInfo[player][pPcarkey] != NINCS)
				if(PlayerInfo[player][pPremiumPont] > 0 && PlayerInfo[player][pPcarkey2] != NINCS && PlayerInfo[player][pPcarkey3] != NINCS || PlayerInfo[player][pPremiumPont] < 1)
					return Msg(playerid, "Van jármûve!");

			if(GetPlayerDistanceFromVehicle(playerid, CarInfo[kocsi][cId]) > 5.5 || CarInfo[kocsi][cOwned] == 1)
				return Msg(playerid, "Nincs a közelben kereskedõi jármû!");
				
				

			/*if(!IsAt(playerid, IsAt_KereskedoHQ))
				return Msg(playerid, "Nem vagy a kereskedõ HQ-n!");*/

			Cselekves(playerid, "megír egy adásvételi szerzõdést, és átnyújtja a másik embernek.");
			Msg(playerid, "El szeretnéd adni a jármûvedet neki.", false, COLOR_LIGHTGREEN);
			SendFormatMessage(player, COLOR_LIGHTGREEN, "%s eladna neked egy kereskedõi jármûvet - Model: %s - /v vesz", ICPlayerName(playerid), GetVehicleModelName(GetVehicleModel(CarInfo[kocsi][cId])));
			KereskedoFelirat(kocsi, true);
			KereskedoKocsiElad[player] = playerid;
			KereskedoKocsi[player] = kocsi;

			return 1;
		}
		else if(egyezik(param[1], "csere"))
		{
			if(PlayerInfo[playerid][pAutoker] < 1 && !Admin(playerid, 1337)) return Msg(playerid, "Nem vagy kereskedõ!");
			new kocsix = GetClosestVehicle(playerid);
			new kocsi = IsAVsKocsi(kocsix);
			
			KereskedoFelirat(kocsi, true);
			
			if(kocsi == NINCS)
				return 1;

			new player;
			player = GetClosestPlayer(playerid);

			if(GetDistanceBetweenPlayers(playerid, player) > 2)
				return Msg(playerid, "A közeledben nincs senki!");
				
			if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "A közeledben nincs senki!");

			if(IsPlayerNPC(player))
				return Msg(playerid, "Persze, majd az NPC elkocsikázik vele mi ? -.-");
				
			if(CarInfo[kocsi][cKereskedo] !=  PlayerInfo[playerid][pID] && CarInfo[kocsi][cKereskedo] > 0) 
				return Msg(playerid, "Ezt a kocsit nem te vetted meg! Nem cserélheted el!");
	
			if(PlayerInfo[player][pPcarkey] == NINCS && PlayerInfo[player][pPcarkey2] == NINCS && PlayerInfo[player][pPcarkey3] == NINCS) return Msg(playerid, "Neki nincs kocsija");
			if(GetPlayerDistanceFromVehicle(playerid, CarInfo[kocsi][cId]) > 5.5 || CarInfo[kocsi][cOwned] == 1) return Msg(playerid, "Nincs a közelben kereskedõi jármû!");
		//	if(!IsAt(playerid, IsAt_KereskedoHQ)) return Msg(playerid, "Nem vagy a kereskedõ HQ-n!");

			Cselekves(playerid, "megír egy csere szerzõdést, és átnyújtja a másik embernek.");
			Msg(playerid, "El szeretnéd cserélni a jármûvet vele", false, COLOR_LIGHTGREEN);
			SendFormatMessage(player, COLOR_LIGHTGREEN, "%s cserélne veled egy kereskedoi jármûvet - Model: %s - /k csere", ICPlayerName(playerid), GetVehicleModelName(GetVehicleModel(CarInfo[kocsi][cId])));
			SendClientMessage(player, COLOR_LIGHTGREEN, "Az elsõ kocsidat cseréli, szóval ha nem azt szerenéd akkor /felcserél");
			KereskedoKocsiCsere[player] = playerid;
			KereskedoKocsi[player] = kocsi;

			return 1;
		}
		else if(egyezik(param[1], "vesz"))
		{
		    if(PlayerInfo[playerid][pAutoker] < 1) return Msg(playerid, "Nem vagy  kereskedõ!");

			new player;
			player = KereskedoKocsiVetel[playerid];
			if(player == NINCS || !IsPlayerConnected(player) || IsPlayerNPC(player) || !Logged(player)) return 1;
			new car = KereskedoKocsi[playerid];
			if(CarInfo[car][cOwned] != 1) return 1;

			if(GetDistanceBetweenPlayers(playerid, player) > 2)
				return Msg(playerid, "Nincs a közeledben!");
			//if(!IsAt(playerid, IsAt_KereskedoHQ))
			//	return Msg(playerid, "Nem vagy a kereskedõ HQ-n!");

			CarInfo[car][cOwned] = 0;

			new nev[MAX_PLAYER_NAME];
			format(nev, sizeof(nev), "%s",PlayerName(playerid));
			strmid(CarInfo[car][cOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
			
			CarInfo[car][cTulaj] = NINCS;
			CarInfo[car][cDate] = UnixTime;
			CarInfo[car][cKereskedo] = PlayerInfo[playerid][pID];
			CarInfo[car][cKulcsok][0] = NINCS;
			CarInfo[car][cKulcsok][1] = NINCS;
			CarUpdate(car, CAR_Owned, CAR_Owner, CAR_Tulaj, CAR_Date, CAR_KERESKEDO,CAR_Kulcsok1,CAR_Kulcsok2);

			CorrectPlayerDatas(player);

			Cselekves(playerid, "aláírta az adásvételi szerzõdést, és vett egy jármûvet.");
			Msg(playerid, "Gratulálunk, ez mostmár autókereskedõi kocsi!", false, COLOR_LIGHTGREEN);
			SendFormatMessage(player, COLOR_LIGHTGREEN, "%s megvette a jármûvet - Model: %s", ICPlayerName(playerid), GetVehicleModelName(GetVehicleModel(CarInfo[car][cId])));
			KereskedoKocsiVetel[playerid] = NINCS;
			SendClientMessage(playerid, COLOR_LIGHTRED, "FIGYELEM! A vásárolt jármûvet 30 napon belül értékesítened kell! Ellenkezõ esetben aukcióra kerül és eladódik!");
			return 1;
		}

		return 1;
	}

	if(egyezik(cmd, "/gotopos"))
	{
		if(!Admin(playerid, 3) && !IsScripter(playerid)) return 1;

		new Float:tpos[3];
		if(sscanf(pms, "p<,>fff", tpos[0],tpos[1],tpos[2])) return Msg(playerid, "/gotopos [x],[y],[z]");

		Tele(playerid, tpos[0], tpos[1], tpos[2], false);
		SendFormatMessage(playerid, COLOR_GREY, "Teleportálva ide: %f, %f, %f", tpos[0], tpos[1], tpos[2]);
		return 1;
	}

	if(egyezik(cmd, "/aláír") || egyezik(cmd, "/alair"))
	{
		if(AdasVeteliNeki[playerid] == NINCS)
			return Msg(playerid, "Nem adtak neked szerzõdést!");

		new player = AdasVeteliNeki[playerid];

		new cucc, nev[MAX_PLAYER_NAME], ara, Float:tav, ara2;
		nev = PlayerName(player);
		ara = AdasVeteliAra[playerid];
		tav = GetDistanceBetweenPlayers(playerid, player);
		ara2 = floatround(ara*ADASVETELI_ADO);

		if(tav > 2.0)
			return Msg(playerid, "Nincs a közeledben!");

		if(AdasVeteliTipus[playerid] == 0)
		{
			cucc = AdasVeteliCucc[playerid];
			if(PlayerInfo[player][pPhousekey] == NINCS)
				PlayerInfo[player][pPhousekey] = cucc;
			else if(PlayerInfo[player][pPhousekey2] == NINCS)
			{
				PlayerInfo[player][pPremiumPont]--;
				Msg(player, "Egy prémiumpont levonva");
				PlayerInfo[player][pPhousekey2] = cucc;
			}
			else if(PlayerInfo[player][pPhousekey3] == NINCS)
			{
				PlayerInfo[player][pPremiumPont]--;
				Msg(player, "Egy prémiumpont levonva");
				PlayerInfo[player][pPhousekey3] = cucc;
			}
			strmid(HouseInfo[cucc][hOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
			HouseInfo[cucc][hTulaj] = PlayerInfo[player][pID];
			//HazUpdate(cucc, "Tulaj='%s'", nev);
			HouseInfo[cucc][hKulcsVan][0] = NINCS;
			HouseInfo[cucc][hKulcsVan][1] = NINCS;
			HazUpdate(cucc, HAZ_Owner, HAZ_Tulaj, HAZ_Kulcsok1, HAZ_Kulcsok2);
			PlayerInfo[playerid][pPhousekey] = NINCS;
			PlayerInfo[playerid][pLakcimkartya] = 0;

			Cselekves(playerid, "aláírta az adásvételi szerzõdést");
			
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Aláírtad a szerzõdést. Eladtad a Class Utca %d. szám alatt lévõ házt, és a bank átutalta a pénzt (%dFt)", cucc, ara);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s aláírta a szerzõdést, ezáltal tied a Class Utca %d. szám alatt lévõ ház, és átutaltad neki a pénzt (%dFt)", ICPlayerName(playerid), cucc, ara);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "Az adásvételi szerzõdés után fizettél %d Ft adót.", ara2);
			BizPenz(BIZ_ADASVETELI, ara2, player);
			PlayerInfo[player][pAccount] -= ara;
			if(PlayerInfo[playerid][pBankSzamlaSzam] != 0) PlayerInfo[playerid][pAccount] += ara;
			else GiveMoney(playerid, ara);
			
			new vetellog[256];
			format(vetellog, 256, "[/alair ház] - %s vett %s -tõl egy házat %d, %s Ft-ért",PlayerName(player),PlayerName(playerid), cucc, FormatNumber( ara, 0, ',' ));
			EgyebLog(vetellog);
		}
		else if(AdasVeteliTipus[playerid] == 1)
		{
			cucc = AdasVeteliCucc[playerid];
			if(PlayerInfo[player][pPcarkey] == NINCS)
				PlayerInfo[player][pPcarkey] = cucc;
			else if(PlayerInfo[player][pPcarkey2] == NINCS)
			{
				Msg(player, "Egy prémiumpont levonva");
				PlayerInfo[player][pPremiumPont]--;
				PlayerInfo[player][pPcarkey2] = cucc;
			}
			else if(PlayerInfo[player][pPcarkey3] == NINCS)
			{
				Msg(player, "Egy prémiumpont levonva");
				PlayerInfo[player][pPremiumPont]--;
				PlayerInfo[player][pPcarkey3] = cucc;
			}

			strmid(CarInfo[cucc][cOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
			CarInfo[cucc][cTulaj] = PlayerInfo[player][pID];
			//CarUpdate(cucc, "Tulaj='%s'", nev);
			CarInfo[cucc][cKulcsok][0] = NINCS;
			CarInfo[cucc][cKulcsok][1] = NINCS;
			CarUpdate(cucc, CAR_Owner, CAR_Tulaj, CAR_Kulcsok1, CAR_Kulcsok2);

			Cselekves(playerid, "aláírta az adásvételi szerzõdést");
			/*GiveMoney(playerid, -25000);
			GiveMoney(player, -25000);*/
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Aláírtad a szerzõdést. Eladtad a %d rendszámû jármûvedet, és a bank átutalta a pénzt (%dFt)", cucc, ara);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s aláírta a szerzõdést, ezáltal tied a %d rendszámú jármû, és átutaltad neki a pénzt (%dFt)", ICPlayerName(playerid), cucc, ara);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "Az adásvételi szerzõdés után fizettél %d Ft adót.", ara2);
			BizPenz(BIZ_ADASVETELI, ara2, player);
			PlayerInfo[player][pAccount] -= ara;
			if(PlayerInfo[playerid][pBankSzamlaSzam] != 0) PlayerInfo[playerid][pAccount] += ara;
			else GiveMoney(playerid, ara);
			
			new vetellog[256];
			format(vetellog, 256, "[/alair kocsi] - %s vett %s -tõl egy %s típusú jármûvet. %d v-s rendszám, %s Ft-ért",PlayerName(player),PlayerName(playerid),GetVehicleModelName(GetVehicleModel(CarInfo[cucc][cId])),cucc,FormatNumber( ara, 0, ',' ));
			EgyebLog(vetellog);
		}
		else if(AdasVeteliTipus[playerid] == 2)
		{
			cucc = PlayerInfo[playerid][pPbiskey];
			strmid(BizzInfo[cucc][bOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
			BizzInfo[cucc][bTulaj] = PlayerInfo[player][pID];
			//BizUpdate(cucc, "Tulaj='%s'", nev);
			BizUpdate(cucc, BIZ_Owner, BIZ_Tulaj);

			Cselekves(playerid, "aláírta az adásvételi szerzõdést");
			
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Aláírtad a szerzõdést. Eladtad a \"%s\"-t, és a bank átutalta a pénzt (%dFt)", BizzInfo[cucc][bMessage], ara);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s aláírta a szerzõdést, ezáltal tied a \"%s\", és átutaltad neki a pénzt (%dFt)", ICPlayerName(playerid), BizzInfo[cucc][bMessage], ara);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "Az adásvételi szerzõdés után fizettél %d Ft adót.", ara2);
			BizPenz(BIZ_ADASVETELI, ara2, player);
			PlayerInfo[player][pAccount] -= ara;
			if(PlayerInfo[playerid][pBankSzamlaSzam] != 0) PlayerInfo[playerid][pAccount] += ara;
			else GiveMoney(playerid, ara);
			
			new vetellog[256];
			format(vetellog, 256, "[/alair biznisz] - %s vett %s -tõl egy %s bizniszt, %s Ft-ért",PlayerName(player),PlayerName(playerid), BizzInfo[cucc][bMessage], FormatNumber( ara, 0, ',' ));
			EgyebLog(vetellog);
		}
		else if(AdasVeteliTipus[playerid] == 3)
		{
			cucc = AdasVeteliCucc[playerid];
			PlayerInfo[player][pGarazs] = cucc;

			strmid(GarazsInfo[cucc][hOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
			GarazsInfo[cucc][hTulajid] = PlayerInfo[player][pID];
			//HazUpdate(cucc, "Tulaj='%s'", nev);
			GarazsUpdate(cucc, GARAZS_Tulajid, GARAZS_Tulaj);
			PlayerInfo[playerid][pGarazs] = NINCS;

			Cselekves(playerid, "aláírta az adásvételi szerzõdést");
			
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Aláírtad a szerzõdést. Eladtad a Class Garázs %d,és a bank átutalta a pénzt (%dFt)", cucc, ara);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s aláírta a szerzõdést, ezáltal tied a Class Garázs %d, és átutaltad neki a pénzt (%dFt)", ICPlayerName(playerid), cucc, ara);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "Az adásvételi szerzõdés után fizettél %d Ft adót.", ara2);
			BizPenz(BIZ_ADASVETELI, ara2, player);
			PlayerInfo[player][pAccount] -= ara;
			if(PlayerInfo[playerid][pBankSzamlaSzam] != 0) PlayerInfo[playerid][pAccount] += ara;
			else GiveMoney(playerid, ara);
			
			new vetellog[256];
			format(vetellog, 256, "[/alair garázs] - %s vett %s -tõl egy garázst %d, %s Ft-ért",PlayerName(player),PlayerName(playerid), cucc, FormatNumber( ara, 0, ',' ));
			EgyebLog(vetellog);
			
		}
		else if(AdasVeteliTipus[playerid] == 4)
		{
			Cselekves(playerid, "aláírta az adásvételi szerzõdést");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Aláírtad a szerzõdést. Eladtad a ppontot, és a bank átutalta a pénzt (%dFt)", ara);
			PlayerInfo[playerid][pPremiumPont]--;
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s aláírta a szerzõdést, ezáltal tied 1 ppont, és átutaltad neki a pénzt (%dFt)", ICPlayerName(playerid), ara);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "Az adásvételi szerzõdés után fizettél %d Ft adót.", ara2);
			PlayerInfo[player][pPremiumPont]++;			
			PlayerInfo[player][pAccount] -= ara;
			BizPenz(BIZ_ADASVETELI, ara2, player);
			if(PlayerInfo[playerid][pBankSzamlaSzam] != 0) PlayerInfo[playerid][pAccount] += ara;
			else GiveMoney(playerid, ara);
			
			new vetellog[256];
			format(vetellog, 256, "[/alair ppont] - %s vett %s -tõl egy ppontott, %s Ft-ért",PlayerName(player),PlayerName(playerid), FormatNumber( ara, 0, ',' ));
			EgyebLog(vetellog);
		}
		else if(AdasVeteliTipus[playerid] == 5)
		{
			Cselekves(playerid, "aláírta az adásvételi szerzõdést");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Aláírtad a szerzõdést. Eladtad az aranyrudat, és a bank átutalta a pénzt (%sFt)", FormatInt(ara));
			PlayerInfo[playerid][pArany]--;
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s aláírta a szerzõdést, ezáltal tied 1 arany, és átutaltad neki a pénzt (%sFt)", ICPlayerName(playerid), FormatInt(ara));
			SendFormatMessage(player, COLOR_LIGHTBLUE, "Az adásvételi szerzõdés után fizettél %d Ft adót.", ara2);
			PlayerInfo[player][pArany]++;			
			PlayerInfo[player][pAccount] -= ara;
			BizPenz(BIZ_ADASVETELI, ara2, player);
			if(PlayerInfo[playerid][pBankSzamlaSzam] != 0) PlayerInfo[playerid][pAccount] += ara;
			else GiveMoney(playerid, ara);
			
			new vetellog[256];
			format(vetellog, 256, "[/alair arany] - %s vett %s -tõl egy aranyat, %s Ft-ért",PlayerName(player),PlayerName(playerid), FormatNumber( ara, 0, ',' ));
			EgyebLog(vetellog);
		}
		AdasVeteliNeki[playerid] = NINCS;
		AdasVeteliTipus[playerid] = NINCS;

		CorrectPlayerDatas(playerid);
		CorrectPlayerDatas(player);

		return 1;
	}

	if(egyezik(cmd, "/adasveteli") || egyezik(cmd, "/adásvételi"))
	{
		new player = GetClosestPlayer(playerid);

		if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "A közeledben nincs senki! 1");

		new kozelben = KozelbenValaki(player, 2.0);
		if(kozelben == NINCS) return Msg(playerid, "A közeledben nincs senki!");

		if(AdasVeteliNeki[player] != NINCS)
			return Msg(playerid, "Neki már adtak egy adásvételi szerzõdést!");

		if(params < 2)
		{
			Msg(playerid, "Használata: /adásvételi [mit] [mennyiért]");
			Msg(playerid, "Lehet: kocsi, ház, biznisz, garázs, ppont, arany", false);
			return 1;
		}

		new ara = strval(param[2]);
		if(ara < 400000)
			return Msg(playerid, "Persze, biztos ennyiért adod IRL is... -.-\"");
		if(ara > PlayerInfo[playerid][pAccount])
			return Msg(playerid, "Nincs ennyi pénz a bankszámládon!");

		if(egyezik(param[1], "ház") || egyezik(param[1], "haz"))
		{
			if(1 <= VanHaza(playerid) <= 2 && PremiumPont(playerid) < 1 || VanHaza(playerid) == 3) return Msg(playerid, "Már van házad!");

			new haz = IsAt(playerid, IsAt_Haz);
			if(haz == NINCS)
				return Msg(playerid, "Nem vagy egy házban sem!");

			if(PlayerInfo[player][pID] != HouseInfo[haz][hTulaj])
			{
				Msg(playerid, "Szép próba!");
				Msg(playerid, "[Vevõ]Bugot akarsz kihasználni?(Ház)");
				Msg(player, "Ez nem a te házad!");
				Msg(player, "[Tulaj]Bugot akarsz kihasználni?(Ház)");
				return 1;
			}

			if(VanHaza(playerid) == 1)
			{
				if(Biztos[playerid] != 1)
				{
					Msg(playerid, "Biztos vagy benne, hogy megveszed második vagy harmadik házadnak? Vehetsz belõle második vagy harmadik jármûvet is.");
					Msg(playerid, "Ha biztos vagy benne, írd be újra a parancsot!");
					Biztos[playerid] = 1;
					return 1;
				}
			}

			new szoveg[64];
			Format(szoveg, "átnyújtja az adásvételi szerzõdést neki: %s", ICPlayerName(player));
			Cselekves(playerid, szoveg);

			AdasVeteliNeki[player] = playerid;
			AdasVeteliTipus[player] = 0;
			AdasVeteliAra[player] = ara;
			AdasVeteliCucc[player] = haz;
			Msg(playerid, "Átadtad neki a szerõzdést.", false);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s megvenné a házadat %s Ftért - A szerzõdés aláírása: /alair - Visszautasítás: /cancel adasveteli", ICPlayerName(playerid), FormatNumber( ara, 0, ',' ));
		}
		else if(egyezik(param[1], "kocsi"))
		{
			if(PlayerInfo[playerid][pPcarkey] != NINCS)
				if(PlayerInfo[playerid][pPremiumPont] > 0 && PlayerInfo[playerid][pPcarkey2] != NINCS && PlayerInfo[playerid][pPcarkey3] != NINCS || PlayerInfo[playerid][pPremiumPont] < 1)
				return Msg(playerid, "Már van jármûved!");
			if(PlayerInfo[player][pPcarkey] == NINCS && PlayerInfo[player][pPcarkey2] == NINCS && PlayerInfo[player][pPcarkey3] == NINCS)
				return Msg(playerid, "Neki nincs saját jármûve!");

			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5)
				return Msg(playerid, "Nincs jármû a közeledben");

			new vs = IsAVsKocsi(kocsi);
			if(vs == NINCS)
				return Msg(playerid, "Ez nem V-s!");
			if(CarInfo[vs][cOwned] != 1)
				return Msg(playerid, "Ez egy kereskedõ jármû...");
			if(CarInfo[vs][cTulaj] != PlayerInfo[player][pID])
				return Msg(playerid, "Ez nem az övé!");

			if(PlayerInfo[playerid][pPcarkey] != NINCS)
			{
				if(Biztos[playerid] != 1)
				{
					Msg(playerid, "Biztos vagy benne, hogy megveszed második/harmadik jármûként? Vehetsz második/harmadik házat is. Ha biztos vagy benne, írd be újra a parancsot!");
					Biztos[playerid] = 1;
					return 1;
				}
				
			}
			new szoveg[64];
			Format(szoveg, "átnyújtja az adásvételi szerzõdést neki: %s", ICPlayerName(player));
			Cselekves(playerid, szoveg);

			AdasVeteliNeki[player] = playerid;
			AdasVeteliTipus[player] = 1;
			AdasVeteliAra[player] = ara;
			AdasVeteliCucc[player] = vs;
			Msg(playerid, "Átadtad neki a szerõzdést.", false);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s megvenné a jármûvedet %sFtért - A szerzõdés aláírása: /alair - Visszautasítás: /cancel adasveteli", ICPlayerName(playerid), FormatNumber( ara, 0, ',' ));
		}
		else if(egyezik(param[1], "biznisz"))
		{
			if(PlayerInfo[playerid][pPbiskey] != NINCS)
				return Msg(playerid, "Már van bizniszed!");
			if(PlayerInfo[player][pPbiskey] == NINCS)
				return Msg(playerid, "Neki nincs biznisze!");

			new szoveg[64];
			Format(szoveg, "átnyújtja az adásvételi szerzõdést neki: %s", ICPlayerName(player));
			Cselekves(playerid, szoveg);

			AdasVeteliNeki[player] = playerid;
			AdasVeteliTipus[player] = 2;
			AdasVeteliAra[player] = ara;
			Msg(playerid, "Átadtad neki a szerõzdést.", false);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s megvenné a bizniszedet %sFtért - A szerzõdés aláírása: /alair - Visszautasítás: /cancel adasveteli", ICPlayerName(playerid), FormatNumber( ara, 0, ',' ));
		}
		if(egyezik(param[1], "garázs") || egyezik(param[1], "garazs"))
		{
			if(PlayerInfo[playerid][pGarazs] != NINCS)
				return Msg(playerid, "Már van garázsod");
			else if(PlayerInfo[player][pGarazs] == NINCS)
				return Msg(playerid, "Neki nincs garázsa");
				
			new gar = PlayerInfo[player][pGarazs];

			new szoveg[64];
			Format(szoveg, "átnyújtja az adásvételi szerzõdést neki: %s", ICPlayerName(player));
			Cselekves(playerid, szoveg);

			AdasVeteliNeki[player] = playerid;
			AdasVeteliTipus[player] = 3;
			AdasVeteliAra[player] = ara;
			AdasVeteliCucc[player] = gar;
			Msg(playerid, "Átadtad neki a szerõzdést.", false);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s megvenné a garázsodat %s Ftért - A szerzõdés aláírása: /alair - Visszautasítás: /cancel adasveteli", ICPlayerName(playerid), FormatNumber( ara, 0, ',' ));
		}
		else if(egyezik(param[1],"ppont"))
		{
			if(PlayerInfo[player][pPremiumPont] < 1) return Msg(playerid, "Neki nincs ppontja");
			
			new szoveg[64];
			Format(szoveg, "átnyújtja az adásvételi szerzõdést neki: %s", ICPlayerName(player));
			Cselekves(playerid, szoveg);

			AdasVeteliNeki[player] = playerid;
			AdasVeteliTipus[player] = 4;
			AdasVeteliAra[player] = ara;
			Msg(playerid, "Átadtad neki a szerõzdést.", false);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s megvenné 1 ppontodat %s Ftért - A szerzõdés aláírása: /alair - Visszautasítás: /cancel adasveteli", ICPlayerName(playerid), FormatNumber( ara, 0, ',' ));
		}
		else if(egyezik(param[1],"arany"))
		{
			if(PlayerInfo[player][pArany] < 1) return Msg(playerid, "Neki nincs aranya");
			
			new szoveg[64];
			Format(szoveg, "átnyújtja az adásvételi szerzõdést neki: %s", ICPlayerName(player));
			Cselekves(playerid, szoveg);

			AdasVeteliNeki[player] = playerid;
			AdasVeteliTipus[player] = 5;
			AdasVeteliAra[player] = ara;
			Msg(playerid, "Átadtad neki a szerõzdést.", false);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "%s megvenné 1 aranyrudadat %s Ftért - A szerzõdés aláírása: /alair - Visszautasítás: /cancel adasveteli", ICPlayerName(playerid), FormatNumber( ara, 0, ',' ));
		}
		else
		{
			Msg(playerid, "Használata: /adásvételi [kitõl] [mit] [mennyiért]");
			Msg(playerid, "Lehet: kocsi, ház, biznisz, garázs", false);
			return 1;
		}

		return 1;
	}

	if(egyezik(cmd, "/tele"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;

		ShowPlayerDialog(playerid, DIALOG_GOTO_MENU, DIALOG_STYLE_LIST, "Admin Teleportálás", "LS\nSF\nEGYÉB", "OK!", "Mégse");
		Hazbanvan[playerid] = 0;
		return 1;
	}

	if(egyezik(cmd, "/msegit"))
	{
		if(Animban[playerid] == 0) return SendClientMessage(playerid, COLOR_YELLOW, "Nem szorulsz segítségre!");
		if(PlayerInfo[playerid][pLoves] > UnixTime) return Msg(playerid, "Lõtt sérült vagy magadnak nem tudod ellátni > /call 104");

		if(PlayerInfo[playerid][pKotszer] < 2) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs kötszered! Vegyél a 24/7-be! (2 kötszer kell!)");
		if(FloodMegprobal[playerid]>0)
		{
			SendFormatMessage(playerid, COLOR_YELLOW, "A-A ez túl sûrûn van. Legközelebb %d s múlva lehet!",FloodMegprobal[playerid]);
			return 1;
		}
		switch(random(2))
		{
			case 1:
			{
				if(PlayerInfo[playerid][pHamisNev] == 0)
				format(string, sizeof(string), "** %s megpróbálja bekötözni sérüléseit, és sikerül neki", ICPlayerName(playerid));
				else
				format(string, sizeof(string), "** %s megpróbálja bekötözni sérüléseit, és sikerül neki", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
				ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
				FloodMegprobal[playerid]=45;
				MunkaFolyamatban[playerid] = 1;
				GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Ellatod a sebeidet...", 60000, 3);
				TogglePlayerControllable(playerid, false);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				SetTimerEx("Munkavege", 60000, false, "ddd", playerid, M_MSEGIT, 0);
				PlayerInfo[playerid][pKotszer] -= 2;
				PlayerInfo[playerid][pMechSkill]++;
				Cselekves(playerid, "ellátja a sebeit...");
						
			}
			default:
			{
				if(PlayerInfo[playerid][pHamisNev] == 0)
				format(string, sizeof(string), "** %s megpróbálja bekötözni sérüléseit, de nem sikerül neki", ICPlayerName(playerid));
				else
				format(string, sizeof(string), "** %s megpróbálja bekötözni sérüléseit, de nem sikerül neki", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
				ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
				FloodMegprobal[playerid]=45;
				return 1;
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/csokiautomata") || egyezik(cmd,"/ca") || egyezik(cmd,"/csa"))
	{
		if(FloodCheck(playerid)) return 1;
		if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Kocsiban?");
		new ara = 250;
		if(IsAt(playerid, IsAt_Csokiautomata))
		{

			if(GetMoney(playerid) > ara)
			{
				Msg(playerid, "Vettél egy csokit");
				GiveMoney(playerid, -ara);
				BizPenz(BIZ_AUTOMATA, ara, playerid);

				SzuksegletAra(playerid,1,ara);
				
				Cselekves(playerid, "vett egy csokit az automatából");
			}
			else SendFormatMessage(playerid, COLOR_LIGHTRED,"Nincs elég pénzed! (%s Ft)",FormatInt(ara));
		}
		else Msg(playerid, "Nem vagy csokiautomatánál!");

		return 1;
	}

	if(egyezik(cmd, "/italautomata") || egyezik(cmd, "/ia"))
	{
		if(FloodCheck(playerid)) return 1;
		if(!IsPlayerInAnyVehicle(playerid))
		{
			new ara = 500;
			if(IsAt(playerid, IsAt_Italautomata))
			{
				if(GetMoney(playerid) > ara)
				{
					Msg(playerid, "Vettél egy üdítõt!");
					BizPenz(BIZ_AUTOMATA, ara, playerid);
					
					//SzuksegletAra(playerid,2,ara);
					Szukseglet(playerid, -15,1);
					
					Cselekves(playerid, "vett egy doboz üdítõt az automatából");
				}
				else Msg(playerid, "Nincs elég pénzed! (500Ft)");
			}
			else Msg(playerid, "Nem vagy italautomatánál!");
		}
		else Msg(playerid, "Kocsiban?");

		return 1;
	}

	if(egyezik(cmd, "/menu") || egyezik(cmd, "/menü"))
	{
		new etlap[512];
		if(IsPlayerInAnyVehicle(playerid))
			return 1;

		if(FloodCheck(playerid)) return 1;

		new car = GetClosestVehicle(playerid), model = GetVehicleModel(car);
		if(model == 588 || model == 423)
		{
			new Float:dist = GetPlayerDistanceFromVehicle(playerid, car);
			if(dist <= 3.5)
			{
				new sofor = KocsiSofor(car);
				if(sofor == NINCS)
					return Msg(playerid, "A kocsiba nincs senki!");

				if(GetMoney(playerid) < 1000) return Msg(playerid, "Minimum 1000Ft készpénznek kell lennie nálad");
				
				switch(model)
				{
					case 423:
					{
						idx=1;
						if(params < 1)
						{
							Msg2(playerid, "================================================[ Fagylalt Kocsi ]================================================", COLOR_WHITE);
							for(new id=1; id <= MenuAdatok[idx][1];id++)
							{
								
								if(id==1)
									format(etlap, sizeof(etlap),"Egy gömbös: ");
								if(id == 6)
								{
									SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
									format(etlap, sizeof(etlap),"Két gömbös: ");
								}
								if(id==11)
								{
									SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
									format(etlap, sizeof(etlap),"Három gömbös: ");
								}
								if(id==MenuAdatok[idx][1])
								{
									format(etlap, sizeof(etlap),"%s [%d]%s(%sFt)",etlap,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
									SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
									return 1;
								}
								format(etlap, sizeof(etlap),"%s [%d]%s(%sFt)",etlap,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
					
							}
						}

						if(!IsNumeric(param[1]))
							return Msg(playerid, "Ilyen nincs az étlapon!");

						new kaja = strval(param[1]);


						if(0 < kaja <= MenuAdatok[idx][1])
						{
							new ara = MenuArak[idx][kaja];
							new kajak[32];
							format(kajak,32,"vett egy %s fagylaltot.",MenuEtelek[idx][kaja]);
							Cselekves(playerid, kajak);
							if(GetMoney(playerid) < ara) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Nincs elég pénzed %s Ft kell!",FormatInt(ara));
							MoneyTrans(playerid, sofor, ara);
							
							new tipus=1;
							 
							if(0 < kaja <= MenuAdatok[idx][0])
								tipus=2;
								
							SzuksegletAra(playerid, tipus, ara);

						}
					
					}
					case 588:
					{
						idx=2;
						if(params < 1)
						{
						
							for(new id=1; id <= MenuAdatok[idx][1];id++)
							{
								
								if(id==1)
									format(etlap, sizeof(etlap),"Üdítõk: ");
								if(id == 4)
								{
									SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
									format(etlap, sizeof(etlap),"Ételek: ");
								}
								if(id==MenuAdatok[idx][1])
								{
									format(etlap, sizeof(etlap),"%s [%d]%s(%sFt)",etlap,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
									SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
									return 1;
								}
								format(etlap, sizeof(etlap),"%s [%d]%s(%sFt)",etlap,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
					
							}
						}

						if(!IsNumeric(param[1]))
							return Msg(playerid, "Ilyen nincs az étlapon!");

						new kaja = strval(param[1]);


						if(0 < kaja <= MenuAdatok[idx][1])
						{
							new ara = MenuArak[idx][kaja];
							new kajak[32];
							format(kajak,32,"vett egy %s -t.",MenuEtelek[idx][kaja]);
							Cselekves(playerid, kajak);
							if(GetMoney(playerid) < ara) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Nincs elég pénzed %s Ft kell!",FormatInt(ara));
							MoneyTrans(playerid, sofor, ara);
							new tipus=1;
							 
							if(0 < kaja <= MenuAdatok[idx][0])
								tipus=2;
								
							SzuksegletAra(playerid, tipus, ara);

						}
					}
				}
				return 1;
			}
		}

		new kajalda;
		if(IsAt(playerid, IsAt_McDonald)) kajalda = IsAt_McDonald, idx=0;
		else if(IsAt(playerid, IsAt_Pizzazo)) kajalda = IsAt_Pizzazo, idx=4;
		else if(IsAt(playerid, IsAt_Csirkes)) kajalda = IsAt_Csirkes, idx=5;
		else if(IsAt(playerid, IsAt_HotDog)) kajalda = IsAt_HotDog, idx=8;
		else if(IsAt(playerid, IsAt_Etterem)) kajalda = IsAt_Etterem, idx=7;
		else if(IsAt(playerid, IsAt_Fankos)) kajalda = IsAt_Fankos, idx=6;
		else if(IsAt(playerid, IsAt_VLA)) kajalda = IsAt_VLA, idx=3;
		else
			return Msg(playerid, "Ezen a helyen nem lehet enni.");

		switch(kajalda)
		{
			case IsAt_McDonald:
			{
				if(params != 1)
				{
					
					Msg2(playerid, "======================================[ Burger Shot ]======================================", 0xff6f00AA);
					
					for(new id=1; id <= MenuAdatok[idx][1];id++)
					{
							
						if(id==1)
							format(etlap, sizeof(etlap),"Italok: ");
						if(id == 7)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Italok: ");
						}
						if(id==12)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Burgerek: ");
						}
						if(id==17)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Burgerek: ");
						}
						if(id== 21)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Harapnivalók: ");
						}
						if(id== 24)	
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Harapnivalók: ");
						}
						if(id== 29)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Kedvencek: ");
						}
						if(id==MenuAdatok[idx][1])
						{
							format(etlap, sizeof(etlap),"%s [%d]%s(%sFt)",etlap,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							return 1;
						}	
						format(etlap, sizeof(etlap),"%s [%d]%s(%sFt)",etlap,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
					
					}
			
				}
				
				
				if(!IsNumeric(param[1]))
					return Msg(playerid, "Nincs ilyen az étlapon!");

				new kaja = strval(param[1]);
				
				if(0 < kaja <= MenuAdatok[idx][1])
				{
					new ara = MenuArak[idx][kaja];
					new kajak[32];
					format(kajak,32,"rendelt egy %s.",MenuEtelek[idx][kaja]);
					Cselekves(playerid, kajak);
					if(!BankkartyaFizet(playerid, ara)) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Nincs elég pénzed %s Ft kell!",FormatInt(ara));
					BizPenz(BIZ_MCDONALD,ara);
					
					new tipus=1;
					 
					if(0 < kaja <= MenuAdatok[idx][0])
						tipus=2;
						
					SzuksegletAra(playerid, tipus, ara);

				}
				else
					Msg(playerid, "Nincs ilyen az étlapon!");
	
			}
			case IsAt_VLA:
			{
				if(params != 1)
				{
					Msg2(playerid, "======================================[ BRASCO ÉTTEREM ]======================================", 0xff6f00AA);
					for(new id=1; id <= MenuAdatok[idx][1];id++)
					{
							
						if(id==1)
							format(etlap, sizeof(etlap),"Italok: ");
						if(id == 6)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Szeszes italok: ");
						}
						if(id==9)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Szeszes italok: ");
						}
						if(id==12)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Levesek: ");
						}
						if(id== 17)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Fõételek: ");
						}
						if(id== 22)	
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Fõételek: ");
						}
						if(id== 25)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",etlap);
							format(etlap, sizeof(etlap),"Fõételek: ");
						}
						if(id==MenuAdatok[idx][1])
						{
							format(etlap, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							return 1;
						}	
						format(string, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
					
					}

				}
				if(!IsNumeric(param[1]))
					return Msg(playerid, "Nincs ilyen az étlapon!");

				new kaja = strval(param[1]);
				
				if(0 < kaja <= MenuAdatok[idx][1])
				{
					new ara = MenuArak[idx][kaja];
					new kajak[32];
					format(kajak,32,"rendelt egy %s.",MenuEtelek[idx][kaja]);
					Cselekves(playerid, kajak);
					if(!BankkartyaFizet(playerid, ara)) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Nincs elég pénzed %s Ft kell!",FormatInt(ara));
					BizPenz(BIZ_VLA,ara);
					
					new tipus=1;
					 
					if(0 < kaja <= MenuAdatok[idx][0])
						tipus=2;
						
					SzuksegletAra(playerid, tipus, ara);

				}
				else
					Msg(playerid, "Nincs ilyen az étlapon!");
			}
			case IsAt_Pizzazo:
			{
				if(params != 1)
				{
				
					Msg2(playerid, "======================================[ Pizza Hut ]======================================", 0xff6f00AA);
					for(new id=1; id <= MenuAdatok[idx][1];id++)
					{
							
						if(id==1)
							format(string, sizeof(string),"Italok: ");
						if(id == 7)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Pizzák: ");
						}
						if(id==12)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Pizzák (Nagy): ");
						}
						if(id==17)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Desszertek: ");
						}
						if(id==MenuAdatok[idx][1])
						{
							format(string, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							return 1;
						}	
						format(string, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
					
					}
				}

				if(!IsNumeric(param[1]))
					return Msg(playerid, "Nincs ilyen az étlapon!");

				new kaja = strval(param[1]);
				if(0 < kaja <= MenuAdatok[idx][1])
				{
					new ara = MenuArak[idx][kaja];
					new kajak[32];
					format(kajak,32,"rendelt egy %s.",MenuEtelek[idx][kaja]);
					Cselekves(playerid, kajak);
					if(!BankkartyaFizet(playerid, ara)) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Nincs elég pénzed %s Ft kell!",FormatInt(ara));
					BizPenz(BIZ_PIZZA,ara);
					
					new tipus=1;
					 
					if(0 < kaja <= MenuAdatok[idx][0])
						tipus=2;
						
					SzuksegletAra(playerid, tipus, ara);

				}
				else
					Msg(playerid, "Nincs ilyen az étlapon!");
			}
			case IsAt_Csirkes:
			{
				if(params != 1)
				{
				
					for(new id=1; id <= MenuAdatok[idx][1];id++)
					{
							
						if(id==1)
							format(string, sizeof(string),"Italok: ");
						if(id == 5)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Étlap: ");
						}
						if(id==9)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Étlap: ");
						}
						if(id==14)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Desszertek: ");
						}
						if(id==MenuAdatok[idx][1])
						{
							format(string, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							return 1;
						}	
						format(string, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
					
					}
				}

				if(!IsNumeric(param[1]))
					return Msg(playerid, "Nincs ilyen az étlapon!");

				new kaja = strval(param[1]);
				
				if(0 < kaja <= MenuAdatok[idx][1])
				{
					new ara = MenuArak[idx][kaja];
					new kajak[32];
					format(kajak,32,"rendelt egy %s.",MenuEtelek[idx][kaja]);
					Cselekves(playerid, kajak);
					if(!BankkartyaFizet(playerid, ara)) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Nincs elég pénzed %s Ft kell!",FormatInt(ara));
					BizPenz(BIZ_CSIRKE,ara);

					new tipus=1;
					
					if(0 < kaja <= MenuAdatok[idx][0])
						tipus=2;
						
					SzuksegletAra(playerid, tipus, ara);

				}
				else
					Msg(playerid, "Nincs ilyen az étlapon!");
			}
			case IsAt_Fankos:
			{
				if(params != 1)
				{
					Msg2(playerid, "======================================[ FÁNKOS ]======================================", 0xff6f00AA);
					for(new id=1; id <= MenuAdatok[idx][1];id++)
					{
							
						if(id==1)
							format(string, sizeof(string),"Italok: ");
						if(id == 5)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Italok: ");
						}
						if(id==10)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Étlap: ");
						}
						if(id==13)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Étlap: ");
						}
						if(id==16)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Cukormázas: ");
						}
						if(id==MenuAdatok[idx][1])
						{
							format(string, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							return 1;
						}	
						format(string, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
					
					}
					

				}
				if(!IsNumeric(param[1]))
					return Msg(playerid, "Nincs ilyen az étlapon!");
				new kaja = strval(param[1]);
				
				if(0 < kaja <= MenuAdatok[idx][1])
				{
					new ara = MenuArak[idx][kaja];
					new kajak[32];
					format(kajak,32,"rendelt egy %s.",MenuEtelek[idx][kaja]);
					
					Cselekves(playerid, kajak);
					if(!BankkartyaFizet(playerid, ara)) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Nincs elég pénzed %s Ft kell!",FormatInt(ara));
					
					BizPenz(BIZ_FANKOS,ara);
				
					
					new tipus=1;
					
					if(0 < kaja <= MenuAdatok[idx][0])
						tipus=2;
				
					SzuksegletAra(playerid, tipus, ara);
				
				}
				else
					Msg(playerid, "Nincs ilyen az étlapon!");
			}
            case IsAt_Etterem:
			{
				if(params != 1)
				{
					Msg2(playerid, "======================================[ Étterem ]======================================", 0xff6f00AA);
					for(new id=1; id <= MenuAdatok[idx][1];id++)
					{
							
						if(id==1)
							format(string, sizeof(string),"Italok: ");
						if(id == 5)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Étlap: ");
						}
						if(id==11)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Étlap: ");
						}
						if(id==14)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Desszertek: ");
						}
						if(id==MenuAdatok[idx][1])
						{
							format(string, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							return 1;
						}	
						format(string, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
					
					}
					
					
				}

				if(!IsNumeric(param[1]))
					return Msg(playerid, "Nincs ilyen az étlapon!");

				new kaja = strval(param[1]);
				if(0 < kaja <= MenuAdatok[idx][1])
				{
					new ara = MenuArak[idx][kaja];
					new kajak[32];
					format(kajak,32,"rendelt egy %s.",MenuEtelek[idx][kaja]);
					Cselekves(playerid, kajak);
					if(!BankkartyaFizet(playerid, ara)) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Nincs elég pénzed %s Ft kell!",FormatInt(ara));
					BizPenz(BIZ_ETTEREM,ara);
					
					new tipus=1;
					 
					if(0 < kaja <= MenuAdatok[idx][0])
						tipus=2;
						
					SzuksegletAra(playerid, tipus, ara);

				}
				else
					Msg(playerid, "Nincs ilyen az étlapon!");
			}
			case IsAt_HotDog:
			{
				if(params != 1)
				{	
					Msg2(playerid, "====================[ HotDog Stand ]====================", COLOR_WHITE);
					for(new id=1; id <= MenuAdatok[idx][1];id++)
					{
							
						if(id == 1)
							format(string, sizeof(string),"Ételek: ");
						if(id == 5)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Ételek: ");
						}
						if(id == 7)
						{
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							format(string, sizeof(string),"Italok: ");
						}
						if(id == MenuAdatok[idx][1])
						{
							format(string, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
							SendFormatMessage(playerid,0xff6f00AA,"%s",string);
							return 1;
						}	
						format(string, sizeof(string),"%s [%d]%s(%sFt)",string,id,MenuEtelek[idx][id],FormatInt(MenuArak[idx][id]));
					
					}
					return 1;
				}
 
				if(!IsNumeric(param[1]))
					return Msg(playerid, "Nincs ilyen az étlapon!");

				new kaja = strval(param[1]);
				
		
				if(0 < kaja <= MenuAdatok[idx][1])
				{
					new ara = MenuArak[idx][kaja];
					new kajak[32];
					format(kajak,32,"Rendel egy %s-t.",MenuEtelek[idx][kaja]);
					Cselekves(playerid, kajak);
					if(GetMoney(playerid) < ara) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Nincs elég pénzed %s Ft kell!",FormatInt(ara));
					GiveMoney(playerid, -ara);
					BizPenz(BIZ_HOTDOG,ara);
					
					new tipus=2;
					 
					if(0 < kaja <= MenuAdatok[idx][0])
						tipus=1;
						
					SzuksegletAra(playerid, tipus, ara);

				}
			}
			default:
			{
				if(PlayerToPoint(15, playerid, -1863.6401,318.2285,-41.7493))
				{
					if(GetMoney(playerid) < 1000) return Msg(playerid, "Minimum 1000Ft készpénznek kell lennie nálad");
					
					new kaja = strval(param[1]);
					switch(kaja)
					{
						case 1: { Cselekves(playerid, "vett egy Coca Colát"); GiveMoney(playerid, -200); FrakcioSzef(FRAKCIO_RIPORTER, 200); Szukseglet(playerid, -3.0, 8.0); }
						case 2: { Cselekves(playerid, "vett egy Fantát"); GiveMoney(playerid, -200); FrakcioSzef(FRAKCIO_RIPORTER, 200); Szukseglet(playerid, -3.0, 8.0); }
						case 3: { Cselekves(playerid, "vett egy Ásványvizet");  GiveMoney(playerid, -100); FrakcioSzef(FRAKCIO_RIPORTER, 100); Szukseglet(playerid, -3.0, 8.0); }
						case 4: { Cselekves(playerid, "vett egy Szendvicset"); GiveMoney(playerid, -300); FrakcioSzef(FRAKCIO_RIPORTER, 300); Szukseglet(playerid, -20.0, 5.0); }
						case 5: { Cselekves(playerid, "vett egy Melegszendvicset");GiveMoney(playerid, -400); FrakcioSzef(FRAKCIO_RIPORTER, 400); Szukseglet(playerid, -20.0, 5.0); }
						case 6: { Cselekves(playerid, "vett egy Hamburgert");  GiveMoney(playerid, -350); FrakcioSzef(FRAKCIO_RIPORTER, 350); Szukseglet(playerid, -20.0, 5.0); }
						case 7: { Cselekves(playerid, "vett egy szelet sonkás pizzát"); GiveMoney(playerid, -400); FrakcioSzef(FRAKCIO_RIPORTER, 400); Szukseglet(playerid, -20.0, 5.0); }
						
						default:
						{
							Msg(playerid, "/menu [1-7]");
							Msg2(playerid, "Üdítõk: [1]Coca Cola(200Ft), [2]Fanta(200Ft), [3]Ásványvíz(100Ft)", COLOR_GREY);
							Msg2(playerid, "Kaják: [4]Szendvics(300Ft), [5]Melegszendvics(400Ft), [6]Hamburger(350Ft), [7]Sonkás pizzaszelet(400Ft)", COLOR_GREY);
						}
					}
				}
				else return Msg(playerid, "Itt nem lehet enni!");
			}
		}
		return 1;
	}

	if(egyezik(cmd, "/race"))
	{
		if(ResiVan[2]) return Msg(playerid,"Verseny letiltva restart miatt....");
		if(params < 1)
		{
			if(Admin(playerid, 6))
			{
				Msg(playerid, "========== Class Race Mod ==========", false);
				Msg(playerid, "Parancs: /race [funkció] [adat1] [adat2]", false);
				Msg(playerid, "Funkciók: load, start, join, build, go", false);
			}
			else
			{
				Msg(playerid, "========== Class Race Mod ==========", false);
				Msg(playerid, "Parancs: /race [funkció] [adat1] [adat2]", false);
				Msg(playerid, "Funkciók: join, cancel, status, tuning", false);
			}
			return 1;
		}

		new slot;

		if(egyezik(param[1], "tuning"))
		{
			if(PlayerRaceInfo[playerid][xVersenyen] == NINCS) return Msg(playerid, "Nem vagy versenyen");
			if(RaceStartnal(playerid) == NINCS) return Msg(playerid, "Nem vagy egy verseny startjánál sem, vagy a verseny már elindult");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return Msg(playerid, "Sofõrnek kell lenned!");

			ShowTuningDialog(playerid);
		}
		else if(egyezik(param[1], "load"))
		{
			if(!Admin(playerid, 6)) return 1;

			if(params < 3)
				Msg(playerid, "Parancs: /race load [slot] [versenynév]", false);
			else
			{
				slot = strval(param[2]);
				if(HibasRaceSlot(playerid, slot)) return 1;
				if(RaceInfo[slot][rStatusz] == RACE_INDUL || RaceInfo[slot][rStatusz] == RACE_ELINDULT) return Msg(playerid, "Ezen a sloton épp indítás folyik, vagy megy a verseny");

				SendFormatMessage( playerid, COLOR_WHITE, "\"%s\" betöltése...", param[3] );
				format(_tmpString, 128, "SELECT * FROM %s WHERE snev='%s'", SQL_DB_Verseny, param[3]);
				doQuery( _tmpString, SQL_LOAD_RACE, playerid, slot );
			}
		}
		else if(egyezik(param[1], "start"))
		{
			if(!Admin(playerid, 6)) return 1;

			if(params < 4)
				return Msg(playerid, "Parancs: /race start [slot] [hány perc mulva] [nevezési díj] [szorzó - opcionális]", false);
			else
			{
				slot = strval(param[2]);
				new ido = strval(param[3]);
				new dij = strval(param[4]);
				if(HibasRaceSlot(playerid, slot)) return 1;

				if(RaceInfo[slot][rStatusz] == RACE_NINCS) return Msg(playerid, "A verseny nincs betöltve!");
				if(RaceInfo[slot][rStatusz] == RACE_INDUL) return Msg(playerid, "A verseny most indul!");
				if(RaceInfo[slot][rStatusz] == RACE_ELINDULT) return Msg(playerid, "A verseny már el van indítva!");
				if(RaceInfo[slot][rStatusz] == RACE_EPITES) return Msg(playerid, "Ez a verseny építés alatt van!");
				if((ido < 1 || ido > 180) && ido != -1) return Msg(playerid, "Minimum 1perc, és maximum 3 óra!");

				if(dij > 500000) return Msg(playerid,"Túl magas ár! Max 500 000 Ft");
				if(params > 4)
				{
					new Float:szorzo = floatstr(param[5]);
					if(szorzo < 1.0 || szorzo > 8.1)
						return Msg(playerid, "Minimum 1.0 és max 8.0!", false);
					RaceInfo[slot][rSzorzo] = szorzo;
				}
				else
					RaceInfo[slot][rSzorzo] = 1.0;

				RaceInfo[slot][rDij] = dij;

				if(ido == -1) RaceInfo[slot][rIndul] = 10;
				else RaceInfo[slot][rIndul] = ido*60;

				RaceInfo[slot][rNyeremeny] = 0;
				RaceInfo[slot][rBeert] = 0;
				RaceInfo[slot][rStatusz] = RACE_INDUL;
				RaceInfo[slot][rHelyezes] = {NINCS, NINCS, NINCS, NINCS, NINCS, NINCS};
				RaceInfo[slot][rVersenyIdo] = NINCS;
				RaceInfo[slot][rVw] = RACE_VIRTUAL_WORLD;

				SendClientMessageToAll(COLOR_WHITE, "========== Class City Racing Team ==========");
				SendFormatMessageToAll(COLOR_LIGHTBLUE, "Új verseny indul %s múlva", FormatTime(ido*60));
				SendFormatMessageToAll(COLOR_LIGHTBLUE, "Név: %s | Nevezési díj: %dFt | Nyereményszorzó: %.1f*", RaceInfo[slot][rNev], dij, RaceInfo[slot][rSzorzo]);
				SendFormatMessageToAll(COLOR_LIGHTBLUE, "A verseny helyének megtalálásához használd a GPS-ed (( /gps race %d )), majd ha odaértél csatlakozz! (( /race join ))", slot);
				SendClientMessageToAll(COLOR_LIGHTBLUE,"A versenyre RP-sen gyülekezetek és ne álljátok el a forgalmat! /race join után áljatok be!");
				
				foreach(Jatekosok, x)
				{
					if(PlayerInfo[x][pCrossido] > 0) return 1;
					if(PlayerRaceInfo[x][xVersenyen] != NINCS || PlayerInfo[x][pCrossido] > 0 /*|| LegalisSzervezetTagja(x)*/) continue;

					if(RaceInfo[slot][rCP] > 0)
						SetPlayerRaceCheckpoint(x, 0, RaceStart[slot][0], RaceStart[slot][1], RaceStart[slot][2], RaceCP[slot][0][0], RaceCP[slot][0][1], RaceCP[slot][0][2], RACECPMERET);
					else
						SetPlayerRaceCheckpoint(x, 0, RaceStart[slot][0], RaceStart[slot][1], RaceStart[slot][2], RaceCel[slot][0], RaceCel[slot][1], RaceCel[slot][2], RACECPMERET);
				}
				
				return 1;
			}
		}
		else if(egyezik(param[1], "cancel"))
		{
			if(PlayerRaceInfo[playerid][xVersenyen] == NINCS) return Msg(playerid, "Nem vagy versenyen");
			

			if(GetPlayerVirtualWorld(playerid) == 0) return Msg(playerid, "Nem vagy versenyen");

			Msg(playerid, "Visszaléptél a versenytõl");
			Cselekves(playerid, "visszalépett a versenytõl");

			VersenyVege(playerid);
			return 1;
		}
		else if(egyezik(param[1], "join"))
		{
			/*if(params < 2) return Msg(playerid, "/race join [1-2]"), Msg(playerid, "1: Közös vw-be rak | 2: Külön vw-be rak");
			new vw=strval(param[2]);
			if(vw != 1 && vw != 2) return Msg(playerid, "/race join [1-2]");*/
			
			if(AdminDuty[playerid] == 1)
			{
				if(PlayerInfo[playerid][pAdmin] <= 5)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Admin szolgálatban vagy, ne versenyezz !!");
					return 1;
				}
				else SendClientMessage(playerid, COLOR_LIGHTBLUE, "Admin szolgálatban vagy, ha elfelejtetted lépj ki!!");
			}

			if(PlayerRaceInfo[playerid][xVersenyen] != NINCS)
				return Msg(playerid, "Versenyen vagy!");

			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return Msg(playerid, "Csak sofõrként versenyezhetsz!");

			if(IsAPlane(veh)) return Msg(playerid, "Repülõvel nem versenyezhetsz!");
			if(OnDuty[playerid] == 1)return Msg(playerid, "Szolgálatban nem versenyezhetsz!");
			new race = RaceStartnal(playerid);
			if(race == -1)
				return Msg(playerid, "Nem vagy egy verseny startjánál sem");
			else
			{
				new ido = RaceInfo[race][rIndul];

				if(ido > 300)
					return Msg(playerid, "Csak az inditást megelõzõ 5 percben csatlakozhatsz!");

				new dij = RaceInfo[race][rDij];
				if(GetMoney(playerid) < dij && PlayerInfo[playerid][pBankSzamla] == 0 || GetMoney(playerid) < dij && PlayerInfo[playerid][pBankSzamla] > 0 && PlayerInfo[playerid][pAccount] < dij)
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "Nincs elég pénzed a nevezésre! A nevezés ára %dFt", RaceInfo[race][rDij]);
					return 1;
				}
				

				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Csatakoztál a versenyhez! A verseny %s múlva indul", FormatTime(RaceInfo[race][rIndul]));
				Crosscp[playerid] = 0;
				PlayerRaceInfo[playerid][xVersenyen] = race;
				PlayerRaceInfo[playerid][xCP] = RACE_CP_START;

				if(GetVehicleComponentInSlot(veh, CARMODTYPE_NITRO) == 1010) PlayerRaceTuning[playerid][tNitroVolt] = true;
				if(GetVehicleComponentInSlot(veh, CARMODTYPE_HYDRAULICS) == 1087) PlayerRaceTuning[playerid][tHidrVolt] = true;

				RaceInfo[race][rNyeremeny] += floatround(float(dij) * RaceInfo[race][rSzorzo]);
				if(GetMoney(playerid) >= dij) GiveMoney(playerid, -dij);
				else
				{
					PlayerInfo[playerid][pAccount] -= dij;
					Msg(playerid, "A pénz a számládról vonódott le");
				}

				foreach(Jatekosok, x)
				{
					if(PlayerRaceInfo[x][xVersenyen] == PlayerRaceInfo[playerid][xVersenyen] && x != playerid)
					{
						SetPlayerMarkerForPlayer(x, playerid, COLOR_INVISIBLE);
						SetPlayerMarkerForPlayer(playerid, x, COLOR_INVISIBLE);
					}
				}

				//PlayerRaceInfo[playerid][xKocsi] = veh;
				//Msg(playerid, "FIGYELMEZTETÉS! Csak ezzel a kocsival versenyezhetsz! Ha más kocsival akarsz versenyezni, jelentkezz újra! (( /race cancel ))");

				Cselekves(playerid, "jelentkezett a versenyre");

				SetPlayerRaceCP(playerid);
				
				new kocsi = GetPlayerVehicleID(playerid);
				
				//if(vw==1)
				//{
				SetPlayerVirtualWorld(playerid, RACE_VIRTUAL_WORLD);
				SetVehicleVW(kocsi, RACE_VIRTUAL_WORLD);
				//}	
				/*else
				{
					RaceInfo[race][rVw]++;
					SetPlayerVirtualWorld(playerid, RaceInfo[race][rVw]);
					SetVehicleVW(kocsi, RaceInfo[race][rVw]);
				}*/
				return 1;
			}
		}
		else if(egyezik(param[1], "build"))
		{
			if(!IsScripter(playerid)) return 1;
			if(PlayerRaceInfo[playerid][xVersenyen] != NINCS)
				return Msg(playerid, "Versenyen vagy!");
			else
			{
				if(params < 3)
				{
					Msg(playerid, "Parancs: /race build [slot] [alparancs]", false);
					Msg(playerid, "Alparancsok: startcreate, stopcreate, edit, start, finish, cp, next, back, save", false);
					Msg(playerid, "Info: Startcreate > Az építés elkezdése | Deletecreate > Az építés befejezése (nem menti) | Edit > Egy létezõ pálya szerkesztése", false);
					return 1;
				}
				slot = strval(param[2]);
				if(HibasRaceSlot(playerid, slot)) return 1;
				if(RaceInfo[slot][rStatusz] != RACE_NINCS && RaceInfo[slot][rStatusz] != RACE_BETOLTVE && RaceInfo[slot][rStatusz] != RACE_EPITES && RaceInfo[slot][rStatusz] != RACE_VEGE)
					return Msg(playerid, "Ezen a sloton épp verseny indul, vagy verseny indult");

				if(egyezik(param[3], "startcreate"))
				{
					if(PlayerRaceInfo[playerid][xEpites] != NINCS)
						return Msg(playerid, "Már építesz!");

					PlayerRaceInfo[playerid][xEpites] = slot;
					PlayerRaceInfo[playerid][xEpitesCP] = 0;
					for(new c = 0; c < RACEMAXCP; c++)
					{
						RaceCP[slot][c][0] = 0.0;
						RaceCP[slot][c][1] = 0.0;
						RaceCP[slot][c][2] = 0.0;
					}

					Msg(playerid, "Elkezdted az építést! Parancsok: start, finish, cp, next, back, save - Perjel nélkül írandó!", false);
				}
				else if(egyezik(param[3], "stopcreate"))
				{
					if(PlayerRaceInfo[playerid][xEpites] == NINCS)
						return Msg(playerid, "Nem építesz!");

					PlayerRaceInfo[playerid][xEpites] = NINCS;
					Msg(playerid, "Befejezted az építést!");
				}
				else if(egyezik(param[3], "edit"))
				{
					if(RaceInfo[slot][rStatusz] != RACE_BETOLTVE)
						return Msg(playerid, "Ezen a RaceSloton nincs betöltve Race pálya!");

					PlayerRaceInfo[playerid][xEpites] = slot;
					PlayerRaceInfo[playerid][xEpitesCP] = RaceInfo[slot][rCP];

					SendFormatMessage(playerid, COLOR_LIGHTRED, "[Slot %d] %s szerkesztése elkezdõdött - CPk száma: %d", slot, RaceInfo[slot][rSaveNev], RaceInfo[slot][rCP]);
					Msg(playerid, "Parancsok: start, finish, next, back, save - Perjel nélkül írandó!", false);
				}
			}
		}
		else if(egyezik(param[1], "stop"))
		{
			if(!Admin(playerid, 6)) return 1;

			if(params < 2)
				return Msg(playerid, "Parancs: /race stop [slot]", false);
			else
			{
				slot = strval(param[2]);
				if(HibasRaceSlot(playerid, slot)) return 1;

				new statusz = RaceInfo[slot][rStatusz];
				if(statusz != RACE_ELINDULT && statusz != RACE_INDUL) return Msg(playerid, "Ezen a sloton nincs verseny elindítva!");

				RaceInfo[slot][rStatusz] = RACE_VEGE;
				SendClientMessage(playerid, COLOR_LIGHTRED, "Verseny megállítva!");
				foreach(Jatekosok, x)
				{
					if(PlayerRaceInfo[x][xVersenyen] == slot)
					{
						PlayerRaceInfo[x][xVersenyen] = NINCS;
						DisablePlayerRaceCheckpoint(x);
						new kocsi = GetPlayerVehicleID(x);
						SetPlayerVirtualWorld(x, 0);
						SetVehicleVW(kocsi, 0);
					}
				}

				new uzenet[128];
				if(statusz == RACE_ELINDULT)
					format(uzenet, 128, "A %s versenynek vége", RaceInfo[slot][rNev]);
				else
					format(uzenet, 128, "%s verseny lefújva", RaceInfo[slot][rNev]);

				RaceInfo[slot][rVersenyIdo] = NINCS;
				foreach(Jatekosok, x)
				{
					if(PlayerRaceInfo[x][xVersenyen] == slot /*|| !LegalisSzervezetTagja(x)*/)
					{
						SendClientMessage(x, COLOR_WHITE, "========== Class City Racing Team ==========");
						SendClientMessage(x, COLOR_WHITE, uzenet);
					}
				}

				return 1;
			}
		}
		else if(egyezik(param[1], "status"))
		{
			/*if(LegalisSzervezetTagja(playerid) && !Admin(playerid, 1337) && PlayerRaceInfo[playerid][xVersenyen] == NINCS)
				return Msg(playerid, "Ezt sajnos nem használhatod, inkább az utcát figyeld, hogy van-e gyorshajtó ;)");*/

			SendClientMessage(playerid, COLOR_WHITE, "========== Class City Racing Team ==========");
			new talalt;
			for(new x = 0; x < RACESLOTOK; x++)
			{
				if(RaceInfo[x][rStatusz] == RACE_INDUL)
				{
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "(( /gps race %d )) %s - Nevezési díj: %dFt - Státusz: Indítás alatt (%s)", x, RaceInfo[x][rNev], RaceInfo[x][rDij], FormatTime(RaceInfo[x][rIndul]));
					talalt++;
				}
				else if(RaceInfo[x][rStatusz] == RACE_ELINDULT)
				{
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "(( /gps race %d )) %s - Státusz: Elindult", x, RaceInfo[x][rNev], RaceInfo[x][rDij]);
					talalt++;
				}
			}
			if(!talalt)
				Msg(playerid, "Jelenleg nem zajlik verseny", false);
		}
		else if(egyezik(param[1], "go"))
		{
			if(!Admin(playerid, 6)) return 1;
			if(sscanf(param[2], "d", slot)) return Msg(playerid, "/race go [slot]");
			if(HibasRaceSlot(playerid, slot)) return 1;
			if(RaceInfo[slot][rStatusz] == RACE_NINCS) return Msg(playerid, "A verseny nincs betöltve!");
			if(RaceInfo[slot][rStatusz] == RACE_EPITES) return Msg(playerid, "A verseny nincs betöltve!");
			SetPlayerPos(playerid, RaceStart[slot][0], RaceStart[slot][1], RaceStart[slot][2]);
			SendFormatMessage(playerid, COLOR_GREEN, "Sikeresen teleportáltál a(z) %s startjához.", RaceInfo[slot][rNev]);
			return 1;
		}
		else
		{
			if(IsScripter(playerid))
			{
				Msg(playerid, "========== Class Race Mod ==========", false);
				Msg(playerid, "Parancs: /race [funkció] [adat1] [adat2]", false);
				Msg(playerid, "Funkciók: load, start, join, build, go", false);
			}
			else
			{
				Msg(playerid, "========== Class Race Mod ==========", false);
				Msg(playerid, "Parancs: /race [funkció]", false);
				Msg(playerid, "Funkciók: join, status", false);
			}
			return 1;
		}

		return 1;
	}
	
	if(egyezik(cmd, "/jelvény2") || egyezik(cmd, "/jelveny2"))
	{
		if(!LMT(playerid, FRAKCIO_FBI) && PlayerInfo[playerid][pHitman] < 1) return Msg(playerid,"Nem használhatod ezt a parancsot.");
		if(params < 1) return Msg(playerid, "/jelvény2 [Felmutat / Megnéz] [FrakcióID] [RangID]");
		new player = ReturnUser(param[2]);
		if(egyezik(param[1], "felmutat"))
		{
			if(params < 4) return Msg(playerid, "/jelvény2 Felmutat [Játékos Neve / ID] [FrakcióID] [RangID]");
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
			if(player == playerid) return Msg(playerid, "Ha megakarod nézni a jelvényed: ('/jelvény2 Megnéz')");
			if(GetDistanceBetweenPlayers(playerid,player) > 3) return Msg(playerid, "Õ nincs a közeledben!");
			
			new sznev = strval(param[3])-1;
			if(!IsRendvedelmiFrakcio(strval(param[3]))) return Msg(playerid, "Csak rendvédelmis jelvényt mutathatsz fel!");
			new rang = strval(param[4]);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Felmutattad a jelvényed neki: %s", PlayerName(player));
			SendClientMessage(player, COLOR_LIGHTBLUE, "==========[Jelvény]==========");
			if(PlayerInfo[playerid][pHamisNev] != 0)
			{
				SendFormatMessage(player, COLOR_GRAD2,"%s", PlayerInfo[playerid][pHamisNev]);
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", Szervezetneve[sznev][0]);
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", Rangok[sznev][rang]);
			}
			else
			{
				SendFormatMessage(player, COLOR_GRAD2, "%s", PlayerName(playerid));
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", Szervezetneve[sznev][0]);
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", Rangok[sznev][rang]);
			}
			Cselekves(playerid, "felmutatta a jelvényét valakinek...");
			return 1;
		}
		if(egyezik(param[1], "megnéz") || egyezik(param[1], "megnez"))
		{
			if(params < 3) return Msg(playerid, "/jelvény2 megnéz [FrakcióID] [RangID]");
			new sznev = strval(param[2])-1;
			if(!IsRendvedelmiFrakcio(strval(param[2]))) return Msg(playerid, "Csak rendvédelmi szervezet!");
			new rang = strval(param[3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "==========[Jelvény]==========");
			if(PlayerInfo[playerid][pHamisNev] != 0)
			{
				SendFormatMessage(playerid, COLOR_GRAD2,"%s", PlayerInfo[playerid][pHamisNev]);
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* %s", Szervezetneve[sznev][0]);
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* %s", Rangok[sznev][rang]);
			}
			else
			{
				SendFormatMessage(playerid, COLOR_GRAD2, "%s", PlayerName(playerid));
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* %s", Szervezetneve[sznev][0]);
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* %s", Rangok[sznev][rang]);
			}
			Cselekves(playerid, "megnézte a jelvényét...");
			return 1;
		}
		return 1;
	}
	if(egyezik(cmd, "/gps"))
	{
	    //if(Bortonben(playerid)) return true;
		new f[32], hazszam = NINCS;

		if(params >= 1)
			strmid(f, param[1], 0, strlen(param[1]));
		if(params >= 2)
		{
			if(strlen(param[2]) < 5)
				hazszam = strval(param[2]);
		}
		//if(Munkaban[playerid] > NINCS) return Msg(playerid, "Elõbb fejezd be a munkát!");
		if(params < 1)
		{
   			SendClientMessage(playerid, COLOR_LIGHTRED, "** A használatához GPS lokátor kell! Használata: /gps [név]");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Bekapcsolás: /gps be | /gps lista | Kikapcsolás: /gps ki | Törlés: /gps töröl");
			return 1;
		}

  		if(PlayerInfo[playerid][pLokator] == 0)
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs GPS Lokátorod...");
			return 1;
		}
		if(egyezik(f,"lista"))
		{
			if(params < 2) return Msg(playerid,"/gps lista [személyes / egyéb / bizniszek]");
			if(egyezik(param[2], "személyes") || egyezik(param[2], "szemelyes") )
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "==============GPS - személyes lista==============");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "/gps [funkció]");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* ház [házszám], házam [1/2], kocsim [1/2]");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Fõbb helyek: LSvárosháza, SFvárosháza, kórház, Munkaközpont, LSPD, LSbank, SFbank, SSS, posta");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Szórakozóhelyek: alhambra, pigpen, kocsma, paintball(pb), groveclub, yakuzabar");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Egyéb: fort, lottózó, parkoló, farm, fûnyírók, kukásautók, Oktató állomás, Pizza hut, Benzinkutak");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Egyéb: LSSzerelõKözpont, SFSzerelõKözpont");
				SendClientMessage(playerid, COLOR_LIGHTRED, "_____ A parancsok ékezet nélkül is mûködnek _____");
				return 1;
			}
			/*if(egyezik(param[2], "boltok"))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "==============GPS - boltok lista==============");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "/gps [funkció]");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* (24/7)LS Boltok: bolt1, bolt2, bolt3, bolt4, bolt5");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* (24/7)SF Boltok: sfbolt1, sfbolt2, sfbolt3, sfbolt4");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* autosbolt, LSzöldséges LSfegyverbolt");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Egyéb: turkey autókereskedõ, autokerhq");
				SendClientMessage(playerid, COLOR_LIGHTRED, "_____ A parancsok ékezet nélkül is mûködnek _____");
				return 1;
			}*/
			if(egyezik(param[2],"egyéb"))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "==============GPS - egyéb lista==============");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "/gps [funkció]");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Gyárak: LSgyár, SFgyár");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Drog/Mati: LSmûanyag, SFmûanyag, LSdrog, SFdrog");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Verseny: race [versenyszám]");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Edzõtermek: Box, Cobra");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Szolgáltatás: Üzemanyagtöltõ, atm");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Helyszín: Temetõ, Templom");
				SendClientMessage(playerid, COLOR_LIGHTRED, "_____ A parancsok ékezet nélkül is mûködnek _____");
				return 1;
			}
			if(egyezik(param[2], "bizniszek"))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "==============GPS - bizniszek lista==============");
				new bizirat[256];
				new eddig=0;
				for(new h = 0; h < MAXBIZ; h++)
				{
						format(bizirat, sizeof(bizirat), "%s [%d] %s | ", bizirat, h, BizzInfo[h][bBNev]);
						eddig++;
						if(eddig == 5)
						{
							SendClientMessage(playerid, COLOR_LIGHTGREEN, bizirat);
							eddig = 0;
							format(bizirat, sizeof(bizirat), "");
						}
				}
				if(eddig > 0)
					SendClientMessage(playerid, COLOR_LIGHTGREEN, bizirat);

				SendClientMessage(playerid, COLOR_LIGHTRED, "_____ A parancsok számokkal mûködnek_____");
				return 1;
			}
		}
		if(egyezik(f, "be"))
		{
		    PlayerInfo[playerid][pGPS] = true;
		 	GameTextForPlayer(playerid, "~g~GPS Lokator bekapcsolva", 3000, 1);
			Cselekves(playerid, "bekapcsolta a GPS-ét.", 1);
			Radar(playerid, true);

		    return 1;
	 	}
		if(!PlayerInfo[playerid][pGPS])
			return SendClientMessage(playerid, COLOR_LIGHTRED, "A GPS Lokátorod nincs bekapcsolva!");
			
		if(egyezik(f, "szeméttelep") || egyezik(f, "szemettelep"))
		{
			SetPlayerCheckpoint(playerid, -586.7446,-1501.2863,10.3250, 2.5);
			return 1;
		}
		
		if(egyezik(f, "atm"))
		{

			//SendClientMessage(playerid, COLOR_WHITE, "====[ Legközelebbi ATM ]=====");
			new Float:PPos[3], Float:legkozelebb = 5000.0, Float:tav;
			GetPlayerPos(playerid, PPos[0], PPos[1], PPos[2]);
			new kozel;
			
			
			
			for(new a = 0; a < MAX_ATM; a++)
			{
				tav = GetDistanceBetweenPoints(PPos[0], PPos[1], PPos[2],  ATM[a][aPosX], ATM[a][aPosY], ATM[a][aPosZ]);
				if(tav < legkozelebb && ATM[kozel][aVw] == GetPlayerVirtualWorld(playerid) && ATM[kozel][aVw] < 1)
				{
					legkozelebb = tav;
					kozel = a;
				}
			}

			if(legkozelebb == 5000.0) return Msg(playerid, "Nincs találat");
			SendFormatMessage(playerid, COLOR_YELLOW,"[GPS] ATM(%d) megjelölve!",kozel);

			SetPlayerCheckpoint(playerid,  ATM[kozel][aPosX], ATM[kozel][aPosY], ATM[kozel][aPosZ], 2);
			return 1;
	
		}
		if(egyezik(f, "biznisz"))
		{
			new i = strval(param[2]);
			if(i >= MAXBIZ)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Szerintem elírtál valamit. Csak 0-%d-ig vannak", MAXBIZ-1);
				return 1;
			}
			SetPlayerCheckpoint(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],2.5);
			return 1;
		}
		if(egyezik(f, "bolt"))
		{
			if(params < 2) return Msg(playerid,"/gps bolt [ID]");
			
			new i = strval(param[2]);
			if(i >= MAX_BOLTOK)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Szerintem elírtál valamit. Csak 0-%d-ig vannak", MAX_BOLTOK-1);
				return 1;
			}
			if (Boltok[i][boltBejaratPosX] < 1 && Boltok[i][boltBejaratPosY] < 1 && Boltok[i][boltBejaratPosZ] < 1)
				return Msg(playerid,"Nem létezõ bolt / Nincs beállított bejárati pozíció!");
			SetPlayerCheckpoint(playerid,Boltok[i][boltBejaratPosX],Boltok[i][boltBejaratPosY],Boltok[i][boltBejaratPosZ],2.5);
			return 1;
		}
		
		if(egyezik(f, "aruleado") || egyezik(f, "áruleadó"))
		{
			if(params < 2) return Msg(playerid,"/gps áruleadó [ID]");
			
			new i = strval(param[2]);
			if(i >= MAX_BOLTOK)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Szerintem elírtál valamit. Csak 0-%d-ig vannak", MAX_BOLTOK-1);
				return 1;
			}
			if (Boltok[i][boltAruPosX] < 1 && Boltok[i][boltAruPosY] < 1 && Boltok[i][boltAruPosZ] < 1)
				return Msg(playerid,"Nem létezõ bolt / Nincs beállított leadási pozíció!");
			SetPlayerCheckpoint(playerid,Boltok[i][boltAruPosX],Boltok[i][boltAruPosY],Boltok[i][boltAruPosZ],Boltok[i][boltAruTav]);
			return 1;
		}

	 	if(egyezik(f, "ki"))
		{
		    PlayerInfo[playerid][pGPS] = false;
		 	GameTextForPlayer(playerid, "~r~GPS Lokator kikapcsolva", 3000, 1);
			DisablePlayerCheckpoint(playerid);
			Cselekves(playerid, "kikapcsolta a GPS-ét.", 1);
			Radar(playerid, false);
		    return 1;
	 	}

		if(egyezik(f, "pos") || egyezik(f, "poz"))
		{
			if(PlayerInfo[playerid][pJailed] == 3 && PlayerInfo[playerid][pJailTime] > 0)
				SeeBan(playerid, 0, NINCS, "Csalás AJailban!");
			
			new Float:x, Float:y, Float:z;
			if(sscanf(pms, "{s[32]}fff", x, y, z))
				return Msg(playerid, "Használata: /gps poz [x] [y] [z]");

			if( !( -3000 < x < 3000 && -3000 < y < 3000 && -3000 < z < 3000 ) )
				return Msg(playerid, "A koordináták -3000 és 3000 között lehetnek!");

			SetPlayerCheckpoint(playerid, x, y, z, 1.0);

			return 1;
		}

		if(egyezik(f, "race"))
		{
			if(params < 2)
				return Msg(playerid, "Parancs: /gps race [szám]", false);

			new rslot = strval(param[2]);
			if(rslot < 0 || rslot >= RACESLOTOK)
				return Msg(playerid, "Nincs ilyen verseny! Nézd meg a versenyeket > /race status", false);
			if(RaceInfo[rslot][rStatusz] != RACE_INDUL)
				return Msg(playerid, "Nincs ilyen verseny elindítva! Nézd meg a versenyeket > /race status", false);

			//SetPlayerRaceCheckpoint(playerid, 2, RaceStart[slot][0], RaceStart[slot][1], RaceStart[slot][2], 0.0, 0.0, 0.0, RACECPMERET);
			SetPlayerCheckpoint(playerid, RaceStart[rslot][0], RaceStart[rslot][1], RaceStart[rslot][2], RACECPMERET);

			return 1;
		}
		if(egyezik(f, "benzinkút"))
		{
			if(params < 2)
				return Msg(playerid, "Parancs: /gps benzinkút [szám]", false);

			new kut = strval(param[2]);
			if(kut < 0 || kut > MAX_BENZINKUT)
				return Msg(playerid, "Hibás szám", false);
			
			SetPlayerCheckpoint(playerid, BenzinKutak[kut][bPosX], BenzinKutak[kut][bPosY], BenzinKutak[kut][bPosZ], BenzinKutak[kut][bTav]);

			return 1;
		}
		if(egyezik(f, "töröl") || egyezik(f, "torol"))
		{
			DisablePlayerCheckpoint(playerid);
			DisablePlayerRaceCheckpoint(playerid);//verseny cp-t is törölje
		    SendClientMessage(playerid, COLOR_YELLOW2, "A jel törölve!");
		    return 1;
	 	}
	 	if(egyezik(f,"favago") || egyezik(f,"favagó"))
		{
			SetPlayerCheckpoint(playerid, -1970.8292, -2432.2322, 30.6250, 2.5);
		    return 1;
		}
		if(egyezik(f,"berszef") || egyezik(f,"bérszéf"))
		{
			SetPlayerCheckpoint(playerid, 1247.654, -1564.028, 13.595, 3.0);
		    return 1;
		}
		if(egyezik(f,"munkakozpont") || egyezik(f,"munkaközpont") || egyezik(f,"munkaközpont"))
		{
			SetPlayerCheckpoint(playerid, 1081.3394,-1696.8140,13.5469, 3.0);
		    return 1;
		}
		if(egyezik(f,"autokerhq"))
		{
			SetPlayerCheckpoint(playerid, 1357.3328,-1478.9192,13.1113, 2.5);
		    return 1;
		}
		if(egyezik(f, "autókereskedõ") || egyezik(f, "autokereskedo") || egyezik(f, "autokereskedõ"))
		{
		    SetPlayerCheckpoint(playerid, 2123.584, -1136.486, 25.054, 2.5);
		    return 1;
		}
		if(egyezik(f, "templom"))
		{
		    SetPlayerCheckpoint(playerid, 2225.129, -1433.471, 24.991, 2.5);
		    return 1;
		}
		if(egyezik(f, "temetõ") || egyezik(f, "temeto"))
		{
		    SetPlayerCheckpoint(playerid, 822.618, -1102.975, 25.798, 2.5);
		    return 1;
		}
		if(egyezik(f,"yakuzabar"))
		{
			SetPlayerCheckpoint(playerid, 1-1968.4196,684.7263,46.5683,2.5);
			return 1;
		}
		if(egyezik(f, "sss") || egyezik(f,"SSS"))
		{
			SetPlayerCheckpoint(playerid, 1422.7107,-1639.8097,13.5469, 2.5);
			return 1;
		}
		if(egyezik(f,"groveclub"))
		{
			SetPlayerCheckpoint(playerid, 2422.521,1882.303,13.546,2.5);
			return 1;
		}
		if(egyezik(f, "turkey"))
		{
		    SetPlayerCheckpoint(playerid, 1971.5785,-1824.4080,13.5469, 2.5);
		    return 1;
		}

		if(egyezik(f, "LSmûanyag") || egyezik(f, "LSmuanyag"))
		{
		    SetPlayerCheckpoint(playerid, 90.869789, -184.411666, 1.484375, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "SFmûanyag") || egyezik(f, "SFmuanyag"))
		{
		    SetPlayerCheckpoint(playerid, -1688.1918,-17.7540,3.5547, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "LShegy") || egyezik(f, "LSdrog"))
		{
		    SetPlayerCheckpoint(playerid, 2575.528564, -634.857604, 135.663269, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "LSgyár") || egyezik(f, "LSgyar"))
		{
		    SetPlayerCheckpoint(playerid, 2770.6802,-1628.3042,12.1775, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "box"))
		{
		    SetPlayerCheckpoint(playerid, 2229.7043,-1721.6252,13.5648, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "cobra"))
		{
		    SetPlayerCheckpoint(playerid, -2269.5808,-156.0327,35.3203, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "SFdrog"))
		{
		    SetPlayerCheckpoint(playerid, -1713.2587,577.2521,26.1177, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "SFgyár") || egyezik(f, "SFgyar"))
		{
		    SetPlayerCheckpoint(playerid, -2730.4705,73.9224,4.3359, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "parkoló") || egyezik(f, "parkolo"))
		{
		    SetPlayerCheckpoint(playerid, 1105.812255,-1740.831054,13.410290, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "lottózó") || egyezik(f, "lottozo"))
		{
		    SetPlayerCheckpoint(playerid, 1631.565063,-1171.809692,24.078125, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "SFlottózó") || egyezik(f, "SFlottozo"))
		{
		    SetPlayerCheckpoint(playerid, -2719.9099,127.7292,7.0391, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "lsszerelõközpont") || egyezik(f, "lsszerelokozpont"))
		{
		    SetPlayerCheckpoint(playerid, 2047.8831,-2093.6958,13.5469, 2.5);
		    return 1;
	 	}
		
		if(egyezik(f, "sfszerelõközpont") || egyezik(f, "sfszerelokozpont"))
		{
		    SetPlayerCheckpoint(playerid, -1842.9476,147.6892,15.1172, 2.5);
		    return 1;
	 	}
		
		if(egyezik(f, "posta"))
		{
		    SetPlayerCheckpoint(playerid, -1863.1637,-132.6410,11.8984, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "fort"))
		{
		    SetPlayerCheckpoint(playerid, 215.038833, 1862.826782, 13.140625, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "LSzöldséges") || egyezik(f, "LSzoldseges"))
		{
		    SetPlayerCheckpoint(playerid, 2089.889160, -1929.772338, 13.539438, 2.5);
		    return 1;
	 	}

	 	/*if(strcmp(f, "LVzöldséges", true) == 0 || strcmp(f, "LVzoldseges", true) == 0)
		{
		    SetPlayerCheckpoint(playerid, 2534.393798, 2290.933593, 10.820312, 2.5);
		    return 1;
	 	}*/
		if(egyezik(f, "pizzahut"))
		{
			SetPlayerCheckpoint(playerid, 2103.7661,-1806.6370,13.5547, 2.5);
			return 1;
		}
		if(egyezik(f, "bolt5"))
		{
		    SetPlayerCheckpoint(playerid, 1352.155395, -1758.993896, 13.507812, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "bolt4"))
		{
		    SetPlayerCheckpoint(playerid, 1000.178466, -920.070983, 42.328125, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "bolt3"))
		{
		    SetPlayerCheckpoint(playerid, 1929.136352, -1776.348022, 13.546875, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "bolt2"))
		{
		    SetPlayerCheckpoint(playerid, 1315.415283, -897.763916, 39.578125, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "bolt1"))
		{
		    SetPlayerCheckpoint(playerid, 1833.166992, -1842.764892, 13.578125, 2.5);
		    return 1;
	 	}

	  	if(egyezik(f, "sfbolt4"))
		{
		    SetPlayerCheckpoint(playerid, -2649.8318,375.9586,6.1563, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "sfbolt3"))
		{
		    SetPlayerCheckpoint(playerid, -1675.8326,431.8753,7.1797, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "sfbolt2"))
		{
		    SetPlayerCheckpoint(playerid, -2032.6232,161.5709,29.0461, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "sfbolt1"))
		{
		    SetPlayerCheckpoint(playerid, -2419.4363,969.6541,45.2969, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "Triadkaszino"))
		{
		    SetPlayerCheckpoint(playerid, 1022.5274, -1122.4132, 23.8713, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "paintball") || egyezik(f, "pb"))
		{
		    SetPlayerCheckpoint(playerid, 1310.138427, -1367.927124, 13.542382, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "kocsma"))
		{
		    SetPlayerCheckpoint(playerid, 2309.525146, -1644.028930, 14.827047, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "pigpen"))
		{
		    SetPlayerCheckpoint(playerid, 2421.187500, -1220.471313, 25.483589, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "alhambra"))
		{
		    SetPlayerCheckpoint(playerid, 1835.928222, -1683.014282, 13.369256, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "LSfegyverbolt"))
		{
		    SetPlayerCheckpoint(playerid, 1791.430053, -1165.298095, 23.828125, 2.5);
		    return 1;
	 	}

	  	if(egyezik(f, "lsbank"))
		{
		    SetPlayerCheckpoint(playerid, 1462.376342, -1012.533569, 26.843750, 2.5);
		    return 1;
	 	}

	  	if(egyezik(f, "sfbank"))
		{
		    SetPlayerCheckpoint(playerid, -1942.973876, 556.252868, 35.171875, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "lspd"))
		{
		    SetPlayerCheckpoint(playerid, 1554.461669, -1675.288452, 16.195312, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "Vagoskaszino"))
		{
		    SetPlayerCheckpoint(playerid, 2164.952148, 2164.281982, 10.820312, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "kórház") || egyezik(f, "korhaz"))
		{
		    SetPlayerCheckpoint(playerid, 1173.374511, -1323.456665, 15.392642, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "LSvárosháza") || egyezik(f, "LSvaroshaza"))
		{
		    SetPlayerCheckpoint(playerid, 1480.788696, -1771.192138, 18.795755, 2.5);
		    return 1;
	 	}

	 	if(egyezik(f, "SFvárosháza") || egyezik(f, "SFvaroshaza"))
		{
		    SetPlayerCheckpoint(playerid, -2765.3301,375.4839,6.3359, 2.5);
		    return 1;
	 	}

	  	/*if(egyezik(f, "SFPD"))
		{
		    SetPlayerCheckpoint(playerid, -1617.0458,682.9008,7.1875, 2.5);
		    return 1;
	 	}*/

	 	if(egyezik(f, "farm"))
		{
		    SetPlayerCheckpoint(playerid, -167.4673,-1349.6238,3.2951, 3.5);
		    return 1;
	 	}
		if(egyezik(f, "oktatók") || egyezik(f, "oktatok"))
		{
			SetPlayerCheckpoint(playerid, 982.402,-1414.989,13.222, 3.5);
			return 1;
		}

		if(egyezik(f, "kamionhq") ||egyezik(f, "kamion"))
		{
			SetPlayerCheckpoint(playerid, 922.0941,-1219.3480,16.5397, 3.5);
			return 1;
		}

		if(egyezik(f, "nav"))
		{
			SetPlayerCheckpoint(playerid, 779.0226,-1385.9999,13.2612, 3.5);
			return 1;
		}

		if(egyezik(f, "úttisztító") || egyezik(f, "uttisztito"))
		{
			SetPlayerCheckpoint(playerid, 1951.7169,-2122.3640,13.1110, 3.5);
			return 1;
		}
	 	/*if(strcmp(f, "LSHotel", true) == 0)
		{
		    SetPlayerCheckpoint(playerid, 2232.6213,-1159.8348,25.8906, 3.5);
		    return 1;
	 	}

	 	if(strcmp(f, "SFHotel", true) == 0)
		{
		    SetPlayerCheckpoint(playerid, -2425.4722,337.6092,37.0020, 3.5);
		    return 1;
	 	}*/

	 	if(egyezik(f, "fûnyírók") || egyezik(f, "fûnyírok") || egyezik(f, "funyirok"))
		{
		    SetPlayerCheckpoint(playerid, 1960.6050,-1243.9281,19.9550, 3.5);
		    return 1;
	 	}

		if(egyezik(f, "matifel"))
		{
		    SetPlayerCheckpoint(playerid, 2068.9170, -1588.9677, 13.4914, 2.5);
		    return 1;
	 	}
		if(egyezik(f, "autosbolt") || egyezik(f,"autósbolt"))
		{
		    SetPlayerCheckpoint(playerid, 1334.284, -1861.813, 13.546, 2.5);
		    return 1;
	 	}
		if(egyezik(f, "matile"))
		{
		    SetPlayerCheckpoint(playerid, 379.0809, -2020.8119, 7.8301, 2.5);
		    return 1;
	 	}

		if(egyezik(f, "ház") || egyezik(f, "haz"))
		{
			if(params < 2 || hazszam == NINCS)
				return SendClientMessage(playerid, COLOR_GREY, "Használata: /gps ház [házszám]");

			if(hazszam < 0 || hazszam >= sizeof(HouseInfo))
			{
				SendClientMessage(playerid, COLOR_RED, "Nincs ilyen ház");
				return 1;
			}

			if(HouseInfo[hazszam][Van] != 1)
			{
			    SendClientMessage(playerid, COLOR_RED, "Nincs ilyen ház");
			    return 1;
			}

		    SetPlayerCheckpoint(playerid, HouseInfo[hazszam][hEntrancex], HouseInfo[hazszam][hEntrancey], HouseInfo[hazszam][hEntrancez], 3);
			return 1;
		}
		if(egyezik(f, "garázs") || egyezik(f, "garazs"))
		{
			if(params < 2 || hazszam == NINCS)
				return SendClientMessage(playerid, COLOR_GREY, "Használata: /gps garázs [cím]");

			if(hazszam < 0 || hazszam >= sizeof(GarazsInfo))
			{
				SendClientMessage(playerid, COLOR_RED, "Nincs ilyen garázs!");
				return 1;
			}

			if(GarazsInfo[hazszam][Van] != 1)
			{
			    SendClientMessage(playerid, COLOR_RED, "Nincs ilyen garázs!");
			    return 1;
			}

		    SetPlayerCheckpoint(playerid, GarazsInfo[hazszam][hEntrancex], GarazsInfo[hazszam][hEntrancey], GarazsInfo[hazszam][hEntrancez], 3);
			return 1;
		}
		if(egyezik(f, "házam") || egyezik(f, "hazam"))
		{
			if(PlayerInfo[playerid][pPhousekey] != NINCS)
				SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez], 4.0);
			else
				GameTextForPlayer(playerid, "~w~Nincs hazad", 3000, 1);
		    return 1;
	 	}

	 	if(egyezik(f, "kocsim"))
	 	{
			new
				kocsi = PlayerInfo[playerid][pPcarkey],
				kocsi2 = PlayerInfo[playerid][pPcarkey2],
				kocsi3 = PlayerInfo[playerid][pPcarkey3];

			new kell = 1;
			if(kocsi2 != NINCS || kocsi3 != NINCS)
			{
				if(params < 2)
					return Msg(playerid, "Használata: /gps kocsim [1/2/3]");

				kell = strval(param[2]);
				if(kell != 1 && kell != 2 && kell != 3)
					return Msg(playerid, "Használata: /gps kocsim [1/2/3]");
			}
			if(kell == 1)
			{
				if(kocsi == NINCS)	return Msg(playerid, "Nincs kocsid!");
				if(Lopott[kocsi] == true) return Msg(playerid, "A kocsidat ellopták!");
				new Float:x, Float:y, Float:z, vw;
				vw = GetVehicleVirtualWorld(CarInfo[kocsi][cId]);

				if(vw >= 10)
				{
                    if(vw-10 < 0 || vw-10 >= MAXGARAZS || GarazsInfo[vw-10][Van] != 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A jármûved egy már törölt vagy frakció garázsban van! Szólj egy Adminnak ha nem találod!");

				    x = GarazsInfo[vw - 10][hEntrancex];
					y = GarazsInfo[vw - 10][hEntrancey];
					z = GarazsInfo[vw - 10][hEntrancez];
				} else
					GetVehiclePos(CarInfo[kocsi][cId], x, y, z);

				SetPlayerCheckpoint(playerid, x, y, z, 5);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Megjelölve a radaron! ((Jármû VW: %d))", vw);
			}
			else if(kell == 2)
			{
				if(kocsi2 == NINCS)	return Msg(playerid, "Nincs két kocsid!");
				if(Lopott[kocsi2] == true) return Msg(playerid, "A kocsidat ellopták!");
				new Float:x, Float:y, Float:z, vw;
				vw = GetVehicleVirtualWorld(CarInfo[kocsi2][cId]);

				if(vw >= 10)
				{
				    if(vw-10 < 0 || vw-10 >= MAXGARAZS || GarazsInfo[vw-10][Van] != 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A jármûved egy már törölt vagy frakció garázsban van! Szólj egy Adminnak ha nem találod!");

				    x = GarazsInfo[vw - 10][hEntrancex];
					y = GarazsInfo[vw - 10][hEntrancey];
					z = GarazsInfo[vw - 10][hEntrancez];
				} else
					GetVehiclePos(CarInfo[kocsi2][cId], x, y, z);

				SetPlayerCheckpoint(playerid, x, y, z, 5);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Megjelölve a radaron! ((Jármû VW: %d))", vw);
			}
			else if(kell == 3)
			{
				if(kocsi3 == NINCS)	return Msg(playerid, "Nincs három kocsid!");
				if(Lopott[kocsi3] == true) return Msg(playerid, "A kocsidat ellopták!");
				new Float:x, Float:y, Float:z, vw;
				vw = GetVehicleVirtualWorld(CarInfo[kocsi3][cId]);

				if(vw >= 10)
				{
				    if(vw-10 < 0 || vw-10 >= MAXGARAZS || GarazsInfo[vw-10][Van] != 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A jármûved egy már törölt vagy frakció garázsban van! Szólj egy Adminnak ha nem találod!");

				    x = GarazsInfo[vw - 10][hEntrancex];
					y = GarazsInfo[vw - 10][hEntrancey];
					z = GarazsInfo[vw - 10][hEntrancez];
				} else
					GetVehiclePos(CarInfo[kocsi3][cId], x, y, z);

				SetPlayerCheckpoint(playerid, x, y, z, 5);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Megjelölve a radaron! ((Jármû VW: %d))", vw);
			}
			else
				GameTextForPlayer(playerid, "~w~Nincs kocsid", 3000, 1);
			return 1;
	 	}

	 	else
	 	{
	 	    SendClientMessage(playerid, COLOR_LIGHTRED, "Érvénytelen paraméter! Ellenõrizd, hogy helyesen írtad-e be.");
		}
		return 1;
	}


	if(egyezik(cmd, "/adminalnevbe"))
	{
		if(!IsHitman(playerid) && !Admin(playerid, 1337) && !IsScripter(playerid) || IsHitman(playerid) && !Admin(playerid, 1) && !IsScripter(playerid)) return 1;
		if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;
		if(params != 1) return 1;

		new be = strval(param[1]);

		if(be == 0)
		{
			PlayerInfo[playerid][pAdminAlnevBe] = 0;
			Msg(playerid, "Admin álnév kikapcsolva");
		}
		else if(be == 1)
		{
			PlayerInfo[playerid][pAdminAlnevBe] = 1;
			Msg(playerid, "Admin álnév bekapcsolva");
		}

		return 1;
	}
	
	if(egyezik(cmd,"/felhatalmazás") || egyezik(cmd,"/felhatalmazas")) //Felhatalmazás rendszer by Ryan
	{
		new player = ReturnUser(param[2]);
		if(params < 2) return Msg(playerid,"/felhatalmazas [Ad/Felmutat][JátékosID/NévRészlet]");
		if(egyezik(param[1],"ad"))
        {
			if(GetDistanceBetweenPlayers(playerid, player) > 3.0) return Msg(playerid,"Õ nincs a közeledben.");
			if(IsPlayerNPC(player)) return Msg(playerid,"NPC-nek? Nem-nem.");
			if(!LMT(playerid, FRAKCIO_FBI) && PlayerInfo[playerid][pHitman] < 1) return Msg(playerid,"Nem használhatod ezt a parancsot.");
			if(Felhatalmazva[player] == 0)
		    {	
				if(player == INVALID_PLAYER_ID) return Msg(playerid,"Nincs ilyen játékos!");
		        if(params < 3) return Msg(playerid,"/felhatalmazas ad [JátékosID/NévRészlet] [Oka]");
				new result[128];
				if(sscanf(pms, "{s[2]}rs[128]", player, result))
				// Magyarázat Amoséknak: A megjegyzés jelbe {} az 2-es azt jelzi hogy az elsõ paramér 2 karakterbõl áll és ki kell hagyni (vagyis az "ad" -ot)
				//Mivel ez: {} a kihagyás jele az sscanfba. az r jelenti a játékost, az s pedig string. Ez a két sor a lentebbi zöld helyett van. nézzétek mennyivel rövidebb.
					return SendClientMessage(playerid, COLOR_WHITE, "/felhatalmazas ad [JátékosID/NévRészlet] [Oka]");
				if(strlen(result) > 128) return Msg(playerid, "Maximum 128 karakter hossz! Fogalmazz röviden!");
	            /*strtok(cmdtext, idx); strtok(cmdtext, idx);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;

				if(strlen(result) > 128) return Msg(playerid, "Maximum 128 karakter hossz! Fogalmazz röviden!");*/
				strmid(Felhatalmazas[player], result, 0, strlen(result));
				Felhatalmazva[player] = 1;
				SendFormatMessage(playerid,COLOR_GREEN,"Felhatalmaztad %s-t! Felhat. Tartalma: %s",PlayerName(player),result);
		    }
		    else
		    {
		        Msg(playerid,"Elvetted a felhatalmazását!");
		        Msg(player,"Elvették a felhatalmazásod!");
		        Felhatalmazva[player] = 0;
		    }
		}
		else if(egyezik(param[1],"felmutat"))
		{
		    if(params < 2) return Msg(playerid,"/felhatalmazas felmutat [JátékosID/NévRészlet]");
		    if(Felhatalmazva[playerid] == 0) return Msg(playerid,"Nincs felhatalmazásod semmire!");
			if(IsPlayerNPC(player)) return Msg(playerid,"Miért mutogatod az NPC-nek? Kell a baj?");
			if(GetDistanceBetweenPlayers(playerid, player) > 3.0) return Msg(playerid,"Õ nincs a közeledben.");
		    Msg2(player,"==========[ F.B.I. Felhatalmazás ]==========");
		    SendFormatMessage(player,COLOR_YELLOW,"%s",Felhatalmazas[playerid]);
			Msg(playerid,"Felmutattad a felhatalmazásod!");
			Cselekves(playerid, "felmutatott egy felhatalmazást");
		}
	}

	if(egyezik(cmd, "/adminalnev"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsHitman(playerid) && !Admin(playerid, 1337) && !IsScripter(playerid) || IsHitman(playerid) && !Admin(playerid, 1) && !IsScripter(playerid)) return 1;

		    new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /adminalnev [Álneved]");

			if(strlen(result) > 20)
			{
				Msg(playerid, "Maximum 20 karakter!");
				return 1;
			}

			if((strfind("clint", result) != NINCS || strfind("eastwood", result) != NINCS) && !IsClint(playerid))
				return SeeKick(playerid, "Nem veheted fel Clint nevét!");

			strmid(PlayerInfo[playerid][pAdminAlnev], result, 0, strlen(result), 25);
			format(string, sizeof(string), "Az új álneved mostantól %s!", result);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		return 1;
	}

	if(egyezik(cmd, "/adatok"))
	{
		if(Logged(playerid) || Registered(playerid)) return Msg(playerid, "Te már regisztrálva vagy!");
		if(RegAdatok[playerid]) return Msg(playerid, "Már kitöltötted!");

		Msg(playerid, "==============================");
		Msg(playerid, "Nemed? (fiú/lány)", false);
		RegistrationStep[playerid] = 1;

		return 1;
	}

    if(egyezik(cmd, "/aranks"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;

		if(params != 1) return Msg(playerid, "/aranks [leaderes meló]");

		new rangnev[32], rang, leader, melo;

		leader = strval(param[1]) - 1;
		melo = strval(param[1]);

		if(leader < 0 || leader >= sizeof(Szervezetneve))
			return Msg(playerid, "Nincs ilyen szervezet!");
			
		SendFormatMessage(playerid, COLOR_WHITE, "========== %s (%d)==========", Szervezetneve[leader][0], FrakcioOnline(melo));

		foreach(Jatekosok, a)
		{
			if(!IsPlayerConnected(a) || IsPlayerNPC(a) || PlayerInfo[a][pMember] != (leader+1) || IsClint(a) || IsTerno(a)) continue;

			rang = PlayerInfo[a][pRank];

			if(rang <= 0) rangnev = Rangok[leader][0];
			else if(rang >= 1 && rang <= 12) rangnev = Rangok[leader][rang];
			else rangnev = Rangok[leader][12];
			SendFormatMessage(playerid, COLOR_GREY, "[%d]%s - %s (%d)", a, PlayerName(a), rangnev, rang);
		}

		SendFormatMessage(playerid, COLOR_WHITE, "========== %s (%d)==========", Szervezetneve[leader][0], FrakcioOnline(melo));

		return 1;
	}

	if(egyezik(cmd, "/reg"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
		if(params != 2) return Msg(playerid, "/reg [player] [regelhet igen/nem]");

		new player = ReturnUser(param[1]);

		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos");
		if(Logged(player)) return Msg(playerid, "Már regisztrált");

		if(egyezik(param[2], "igen"))
		{
			if(RegEngedely[player] == 1)
				return Msg(playerid, "Már van engedélye!");

			RegEngedely[player] = 1;
			Msg(player, "Admin megengedte, hogy regisztrálj. Használd a /register parancsot a regisztrációhoz.");
			Msg(playerid, "Engedélyezted a regisztrálást a játékosnak.");
			Format(string, "<< %s engedélyezte a regisztrációt neki %s  >>", AdminName(playerid), PlayerName(player));
			ABroadCast(COLOR_LIGHTRED, string, 1);
			return 1;
		}
		if(egyezik(param[2], "nem"))
		{
			if(RegEngedely[player] == 0)
				return Msg(playerid, "Nincs engedélye!");

			RegEngedely[player] = 0;
			Msg(player, "Admin viszavonta a regisztrációs lehetõségedet.");
			Msg(playerid, "Vissza utasítottad a regisztrálsát a játékosnak.");
			Format(string, "<< %s tiltotta a regisztrációt neki %s  >>", AdminName(playerid), PlayerName(player));
			ABroadCast(COLOR_LIGHTRED, string, 1);
			return 1;
		}
		else
			Msg(playerid, "/reg [player] [regelhet igen/nem]");

		return 1;
	}

	if(egyezik(cmd, "/hazcheck"))
	{
		if(params != 1) return 1;

		for(new x = 0; x <= strval(param[1]); x++)
		{
			if(HouseInfo[x][Van] == 0)
				SendFormatMessage(playerid, COLOR_WHITE, "%d nincs!", x);
		}

		return 1;
	}

	if(egyezik(cmd, "/felújítás") || egyezik(cmd, "/felujitas"))
	{
		if(!AMT(playerid, MUNKA_EPITESZ)) return Msg(playerid, "Nem vagy építész!");

		if(params != 1) return Msg(playerid, "Használata: /felújítás [Játékos]");

		new player;
		player = ReturnUser(param[1]);


		new haz = HaznalVan(playerid);
		if(haz == -1)
			return Msg(playerid, "Nem vagy a ház bejáratánál!");

		if(!Online(HouseInfo[haz][hOwner]))
			return Msg(playerid, "Nincs fennt a ház tulaja!");
			
		if(player != INVALID_PLAYER_ID)
		{
			format(string, sizeof(string), "* Felajánlottad hogy felújítod a házat.");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Felajánlották hogy felújítják a házad! (/accept felujitas) hogy elfogadd.");
			SendClientMessage(player, COLOR_LIGHTBLUE, string);
			FelujitasElfogadas[player] = playerid;
		}
		return 1;
	}
	if(egyezik(cmd, "/válasz") || egyezik(cmd, "/valasz") || egyezik(cmd, "/vsz") || egyezik(cmd, "/vá"))
	{
		if(!Admin(playerid, 1) && !IsAS(playerid) && !IsScripter(playerid)) return 1;

		new kinek, uzenet[128];
		if(sscanf(pms, "rs[128]", kinek, uzenet)) return Msg(playerid, "/válasz [játékos] [üzenet]");
		if(kinek == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");

		if(!Admin(kinek) && !IsAS(kinek))
		{
			if(ValaszokEll[playerid][kinek]<1)
			{
				PlayerInfo[playerid][pValaszok]++;
				Valasz[playerid]++;
				StatInfo[playerid][pVA]++;
			}
		}
		if(strlen(uzenet) < 10 || ValaszokEll[playerid][kinek]>0)
			ValaszokEll[playerid][kinek]=15;

		new szint = PlayerInfo[playerid][pAdmin];

		SendFormatMessage(kinek, COLOR_LIGHTGREEN, "%s %s: %s",AdminRangNev(playerid), AdminName(playerid), uzenet);

		Format(tmp, "%s válaszolt neki: %s | Üzenet: %s", AdminName(playerid), Nev(kinek), uzenet);
		foreach(Jatekosok, i)
		{
			if(PlayerInfo[i][pAdmin] >= 1 && TogVa[i] == 0)
				SendClientMessage(i, COLOR_YELLOW, tmp);

			if(IsAS(playerid) && szint < 1 && IsAS(i) && PlayerInfo[i][pAdmin] < 1 && TogVa[i] == 0)
				SendClientMessage(i, COLOR_YELLOW, tmp);
		}
		if(TogVa[playerid] == 1)
			SendClientMessage(playerid, COLOR_YELLOW, tmp);
		if(IsAS(playerid) && szint < 1 && TogVa[playerid] == 1)
			SendClientMessage(playerid, COLOR_YELLOW, tmp);

		return 1;
	}
	if(egyezik(cmd, "/válaszok") || egyezik(cmd, "/valaszok"))
	{
		if(!Admin(playerid, 5)) return 1;
		if(params < 1) return Msg(playerid, "/válaszok [mostani/mindig/játékos/törlés]");
		if(egyezik(param[1], "mindig"))
		{
			SendClientMessage(playerid, COLOR_YELLOW, "===============[Válaszok]===============");
			foreach(Jatekosok, x)
			{
					
				if(Admin(x, 1) && !IsAllDenaro(x) && !IsAllTerno(x) || IsAS(x))
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[%d]%s | Válaszok: %d", x, PlayerName(x), PlayerInfo[x][pValaszok]);
			}
			SendClientMessage(playerid, COLOR_YELLOW, "===============[Válaszok]===============");
		}
		else if(egyezik(param[1], "játékos") || egyezik(param[1],"jatekos"))
		{
			if(params < 2) return Msg(playerid,"Hazsnálata:/válaszok játékos [Játékos / ID]");
			new jatekos = ReturnUser(param[2]);
			if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "%s | Válaszok: %d",PlayerName(jatekos), PlayerInfo[jatekos][pValaszok]);
		}
		else if(egyezik(param[1], "mostani"))
		{
			SendClientMessage(playerid, COLOR_YELLOW, "===============[Válaszok]===============");
			foreach(Jatekosok, x)
			{
				if(Admin(x, 1) && !IsAllDenaro(x) && !IsAllTerno(x) || IsAS(x))
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[%d]%s | Válaszok: %d", x, PlayerName(x), Valasz[x]);
			}
			SendClientMessage(playerid, COLOR_YELLOW, "===============[Válaszok]===============");
		}
		else if(egyezik(param[1], "törlés"))
		{
			if(Admin(playerid,1338)) return 1;
		
			if(params < 2) return Msg(playerid,"Hazsnálata:/törlés [Játékos / ID]");
			new jatekos = ReturnUser(param[2]);
			if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos");
			PlayerInfo[jatekos][pValaszok]=0;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[törölve]%s | Válaszok: %d",PlayerName(jatekos), PlayerInfo[jatekos][pValaszok]);
		}
		else
		Msg(playerid, "/válaszok [mostani/mindig/játékos/törlés]");
		return 1;
	}
	if(egyezik(cmd, "/válaszaim") || egyezik(cmd, "/valaszaim"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid) && !IsAS(playerid)) return 1;
		if(params < 1) return Msg(playerid, "/válaszaim [mostani/mindig]");
		if(egyezik(param[1], "mindig"))
		{
			SendClientMessage(playerid, COLOR_YELLOW, "===============[Válaszok]===============");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Válaszok: %d",PlayerInfo[playerid][pValaszok]);
			SendClientMessage(playerid, COLOR_YELLOW, "===============[Válaszok]===============");
		}
		else if(egyezik(param[1], "mostani"))
		{
			SendClientMessage(playerid, COLOR_YELLOW, "===============[Válaszok]===============");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Válaszok: %d",Valasz[playerid]);
			SendClientMessage(playerid, COLOR_YELLOW, "===============[Válaszok]===============");
		}
		else Msg(playerid, "/válaszaim [mostani/mindig]");
		return 1;
	}
	if(egyezik(cmd, "/noas"))
	{
		if(!Admin(playerid, 4)) return 1;
		if(noas == 1)
		{
			noas = 0;
			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s bekapcsolta az Adminsegéd chatet! >>", PlayerName(playerid));
			Msg(playerid, "Az adminsegéd chat bekapcsolva");
		}
		else
		{
			noas = 1;
			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s kikapcsolta az Adminsegéd chatet! >>", PlayerName(playerid));
			Msg(playerid, "Az adminsegéd chat kikapcsolva");
		}
	}

	if(egyezik(cmd, "/info"))
	{

		if(params != 1)
			return Msg(playerid, "Használata: /info [be/ki] - Ezzel a monitor alján lévõ információs csíkot kapcsolhatod ki");

		if(egyezik(param[1], "ki"))
			TextDrawHideForPlayer(playerid, InfoTextDraw[playerid]);
		else if(egyezik(param[1], "be"))
			TextDrawShowForPlayer(playerid, InfoTextDraw[playerid]);
		else
			Msg(playerid, "Használata: /info [be/ki]");

		return 1;
	}

	if(egyezik(cmd, "/infoblokk"))
	{

		if(params != 1)
			return Msg(playerid, "Használata: /infoblokk [be/ki] - Ezzel a pénz alatt lévõ információs blokkot kapcsolhatod ki");

		if(egyezik(param[1], "ki"))
		{
			TextDrawHideForPlayer(playerid, InfoTextDraw2[playerid]);
			TextDrawHideForPlayer(playerid, InfoTextDraw3[playerid]);
			TextDrawHideForPlayer(playerid, InfoTextDraw4[playerid]);
		}
		else if(egyezik(param[1], "be"))
		{
			TextDrawShowForPlayer(playerid, InfoTextDraw2[playerid]);
			TextDrawShowForPlayer(playerid, InfoTextDraw3[playerid]);
			TextDrawShowForPlayer(playerid, InfoTextDraw4[playerid]);
		}
		else
			Msg(playerid, "Használata: /infoblokk [be/ki]");

		return 1;
	}

	if(egyezik(cmd, "/penz") || egyezik(cmd, "/pénz"))
	{

		if(params != 1)
			return Msg(playerid, "Használata: /pénz [be/ki] - Ezzel a forint jelzõt kapcsolhatod ki");

		if(egyezik(param[1], "ki"))
			TextDrawHideForPlayer(playerid, MoneyTxt[playerid]);
		else if(egyezik(param[1], "be"))
			TextDrawShowForPlayer(playerid, MoneyTxt[playerid]);
		else
			Msg(playerid, "Használata: /pénz [be/ki] - Ezzel a forint jelzõt kapcsolhatod ki");

		return 1;
	}

 	if(egyezik(cmd, "/betölt"))
	{
	    if(!IsScripter(playerid)) return 1;
		if(params != 1)
			return Msg(playerid, "Használata: /betölt [Mit] | Frakciók, Ajtók, Rádiók, KocsiÁrak, Kapuk, atm, rejtekhelyek");

	//	if(egyezik(param[1], "frakciók") || egyezik(param[1], "frakciok"))
	//		LoadFrakcio(), Msg(playerid,"Futattva!");
		else if(egyezik(param[1], "ajtók") || egyezik(param[1], "ajtok"))
			LoadAjtok(), Msg(playerid,"Futattva!");
		else if(egyezik(param[1], "rádiók") || egyezik(param[1], "radiok"))
			LoadRadio(), Msg(playerid,"rádiók Futattva!");
		else if(egyezik(param[1], "kocsiárak") || egyezik(param[1], "kocsiarak"))
			LoadArak(), Msg(playerid,"kocsiárak Futattva!");
        else if(egyezik(param[1], "kapuk"))
			KapuAkcio(), Msg(playerid,"kapuk Futattva!");
		else if(egyezik(param[1], "atm"))
			LoadATM(), Msg(playerid,"atm Futattva!");
		elseif(egyezik(param[1], "rejtekhelyek"))
			LoadRejtekhely(), Msg(playerid, "Rejtekhelyek betöltése futtatva!");

		return 1;
	}

    if(egyezik(cmd, "/mentés"))
	{
	    if(!IsScripter(playerid)) return 1;
		if(params != 1)
			return Msg(playerid, "Használata: /mentés [mit] | frakcio");

		if(egyezik(param[1], "bandaszéf"))
		{
			for(new t=0; t < MAX_FRAKCIO; t++)
				INI_Save(INI_TYPE_TELEFONDATA, t);
		}	
		else
			Msg(playerid, "Használata: /mentés [mit] | bandaszéf");

		return 1;
	}

    if(egyezik(cmd, "/riporter"))
	{
	    if(!MunkaLeader(playerid, FRAKCIO_RIPORTER)) return Msg(playerid, "Te nem vagy riporter leader!");

		if(rtelo == 1)
			rtelo = 0, Msg(playerid, "Kikapcsolva");
		else
			rtelo = 1, Msg(playerid, "Bekapcsolva");

		return 1;
	}

	if(egyezik(cmd, "/jail"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
		
		new player, hely[32], ido, oka[128];
		
		if(sscanf(pms, "rs[32]ds[128]", player, hely, ido, oka)) 
		{
			return Msg(playerid, "/jail [Játékos] [LSPD / fegyenctelep / NAV / FBI / Admin / Admin2 / Admin3 / Kórház] [Idõ(perc)] [Oka]");
		}
		
		if(strlen(oka) > 100) return Msg(playerid, "Maximum 100 karakter hossz! Fogalmazz röviden!");
		if(!EngedelyezettKarakterek(oka)) return Msg(playerid, "Helytelen karakterek a szövegben!");

		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos");
		if(IsPlayerNPC(player)) return Msg(playerid, "NPC?");

		if(!AJFigyelmeztetes[player] && PlayerInfo[player][pJailed] > 0 && PlayerInfo[player][pJailTime] > 0) {
			SendFormatMessage(playerid, COLOR_YELLOW, "%s bent van %s -ben Idõ: %dmp(~%dp) Oka: %s Biztos átrakod máshova?", PlayerName(player), BortonNev(PlayerInfo[player][pJailed]),PlayerInfo[player][pJailTime], floatround(float(PlayerInfo[player][pJailTime] / 60)), PlayerInfo[player][pJailOK]);
			Msg(playerid, "Ha igen írd be újra a parancsot");
			AJFigyelmeztetes[player] = true;
			return 1;
		} else {
			AJFigyelmeztetes[player] = false;
		}


		if(egyezik(param[2], "lspd"))
		{
			SendFormatMessage(player, COLOR_LIGHTRED, "Admin %s bezárt az LSPD börtönébe - Oka: %s | Idõ: %dp", AdminName(playerid),oka, ido);
			Format(string, "<< %s bezárta %s-t (LSPD) Idõ: %dp | Oka: %s >>", AdminName(playerid), PlayerName(player), ido, oka);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			
			Jail(player, "set", ido * 60, "lspd", oka);
			return 1;
		}
		if(egyezik(param[2], "fegyenctelep"))
		{
			SendFormatMessage(player, COLOR_LIGHTRED, "Admin %s bezárt a fegyenctelep börtönbe - Oka: %s | Idõ: %dp", AdminName(playerid),oka, ido);
			Format(string, "<< %s bezárta %s-t (fegyenctelep) Idõ: %dp | Oka: %s >>", AdminName(playerid), PlayerName(player), ido, oka);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			
			Jail(player, "set", ido*60, "fegyenctelep", oka);
			return 1;
		}
		if(egyezik(param[2], "fbi"))
		{
			SendFormatMessage(player, COLOR_LIGHTRED, "Admin %s bezárt az FBI börtönébe - Oka: %s | Idõ: %dp", AdminName(playerid),oka, ido);
			Format(string, "<< %s bezárta %s-t (FBI) Idõ: %dp | Oka: %s >>", AdminName(playerid), PlayerName(player), ido, oka);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			
			Jail(player, "set", ido*60, "fbi", oka);
			return 1;
		}
		else if(egyezik(param[2], "nav"))
		{
			SendFormatMessage(player, COLOR_LIGHTRED, "Admin %s bezárt a NAV börtönébe - Oka: %s | Idõ: %dp", AdminName(playerid), oka, ido);
			Format(string, "<< %s bezárta %s-t (NAV) Idõ: %dp | Oka: %s >>", AdminName(playerid), PlayerName(player), ido, oka);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			
			Jail(player, "set", ido*60, "nav", oka);
			return 1;
		}
		else if(egyezik(param[2], "admin"))
		{
			if(PlayerInfo[player][pLevel] < 5)  SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Egy %d szintû playert zártál be. Ha kezdõ gondold át a büntetését!", PlayerInfo[player][pLevel]);

			SendFormatMessage(player, COLOR_LIGHTRED, "Admin %s bezárt AdminJail-be - Oka: %s | Idõ: %dp", AdminName(playerid), oka, ido);
			Format(string, "<< %s bezárta %s-t (Admin) Idõ: %dp  Oka: %s >>", AdminName(playerid), PlayerName(player), ido, oka);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			
			format(oka, sizeof(oka), "%s által - Oka: %s", AdminName(playerid), oka);
			Jail(player, "set", ido*60, "ajail", oka);
			
			if(ido > 15) SendFormatMessageToAll(COLOR_LIGHTRED, "ClassRPG: %s AdminJailt kapott %s", PlayerName(player), oka);
			
			format(string, 256, "%s bezárta %s-t (AJ) Idõ: %dp - Oka: %s", AdminName(playerid), PlayerName(player), ido, oka); Log("Admin", string);
			if(ido > 15)
				PlayerInfo[player][pJailokSzama] += 1;
			return 1;
		}
		else if(egyezik(param[2], "admin2") || egyezik(param[2], "mz"))
		{
			if(PlayerInfo[player][pLevel] < 5)  SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Egy %d szintû playert zártál be. Ha kezdõ gondold át a büntetést!", PlayerInfo[player][pLevel]);
			
			SendFormatMessage(player, COLOR_LIGHTRED, "Admin %s bezárt MagánZárkába - Oka: %s | Idõ: %dp", AdminName(playerid), oka, ido);
			Msg(playerid, "Bezártad a játékost a börtönbe!");
			Format(string, "<< %s bezárta %s-t (MZ) Idõ: %dp - Oka: %s >>", AdminName(playerid), PlayerName(player), ido, oka);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			format(oka, sizeof(oka), "%s által - Oka: %s",AdminName(playerid),oka);
			Jail(player, "set", ido*60, "ajail2", oka);
			if(ido > 15) SendFormatMessageToAll(COLOR_LIGHTRED, "ClassRPG: %s Magánzárkát kapott %s", PlayerName(player), oka);
			
			format(string, 256, "%s bezárta %s-t (MZ) Idõ: %dp - Oka: %s", AdminName(playerid), PlayerName(player), ido, oka); Log("Admin", string);
			if(ido > 15)
				PlayerInfo[player][pJailokSzama] += 1;
			return 1;
		}
		else if(egyezik(param[2], "admin3") || egyezik(param[2], "emz"))
		{
			if(PlayerInfo[player][pLevel] < 5)  SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Egy %d szintû playert zártál be. Ha kezdõ gondold át a büntetését!", PlayerInfo[player][pLevel]);

			SendFormatMessage(player, COLOR_LIGHTRED, "Admin %s bezárt Extra magánzárkába - Oka: %s | Idõ: %dp", AdminName(playerid), oka, ido);
			Format(string, "<< %s bezárta %s-t (Admin3) Idõ: %dp  Oka: %s >>", AdminName(playerid), PlayerName(player), ido, oka);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			
			format(oka, sizeof(oka), "%s által - Oka: %s", AdminName(playerid), oka);
			Jail(player, "set", ido*60, "ajail3", oka);
			
			if(ido > 15) SendFormatMessageToAll(COLOR_LIGHTRED, "ClassRPG: %s Extra magánzárkát kapott %s", PlayerName(player), oka);
			
			format(string, 256, "%s bezárta %s-t (AJ3) Idõ: %dp - Oka: %s", AdminName(playerid), PlayerName(player), ido, oka); Log("Admin", string);
			if(ido > 15)
				PlayerInfo[player][pJailokSzama] += 1;
			return 1;
		}
		else if(egyezik(param[2], "korhaz") || egyezik(param[2], "kórház"))
		{
			SendFormatMessage(player, COLOR_LIGHTRED, "Admin %s berakott a kórházba - Oka: %s | Idõ: %dp", AdminName(playerid), oka, ido);
			Msg(playerid, "Bezártad a játékost a kórházba!");
			Format(string, "<< %s bezárta %s-t (Kórház) Idõ: %dp  Oka: %s >>", AdminName(playerid), PlayerName(player), ido, oka);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			Jail(player, "set", ido*60, "korhaz", "");

			return 1;
		}
		else
			Msg(playerid, "/jail [Játékos] [LSPD / NAV / FBI / Admin / Admin2 / Kórház] [Idõ(perc)] [Oka]");

		return 1;
	}
	if(egyezik(cmd, "/büntetõpontjaim"))
	{
		SendFormatMessage(playerid, COLOR_LIGHTRED, "AdminJailok Száma: %d ", PlayerInfo[playerid][pJailokSzama]);
	}
	if(egyezik(cmd, "/vw"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
		if(params < 2) return Msg(playerid, "/vw [Játékos] [szám]");
		new player = ReturnUser(param[1]);
		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos");

		if(IsPlayerNPC(player))
			return Msg(playerid, "Ne állítsd az NPC VWjét köszi...");

		new vw = strval(param[2]);
		if(vw < 0) return 1;
		SetPlayerVirtualWorld(player, vw);
		ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s átállította a VWjét(%d) neki: %s >>", AdminName(playerid), vw, PlayerName(player));
	}
	if(egyezik(cmd, "/inti"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
		if(params < 2) return Msg(playerid, "/inti [Játékos] [szám]");
		new player = ReturnUser(param[1]);
		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos");

		if(IsPlayerNPC(player))
			return Msg(playerid, "Ne állítsd az NPC Intijét köszi...");

		new inti = strval(param[2]);
		if(inti < 0) return 1;
		SetPlayerInterior(player, inti);
		ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s átállította az Intijét(%d) neki: %s >>", AdminName(playerid), inti, PlayerName(player));
	}
	
	if(egyezik(cmd, "/set"))
	{

		if(PlayerInfo[playerid][pAdmin] >= 1 || IsScripter(playerid) || (Tevezik[playerid] > 0 && IsAS(playerid)))

		{

			if(params < 4) return Msg(playerid, "/set [Jármû / Játékos] [Int / VW] [Szám] [PlayerID / Rendszám]");
			if(egyezik(param[1], "játékos") || egyezik(param[1], "jatekos"))
			{
				new player = ReturnUser(param[4]);
				if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos");

				if(IsPlayerNPC(player))
					return Msg(playerid, "Ne babráld az NPC-t...");

				if(egyezik(param[2], "inti") || egyezik(param[2], "int"))
				{
					new inti = strval(param[3]);
					if(inti < 0) return 1;
					SetPlayerInterior(player, inti);
					ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s átállította az Interiorját(%d) neki: %s >>", AdminName(playerid), inti, PlayerName(player));
				}
				if(egyezik(param[2], "vw"))
				{
					new vw = strval(param[3]);
					if(vw < 0) return 1;
					SetPlayerVirtualWorld(player, vw);
					ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s átállította a VWjét(%d) neki: %s >>", AdminName(playerid), vw, PlayerName(player));
				}
			}
			if(egyezik(param[1], "Jármû") || egyezik(param[1], "Jarmu"))
			{
				new kocsi = strval(param[4]);
				if(!IsVehicleConnected(kocsi)) return Msg(playerid, "Nincs ilyen jármû");
				if(egyezik(param[2], "inti") || egyezik(param[2], "int"))
				{
					new inti = strval(param[3]);
					if(inti < 0) return 1;
					SetVehicleInterior(kocsi, inti);
					ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s átállította %d rendszámú jármû Interiorját erre: %d >>", AdminName(playerid), kocsi, inti);
				}
				if(egyezik(param[2], "vw"))
				{
					new vw = strval(param[3]);
					if(vw < 0) return 1;
					SetVehicleVW(kocsi, vw);
					ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s átállította %d rendszámú jármû VWjét erre: %d >>", AdminName(playerid), kocsi, vw);
				}
			}
		}
	}

	if(egyezik(cmd, "/auncuff"))
	{
		if(!Admin(playerid, 2)) return 1;
		if(params < 1) return Msg(playerid, "/auncuff [Játékos Neve / ID]");
		new player = ReturnUser(param[1]);
		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
		if(PlayerCuffed[player] == 0) return Msg(playerid, "A játékos nincs megbilincselve.");
		Bilincs(player, 0);
		SetPlayerSpecialAction(player, SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(giveplayerid, ATTACH_SLOT_ZSAK_PAJZS_BILINCS);
		ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s levette a bilincset róla: %s >>", AdminName(playerid), PlayerName(player));
		GameTextForPlayer(player, "~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Az admin levette a bilincsed!", 3000, 3);
	}
	
	if(egyezik(cmd, "/kártya") || egyezik(cmd, "/kartya"))
	{
		if(!LMT(playerid, FRAKCIO_ONKORMANYZAT)) return Msg(playerid, "Nem vagy az önkormányzat tagja!");
		if(params < 1) Msg(playerid, "/kártya [id]");
		new szama = PlayerInfo[playerid][pKormanyKituntetes];
		new player;
		if(!sscanf(pms, "u", player))
		{
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
			if(player == playerid) return Msg(playerid, "Ha megakarod nézni a kártyád: /kártya Megnéz");
			if(GetDistanceBetweenPlayers(playerid,player) > 3) return Msg(playerid, "Õ nincs a közeledben!");
		}
		else player=playerid;
		
		new szneve[32];
		new rangja[32];

		if(PlayerInfo[playerid][pMember] > 0)
		{
			new szam = PlayerInfo[playerid][pMember] - 1;
			szneve = Szervezetneve[szam][0];
		}
		if(PlayerInfo[playerid][pLeader] > 0)
		{
			new szam = PlayerInfo[playerid][pLeader] - 1;
			szneve = Szervezetneve[szam][0];
		}
		new rang, munka;
		if(PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0)
		{
			rang = PlayerInfo[playerid][pRank];
			if(PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] < MAX_FRAKCIO)
				munka = PlayerInfo[playerid][pLeader] - 1;
			else
				munka = PlayerInfo[playerid][pMember] - 1;

			if(rang <= 0) rangja = Rangok[munka][0];
			else if(rang >= 1 && rang <= 12) rangja = Rangok[munka][rang];
			else rangja = Rangok[munka][12];
		}

		SendClientMessage(player, COLOR_WHITE, "============[Kormányi kártya]============");
		SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", ICPlayerName(playerid));
		SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s(%d)", rangja,rang);
		SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", KormanyKituntetes[szama]);
		Cselekves(playerid, "felmutatta az önkormányzati kártyáját valakinek.");
	
	}

	if(egyezik(cmd, "/jelvény") || egyezik(cmd, "/jelveny"))
	{
		if(!IsACop(playerid) && !Jelvenytlopott[playerid]) return Msg(playerid, "Nem vagy rendõr.");
		if(IsACop(playerid) && PlayerInfo[playerid][pJelveny] == 0) return Msg(playerid, "Nincs jelvényed, mert elvették!");
		if(params < 1) return Msg(playerid, "/Jelvény [Felmutat / Megnéz]");
		new player = ReturnUser(param[2]);
		if(egyezik(param[1], "felmutat"))
		{
			if(params < 2) return Msg(playerid, "/Jelvény Felmutat [Játékos Neve / ID]");
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
			if(player == playerid) return Msg(playerid, "Ha megakarod nézni a jelvényed: ('/Jelvény Megnéz')");
			if(GetDistanceBetweenPlayers(playerid,player) > 3) return Msg(playerid, "Õ nincs a közeledben!");
			if(!IsACop(playerid))
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Felmutattad a jelvényed neki: %s", ICPlayerName(player));
				SendClientMessage(player, COLOR_LIGHTBLUE, "==========[Jelvény]==========");
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", JelvenyNeve[playerid]);
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", Szervezetneve[JelvenySzervezet[playerid]-1][0]);
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", Rangok[JelvenySzervezet[playerid]-1][JelvenyRangnev[playerid]]);
				Cselekves(playerid, "felmutatta a jelvényét valakinek...");
			}
			else
			{
				new szneve[32];
				new rangja[32];

				if(PlayerInfo[playerid][pMember] > 0)
				{
					new szam = PlayerInfo[playerid][pMember] - 1;
					szneve = Szervezetneve[szam][0];
				}
				if(PlayerInfo[playerid][pLeader] > 0)
				{
					new szam = PlayerInfo[playerid][pLeader] - 1;
					szneve = Szervezetneve[szam][0];
				}
				if(PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0)
				{
					new rang = PlayerInfo[playerid][pRank], munka;
					if(PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] < MAX_FRAKCIO)
						munka = PlayerInfo[playerid][pLeader] - 1;
					else
						munka = PlayerInfo[playerid][pMember] - 1;

					if(rang <= 0) rangja = Rangok[munka][0];
					else if(rang >= 1 && rang <= 12) rangja = Rangok[munka][rang];
					else rangja = Rangok[munka][12];
				}
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Felmutattad a jelvényed neki: %s", ICPlayerName(player));
				SendClientMessage(player, COLOR_LIGHTBLUE, "==========[Jelvény]==========");
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", ICPlayerName(playerid));
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", szneve);
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", rangja);
				Cselekves(playerid, "felmutatta a jelvényét valakinek...");
			}
			return 1;
		}
		if(egyezik(param[1], "megnéz") || egyezik(param[1], "megnez"))
		{
			if(!IsACop(playerid))
			{
				SendClientMessage(player, COLOR_LIGHTBLUE, "==========[Jelvény]==========");
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", JelvenyNeve[playerid]);
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", Szervezetneve[JelvenySzervezet[playerid]-1][0]);
				SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", Rangok[JelvenySzervezet[playerid]-1][JelvenyRangnev[playerid]]);
				Cselekves(playerid, "megnézte a jelvényét...");
			}
			else
			{
				new szneve[32];
				new rangja[32];

				if(PlayerInfo[playerid][pMember] > 0)
				{
					new szam = PlayerInfo[playerid][pMember] - 1;
					szneve = Szervezetneve[szam][0];
				}
				if(PlayerInfo[playerid][pLeader] > 0)
				{
					new szam = PlayerInfo[playerid][pLeader] - 1;
					szneve = Szervezetneve[szam][0];
				}
				if(PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0)
				{
					new rang = PlayerInfo[playerid][pRank], munka;
					if(PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] < MAX_FRAKCIO)
						munka = PlayerInfo[playerid][pLeader] - 1;
					else
						munka = PlayerInfo[playerid][pMember] - 1;

					if(rang <= 0) rangja = Rangok[munka][0];
					else if(rang >= 1 && rang <= 12) rangja = Rangok[munka][rang];
					else rangja = Rangok[munka][12];
				}

				SendClientMessage(playerid, COLOR_LIGHTBLUE, "==========[Jelvény]==========");
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* %s", ICPlayerName(playerid));
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* %s", szneve);
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* %s", rangja);
				Cselekves(playerid, "megnézte a jelvényét...");
			}
			return 1;
		}
	}

	if(egyezik(cmd, "/útlevél") || egyezik(cmd, "/utlevel"))
	{
		if(params < 1) return Msg(playerid, "/útlevél [Felmutat / Megvesz[50,000Ft]]");

		new player = ReturnUser(param[2]);

		if(egyezik(param[1], "Felmutat"))
		{
		    if(params < 2) return Msg(playerid, "/útlevél Felmutat [Játékos Neve / ID]");
		    if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos");
		    if(GetDistanceBetweenPlayers(playerid,player) > 3) return Msg(playerid, "Õ nincs a közeledben!");
			Msg(playerid, "Felmutattad az útleveled!");
			new Ervenyes = PlayerInfo[playerid][pUtlevel];
			format(string, sizeof(string), "================[Útlevél]================");
			SendClientMessage(player, COLOR_WHITE, string);
			format(string, sizeof(string), "Neve: %s", ICPlayerName(playerid));
			SendClientMessage(player, COLOR_WHITE, string);
			if(Ervenyes > 0)
			{
				format(string, sizeof(string), "Útlevele: Érvényes %d Hónapig((Óráig))", Ervenyes);
				SendClientMessage(player, COLOR_WHITE, string);
			}
			else
			{
				format(string, sizeof(string), "Útlevele: Érvénytelen.");
				SendClientMessage(player, COLOR_WHITE, string);
			}
			Cselekves(playerid, "elõvette az egyik iratát és felmutatta...");
			return 1;
		}
		else if(egyezik(param[1], "Megvesz"))
		{
		    if(!PlayerToPoint(2, playerid, 362.3623,209.2845,1008.3828)) return Msg(playerid, "Városházán elsõ iroda jobra! [50,000Ft] [Rendvédelmiseknek Ingyenes] [48 Hónapig érvényes((Óra))]");
			if(PlayerInfo[playerid][pUtlevel] > 3) return Msg(playerid, "Még nem újjíthatod meg, csak lejárat elõtt 4 hónappal((óra))!");
			if(IsACop(playerid))
			{
			    Msg(playerid, "Útlevél megvéve! [48 Hónapig érvényes((Óra))] [Ingyen Volt]");
				PlayerInfo[playerid][pUtlevel] = 48;
				Cselekves(playerid, "vett egy útlevelet...");
				return 1;
			}
			if(!BankkartyaFizet(playerid, 50000)){ Msg(playerid, "Útlevél ára: 50,000Ft"); return 1; }
			Msg(playerid, "Útlevél megvéve! [48 Hónapig érvényes((Óra))]");
			PlayerInfo[playerid][pUtlevel] = 48;
			Cselekves(playerid, "vett egy útlevelet...");
			return 1;
		}
		else
			Msg(playerid, "/útlevél [Felmutat / Megvesz[50,000Ft]]");

		return 1;
	}

	if(egyezik(cmd, "/szonda"))
	{
		if(params != 1) return Msg(playerid, "/szonda [Játékos Neve / ID]");

		new player = ReturnUser(param[1]);

		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
		//if(player == playerid) return Msg(playerid, "Magadat??");

		if(!IsACop(playerid)) return Msg(playerid, "Nem vagy rendõr!");

        if(GetDistanceBetweenPlayers(playerid,player) > 3) return Msg(playerid, "Õ nincs a közeledben!");

        if(IsACop(player)) return Msg(playerid, "Zsarut akarsz szondáztatni?");

        Szondaztat[player] = playerid;
		format(string, sizeof(string), "ClassRPG: Megkérted %s-t hogy fújja meg a szondát!", ICPlayerName(player));
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		format(string, sizeof(string), "ClassRPG: %s megkért hogy fújd meg a szondát, ha nem fújod meg bevihet!(/fúj)", ICPlayerName(playerid));
		SendClientMessage(player, COLOR_LIGHTRED, string);
		Cselekves(playerid, "elõvette a szondát...");

		return 1;
	}

	if(egyezik(cmd, "/fúj") || egyezik(cmd, "/fuj"))
	{
		if(Szondaztat[playerid] == NINCS) return Msg(playerid, "Nem adtak át szondát...Mit akarsz megfújni?");
		if(Szondaztat[playerid] == INVALID_PLAYER_ID)
		{
			Msg(playerid, "Már nincs ilyen játékos");
			Szondaztat[playerid] = NINCS;
			return 1;
		}

        if(GetDistanceBetweenPlayers(playerid,Szondaztat[playerid]) > 3) return Msg(playerid, "Õ nincs a közeledben!");

		format(string, sizeof(string), "ClassRPG: Megfújtad a szondát!");
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		format(string, sizeof(string), "ClassRPG: %s megfújta a szondát!", ICPlayerName(playerid));
		SendClientMessage(Szondaztat[playerid], COLOR_LIGHTRED, string);
		if(PlayerDrunk[playerid] >= 1) SendFormatMessage(Szondaztat[playerid], COLOR_YELLOW,"Eredmény: Ittas. Szint: %d [0-5]",PlayerDrunk[playerid]);
		else Msg(Szondaztat[playerid], "Eredmény: Józan");
		Szondaztat[playerid] = NINCS;

		return 1;
	}

    if(egyezik(cmd, "/iban"))
	{
	
		#if defined TEMP_NO_IP_BAN
			if(playerid != -1)
				return Msg(playerid, "Ideiglenesen nem elérhetõ");
		#endif

	    if(!Admin(playerid, 2)) return 1;

		new player, oka[128];

		if(sscanf(pms, "rs[128]", player, oka))
			return Msg(playerid, "Használata: /iban [játékos név / ID] [oka]");
		else if(player == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		if(IsClint(player) && player != playerid)
		{
			SendFormatMessage(player, COLOR_YELLOW, "<< %s ki akar bannolni /ibanal >>", PlayerName(playerid));
			Msg(playerid, "Nincs ilyen játékos");
			return 1;
		}

		if(player == playerid) return Msg(playerid, "Magadat??");
		if(PlayerInfo[playerid][pAdmin] < PlayerInfo[player][pAdmin] && !IsRyan(playerid)) return Msg(playerid, "Nagyobb admint mint te? Hülye vagy?");

		format(string, sizeof(string), "ClassRPG: %s örökbannolva %s által - oka: %s", PlayerName(player), AdminName(playerid), oka);
		BanLog(string);
		ABroadCast(COLOR_LIGHTRED, string, 1);
		SendFormatMessage(player, COLOR_LIGHTRED, "Bant kaptál %s által - oka: %s", AdminName(playerid), oka);

		format(oka, 128, "/iban %s", oka);
        SeeBan(player, 0, playerid, oka, true);
		return 1;
	}

    if(egyezik(cmd, "/kban"))
	{
	    if(!Admin(playerid, 2)) return 1;

		new player, oka[128];

		if(sscanf(pms, "rs[128]", player, oka))
			return Msg(playerid, "Használata: /kban [játékos név / ID] [oka]");
		else if(player == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		if(IsClint(player) && player != playerid)
		{
			SendFormatMessage(player, COLOR_YELLOW, "<< %s ki akar bannolni /kbanal >>", PlayerName(playerid));
			Msg(playerid, "Nincs ilyen játékos");
			return 1;
		}

		if(player == playerid) return Msg(playerid, "Magadat??");
		if(PlayerInfo[playerid][pAdmin] < PlayerInfo[player][pAdmin] && !IsRyan(playerid)) return Msg(playerid, "Nagyobb admint mint te? Hülye vagy?");

		format(string, sizeof(string), "ClassRPG: %s örökbannolva %s által - oka: %s", PlayerName(player), AdminName(playerid), oka);
		BanLog(string);
		ABroadCast(COLOR_LIGHTRED, string, 1);
		SendFormatMessage(player, COLOR_LIGHTRED, "Bant kaptál %s által - oka: %s", AdminName(playerid), oka);

		format(oka, 128, "/kban %s", oka);
        SeeBan(player, 0, playerid, oka, false);
		return 1;
	}

	if(egyezik(cmd, "/kölni") || egyezik(cmd, "/kolni"))
	{
		if(params != 1) return Msg(playerid, "/kölni [Játékos Neve / ID]");
		new jatekos = ReturnUser(param[1]);
		if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
		if(jatekos == playerid) return Msg(playerid, "Magadat?-.-");
		if(GetDistanceBetweenPlayers(playerid,jatekos) > 5) return Msg(playerid, "Õ nincs a közeledben!");
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Megszeretnéd locsolni %s-t.", ICPlayerName(jatekos));
		SendFormatMessage(jatekos, COLOR_LIGHTBLUE, "* %s megszeretne locsolni.(Elfogadás: /accept locsolás)", ICPlayerName(playerid));
		Locsolas[playerid] = jatekos;
		Locsolniakar[jatekos] = playerid;
	}
	if(egyezik(cmd, "/virgács") || egyezik(cmd, "/virgacs"))
	{
		return Msg(playerid,"/mikulás");
	}
	if(egyezik(cmd, "/tojás") || egyezik(cmd, "/tojas"))
	{
		//if(params == 1) return Msg(playerid, "Majd husvétkor aranyapám!");
		if(params != 1) return Msg(playerid, "/tojás [Játékos Neve / ID]");
		new jatekos = ReturnUser(param[1]);
		if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
		if(jatekos == playerid) return Msg(playerid, "Magadnak?-.-");
		
		if(GetDistanceBetweenPlayers(playerid,jatekos) > 5) return Msg(playerid, "Õ nincs a közeledben!");
		if(PlayerInfo[playerid][pTojas] < 0) return Msg(playerid, "Nincs tojásod vegyél a boltban!");
		
		PlayerInfo[playerid][pTojas]--;
		PlayerInfo[jatekos][pTojas]++;
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Átadtál egy tojást neki: %s Még %d DB tojásod van!", ICPlayerName(jatekos),PlayerInfo[playerid][pTojas]);
		SendFormatMessage(jatekos, COLOR_LIGHTBLUE, "* %s átadott egy tojást neked. Most %d DB tojásod van", ICPlayerName(playerid), PlayerInfo[jatekos][pTojas]);
		Cselekves(playerid, "átadott egy tojást valakinek...");
	}
	if(egyezik(cmd, "/mellény") ||egyezik(cmd, "/melleny"))
	{
		if(FloodCheck(playerid)) return 1;
		if(params < 1) return Msg(playerid, "/mellény [berak / kivesz / megnéz / vesz]");
        new kocsi;
        kocsi = GetClosestVehicle(playerid);
        if(IsABicikli(kocsi)) return Msg(playerid, "Na ne viccelj már -.- Biciklibe?");
		new Float:tav = GetPlayerDistanceFromVehicle(playerid, kocsi);
        new ferohely;
		ferohely= strval(param[2]);

		if(egyezik(param[1], "berak"))
		{
			if(params != 2) return Msg(playerid, "/mellény [berak] [Slot (1-5)]");
			if(ferohely < 1 || ferohely > 5) return Msg(playerid, "Slot 1-5");
			if(tav >= 3) return Msg(playerid, "Nincs a közeledbe jármû...");
		    new Float:armor;
			GetPlayerArmour(playerid, armor);
			new pancel;
			pancel = floatround(armor);
			if(pancel < 1 || pancel > 150) return Msg(playerid, "Nincs mellényed!");
			if(CarTrunk[kocsi][cMelleny][ferohely - 1] != 0) return Msg(playerid, "A jármûben már van mellény!");
			if(Locked(kocsi)) return Msg(playerid, "A jármû zárva");
			if(IsABicikli(kocsi)) return Msg(playerid, "Biciklin?");
			CarTrunk[kocsi][cMelleny][ferohely - 1] = pancel;
			Msg(playerid, "Beraktál egy mellényt a jármûbe");
			Cselekves(playerid, "elrejtett egy mellényt a jármûbe...");
			SetPlayerArmour(playerid, 0);
			SaveCarTrunk(kocsi);
			return 1;
		}
		else if(egyezik(param[1], "kivesz"))
		{
			if(params != 2) return Msg(playerid, "/mellény [kivesz] [Slot (1-5)]");
			if(ferohely < 1 || ferohely > 5) return Msg(playerid, "Slot 1-5");
			if(tav >= 3) return Msg(playerid, "Nincs a közeledbe jármû...");
			if(Locked(kocsi)) return Msg(playerid, "A jármû zárva");
			if(IsABicikli(kocsi)) return Msg(playerid, "Biciklin?");
			if(CarTrunk[kocsi][cMelleny][ferohely - 1] == 0) return Msg(playerid, "Ezen a sloton nincs mellény!");
			new Float:pancel = CarTrunk[kocsi][cMelleny][ferohely - 1];
			Msg(playerid, "Kivettél egy mellényt a jármûbõl");
			Cselekves(playerid, "kivett egy mellényt a jármûbõl...");
			SetPlayerArmour(playerid, pancel);
			CarTrunk[kocsi][cMelleny][ferohely - 1] = 0;
			SaveCarTrunk(kocsi);
			return 1;
		}
		else if(egyezik(param[1], "megnéz") || egyezik(param[1], "megnez"))
		{
			if(params != 2) return Msg(playerid, "/mellény [megnéz] [Slot (1-5)]");
			if(ferohely < 1 || ferohely > 5) return Msg(playerid, "Slot 1-5");
			if(tav >= 3) return Msg(playerid, "Nincs a közeledbe jármû...");
			if(Locked(kocsi)) return Msg(playerid, "A jármû zárva");
			if(IsABicikli(kocsi)) return Msg(playerid, "Biciklin?");
			if(CarTrunk[kocsi][cMelleny][ferohely - 1] == 0) return Msg(playerid, "Itt nincs mellény!");
			new Float:pancel = CarTrunk[kocsi][cMelleny][ferohely - 1];
			SendFormatMessage(playerid, COLOR_LIGHTRED, "* Mellény állapota: %.3f százalék", pancel);
			Cselekves(playerid, "bele nézett a csomagtartóba.", 1);
			return 1;
		}
        if(egyezik(param[1], "vesz"))
		{
			new bizben = BizbeVan(playerid);
			if(bizben != BIZ_GS1 && bizben != BIZ_GS2) return Msg(playerid, "Nem vagy fegyverboltban");
			if(params != 2)
			{
				Msg(playerid, "/mellény vesz [Könnyû / Közepes / Nehéz / Teljes]");
				Msg(playerid, "Infók: Könnyû (25 armor) / Közepes (50armor) / Nehéz (75armor) / Teljes (100armor)");
				Msg(playerid, "FONTOS nem hozzáadja hanem átírja!!! Vagyis ha van 24-ed és 25-öst veszel 25 lesz");
				return 1;
			}
			new ara;
			new Float: regi;
			if(egyezik(param[2],"könnyû"))
			{
				GetPlayerArmour(playerid, regi);
				if(regi > 24) return Msg(playerid, "Neked már ekkora mellényed van, vagy nagyobb");
				ara=50000;
				if(!BankkartyaFizet(playerid, ara))
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED,"Ahhoz hogy megvedd a könnyû mellényt,  %sFt-ra van szükséged!",FormatNumber( ara, 0, ',' ));
					return 1;
				}
				SendFormatMessage(playerid, COLOR_YELLOW,"Megvetted a könnyû mellényt! Ára: %sFt",FormatNumber( ara, 0, ',' ));
				BizPenz(BIZ_CROOKER, ara);
				SetPlayerArmour(playerid, 25);
				BizzInfo[BIZ_CROOKER][bProducts] -= 3;
				return 1;
			}
			if(egyezik(param[2], "közepes"))
			{
				if(regi > 49) return Msg(playerid, "Neked már ekkora mellényed van, vagy nagyobb");
				ara=75000;
				if(!BankkartyaFizet(playerid, ara))
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED,"Ahhoz hogy megvedd a közepes mellényt,  %sFt-ra van szükséged!",FormatNumber( ara, 0, ',' ));
					return 1;
				}
				SendFormatMessage(playerid, COLOR_YELLOW,"Megvetted a közepes mellényt! Ára: %sFt",FormatNumber( ara, 0, ',' ));
				BizPenz(BIZ_CROOKER, ara);
				SetPlayerArmour(playerid, 50);
				BizzInfo[BIZ_CROOKER][bProducts] -= 3;
				return 1;
			}
			if(egyezik(param[2], "nehéz"))
			{
				if(regi > 74) return Msg(playerid, "Neked már ekkora mellényed van, vagy nagyobb");
				ara=100000;
				if(!BankkartyaFizet(playerid, ara))
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED,"Ahhoz hogy megvedd a nehéz mellényt,  %sFt-ra van szükséged!",FormatNumber( ara, 0, ',' ));
					return 1;
				}
				SendFormatMessage(playerid, COLOR_YELLOW,"Megvetted a nehéz mellényt! Ára: %sFt",FormatNumber( ara, 0, ',' ));
				BizPenz(BIZ_CROOKER, ara);
				SetPlayerArmour(playerid, 75);
				BizzInfo[BIZ_CROOKER][bProducts] -= 3;
				return 1;
			}
			if(egyezik(param[2], "teljes"))
			{
				if(regi > 99) return Msg(playerid, "Neked már ekkora mellényed van, vagy nagyobb");
				ara=150000;
				if(!BankkartyaFizet(playerid, ara))
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED,"Ahhoz hogy megvedd a teljes mellényt,  %sFt-ra van szükséged!",FormatNumber( ara, 0, ',' ));
					return 1;
				}
				SendFormatMessage(playerid, COLOR_YELLOW,"Megvetted a teljes mellényt! Ára: %sFt",FormatNumber( ara, 0, ',' ));
				BizPenz(BIZ_CROOKER, ara);
				SetPlayerArmour(playerid, 100);
				BizzInfo[BIZ_CROOKER][bProducts] -= 3;
				return 1;
			}
		}
	}
	if(egyezik(cmd, "/weapon"))
	{
		Msg(playerid,"/kocsi weapon");
		return 1;
	}

	if(egyezik(cmd, "/edzés") || egyezik(cmd, "/edzes"))
	{
	    if(!PlayerToPoint(20.0,playerid,765.9343,0.2761,1000.7173) && !PlayerToPoint(20.0,playerid,768.2826,-36.1077,1000.6865)) return Msg(playerid, "Nem vagy Edzõterembe!");
		if(params != 1) return Msg(playerid, "Használata: /edzés [Box / Kungfu / Kneehead / Elbow]");
		if(Edzik[playerid] == 1) return Msg(playerid, "Jelenleg Edzel!");
		if(egyezik(param[1], "Box"))
		{
		    if(!PlayerToPoint(20.0,playerid,765.9343,0.2761,1000.7173)) return Msg(playerid, "Nem vagy a Grove edzõteremben.");
		    if(PlayerInfo[playerid][pStilus] == 1) return Msg(playerid, "Ezt már meg tanultad!");
			Msg(playerid, "Elkezdted a Box edzést! Ha már ez elött megtanultál valamit, azt elfelejted!");
			Cselekves(playerid, "elkezdett edzeni...");
   			TogglePlayerControllable(playerid, 0);
			OnePlayAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
			OnePlayAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
			GameTextForPlayer(playerid, "Edzel, varj...", 120000, 1);
			TanultStilus[playerid] = 1;
            SetTimerEx("Edzes", 120000, false, "ii", playerid);
		}
		else if(egyezik(param[1], "kungfu"))
		{
		    if(!PlayerToPoint(20.0,playerid,768.2826,-36.1077,1000.6865)) return Msg(playerid, "Nem vagy a Cobra edzõteremben.");
		    if(PlayerInfo[playerid][pStilus] == 2) return Msg(playerid, "Ezt már meg tanultad!");
		    if(Edzik[playerid] == 1) return Msg(playerid, "Jelenleg Edzel!");
			Msg(playerid, "Elkezdted a Kungfu edzést! Ha már ez elött megtanultál valamit, azt elfelejted!");
			Cselekves(playerid, "elkezdett edzeni...");
			TogglePlayerControllable(playerid, 0);
			OnePlayAnim(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
			OnePlayAnim(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
			GameTextForPlayer(playerid, "Edzel, varj...", 120000, 1);
			TanultStilus[playerid] = 2;
			SetTimerEx("Edzes", 120000, false, "ii", playerid);
		}
		else if(egyezik(param[1], "kneehead"))
		{
		    if(!PlayerToPoint(20.0,playerid,768.2826,-36.1077,1000.6865)) return Msg(playerid, "Nem vagy a Cobra edzõteremben.");
		    if(PlayerInfo[playerid][pStilus] == 3) return Msg(playerid, "Ezt már meg tanultad!");
		    if(Edzik[playerid] == 1) return Msg(playerid, "Jelenleg Edzel!");
			Msg(playerid, "Elkezdted a Kneehead edzést! Ha már ez elött megtanultál valamit, azt elfelejted!");
			Cselekves(playerid, "elkezdett edzeni...");
			TogglePlayerControllable(playerid, 0);
			OnePlayAnim(playerid,"FIGHT_D","FightD_2",4.0,0,1,1,0,0);
			OnePlayAnim(playerid,"FIGHT_D","FightD_2",4.0,0,1,1,0,0);
			OnePlayAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
			GameTextForPlayer(playerid, "Edzel, varj...", 120000, 1);
			TanultStilus[playerid] = 3;
			SetTimerEx("Edzes", 120000, false, "ii", playerid);
		}
        else if(egyezik(param[1], "elbow"))
		{
		    if(!PlayerToPoint(20.0,playerid,768.2826,-36.1077,1000.6865)) return Msg(playerid, "Nem vagy a Cobra edzõteremben.");
		    if(PlayerInfo[playerid][pStilus] == 5) return Msg(playerid, "Ezt már meg tanultad!");
		    if(Edzik[playerid] == 1) return Msg(playerid, "Jelenleg Edzel!");
			Msg(playerid, "Elkezdted az Elbow edzést! Ha már ez elött megtanultál valamit, azt elfelejted!");
			Cselekves(playerid, "elkezdett edzeni...");
			TogglePlayerControllable(playerid, 0);
			OnePlayAnim(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
			OnePlayAnim(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
			OnePlayAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
			GameTextForPlayer(playerid, "Edzel, varj...", 120000, 1);
			TanultStilus[playerid] = 5;
			SetTimerEx("Edzes", 120000, false, "ii", playerid);
		}
		else
			Msg(playerid, "Használata: /edzés [Box / Kungfu / Kneehead / Elbow]");

		return 1;
	}

	if(egyezik(cmd, "/pda"))
	{
		if(!LMT(playerid, FRAKCIO_FBI)) return 1;
		if(Belepve[playerid] == 1)
		{
			SendFormatMessage(playerid, Pink, "Server Disconnected. Jó munkát %s Ügynök.", ICPlayerName(playerid));
			Belepve[playerid] = 0;
		}
		else
		{
			SetTimerEx("Fbikapcsolodas", 5000, false, "d", playerid);
			SendClientMessage(playerid, Pink, "Kapcsolódás a központi szerverre. Kérem várjon.");
		}
	}
	if(egyezik(cmd, "/harcstílus") || egyezik(cmd, "/harcstilus"))
	{
	    if(PlayerInfo[playerid][pStilus] < 1) return Msg(playerid, "Nem tanultál meg semmilyen Harc Stílust!");
		if(params != 1) return Msg(playerid, "Használata: /harcstílus [Normál / Box / Kungfu / Kneehead / Elbow]");

        if(egyezik(param[1], "Normál") || egyezik(param[1], "Normal"))
		{
		    Msg(playerid, "Átáltál más harc stílusra!");
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		}
		else if(egyezik(param[1], "Box"))
		{
		    if(PlayerInfo[playerid][pStilus] != 1) return Msg(playerid, "Nem ismered ezt a harc stílust!");
		    Msg(playerid, "Átáltál más harc stílusra!");
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
		}
		else if(egyezik(param[1], "Kungfu"))
		{
		    if(PlayerInfo[playerid][pStilus] != 2) return Msg(playerid, "Nem ismered ezt a harc stílust!");
		    Msg(playerid, "Átáltál más harc stílusra!");
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
		}
		else if(egyezik(param[1], "Kneehead"))
		{
		    if(PlayerInfo[playerid][pStilus] != 3) return Msg(playerid, "Nem ismered ezt a harc stílust!");
		    Msg(playerid, "Átáltál más harc stílusra!");
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		}
        else if(egyezik(param[1], "Elbow"))
		{
		    if(PlayerInfo[playerid][pStilus] != 5) return Msg(playerid, "Nem ismered ezt a harc stílust!");
		    Msg(playerid, "Átáltál más harc stílusra!");
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
		}
		else
			Msg(playerid, "Használata: /harcstílus [Normál / Box / Kungfu / Kneehead / Elbow]");

		return 1;
	}
    if(egyezik(cmd, "/öv") || egyezik(cmd, "/ov"))
	{
		if(RoncsDerby[playerid][rdVersenyez]) return Msg(playerid, "A-A nem csatolhatod ki verseny alatt!");
		if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Kocsiban kell ülnöd!");
		if(IsABicikli(GetPlayerVehicleID(playerid))) return Msg(playerid, "Biciklin?");
		if(IsAMotor(GetPlayerVehicleID(playerid))) return Msg(playerid, "Motoron?");
		if(ov[playerid] == 1)
		{
			Msg(playerid, "Biztonságiöv kicsatolva.");
			ov[playerid] = 0;
			Cselekves(playerid, "kicsatolta az övét");
			return 1;
		}
		else
		{
			Msg(playerid, "Biztonságiöv becsatolva.");
			ov[playerid] = 1;
			Cselekves(playerid, "becsatolta az övét");
			return 1;
		}
	}
	if(egyezik(cmd, "/háztipus") || egyezik(cmd, "/haztipus"))
	{
		if(!Admin(playerid, 1337)) return 1;
		new h = HaznalVan(playerid);
		if(h == NINCS) return Msg(playerid, "Nem vagy ház bejáratánál.");
		if(params < 1)
		{
			Msg(playerid, "/háztipus [Tipus]");
			Msg(playerid, "1: Los Santos, 2: San Fierro");
			Msg(playerid, "3: GazdagNegyed, 4: Falu, 5: Tanya 6: Sziget");
			return 1;
		}
		new t = strval(param[1]);
		if(t < 1 || t > 6) return 1;
		HouseInfo[h][hTipus] = t;
		HazUpdate(h, HAZ_Tipus, t);
		SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Ház (%d) tipusa átírva. (%d)", h, t);
		return 1;
	}
	if(egyezik(cmd, "/csere"))
	{
		if(params < 1) return Msg(playerid, "/Csere [Ház, Jármû, Biznisz, Garázs]");
		if(FloodCheck(playerid)) return 1;
		if(egyezik(param[1], "elfogad"))
		{
			if(MitCsere[playerid] != NINCS)
			{
				if(Csere[playerid] == INVALID_PLAYER_ID)
				{
					Msg(playerid, "A játékos már nem online.");
					Csere[playerid] = NINCS;
					MitCsere[playerid] = NINCS;
				}
				new player = Csere[playerid];
				if(MitCsere[playerid] == 1)
				{
					if(PlayerInfo[playerid][pPcarkey] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					if(PlayerInfo[Csere[playerid]][pPcarkey] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					if(!BankkartyaFizet(player, 25000,false)) return Msg(player, "Nincs ennyi pénzed! 25000 Ft kell!");
					if(!BankkartyaFizet(playerid, 25000,false)) return Msg(player, "Nincs ennyi pénzed! 25000 Ft kell!");
					new nev[MAX_PLAYER_NAME], nev2[MAX_PLAYER_NAME];
					Format(nev, "%s", PlayerName(playerid));
					Format(nev2, "%s", PlayerName(player));
					new kocsi = PlayerInfo[player][pPcarkey];
					new kocsi2 = PlayerInfo[playerid][pPcarkey];
					strmid(CarInfo[kocsi][cOwner], nev, 0, strlen(nev), 25);
					strmid(CarInfo[kocsi2][cOwner], nev2, 0, strlen(nev2), 25);
					PlayerInfo[player][pPcarkey] = kocsi2;
					PlayerInfo[playerid][pPcarkey] = kocsi;
					CarInfo[kocsi][cTulaj] = PlayerInfo[playerid][pID];
					CarInfo[kocsi2][cTulaj] = PlayerInfo[player][pID];
					CarUpdate(kocsi, CAR_Owner, CAR_Tulaj);
					CarUpdate(kocsi2, CAR_Owner, CAR_Tulaj);

					CorrectPlayerDatas(playerid);
					CorrectPlayerDatas(player);

					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elcserélted a jármûved vele: %s", ICPlayerName(player));
					SendFormatMessage(player, COLOR_LIGHTGREEN, "* Elcserélted a jármûved vele: %s", ICPlayerName(playerid));
					Msg(playerid, "25000 Forint adó levonva!");
					Msg(player, "25000 Forint adó levonva!");
					/*GiveMoney(playerid, -25000);
					GiveMoney(player, -25000);*/
					BizPenz(BIZ_IMPORT, 25000);
					BizPenz(BIZ_IMPORT, 25000);
					BankkartyaFizet(player, 25000);
					BankkartyaFizet(playerid, 25000);
					MitCsere[playerid] = NINCS;
					Csere[playerid] = NINCS;
					new vetellog[256];
					format(vetellog, 256, "[/csere kocsi1] - %s(%d - %s) cserélt %s(%d - %s) -el kocsit.",PlayerName(player), kocsi,GetVehicleModelName(GetVehicleModel(kocsi)),PlayerName(playerid), kocsi2,GetVehicleModelName(GetVehicleModel(kocsi2)));
					EgyebLog(vetellog);
				}
				if(MitCsere[playerid] == 2)
				{
					if(PlayerInfo[playerid][pPcarkey2] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					if(PlayerInfo[Csere[playerid]][pPcarkey2] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					if(!BankkartyaFizet(player, 25000,false)) return Msg(player, "Nincs ennyi pénzed! 25000 Ft kell!");
					if(!BankkartyaFizet(playerid, 25000,false)) return Msg(player, "Nincs ennyi pénzed! 25000 Ft kell!");
					new nev[MAX_PLAYER_NAME], nev2[MAX_PLAYER_NAME];
					Format(nev, "%s", PlayerName(playerid));
					Format(nev2, "%s", PlayerName(player));
					new kocsi = PlayerInfo[player][pPcarkey2];
					new kocsi2 = PlayerInfo[playerid][pPcarkey2];
					strmid(CarInfo[kocsi][cOwner], nev, 0, strlen(nev), 25);
					strmid(CarInfo[kocsi2][cOwner], nev2, 0, strlen(nev2), 25);
					PlayerInfo[player][pPcarkey2] = kocsi2;
					PlayerInfo[playerid][pPcarkey2] = kocsi;
					CarInfo[kocsi][cTulaj] = PlayerInfo[playerid][pID];
					CarInfo[kocsi2][cTulaj] = PlayerInfo[player][pID];
					CarUpdate(kocsi, CAR_Owner, CAR_Tulaj);
					CarUpdate(kocsi2, CAR_Owner, CAR_Tulaj);
					CorrectPlayerDatas(playerid);
					CorrectPlayerDatas(player);
					Msg(playerid, "25000 Forint adó levonva!");
					Msg(player, "25000 Forint adó levonva!");
					BizPenz(BIZ_IMPORT, 25000);
					BizPenz(BIZ_IMPORT, 25000);
					BankkartyaFizet(player, 25000);
					BankkartyaFizet(playerid, 25000);

					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elcserélted a jármûved vele: %s", ICPlayerName(player));
					SendFormatMessage(player, COLOR_LIGHTGREEN, "* Elcserélted a jármûved vele: %s", ICPlayerName(playerid));
					MitCsere[playerid] = NINCS;
					Csere[playerid] = NINCS;
					new vetellog[256];
					format(vetellog, 256, "[/csere kocsi2] - %s(%d - %s) cserélt %s(%d - %s) -el kocsit.",PlayerName(playerid),kocsi,GetVehicleModelName(GetVehicleModel(kocsi)),PlayerName(player),kocsi2,GetVehicleModelName(GetVehicleModel(kocsi2)));
					EgyebLog(vetellog);
				}
				if(MitCsere[playerid] == 3)
				{
					if(PlayerInfo[playerid][pPhousekey] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					if(PlayerInfo[Csere[playerid]][pPhousekey] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					new nev[MAX_PLAYER_NAME], nev2[MAX_PLAYER_NAME];
					Format(nev, "%s", PlayerName(playerid));
					Format(nev2, "%s", PlayerName(player));
					new haz = PlayerInfo[player][pPhousekey];
					new haz2 = PlayerInfo[playerid][pPhousekey];
					HouseInfo[haz2][hTulaj] = PlayerInfo[player][pID];
					HouseInfo[haz][hTulaj] = PlayerInfo[playerid][pID];
					strmid(HouseInfo[haz][hOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
					strmid(HouseInfo[haz2][hOwner], nev2, 0, strlen(nev2), MAX_PLAYER_NAME);
					PlayerInfo[player][pPhousekey] =haz2;
					PlayerInfo[playerid][pPhousekey] = haz;
					HazUpdate(haz, HAZ_Owner, HAZ_Tulaj);
					HazUpdate(haz2, HAZ_Owner, HAZ_Tulaj);

					CorrectPlayerDatas(playerid);
					CorrectPlayerDatas(player);

					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elcserélted a házad vele: %s", ICPlayerName(player));
					SendFormatMessage(player, COLOR_LIGHTGREEN, "* Elcserélted a házad vele: %s", ICPlayerName(playerid));
					MitCsere[playerid] = NINCS;
					Csere[playerid] = NINCS;
					new vetellog[256];
					format(vetellog, 256, "[/csere ház1] - %s(%d) cserélt %s(%d) -el házat.",PlayerName(playerid),haz2,PlayerName(player),haz);
					EgyebLog(vetellog);
				}
				if(MitCsere[playerid] == 4)
				{
					if(PlayerInfo[playerid][pPhousekey2] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					if(PlayerInfo[Csere[playerid]][pPhousekey2] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					new nev[MAX_PLAYER_NAME], nev2[MAX_PLAYER_NAME];
					Format(nev, "%s", PlayerName(playerid));
					Format(nev2, "%s", PlayerName(player));
					new haz = PlayerInfo[player][pPhousekey2];
					new haz2 = PlayerInfo[playerid][pPhousekey2];
					HouseInfo[haz2][hTulaj] = PlayerInfo[player][pID];
					HouseInfo[haz][hTulaj] = PlayerInfo[playerid][pID];
					strmid(HouseInfo[haz][hOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
					strmid(HouseInfo[haz2][hOwner], nev2, 0, strlen(nev2), MAX_PLAYER_NAME);
					PlayerInfo[player][pPhousekey2] =haz2;
					PlayerInfo[playerid][pPhousekey2] = haz;
					HazUpdate(haz, HAZ_Owner, HAZ_Tulaj);
					HazUpdate(haz2, HAZ_Owner, HAZ_Tulaj);

					CorrectPlayerDatas(playerid);
					CorrectPlayerDatas(player);

					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elcserélted a házad vele: %s", ICPlayerName(player));
					SendFormatMessage(player, COLOR_LIGHTGREEN, "* Elcserélted a házad vele: %s", ICPlayerName(playerid));
					MitCsere[playerid] = NINCS;
					Csere[playerid] = NINCS;
					new vetellog[256];
					format(vetellog, 256, "[/csere ház2] - %s(%d) cserélt %s(%d) -el házat.",PlayerName(playerid),haz,PlayerName(player),haz2);
					EgyebLog(vetellog);
				}
				if(MitCsere[playerid] == 5)
				{
					if(PlayerInfo[playerid][pPbiskey] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					if(PlayerInfo[Csere[playerid]][pPbiskey] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					new nev[MAX_PLAYER_NAME], nev2[MAX_PLAYER_NAME];
					Format(nev, "%s", PlayerName(playerid));
					Format(nev2, "%s", PlayerName(player));
					new biz = PlayerInfo[player][pPbiskey];
					new biz2 = PlayerInfo[playerid][pPbiskey];
					PlayerInfo[playerid][pPbiskey] = biz;
					PlayerInfo[player][pPbiskey] = biz2;
					strmid(BizzInfo[biz][bOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
					strmid(BizzInfo[biz2][bOwner], nev2, 0, strlen(nev2), MAX_PLAYER_NAME);
					BizzInfo[biz2][bTulaj] = PlayerInfo[player][pID];
					BizzInfo[biz][bTulaj] = PlayerInfo[playerid][pID];
					BizUpdate(biz, BIZ_Owner, BIZ_Tulaj);
					BizUpdate(biz2, BIZ_Owner, BIZ_Tulaj);

					CorrectPlayerDatas(playerid);
					CorrectPlayerDatas(player);

					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elcserélted a bizniszed vele: %s", ICPlayerName(player));
					SendFormatMessage(player, COLOR_LIGHTGREEN, "* Elcserélted a bizniszed vele: %s", ICPlayerName(playerid));
					MitCsere[playerid] = NINCS;
					Csere[playerid] = NINCS;
					new vetellog[256];
					format(vetellog, 256, "[/csere biznisz] - %s(%d) cserélt %s(%d) -el bizniszt.",PlayerName(playerid),biz,PlayerName(player),biz2);
					EgyebLog(vetellog);
				}
				if(MitCsere[playerid] == 6)
				{
					if(PlayerInfo[playerid][pGarazs] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					if(PlayerInfo[Csere[playerid]][pGarazs] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					new nev[MAX_PLAYER_NAME], nev2[MAX_PLAYER_NAME];
					Format(nev, "%s", PlayerName(playerid));
					Format(nev2, "%s", PlayerName(player));
					new gar = PlayerInfo[player][pGarazs];
					new gar2 = PlayerInfo[playerid][pGarazs];

					GarazsInfo[gar2][hTulajid] = PlayerInfo[player][pID];
					GarazsInfo[gar][hTulajid] = PlayerInfo[playerid][pID];
					strmid(GarazsInfo[gar][hOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
					strmid(GarazsInfo[gar2][hOwner], nev2, 0, strlen(nev2), MAX_PLAYER_NAME);

					PlayerInfo[player][pGarazs] =gar2;
					PlayerInfo[playerid][pGarazs] = gar;
					GarazsUpdate(gar, GARAZS_Tulajid, GARAZS_Tulaj);
					GarazsUpdate(gar2, GARAZS_Tulajid, GARAZS_Tulaj);

					CorrectPlayerDatas(playerid);
					CorrectPlayerDatas(player);

					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elcserélted a garázsodat vele: %s", ICPlayerName(player));
					SendFormatMessage(player, COLOR_LIGHTGREEN, "* Elcserélted a garázsodat vele: %s", ICPlayerName(playerid));
					MitCsere[playerid] = NINCS;
					Csere[playerid] = NINCS;
					new vetellog[256];
					format(vetellog, 256, "[/csere garázs] - %s(%d) cserélt %s(%d) -el garázst.",PlayerName(playerid),gar2,PlayerName(player),gar);
					EgyebLog(vetellog);
				}
				if(MitCsere[playerid] == 7)
				{
					if(PlayerInfo[playerid][pPcarkey3] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					if(PlayerInfo[Csere[playerid]][pPcarkey3] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					if(!BankkartyaFizet(player, 25000,false)) return Msg(player, "Nincs ennyi pénzed! 25000 Ft kell!");
					if(!BankkartyaFizet(playerid, 25000,false)) return Msg(player, "Nincs ennyi pénzed! 25000 Ft kell!");
					new nev[MAX_PLAYER_NAME], nev2[MAX_PLAYER_NAME];
					Format(nev, "%s", PlayerName(playerid));
					Format(nev2, "%s", PlayerName(player));
					new kocsi = PlayerInfo[player][pPcarkey3];
					new kocsi2 = PlayerInfo[playerid][pPcarkey3];
					strmid(CarInfo[kocsi][cOwner], nev, 0, strlen(nev), 25);
					strmid(CarInfo[kocsi2][cOwner], nev2, 0, strlen(nev2), 25);
					PlayerInfo[player][pPcarkey3] = kocsi2;
					PlayerInfo[playerid][pPcarkey3] = kocsi;
					CarInfo[kocsi][cTulaj] = PlayerInfo[playerid][pID];
					CarInfo[kocsi2][cTulaj] = PlayerInfo[player][pID];
					CarUpdate(kocsi, CAR_Owner, CAR_Tulaj);
					CarUpdate(kocsi2, CAR_Owner, CAR_Tulaj);
					CorrectPlayerDatas(playerid);
					CorrectPlayerDatas(player);
					Msg(playerid, "25000 Forint adó levonva!");
					Msg(player, "25000 Forint adó levonva!");
					BizPenz(BIZ_IMPORT, 25000);
					BizPenz(BIZ_IMPORT, 25000);
					BankkartyaFizet(player, 25000);
					BankkartyaFizet(playerid, 25000);

					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elcserélted a jármûved vele: %s", ICPlayerName(player));
					SendFormatMessage(player, COLOR_LIGHTGREEN, "* Elcserélted a jármûved vele: %s", ICPlayerName(playerid));
					MitCsere[playerid] = NINCS;
					Csere[playerid] = NINCS;
					new vetellog[256];
					format(vetellog, 256, "[/csere kocsi2] - %s(%d - %s) cserélt %s(%d - %s) -el kocsit.",PlayerName(playerid),kocsi,GetVehicleModelName(GetVehicleModel(kocsi)),PlayerName(player),kocsi2,GetVehicleModelName(GetVehicleModel(kocsi2)));
					EgyebLog(vetellog);
				}
				if(MitCsere[playerid] == 8)
				{
					if(PlayerInfo[playerid][pPhousekey3] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					if(PlayerInfo[Csere[playerid]][pPhousekey3] == NINCS)
					{
						MitCsere[playerid] = NINCS;
						Csere[playerid] = NINCS;
						return 1;
					}
					new nev[MAX_PLAYER_NAME], nev2[MAX_PLAYER_NAME];
					Format(nev, "%s", PlayerName(playerid));
					Format(nev2, "%s", PlayerName(player));
					new haz = PlayerInfo[player][pPhousekey3];
					new haz2 = PlayerInfo[playerid][pPhousekey3];
					HouseInfo[haz2][hTulaj] = PlayerInfo[player][pID];
					HouseInfo[haz][hTulaj] = PlayerInfo[playerid][pID];
					strmid(HouseInfo[haz][hOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
					strmid(HouseInfo[haz2][hOwner], nev2, 0, strlen(nev2), MAX_PLAYER_NAME);
					PlayerInfo[player][pPhousekey3] =haz2;
					PlayerInfo[playerid][pPhousekey3] = haz;
					HazUpdate(haz, HAZ_Owner, HAZ_Tulaj);
					HazUpdate(haz2, HAZ_Owner, HAZ_Tulaj);

					CorrectPlayerDatas(playerid);
					CorrectPlayerDatas(player);

					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elcserélted a házad vele: %s", ICPlayerName(player));
					SendFormatMessage(player, COLOR_LIGHTGREEN, "* Elcserélted a házad vele: %s", ICPlayerName(playerid));
					MitCsere[playerid] = NINCS;
					Csere[playerid] = NINCS;
					new vetellog[256];
					format(vetellog, 256, "[/csere ház3] - %s(%d) cserélt %s(%d) -el házat.",PlayerName(playerid),haz,PlayerName(player),haz2);
					EgyebLog(vetellog);
				}
				Cselekves(playerid, "elcserélt valamit", 1);
			}
			else return Msg(playerid, "Nem ajánlottak cserét.");
		}
		if(egyezik(param[1], "Jármû") || egyezik(param[1], "Jarmu"))
		{
			if(PlayerInfo[playerid][pPcarkey2] != NINCS)
			{
				if(params < 2) return Msg(playerid, "/Csere Jármû [1/2/3]");
			}
			new melyik = strval(param[2]);
			new player;
			player = GetClosestPlayer(playerid);

			if(GetDistanceBetweenPlayers(playerid, player) > 2) return Msg(playerid, "A közeledben nincs senki!");

			if(IsPlayerNPC(player)) return Msg(playerid, "NPC...");

			if(!Logged(player)) return Msg(playerid, "Nincs belépve!");
			if(!BankkartyaFizet(player, 25000,false)) return Msg(player, "Nincs ennyi pénzed! 25000 Ft kell!");
			if(!BankkartyaFizet(playerid, 25000,false)) return Msg(player, "Nincs ennyi pénzed! 25000 Ft kell!");

			if(PlayerInfo[playerid][pPcarkey] == NINCS) return Msg(playerid, "Neked nincs jármûved.");
			if(PlayerInfo[player][pPcarkey] == NINCS) return Msg(playerid, "Neki nincs jármûve.");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elszeretnéd cserélni vele(%s) a jármûveteket.", ICPlayerName(player));
			SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s elszeretné cserélni a jármûveteket. (Elfogadás:(/csere elfogad))", ICPlayerName(playerid));
			Cselekves(playerid, "elszeretné cserélni a jármûvét valakivel.", 1);
			Csere[player] = playerid;
			if(PlayerInfo[playerid][pPcarkey2] != NINCS)
			{
				if(melyik < 1 || melyik > 3) return 1;
				if(melyik == 1)
				{
					MitCsere[player] = 1;
				}
				else if(melyik == 2)
				{
					MitCsere[player] = 2;
				}
				else if(melyik == 3)
				{
					MitCsere[player] = 7;
				}
				return 1;
			}
			MitCsere[player] = 1;
		}
		if(egyezik(param[1], "Ház") || egyezik(param[1], "Haz"))
		{
			if(PlayerInfo[playerid][pPhousekey2] != NINCS)
			{
				if(params < 2) return Msg(playerid, "/Csere Ház [1/2/3]");
			}
			new melyik = strval(param[2]);
			new player;
			player = GetClosestPlayer(playerid);

			if(GetDistanceBetweenPlayers(playerid, player) > 2) return Msg(playerid, "A közeledben nincs senki!");

			if(IsPlayerNPC(player)) return Msg(playerid, "NPC...");

			if(!Logged(player)) return Msg(playerid, "Nincs belépve!");
			if(!BankkartyaFizet(player, 25000,false)) return Msg(player, "Nincs ennyi pénzed! 25000 Ft kell!");
			if(!BankkartyaFizet(playerid, 25000,false)) return Msg(player, "Nincs ennyi pénzed! 25000 Ft kell!");

			if(PlayerInfo[playerid][pPhousekey] == NINCS && PlayerInfo[playerid][pPhousekey2] == NINCS) return Msg(playerid, "Neked nincs házad.");
			if(PlayerInfo[player][pPhousekey] == NINCS && PlayerInfo[playerid][pPhousekey2] == NINCS) return Msg(playerid, "Neki nincs háza.");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elszeretnéd cserélni vele(%s) a házatok.", ICPlayerName(player));
			SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s elszeretné cserélni a házatok. (Elfogadás:(/csere elfogad))", ICPlayerName(playerid));
			Cselekves(playerid, "elszeretné cserélni a házát valakivel.", 1);
			Csere[player] = playerid;
			if(PlayerInfo[playerid][pPhousekey2] != NINCS)
			{
				if(melyik < 1 || melyik > 3) return 1;
				if(melyik == 1)
				{
					MitCsere[player] = 3;
				}
				else if(melyik == 1)
				{
					MitCsere[player] = 4;
				}
				else if(melyik == 2)
				{
					MitCsere[player] = 8;
				}
				return 1;
			}
			MitCsere[player] = 3;

		}
		if(egyezik(param[1], "Biznisz"))
		{
			new player;
			player = GetClosestPlayer(playerid);

			if(GetDistanceBetweenPlayers(playerid, player) > 2) return Msg(playerid, "A közeledben nincs senki!");

			if(IsPlayerNPC(player)) return Msg(playerid, "NPC...");

			if(!Logged(player)) return Msg(playerid, "Nincs belépve!");

			if(PlayerInfo[playerid][pPbiskey] == NINCS) return Msg(playerid, "Neked nincs bizniszed.");
			if(PlayerInfo[player][pPbiskey] == NINCS) return Msg(playerid, "Neki nincs biznisze.");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elszeretnéd cserélni vele(%s) a bizniszeteket.", ICPlayerName(player));
			SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s elszeretné cserélni a bizniszeteket. (Elfogadás:(/csere elfogad))", ICPlayerName(playerid));
			Cselekves(playerid, "elszeretné cserélni a bizniszét valakivel.", 1);
			Csere[player] = playerid;
			MitCsere[player] = 5;
		}
		if(egyezik(param[1], "garázs") || egyezik(param[1], "garazs"))
		{
			new player;
			player = GetClosestPlayer(playerid);

			if(GetDistanceBetweenPlayers(playerid, player) > 2) return Msg(playerid, "A közeledben nincs senki!");

			if(IsPlayerNPC(player)) return Msg(playerid, "NPC...");

			if(!Logged(player)) return Msg(playerid, "Nincs belépve!");

			if(PlayerInfo[playerid][pGarazs] == NINCS) return Msg(playerid, "Neked nincs garázsod.");
			if(PlayerInfo[player][pGarazs] == NINCS ) return Msg(playerid, "Neki nincs garázsa.");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Elszeretnéd cserélni vele(%s) a garázst.", ICPlayerName(player));
			SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s elszeretné cserélni a garázsodat. (Elfogadás:(/csere elfogad))", ICPlayerName(playerid));
			Cselekves(playerid, "elszeretné cserélni a garázsát valakivel.", 1);
			Csere[player] = playerid;
			MitCsere[player] = 6;
		}
	}

	if(egyezik(cmd, "/beépül") || egyezik(cmd, "/beepul"))
	{
		if(!LMT(playerid, FRAKCIO_FBI)) return 1;
		if(LMT(playerid, FRAKCIO_FBI)) return Msg(playerid, "/pda..");
		if(!Munkarang(playerid, 4)) return Msg(playerid, "Minimum 4es rang.");
		if(LMT(playerid, FRAKCIO_FBI) && !PlayerToPoint(30.0, playerid, 285.105, 182.403, 1007.179)) return Msg(playerid, "Az FBI Fõépületében kell lenned.");
		if(params < 1) return Msg(playerid, "/beépül [ruha]");
		new ruha = strval(param[1]);
		if(ruha < 1 || ruha >= MAX_SKIN || SkinData[ruha]) return !Msg(playerid, "Nincs ilyen ruha!");
		SetPlayerSkin(playerid, ruha);
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Felvettél egy álruhát.");
		SendRadioMessageFormat(FRAKCIO_FBI, COLOR_DBLUE, "HQ: %s felvett egy álruhát.", ICPlayerName(playerid));
	}
	if(egyezik(cmd, "/álnév")) //SScanf by Ryan
	{
			if(!LMT(playerid, FRAKCIO_FBI) && !Admin(playerid, 1337)) return 1;
			if(LMT(playerid, FRAKCIO_FBI) && !Admin(playerid, 1337)) return Msg(playerid, "/pda..");
			if(LMT(playerid, FRAKCIO_FBI) && !Munkarang(playerid, 4) && !Admin(playerid, 1337)) return Msg(playerid, "Minimum 4es rang.");
			new result[MAX_PLAYER_NAME];
   			if(sscanf(pms, "s[MAX_PLAYER_NAME]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /álnév [újnév]");

			if(strlen(result) < 1 && PlayerInfo[playerid][pHamisNev] != 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Újra a régi neved van!");
				PlayerInfo[playerid][pHamisNev] = 0;
				return 1;
			}

			if(strlen(result) > MAX_PLAYER_NAME)
			{
				SendFormatMessage(playerid, COLOR_GRAD1, "Maximum %d karakter!", MAX_PLAYER_NAME);
				return 1;
			}

			PlayerInfo[playerid][pHamisNev] = result;
			format(string, sizeof(string), "Az új álneved mostantól %s!", result);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	if(egyezik(cmd, "/benzin"))
	{
		Msg(playerid,"Parancs megváltozott: /üzemanyag");
	}
	if(egyezik(cmd, "/üzemanyag") || egyezik(cmd, "/uzemanyag") || egyezik(cmd, "/ua"))
	{
		if(PlayerInfo[playerid][pAdrJogsi] > 0)
		{
			if(params < 1) return Msg(playerid, "/üzemanyag [Szállítás / Infó / Feltölt / Megrendelések]");
			if(egyezik(param[1], "Infó") || egyezik(param[1], "Info"))
			{
				new kocsi = GetClosestVehicle(playerid, false);
				if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 6.0) return Msg(playerid, "Nincs a közeledben a benzin trailer.");
				if(GetVehicleModel(kocsi) != 584) return Msg(playerid, "Ez nem benzin szállító!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "=======[Infó]=======");
				if(Benzin[kocsi] > 0)
				{
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Tartályban: %d/%d liter benzin van beletöltve.", Benzin[kocsi], MAX_BENZIN_SZALLITAS);
				}
				else if(Diesel[kocsi] > 0)
				{
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Tartályban: %d/%d liter diesel van beletöltve.", Diesel[kocsi], MAX_BENZIN_SZALLITAS);
				}
				else if(Kerozin[kocsi] > 0)
				{
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Tartályban: %d/%d liter kerozin van beletöltve.", Kerozin[kocsi], MAX_BENZIN_SZALLITAS);
				}
				else
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Ez a tartály üres");
			}
			if(egyezik(param[1], "megrendelések") || egyezik(param[1], "megrendelesek") || egyezik(param[1], "ml"))
			{	
				if(!AMT(playerid, MUNKA_KAMIONOS)) return Msg(playerid, "Nem vagy kamionos.");
				SendClientMessage(playerid,COLOR_LIGHTRED,"<=============== Benzinkutak megrendelései ===============>");
				for(new b = 0; b < MAX_BENZINKUT; b++)
				{
					
					if(BenzinKutak[b][bTav] != 0)
					{
						if(BenzinKutak[b][bMelyikvan] == 0)
						{
							if(BenzinKutak[b][bSzef] > 0)
							{	
								new uzemanyag = BenzinKutak[b][bSzef]/300;
								if(uzemanyag > MAX_BENZIN*2)
								{
									SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "*%s(%d): Benzin: %d/%d || Diesel: %d/%d ||| Fizetõképesség: Korlátlan",BenzinKutak[b][bNev],b,BenzinKutak[b][bBenzin],MAX_BENZIN,BenzinKutak[b][bDiesel],MAX_BENZIN);
								}
								else
									SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "*%s(%d): Benzin: %d/%d || Diesel: %d/%d ||| Fizetõképesség: %d liter üzemanyag",BenzinKutak[b][bNev],b,BenzinKutak[b][bBenzin],MAX_BENZIN,BenzinKutak[b][bDiesel],MAX_BENZIN,BenzinKutak[b][bSzef]/300);
							}
							else
							{
								if(egyezik(BenzinKutak[b][bTulaj], "Class_City"))
									SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "*%s(%d): Benzin: %d/%d || Diesel: %d/%d ||| Fizetõképesség: Korlátlan",BenzinKutak[b][bNev],b,BenzinKutak[b][bBenzin],MAX_BENZIN,BenzinKutak[b][bDiesel],MAX_BENZIN);
							}
						}
						else
						{
							if(BenzinKutak[b][bSzef] > 0)
							{
								new uzemanyag = BenzinKutak[b][bSzef]/400;
								if(uzemanyag > MAX_BENZIN)
								{
									SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "*%s(%d): Kerozin: %d/%d ||| Fizetõképesség: Korlátlan",BenzinKutak[b][bNev],b,BenzinKutak[b][bKerozin],MAX_BENZIN);
								}
								else
									SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "*%s(%d): Kerozin: %d/%d ||| Fizetõképesség: %d liter üzemanyag",BenzinKutak[b][bNev],b,BenzinKutak[b][bKerozin],MAX_BENZIN,uzemanyag);
							}
							else
							{
								if(egyezik(BenzinKutak[b][bTulaj], "Class_City"))
									SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "*%s(%d): Kerozin: %d/%d ||| Fizetõképesség: Korlátlan",BenzinKutak[b][bNev],b,BenzinKutak[b][bKerozin],MAX_BENZIN);
							}
						}	
					}
				}	
				SendClientMessage(playerid,COLOR_LIGHTRED,"<=============== Benzinkutak megrendelései ===============>");	
			}
			if(egyezik(param[1], "Szállítás") || egyezik(param[1], "Szallitas"))
			{
				if(!AMT(playerid, MUNKA_KAMIONOS)) return Msg(playerid, "Nem vagy kamionos.");
				if(PlayerInfo[playerid][pKamionJogsi] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nincs kamion jogosítványod. Így nem dolgozhatsz!");

				new trailer = GetVehicleTrailer(veh);

				if(BenzintSzallit[playerid])
				{
					new kut = IsAtGasStation(playerid);
					if(kut == NINCS) return Msg(playerid, "Nem vagy benzinkútnál.");
					if(GetVehicleModel(trailer) != 584)
					{
						//Msg(playerid, "Hiba történt Kérlek jelezd a bugok topikba [benzin szállítás]!");
						Msg(playerid, "Ülj bele a kamionba!");
						return 1;
					}
					new fizetnikell;
					if(Benzin[trailer] > 0)
					{
						if(BenzinKutak[kut][bMelyikvan] == 1) return Msg(playerid, "Ez a kút nem árul benzint/dieselt");
						if(BenzinKutak[kut][bBenzin] == MAX_BENZIN) return Msg(playerid, "Ide nem fér több benzin");
						if(params < 2)
						{
							SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: /üzemanyag Szállítás [Liter(1-%d)]", Benzin[trailer]);
							return 1;
						}
						new liter = strval(param[2]);
						if(Benzin[trailer] <= 0)
							return Msg(playerid, "A benzinszállító üres");

						if(liter < 1 || liter > Benzin[trailer])
						{
							SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: /üzemanyag Szállítás [Liter(1-%d)]", Benzin[trailer]);
							return 1;
						}
						fizetnikell = liter*300;
						if((BenzinKutak[kut][bBenzin] + liter) > MAX_BENZIN)
						{
							SendFormatMessage(playerid, COLOR_LIGHTRED, "* A kúton %d/%d liter benzin van, a megengedetnél nem tudsz többet beletölteni.", BenzinKutak[kut][bBenzin], MAX_BENZIN);
							return 1;
						}
						if(BenzinKutak[kut][bSzef] < fizetnikell)
						{
							if(!egyezik(BenzinKutak[kut][bTulaj],"Class_City"))
							{
								SendFormatMessage(playerid,COLOR_LIGHTRED,"Ez a benzinkút nem tud ennyi benzint kifizetni, csak %d litert!",BenzinKutak[kut][bSzef]/300);
								return 1;	
							}
						}
						if(MunkaFolyamatban[playerid] == 1) return Msg(playerid,"A-a");
						MunkaFolyamatban[playerid] = 1;
						BenzinKutak[kut][bBenzin] += liter;
						Benzin[trailer] -= liter;
						SendClientMessage(playerid, COLOR_LIGHTRED, "* Elkezdted leengedni a benzint...");
						Freeze(playerid);
						SetTimerEx("UzemanyagLeenged", 10000, false, "ddddd", playerid, 0, liter, trailer, kut);

						return 1;
					}
					if(Diesel[trailer] > 0)
					{
						if(BenzinKutak[kut][bMelyikvan] == 1) return Msg(playerid, "Ez a kút nem árul benzint/dieselt");
						if(BenzinKutak[kut][bDiesel] == MAX_BENZIN) return Msg(playerid, "Ide nem fér több diesel");
						if(params < 2)
						{
							SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: /üzemanyag Szállítás [Liter(1-%d)]", Diesel[trailer]);
							return 1;
						}
						new liter = strval(param[2]);
						if(Diesel[trailer] <= 0)
							return Msg(playerid, "A benzinszállító üres");

						if(liter < 1 || liter > Diesel[trailer])
						{
							SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: /üzemanyag Szállítás [Liter(1-%d)]", Diesel[trailer]);
							return 1;
						}
						fizetnikell = liter*300;
						if((BenzinKutak[kut][bDiesel] + liter) > MAX_BENZIN)
						{
							SendFormatMessage(playerid, COLOR_LIGHTRED, "* A kúton %d/%d liter diesel van, a megengedetnél nem tudsz többet beletölteni.", BenzinKutak[kut][bDiesel], MAX_BENZIN);
							return 1;
						}
						if(BenzinKutak[kut][bSzef] < fizetnikell)
						{
							if(!egyezik(BenzinKutak[kut][bTulaj],"Class_City"))
							{	
								SendFormatMessage(playerid,COLOR_LIGHTRED,"Ez a benzinkút nem tud ennyi dieselt kifizetni, csak %d litert!",BenzinKutak[kut][bSzef]/300);
								return 1;
							}
						}
						if(MunkaFolyamatban[playerid] == 1) return Msg(playerid,"A-a");
						MunkaFolyamatban[playerid] = 1;
						BenzinKutak[kut][bDiesel] += liter;
						Diesel[trailer] -= liter;
						SendClientMessage(playerid, COLOR_LIGHTRED, "* Elkezdted leengedni a dieselt...");
						Freeze(playerid);
						SetTimerEx("UzemanyagLeenged", 10000, false, "ddddd", playerid, 1, liter, trailer, kut);

						return 1;
					}
					if(Kerozin[trailer] > 0)
					{
						if(BenzinKutak[kut][bMelyikvan] == 0) return Msg(playerid, "Ez a kút nem árul kerozint");
						if(BenzinKutak[kut][bKerozin] == MAX_BENZIN) return Msg(playerid, "Ide nem fér több kerozin");
						if(params < 2)
						{
							SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: /üzemanyag Szállítás [Liter(1-%d)]", Kerozin[trailer]);
							return 1;
						}
						new liter = strval(param[2]);
						if(Kerozin[trailer] <= 0)
							return Msg(playerid, "A benzinszállító üres");

						if(liter < 1 || liter > Kerozin[trailer])
						{
							SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: /üzemanyag Szállítás [Liter(1-%d)]", Kerozin[trailer]);
							return 1;
						}
						fizetnikell = liter*400;
						if((BenzinKutak[kut][bKerozin] + liter) > MAX_BENZIN)
						{
							SendFormatMessage(playerid, COLOR_LIGHTRED, "* A kúton %d/%d liter erozin van, a megengedetnél nem tudsz többet beletölteni.", BenzinKutak[kut][bKerozin], MAX_BENZIN);
							return 1;
						}
						if(BenzinKutak[kut][bSzef] < fizetnikell) 
						{
							if(!egyezik(BenzinKutak[kut][bTulaj],"Class_City"))
							{	
								SendFormatMessage(playerid,COLOR_LIGHTRED,"Ez a benzinkút nem tud ennyi kerozint kifizetni, csak %d litert!",BenzinKutak[kut][bSzef]/400);
								return 1;
							}	
						}
						if(MunkaFolyamatban[playerid] == 1) return Msg(playerid,"A-a");
						MunkaFolyamatban[playerid] = 1;
						BenzinKutak[kut][bKerozin] += liter;
						Kerozin[trailer] -= liter;
						SendClientMessage(playerid, COLOR_LIGHTRED, "* Elkezdted leengedni a kerozint...");
						Freeze(playerid);
						SetTimerEx("UzemanyagLeenged", 10000, false, "ddddd", playerid, 2, liter, trailer, kut);

						return 1;
					}
					
				}
				if(!PlayerToPoint(15.0, playerid, 2644.954, -2116.757, 13.546) && !PlayerToPoint(15.0, playerid, -1723.1182, 108.8135, 2.5422) && !PlayerToPoint(15.0, playerid, 261.5496,1446.1270,11.5899))
				{
					if(PlayerToPoint(5000.0, playerid, 2644.954, -2116.757, 13.546))
					{
						Msg(playerid, "Térképed jelzi hol kell felvenni.");
						SetPlayerCheckpoint(playerid, 2644.954, -2116.757, 13.546, 15.0);
						return 1;
					}
					else if(PlayerToPoint(5000.0, playerid, -1723.1182, 108.8135, 2.5422))
					{
						Msg(playerid, "Térképed jelzi hol kell felvenni.");
						SetPlayerCheckpoint(playerid, -1723.1182, 108.8135, 2.5422, 15.0);
						return 1;
					}
					else if(PlayerToPoint(5000.0, playerid, 261.5496,1446.1270,11.5899))
					{
						Msg(playerid, "Térképed jelzi hol kell felvenni.");
						SetPlayerCheckpoint(playerid, 261.5496,1446.1270,11.5899, 15.0);
						return 1;
					}
					else
					{
						Msg(playerid, "Térképed jelzi hol kell felvenni.");
						SetPlayerCheckpoint(playerid, -1723.1182, 108.8135, 2.5422, 10.0);
						return 1;
					}	
				}	
				if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy jármûben.");
				new kocsi = GetPlayerVehicleID(playerid);
				if(!IsATruck(kocsi)) return Msg(playerid, "Kamionban kell lenned.");
				if(GetPlayerDistanceFromVehicle(playerid, trailer) > 13) return Msg(playerid, "Vedd fel a üzemanyag tartájt.");
				if(GetVehicleModel(trailer) != 584) return Msg(playerid, "Ez nem üzemanyag szállító!");
				if(Benzin[trailer] < 1 && Diesel[trailer] < 1 && Kerozin[trailer] < 1) return Msg(playerid, "Nincs feltöltve a szállító, töltsd fel. (/üzemanyag feltölt)");
				BenzintSzallit[playerid] = true;
				Msg(playerid, "Vidd valamelyik benzinkúthoz és írd be újra a parancsot(/üzemanyag szállítás)");
			}
			if(egyezik(param[1], "feltölt"))
			{
				if(!AMT(playerid, MUNKA_KAMIONOS)) return Msg(playerid, "Nem vagy kamionos.");
				if(!PlayerToPoint(15.0, playerid, 2644.954, -2116.757, 13.546) && !PlayerToPoint(15.0, playerid, -1723.1182, 108.8135, 2.5422) && !PlayerToPoint(15.0, playerid, 261.5496,1446.1270,11.5899))
				{
					if(PlayerToPoint(500.0, playerid, 2644.954, -2116.757, 13.546))
					{
						Msg(playerid, "Térképed jelzi hol kell felvenni.");
						SetPlayerCheckpoint(playerid, 2644.954, -2116.757, 13.546, 15.0);
						return 1;
					}
					else if(PlayerToPoint(500.0, playerid, -1723.1182, 108.8135, 2.5422))
					{
						Msg(playerid, "Térképed jelzi hol kell felvenni.");
						SetPlayerCheckpoint(playerid, -1723.1182, 108.8135, 2.5422, 15.0);
						return 1;
					}
					else if(PlayerToPoint(500.0, playerid, 261.5496,1446.1270,11.5899))
					{
						Msg(playerid, "Térképed jelzi hol kell felvenni.");
						SetPlayerCheckpoint(playerid, 261.5496,1446.1270,11.5899, 15.0);
						return 1;
					}
					else
					{
						Msg(playerid, "Térképed jelzi hol kell felvenni.");
						SetPlayerCheckpoint(playerid, -1723.1182, 108.8135, 2.5422, 10.0);
						return 1;
					}	
				}
				if(params < 3)
				{
					SendFormatMessage(playerid,  COLOR_LIGHTRED, "ClassRPG: /Benzin Feltölt [Benzin / Diesel / Kerozin] [Liter(1-%d)]", MAX_BENZIN_SZALLITAS);
					return 1;
				}
				if(MunkaFolyamatban[playerid] == 1) return Msg(playerid,"A-a");
				new trailer = GetClosestVehicle(playerid);
				if(GetPlayerDistanceFromVehicle(playerid, trailer) > 6.0) return Msg(playerid, "Álj a trailerhez");
				if(GetVehicleModel(trailer) != 584) return Msg(playerid, "Ez nem benzin szállító. Álj a trailerhez!");
				//if(Benzin[trailer] > MAX_BENZIN_SZALLITAS || Benzin[trailer] > MAX_BENZIN_SZALLITAS || Benzin[trailer] > MAX_BENZIN_SZALLITAS) return Msg(playerid, "A tartáj tele van");
				if(MunkaFolyamatban[playerid]) return Msg(playerid, "Jah persze, rögtön 10 csövet raksz rá, és 6000 literes lesz a tartály mi?");
				if(egyezik(param[2], "benzin"))
				{
					if(Diesel[trailer] > 0 || Kerozin[trailer] > 0) return Msg(playerid, "Ebben már van valami más, ne keverd a két üzemanyagot!");
					new liter = strval(param[3]);
					if(liter < 1 || liter > MAX_BENZIN_SZALLITAS) return Msg(playerid, "Hibás liter szám.");
					if((Benzin[trailer] + liter) > MAX_BENZIN_SZALLITAS) return Msg(playerid, "Ennyi benzin nem fér bele.");
					SendClientMessage(playerid, COLOR_LIGHTRED, "* Elkezdted feltölteni a tartályt...");
					Freeze(playerid);
					MunkaFolyamatban[playerid] = 1;
					SendFormatMessage(playerid, COLOR_YELLOW, "%d",liter);
					//Munkavege(playerid, Munka, db, db2, db3)
					
					Uzemanyag[playerid][ptanker] = trailer;
					Uzemanyag[playerid][pliter] = liter;
					Uzemanyag[playerid][ptipus] = 0;
					SetTimerEx("Munkavege", 10000, false, "ddd", playerid, M_BENZINTRAILER, trailer, liter, 0);
					
				}
				else if(egyezik(param[2], "diesel"))
				{
					if(Benzin[trailer] > 0 || Kerozin[trailer] > 0) return Msg(playerid, "Ebben már van valami más, ne keverd a két üzemanyagot!");
					new liter = strval(param[3]);
					if(liter < 1 || liter > MAX_BENZIN_SZALLITAS) return Msg(playerid, "Hibás liter szám.");
					if((Diesel[trailer] + liter) > MAX_BENZIN_SZALLITAS) return Msg(playerid, "Ennyi üzemanyag nem fér bele.");
					SendClientMessage(playerid, COLOR_LIGHTRED, "* Elkezdted feltölteni a tartályt...");
					Freeze(playerid);
					MunkaFolyamatban[playerid] = 1;
					SetTimerEx("Munkavege", 10000, false, "ddd", playerid, M_BENZINTRAILER, trailer, liter, 1);
					Uzemanyag[playerid][ptanker] = trailer;
					Uzemanyag[playerid][pliter] = liter;
					Uzemanyag[playerid][ptipus] = 1;
				}
				else if(egyezik(param[2], "kerozin"))
				{
					if(Diesel[trailer] > 0 || Benzin[trailer] > 0) return Msg(playerid, "Ebben már van valami más, ne keverd a két üzemanyagot!");
					new liter = strval(param[3]);
					if(liter < 1 || liter > MAX_BENZIN_SZALLITAS) return Msg(playerid, "Hibás liter szám.");
					if((Kerozin[trailer] + liter) > MAX_BENZIN_SZALLITAS) return Msg(playerid, "Ennyi üzemanyag nem fér bele.");
					SendClientMessage(playerid, COLOR_LIGHTRED, "* Elkezdted feltölteni a tartályt...");
					Freeze(playerid);
					MunkaFolyamatban[playerid] = 1;
					SetTimerEx("Munkavege", 10000, false, "ddd", playerid, M_BENZINTRAILER, trailer, liter, 2);
					Uzemanyag[playerid][ptanker] = trailer;
					Uzemanyag[playerid][pliter] = liter;
					Uzemanyag[playerid][ptipus] = 2;
				}
				BenzintSzallit[playerid] = true;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "=======Nincs ADR engedélyed, ezért nem szállíthatsz üzemanyagot.=======");
		}
	}
	if(egyezik(cmd, "/termekek") || egyezik(cmd, "/termékek"))
	{
		SendClientMessage(playerid, COLOR_GRAD2, "|1 Telefon | 2 Telefonkönyv | 3 GPS | 4 Vontatókötél");
		SendClientMessage(playerid, COLOR_GRAD2, "|5 Kötszer | 6 Sorsjegy | 7 Dobókocka");
		SendClientMessage(playerid, COLOR_GRAD2, "|8 Csirke| 9 Hamburger | 10 Pizza | 11 Szendvics");
		SendClientMessage(playerid, COLOR_GRAD2, "|12 SzendvicsPack | 13 Cigi | 14 Vihargyújtó | 15 Nikotin tapasz | 16 Kis cs. Óvszer");
		SendClientMessage(playerid, COLOR_GRAD2, "|17 Nagy cs. Óvszer | 18 Laptop | 19 Horgászbot | 20 Csali | 21 MP4");
		SendClientMessage(playerid, COLOR_GRAD2, "|22 Csipogó | 23 Virágcsokor | 24 Fejkendõ | 25 Vészhívó | 26 Vészhívó");
		SendClientMessage(playerid, COLOR_GRAD2, "|27 Frakció rádió | 28 Mikulás sapka | 29 Mikulás csomag | 30 Virgács");
		SendClientMessage(playerid, COLOR_GRAD2, "|31 Mobilnet");
	}
	
	if(egyezik(cmd, "/arlista") || egyezik(cmd, "/árlista"))
	{
		new melyikbolt = IsBoltbaVan(playerid);
		new marcibuzi = GetPlayerVirtualWorld(playerid);
		if(melyikbolt == NINCS) return Msg(playerid,"Nem vagy boltban!");
		
		if(params < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "|1 Telefon | 2 Telefonkönyv | 3 GPS | 4 Vontatókötél");
			SendClientMessage(playerid, COLOR_GRAD2, "|5 Kötszer | 6 Sorsjegy | 7 Dobókocka");
			SendClientMessage(playerid, COLOR_GRAD2, "|8 Csirke| 9 Hamburger | 10 Pizza | 11 Szendvics");
			SendClientMessage(playerid, COLOR_GRAD2, "|12 SzendvicsPack | 13 Cigi | 14 Vihargyújtó | 15 Nikotin tapasz | 16 Kis cs. Óvszer");
			SendClientMessage(playerid, COLOR_GRAD2, "|17 Nagy cs. Óvszer | 18 Laptop | 19 Horgászbot | 20 Csali | 21 MP4");
			SendClientMessage(playerid, COLOR_GRAD2, "|22 Csipogó | 23 Virágcsokor | 24 Fejkendõ | 25 Vészhívó | 26 Vészhívó");
			SendClientMessage(playerid, COLOR_GRAD2, "|27 Frakció rádió | 28 Mikulás sapka | 29 Mikulás csomag | 30 Virgács");
			SendClientMessage(playerid, COLOR_GRAD2, "|31 Mobilnet");
		
			Msg(playerid, "/árlista [Termék neve / ID]");
			return 1;
		}
		
		if(egyezik(param[1], "telefon") || egyezik(param[1], "1"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Telefon ára: - %dFt", Boltok[marcibuzi][bTelefon]);
			
		if(egyezik(param[1], "telefonkönyv") || egyezik(param[1], "telefonkonyv") || egyezik(param[1], "2"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Telefonkönyv ára: - %dFt", Boltok[marcibuzi][bTeloKonyv]);
			
		if(egyezik(param[1], "gps") || egyezik(param[1], "3"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* GPS ára: - %dFt", Boltok[marcibuzi][bGPS]);
			
		if(egyezik(param[1], "vontatókötél") || egyezik(param[1], "vontatokotel") || egyezik(param[1], "4"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Vontatókötél ára: - %dFt", Boltok[marcibuzi][bVontatokotel]);
			
		if(egyezik(param[1], "kötszer") || egyezik(param[1], "kotszer") || egyezik(param[1], "5"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Kötszer ára: - %dFt", Boltok[marcibuzi][bKotszer]);
			
		if(egyezik(param[1], "sorsjegy") || egyezik(param[1], "6"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Kaparós sorsjegy ára: - %dFt", Boltok[marcibuzi][bSorsjegy]);
			
		if(egyezik(param[1], "kocka") || egyezik(param[1], "dobokocka") || egyezik(param[1], "dobókocka") || egyezik(param[1], "7"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Telefon ára: - %dFt", Boltok[marcibuzi][bKocka]);

		if(egyezik(param[1], "csirke") || egyezik(param[1], "8"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Fagyasztott csirke ára: - %dFt", Boltok[marcibuzi][bCsirke]);

		if(egyezik(param[1], "hamburger") || egyezik(param[1], "9"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Fagyasztott hamburger ára: - %dFt", Boltok[marcibuzi][bHambi]);

		if(egyezik(param[1], "pizza") || egyezik(param[1], "10"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Fagyasztott pizza ára: - %dFt", Boltok[marcibuzi][bPizza]);

		if(egyezik(param[1], "szendvics") || egyezik(param[1], "11"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Szendvics ára: - %dFt", Boltok[marcibuzi][bSzendvics]);

		if(egyezik(param[1], "szendvicspack") || egyezik(param[1], "12"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Szendvics csomag ára: - %dFt", Boltok[marcibuzi][bSzendvicsCsomag]);

		if(egyezik(param[1], "cigi") || egyezik(param[1], "13"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Egy doboz cigi ára: - %dFt", Boltok[marcibuzi][bCigi]);

		if(egyezik(param[1], "öngyújtó") || egyezik(param[1], "vihargyújtó") || egyezik(param[1], "vihargyujto") || egyezik(param[1], "14"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Telefon ára: - %dFt", Boltok[marcibuzi][bGyujto]);

		if(egyezik(param[1], "nikotintapasz") || egyezik(param[1], "15"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Nikotin tapasz ára: - %dFt", Boltok[marcibuzi][bNikotinTapasz]);

		if(egyezik(param[1], "kisovszer") || egyezik(param[1], "kisóvszer") || egyezik(param[1], "16"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Kis csomag óvszer ára: - %dFt", Boltok[marcibuzi][bKisOvszer]);

		if(egyezik(param[1], "nagyovszer") || egyezik(param[1], "nagyóvszer") || egyezik(param[1], "17"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Nagy csomag óvszer ára: - %dFt", Boltok[marcibuzi][bNagyOvszer]);

		if(egyezik(param[1], "laptop") || egyezik(param[1], "18"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Laptop ára: - %dFt", Boltok[marcibuzi][bLaptop]);

		if(egyezik(param[1], "horgaszbot") || egyezik(param[1], "horgászbot") || egyezik(param[1], "19"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Horgászbot ára: - %dFt", Boltok[marcibuzi][bHorgaszbot]);

		if(egyezik(param[1], "csali") || egyezik(param[1], "20"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Csali ára: - %dFt", Boltok[marcibuzi][bCsali]);

		if(egyezik(param[1], "mpnegy") || egyezik(param[1], "mp4") || egyezik(param[1], "21"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* MP4 ára: - %dFt", Boltok[marcibuzi][bMP]);

		if(egyezik(param[1], "csipogo") || egyezik(param[1], "csipogó") || egyezik(param[1], "22"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Csipogó ára: - %dFt", Boltok[marcibuzi][bCsipogo]);

		if(egyezik(param[1], "viragcsokor") || egyezik(param[1], "virágcsokor") || egyezik(param[1], "23"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Virágcsokor: - %dFt", Boltok[marcibuzi][bViragcsokor]);

		if(egyezik(param[1], "fejkendo") || egyezik(param[1], "fejkendõ") || egyezik(param[1], "24"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Fejkendõ ára: - %dFt", Boltok[marcibuzi][bFejkendo]);
			
		if(egyezik(param[1], "veszhivo") || egyezik(param[1], "vészhívó") || egyezik(param[1], "25"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Vészhívó ára: - %dFt", Boltok[marcibuzi][bVeszhivo]);
			
		if(egyezik(param[1], "veszhivocsomag") || egyezik(param[1], "vészhívócsomag") || egyezik(param[1], "26"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Vészhívó csomag ára: - %dFt", Boltok[marcibuzi][bVeszhivoCsomag]);

		if(egyezik(param[1], "radio") || egyezik(param[1], "rádió") || egyezik(param[1], "27"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Frakció rádió ára: - %dFt", Boltok[marcibuzi][bFkRadio]);

		if(egyezik(param[1], "mikulassapka") || egyezik(param[1], "mikulássapka") || egyezik(param[1], "28"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Mikulás sapka ára: - %dFt", Boltok[marcibuzi][bMikiSapi]);

		if(egyezik(param[1], "mikulascsomag") || egyezik(param[1], "mikuláscsomag") || egyezik(param[1], "29"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Nagy csomag óvszer ára: - %dFt", Boltok[marcibuzi][bMikiCsomi]);

		if(egyezik(param[1], "virgacs") || egyezik(param[1], "virgács") || egyezik(param[1], "30"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Virgács ára: - %dFt", Boltok[marcibuzi][bVirgacs]);

		if(egyezik(param[1], "mobilnet") || egyezik(param[1], "31"))
			return SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Mobilnet ára: - %dFt", Boltok[marcibuzi][bMobilnet]);
	}
	
	if(egyezik(cmd, "/bolt"))
	{
		new melyikbolt = IsBoltbaVan(playerid);
		if(params < 1)
		{
			if(IsScripter(playerid) || Admin(playerid, 1340))
			{
				Msg(playerid, "/bolt [Funkció]");
				Msg(playerid, "Funkciók: Áthelyez, Bejárat, Go, Adat, Törlés");
				return 1;
			}
			else if(melyikbolt != NINCS && SQLID(playerid) == Boltok[melyikbolt][boltTulajID])
			{
				Msg(playerid, "/bolt [Funkció]");
				Msg(playerid, "Funkciók: Infó, Adat");
				return 1;
			}
			else
			{
				Msg(playerid, "/bolt [Funkció]");
				Msg(playerid, "Funkció: Infó");
				return 1;
			}
		}
		if(egyezik(param[1], "adat"))
		{
			new marcibuzi = IsBoltbaVan(playerid);
			if(marcibuzi == NINCS) return Msg(playerid, "Nem vagy boltban.");
			if(SQLID(playerid) != Boltok[marcibuzi][boltTulajID] && !IsScripter(playerid) && !Admin(playerid, 1338)) return Msg(playerid,"Ez a bolt nem a tiéd!");
			if(params < 2)
			{	
				Msg(playerid, "/bolt adat [Funkció]");
				Msg(playerid, "Funkció: ár, széf, átad, név");
				return 1;
			}
			if(egyezik(param[2], "átad") || egyezik(param[2], "atad"))
			{
				//new vwgeec = GetPlayerVirtualWorld(playerid);
				//new intigeec = GetPlayerInterior(playerid);
				if(SQLID(playerid) != Boltok[marcibuzi][boltTulajID] && !Admin(playerid, 1340)) return Msg(playerid,"Ez a bolt nem a tied...");
				if(params < 3) return Msg(playerid, "/bolt adat átad [játékos]");
				new player = ReturnUser(param[3]);
				if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
				
				if(PlayerInfo[player][pBoltTulaj] != NINCS) return Msg(playerid,"Neki már van három boltja!");
				
				
				if(GetDistanceBetweenPlayers(playerid, player) > 2)
					return Msg(playerid, "Nincs a közeledben!");
				if(Boltok[marcibuzi][boltSzef] < 0) 
				{
					Msg(playerid,"Mivel minuszba van a széf levontuk tõled....");
					PenzLevesz(playerid, Boltok[marcibuzi][boltSzef]);
				}	
				
				Boltok[marcibuzi][boltTulajID] = SQLID(player);	
				strmid(Boltok[marcibuzi][boltTulaj], PlayerName(player), 0, strlen(PlayerName(player)), 255);
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*A boltodat átadtad neki %s", ICPlayerName(player));
				SendClientMessage(player, COLOR_LIGHTGREEN, "*Te lettél ennek a boltnak a tulaja.");
				BoltAdatFrissites(marcibuzi);
				CorrectPlayerDatas(playerid);
				CorrectPlayerDatas(player);
			}
			if(egyezik(param[2], "ár") || egyezik(param[2], "ar"))
			{
				Msg(playerid,"Termékek nevei: /termekek");
				if(!Admin(playerid, 1340) && !IsScripter(playerid) && SQLID(playerid) != Boltok[marcibuzi][boltTulajID]) return 1;
				if(params < 4) return Msg(playerid, "/bolt adat ár [Termék neve / ID] [Ára]");
			
				if(egyezik(param[3], "telefon") || egyezik(param[3], "1"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bTelefon] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Telefon ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}	
				if(egyezik(param[3], "telefonkönyv") || egyezik(param[3], "telefonkonyv") || egyezik(param[3], "2"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bTeloKonyv] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Telefonkönyv ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "gps") || egyezik(param[3], "3"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bGPS] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* GPS ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "vontatókötél") || egyezik(param[3], "vontatokotel") || egyezik(param[3], "4"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bVontatokotel] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Vontatókötél ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "kötszer") || egyezik(param[3], "kotszer") || egyezik(param[3], "5"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bKotszer] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Kötszer ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "sorsjegy") || egyezik(param[3], "6"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bSorsjegy] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Kaparós sorsjegy ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "kocka") || egyezik(param[3], "dobokocka") || egyezik(param[3], "dobókocka") || egyezik(param[3], "7"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bKocka] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Telefon ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "csirke") || egyezik(param[3], "8"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bCsirke] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Fagyasztott csirke ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "hamburger") || egyezik(param[3], "9"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bHambi] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Fagyasztott hamburger ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "pizza") || egyezik(param[3], "10"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bPizza] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Fagyasztott pizza ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "szendvics") || egyezik(param[3], "11"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bSzendvics] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Szendvics ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "szendvicspack") || egyezik(param[3], "12"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bSzendvicsCsomag] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Szendvics csomag ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "cigi") || egyezik(param[3], "13"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bCigi] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Egy doboz cigi ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "öngyújtó") || egyezik(param[3], "vihargyújtó") || egyezik(param[3], "vihargyujto") || egyezik(param[3], "14"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bGyujto] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Telefon ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "nikotintapasz") || egyezik(param[3], "15"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bNikotinTapasz] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Nikotin tapasz ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "kisovszer") || egyezik(param[3], "kisóvszer") || egyezik(param[3], "16"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bKisOvszer] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Kis csomag óvszer ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "nagyovszer") || egyezik(param[3], "nagyóvszer") || egyezik(param[3], "17"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bNagyOvszer] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Nagy csomag óvszer ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "laptop") || egyezik(param[3], "18"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bLaptop] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Laptop ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "horgaszbot") || egyezik(param[3], "horgászbot") || egyezik(param[3], "19"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bHorgaszbot] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Horgászbot ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "csali") || egyezik(param[3], "20"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bCsali] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Csali ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "mpnegy") || egyezik(param[3], "mp4") || egyezik(param[3], "21"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bMP] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* MP4 ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "csipogo") || egyezik(param[3], "csipogó") || egyezik(param[3], "22"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bCsipogo] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Csipogó ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "viragcsokor") || egyezik(param[3], "virágcsokor") || egyezik(param[3], "23"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bViragcsokor] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Virágcsokor átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "fejkendo") || egyezik(param[3], "fejkendõ") || egyezik(param[3], "24"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bFejkendo] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Fejkendõ ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "veszhivo") || egyezik(param[3], "vészhívó") || egyezik(param[3], "25"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bVeszhivo] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Vészhívó ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "veszhivocsomag") || egyezik(param[3], "vészhívócsomag") || egyezik(param[3], "26"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bVeszhivoCsomag] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Vészhívó csomag ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "radio") || egyezik(param[3], "rádió") || egyezik(param[3], "27"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bFkRadio] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Frakció rádió ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "mikulassapka") || egyezik(param[3], "mikulássapka") || egyezik(param[3], "28"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bMikiSapi] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Mikulás sapka ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "mikulascsomag") || egyezik(param[3], "mikuláscsomag") || egyezik(param[3], "29"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bMikiCsomi] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Nagy csomag óvszer ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "virgacs") || egyezik(param[3], "virgács") || egyezik(param[3], "30"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bVirgacs] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Virgács ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "mobilnet") || egyezik(param[3], "31"))
				{
					new ar = strval(param[4]);
					if(ar < 0 || ar > 500000) return Msg(playerid,"Nem-nem! 0 - 500.000 Ft");
					Boltok[marcibuzi][bMobilnet] = ar;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Mobilnet ára átírva - %dFt", ar);
					BoltAdatFrissites(marcibuzi);
				}
				return 1;
			}
			if(egyezik(param[2], "Széf") || egyezik(param[2], "szef"))
			{
				if(params < 4)
				{
					Msg(playerid, "/bolt adat széf [be / ki] [összeg]");
					SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Jelenleg %dFt van benne.", Boltok[marcibuzi][boltSzef]);
					BoltAdatFrissites(marcibuzi);
					return 1;
				}
				new osszeg = strval(param[4]);
				if(osszeg < 1) return Msg(playerid, "Te mit csinálsz?!");
				if(egyezik(param[3], "be"))
				{
					if(GetMoney(playerid) < osszeg) return Msg(playerid, "Nincs elég pénzed.");
					GiveMoney(playerid, -osszeg);
					Boltok[marcibuzi][boltSzef] += osszeg;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Beraktál a széfbe %dFt-ot, most %dFt van benne.", osszeg, Boltok[marcibuzi][boltSzef]);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "ki"))
				{
					if(Boltok[marcibuzi][boltSzef] < osszeg) return Msg(playerid, "Nincs elég pénz a széfben.");
					GiveMoney(playerid, osszeg);
					Boltok[marcibuzi][boltSzef] -= osszeg;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Kivettél a széfbõl %dFt-ot, most %dFt van benne.", osszeg, Boltok[marcibuzi][boltSzef]);
					BoltAdatFrissites(marcibuzi);
				}
			}
			if(egyezik(param[2], "prod"))
			{
				//new melyikbolt = IsBoltbaVan(playerid);
				if(params < 3)
				{
					if(IsScripter(playerid) || Admin(playerid, 1340))
					{
						Msg(playerid, "/bolt adat prod [Funkció]");
						Msg(playerid, "Funkciók: maxprod, prodmennyiség, prodár, prodleadás, megnéz");
						return 1;
					}
					else if(melyikbolt != NINCS && SQLID(playerid) == Boltok[melyikbolt][boltTulajID])
					{
						Msg(playerid, "/bolt [Funkció]");
						Msg(playerid, "Funkciók: prodar, megnéz ");
						return 1;
					}
					else
					{
						Msg(playerid, "Nem-nem!");
						return 1;
					}
				}
				if(egyezik(param[3], "maxprod"))
				{
					if(!IsScripter(playerid)) return Msg(playerid, "Te mit képzelsz?");
					if(params < 4) return Msg(playerid, "/bolt adat prod maxprod [összeg]");
					new osszeg = strval(param[4]);
					if(osszeg < 1 || osszeg > 5000) return Msg(playerid, "Te mit csinálsz?!");
					Boltok[marcibuzi][boltMaxProdMennyiseg] = osszeg;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Átállítottad a Maximum Prodot %ddb-ra (Bolt ID: %d)", Boltok[marcibuzi][boltMaxProdMennyiseg], marcibuzi);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "prodmennyiség") || egyezik(param[3], "prodmennyiseg"))
				{
					if(!IsScripter(playerid)) return Msg(playerid, "Te mit képzelsz?");
					if(params < 4) return Msg(playerid, "/bolt adat prod prodmennyiség [összeg]");
					new osszeg = strval(param[4]);
					if(osszeg < 1 || osszeg > Boltok[marcibuzi][boltMaxProdMennyiseg]) return Msg(playerid, "Te mit csinálsz?!");
					Boltok[marcibuzi][boltProdMennyiseg] = osszeg;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Átállítottad a Prodok számát %ddb-ra (Bolt ID: %d)", Boltok[marcibuzi][boltProdMennyiseg], marcibuzi);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "prodar") || egyezik(param[3], "prodár"))
				{
					if(params < 4) return Msg(playerid, "/bolt adat prod prodar [összeg]");
					new osszeg = strval(param[4]);
					if(osszeg < 1200 || osszeg > 50000) return Msg(playerid, "Azért hülye ne legyél már...Köszi (1,200 - 50,000 Ft)");
					Boltok[marcibuzi][boltProdVetelAr] = osszeg;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Átállítottad a Prod vételárat %dFt-ra (Bolt ID: %d)", Boltok[marcibuzi][boltProdVetelAr], marcibuzi);
					BoltAdatFrissites(marcibuzi);
				}
				if(egyezik(param[3], "megnéz"))
				{
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Jelenlegi prod vételára: %dFt prod mennyisége pedig: %ddb (Bolt ID: %d)", Boltok[marcibuzi][boltProdVetelAr],Boltok[marcibuzi][boltProdMennyiseg], marcibuzi);
				}
				if(egyezik(param[3], "prodleadas") || egyezik(param[3], "prodleadás"))
				{
					if(!IsScripter(playerid)) return Msg(playerid, "Te mit képzelsz?");
					
					if(params < 5)
						return Msg(playerid, "/bolt adat prod prodleadas [BoltID] [Táv]");
					
					
					/*new boltocska = strval(param[4]);
					boltocska = Boltok[marcibuzi][boltPozVW];*/
					
					marcibuzi = strval(param[4]);
					
					new Float:X, Float:Y, Float:Z;
					new Float:tav = strval(param[5]);
					GetPlayerPos(playerid, X,Y,Z);
					Boltok[marcibuzi][boltAruPosX] = X;
					Boltok[marcibuzi][boltAruPosY] = Y;
					Boltok[marcibuzi][boltAruPosZ] = Z;
					Boltok[marcibuzi][boltAruTav] = tav;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Átállítottad a Prod leadási helyét! (Új Koord.: X: %f Y: %f Z: %f Távolság: %f) ID:%d)", Boltok[marcibuzi][boltAruPosX],Boltok[marcibuzi][boltAruPosY],Boltok[marcibuzi][boltAruPosZ],Boltok[marcibuzi][boltAruTav], marcibuzi);
					BoltAdatFrissites(marcibuzi);
				}
				
			}
			if(egyezik(param[2], "Név") || egyezik(param[2], "nev"))
			{
				if(params < 3)
				{
					Msg(playerid, "/bolt adat név [név]");
					SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Jelenleg %s a neve.", Boltok[marcibuzi][boltNev]);
					return 1;
				}
				new result[128]; 
				if(sscanf(pms, "{s[4]}{s[3]}s[128]", result))
					return SendClientMessage(playerid, COLOR_WHITE, "/bolt adat név [név]");
	
				if(SpecKarakterek(result, ",/\\():;|"))
					return Msg(playerid, "A névben hibás karakterek vannak!");

				strmid(Boltok[marcibuzi][boltNev], result, 0, strlen(result), 255);
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* A bolt neve %s lett.", result);
				BoltAdatFrissites(marcibuzi);
			}
		}
		if(egyezik(param[1], "Info") || egyezik(param[1], "Infó"))
		{
			new b = 0;
			for(new k = 0; k < MAX_BOLTOK; k++)
			{
				if(GetPlayerVirtualWorld(playerid) == Boltok[k][boltPozVW])
				{
					b = 1;
					SendFormatMessage(playerid, COLOR_LIGHTRED,"============[Bolt Infó - %s]============", Boltok[k][boltNev]);
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Tulaj: %s", Boltok[k][boltTulaj]); 
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "*Bolt árai: /árlista ");
					return 1;
				}
			}
			if(b < 1) return Msg(playerid, "Nem vagy boltban.");
		}
		
		if(egyezik(param[1], "áthelyez") || egyezik(param[1], "athelyez"))
		{
			if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;
			if(params < 2)
			{
				Msg(playerid, "/bolt áthelyez [Bolt ID]");
				Msg(playerid , "Ha újat raksz le, elõbb nézd meg hogy nincs-e már valahova lerakva! (/bolt [go] [id])");
				return 1;
			}
			new marcibuzi = strval(param[2]);
			if(marcibuzi < 0 || marcibuzi > MAX_BOLTOK)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Az ID nem lehet kissebb mint 0, és nem lehet nagyobb mint %d", MAX_BOLTOK);
				return 1;
			}
			new vwgenyo   = GetPlayerVirtualWorld(playerid);
			new intigenyo = GetPlayerInterior(playerid);
			if(Boltok[marcibuzi][boltTulajID] == 0)
			{
				strmid(Boltok[marcibuzi][boltTulaj], "Class_City", 0, strlen("Class_City"), 20);
				strmid(Boltok[marcibuzi][boltNev], "Onkormanyzati_CBA", 0, strlen("Onkormanyzati_CBA"), 34);
				Boltok[marcibuzi][boltMaxProdMennyiseg] = 1000;
				Boltok[marcibuzi][boltProdVetelAr] = 1200;
				Boltok[marcibuzi][boltProdMennyiseg] = 500;
				Boltok[marcibuzi][bTelefon] = 50000;
				Boltok[marcibuzi][bTeloKonyv] = 5000;
				Boltok[marcibuzi][bGPS] = 40000;
				Boltok[marcibuzi][bVontatokotel] = 40000;
				Boltok[marcibuzi][bKotszer] = 1200;
				Boltok[marcibuzi][bSorsjegy] = 500;
				Boltok[marcibuzi][bKocka] = 800;
				Boltok[marcibuzi][bCsirke] = 1500;
				Boltok[marcibuzi][bHambi] = 1500;
				Boltok[marcibuzi][bPizza] = 1500;
				Boltok[marcibuzi][bSzendvics] = 1300;
				Boltok[marcibuzi][bSzendvicsCsomag] = 7000;
				Boltok[marcibuzi][bCigi] = 1500;
				Boltok[marcibuzi][bGyujto] = 1300;
				Boltok[marcibuzi][bNikotinTapasz] = 3500;
				Boltok[marcibuzi][bKisOvszer] = 1200;
				Boltok[marcibuzi][bNagyOvszer] = 2200;
				Boltok[marcibuzi][bLaptop] = 250000;
				Boltok[marcibuzi][bHorgaszbot] = 15000;
				Boltok[marcibuzi][bCsali] = 3500;
				Boltok[marcibuzi][bMP] = 11000;
				Boltok[marcibuzi][bCsipogo] = 4500;
				Boltok[marcibuzi][bViragcsokor] = 3200;
				Boltok[marcibuzi][bFejkendo] = 1900;
				Boltok[marcibuzi][bVeszhivo] = 15000;
				Boltok[marcibuzi][bVeszhivoCsomag] = 80000;
				Boltok[marcibuzi][bFkRadio] = 50000;
				Boltok[marcibuzi][bMikiSapi] = 3500;
				Boltok[marcibuzi][bMikiCsomi] = 5000;
				Boltok[marcibuzi][bVirgacs] = 1400;
				Boltok[marcibuzi][bMobilnet] = 40000;
			}
			Boltok[marcibuzi][boltPozVW] = vwgenyo;
			Boltok[marcibuzi][boltPozInti] = intigenyo;
			AKTIV_BOLTOK++;
			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s lerakott/áthelyezett egy boltot >>", AdminName(playerid));
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* %d számú bolt átrakva! (VW: %d Inti: %d)", marcibuzi, vwgenyo, intigenyo);
			BoltAdatFrissites(marcibuzi);
		}
		if(egyezik(param[1], "Go"))
		{
			if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;
			if(params < 2) return Msg(playerid, "/bolt Go [Bolt ID]");
			
			new marcibuzi = strval(param[2]);
			if(marcibuzi < 0 || marcibuzi > MAX_BOLTOK)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Az ID nem lehet kissebb mint 0, és nem lehet nagyobb mint %d", MAX_BOLTOK);
				return 1;
			}
			if (Boltok[marcibuzi][boltBejaratPosX] < 1 && Boltok[marcibuzi][boltBejaratPosY] < 1 && Boltok[marcibuzi][boltBejaratPosZ] < 1)
				return Msg(playerid,"Ennek a boltnak nincs beállítva bejárati pozíciója!");
			SetPlayerPos(playerid, Boltok[marcibuzi][boltBejaratPosX], Boltok[marcibuzi][boltBejaratPosY], Boltok[marcibuzi][boltBejaratPosZ]);
			
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Teleportálva a %d számú bolthoz.. ", marcibuzi);
		}
		if(egyezik(param[1], "bejárat") || egyezik(param[1], "bejarat"))
		{
			if(!Admin(playerid, 1340) && !IsScripter(playerid)) return 1;
			if(params < 2) return Msg(playerid, "/bolt bejárat [Bolt ID]");
			new marcibuzi = strval(param[2]);
			if(marcibuzi < 0 || marcibuzi > MAX_BOLTOK)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Az ID nem lehet kissebb mint 0, és nem lehet nagyobb mint %d", MAX_BOLTOK-1);
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			Boltok[marcibuzi][boltBejaratPosX] = X;
			Boltok[marcibuzi][boltBejaratPosY] = Y;
			Boltok[marcibuzi][boltBejaratPosZ] = Z;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* A %d számú bolt bejárata átállítva..", marcibuzi);
		}
		if(egyezik(param[1], "törlés") || egyezik(param[1], "torles"))
		{
			if(!Admin(playerid, 1340) && !IsScripter(playerid)) return 1;
			if(params < 1) return Msg(playerid, "/bolt törlés");
			if(!IsBoltbaVan(playerid)) return Msg(playerid,"Nem vagy egy boltban sem!");
			new vwgenyo   = GetPlayerVirtualWorld(playerid);
			new intigenyo = GetPlayerInterior(playerid);
			new marcibuzi;
			if(params < 2)  marcibuzi = melyikbolt;
			else marcibuzi = strval(param[2]);
			
			
			Boltok[marcibuzi][boltTulajID] = NINCS;
			
			Boltok[marcibuzi][bTelefon] = 0;
			Boltok[marcibuzi][bTeloKonyv] = 0;
			Boltok[marcibuzi][bGPS] = 0;
			Boltok[marcibuzi][bVontatokotel] = 0;
			Boltok[marcibuzi][bKotszer] = 0;
			Boltok[marcibuzi][bSorsjegy] = 0;
			Boltok[marcibuzi][bKocka] = 0;
			Boltok[marcibuzi][bCsirke] = 0;
			Boltok[marcibuzi][bHambi] = 0;
			Boltok[marcibuzi][bPizza] = 0;
			Boltok[marcibuzi][bSzendvics] = 0;
			Boltok[marcibuzi][bSzendvicsCsomag] = 0;
			Boltok[marcibuzi][bCigi] = 0;
			Boltok[marcibuzi][bGyujto] = 0;
			Boltok[marcibuzi][bNikotinTapasz] = 0;
			Boltok[marcibuzi][bKisOvszer] = 0;
			Boltok[marcibuzi][bNagyOvszer] = 0;
			Boltok[marcibuzi][bLaptop] = 0;
			Boltok[marcibuzi][bHorgaszbot] = 0;
			Boltok[marcibuzi][bCsali] = 0;
			Boltok[marcibuzi][bMP] = 0;
			Boltok[marcibuzi][bCsipogo] = 0;
			Boltok[marcibuzi][bViragcsokor] = 0;
			Boltok[marcibuzi][bFejkendo] = 0;
			Boltok[marcibuzi][bVeszhivo] = 0;
			Boltok[marcibuzi][bVeszhivoCsomag] = 0;
			Boltok[marcibuzi][bFkRadio] = 0;
			Boltok[marcibuzi][bMikiSapi] = 0;
			Boltok[marcibuzi][bMikiCsomi] = 0;
			Boltok[marcibuzi][bVirgacs] = 0;
			Boltok[marcibuzi][bMobilnet] = 0;
			
			strmid(Boltok[marcibuzi][boltTulaj], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 255);
			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s törölt egy boltot(%d) >>", AdminName(playerid), marcibuzi);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* %d számú bolt törölve! (VW: %d Inti: %d)", marcibuzi, vwgenyo, intigenyo);
			BoltAdatFrissites(marcibuzi);
		}	
	}
	if(egyezik(cmd, "/benzinkút") || egyezik(cmd, "/benzinkut"))
	{
		new melyikkut = IsAtGasStation(playerid);
		if(params < 1)
		{
			if(IsScripter(playerid) || Admin(playerid, 1338))
			{
				Msg(playerid, "/Benzinkút [Funkció]");
				Msg(playerid, "Funkció(k): Áthelyez, Go, Infó, aInfó, Adat, Bérlés, törlés");
				return 1;
			}
			else if(melyikkut != NINCS && SQLID(playerid) == BenzinKutak[melyikkut][bTulajID])
			{
				Msg(playerid, "/Benzinkút [Funkció]");
				Msg(playerid, "Funkció(k): Infó, Adat, Bérlés");
				return 1;
			}
			else
			{
				Msg(playerid, "/Benzinkút [Funkció]");
				Msg(playerid, "Funkció(k): Infó");
				return 1;
			}
		}
		if(egyezik(param[1], "adat"))
		{
			new bid = IsAtGasStation(playerid);
			if(bid == NINCS) return Msg(playerid, "Nem vagy benzinkútnál.");
			if(SQLID(playerid) != BenzinKutak[bid][bTulajID] && !IsScripter(playerid) && !Admin(playerid, 1338)) return Msg(playerid,"Ez a benzinkút nem a tiéd!");
			if(params < 2)
			{	
				if(IsScripter(playerid) || Admin(playerid, 1338))
				{
					Msg(playerid, "/Benzinkút adat [Funkció]");
					Msg(playerid, "Funkció(k):Üzemanyag, Ár, Széf, Név, Tankolható, Bérelhetõ, Alapára");
					return 1;
				}
				else if(SQLID(playerid) == BenzinKutak[bid][bTulajID])
				{
					Msg(playerid, "/Benzinkút adat [Funkció]");
					Msg(playerid, "Funkció(k): Ár, Széf, Név");
					return 1;
				}
			}	
			//if(params < 2) return Msg(playerid, "/Benzinkút adat [Név / Széf / Ár / Üzemanyag / Tankolható / Alapára]");
			if(egyezik(param[2], "üzemanyag") || egyezik(param[2], "uzemanyag"))
			{
				if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;
				if(params < 4) return Msg(playerid, "/Benzinkút adat üzemanyag [Benzin / Diesel / Kerozin] [liter]");
				if(egyezik(param[3], "benzin"))
				{
					new liter = strval(param[4]);
					if(liter < 0 || liter > 5000) return 1;
					BenzinKutak[bid][bBenzin] = liter;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Liter szám átírva - %dl", liter);
					BenzinKutFrissites(bid);
				}	
				if(egyezik(param[3], "diesel"))
				{
					new liter = strval(param[4]);
					if(liter < 0 || liter > 5000) return 1;
					BenzinKutak[bid][bDiesel] = liter;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Liter szám átírva - %dl", liter);
					BenzinKutFrissites(bid);
				}
				if(egyezik(param[3], "kerozin"))
				{
					new liter = strval(param[4]);
					if(liter < 0 || liter > 5000) return 1;
					BenzinKutak[bid][bKerozin] = liter;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Liter szám átírva - %dl", liter);
					BenzinKutFrissites(bid);
				}
				return 1;
			}
			if(egyezik(param[2], "ár"))
			{
				if(params < 4)
				{
					Msg(playerid, "/Benzinkút adat ár [Benzin / Diesel / Kerozin] [összeg]");
					SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Jelenleg %dFt a benzin ára.", BenzinKutak[bid][bBenzinAra]);
					SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Jelenleg %dFt a diesel ára.", BenzinKutak[bid][bDieselAra]);
					SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Jelenleg %dFt a kerozin ára.", BenzinKutak[bid][bKerozinAra]);
					return 1;
				}
				if(egyezik(param[3], "benzin"))
				{
					if(BenzinKutak[bid][bMelyikvan] == 1) return Msg(playerid,"Ennél a benzinkútnál nem árusítható benzin és diesel");
					new osszeg = strval(param[4]);
					if(osszeg < 300 || osszeg > 600) return Msg(playerid, "Minimum 300Ft, Maximum 600Ft.");
					BenzinKutak[bid][bBenzinAra] = osszeg;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* A benzin ára most már %dFt", BenzinKutak[bid][bBenzinAra]);
					BenzinKutFrissites(bid);
				}	
				if(egyezik(param[3], "diesel"))
				{
					if(BenzinKutak[bid][bMelyikvan] == 1) return Msg(playerid,"Ennél a benzinkútnál nem árusítható benzin és diesel");
					new osszeg = strval(param[4]);
					if(osszeg < 300 || osszeg > 600) return Msg(playerid, "Minimum 300Ft, Maximum 600Ft.");
					BenzinKutak[bid][bDieselAra] = osszeg;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* A diesel ára most már %dFt", BenzinKutak[bid][bDieselAra]);
					BenzinKutFrissites(bid);
				}
				if(egyezik(param[3], "kerozin"))
				{
					if(BenzinKutak[bid][bMelyikvan] == 0) return Msg(playerid,"Ennél a benzinkútnál nem árusítható kerozin");
					new osszeg = strval(param[4]);
					if(osszeg < 400 || osszeg > 800) return Msg(playerid, "Minimum 400Ft, Maximum 800Ft.");
					BenzinKutak[bid][bKerozinAra] = osszeg;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* A kerozin ára most már %dFt", BenzinKutak[bid][bKerozinAra]);
					BenzinKutFrissites(bid);
				}
			}
			if(egyezik(param[2], "Széf"))
			{
				if(params < 4)
				{
					Msg(playerid, "/Benzinkút adat széf [be / ki] [összeg]");
					SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Jelenleg %dFt van benne.", BenzinKutak[bid][bSzef]);
					BenzinKutFrissites(bid);
					return 1;
				}
				new osszeg = strval(param[4]);
				if(osszeg < 1) return Msg(playerid, "Te mit csinálsz??");
				if(egyezik(param[3], "be"))
				{
					if(GetMoney(playerid) < osszeg) return Msg(playerid, "Nincs elég pénzed.");
					GiveMoney(playerid, -osszeg);
					BenzinKutak[bid][bSzef] += osszeg;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Beraktál a széfbe %dFt-ot, most %dFt van benne.", osszeg, BenzinKutak[bid][bSzef]);
					BenzinKutFrissites(bid);
				}
				if(egyezik(param[3], "ki"))
				{
					if(BenzinKutak[bid][bSzef] < osszeg) return Msg(playerid, "Nincs elég pénz a széfben.");
					GiveMoney(playerid, osszeg);
					BenzinKutak[bid][bSzef] -= osszeg;
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Kivettél a széfbõl %dFt-ot, most %dFt van benne.", osszeg, BenzinKutak[bid][bSzef]);
					BenzinKutFrissites(bid);
				}
			}
			if(egyezik(param[2], "Név"))
			{
				if(params < 3)
				{
					Msg(playerid, "/Benzinkút adat név [név]");
					SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Jelenleg %s a neve.", BenzinKutak[bid][bNev]);
					return 1;
				}
				new result[128]; //sscanf by Ryan
				if(sscanf(pms, "{s[4]}{s[3]}s[128]", result))
					return SendClientMessage(playerid, COLOR_WHITE, "/Benzinkút adat név [név]");
	
				if(SpecKarakterek(result, ",/\\():;|"))
					return Msg(playerid, "A névben hibás karakterek vannak!");

				strmid(BenzinKutak[bid][bNev], result, 0, strlen(result), 255);
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Benzinkút neve %s lett.", result);
				BenzinKutFrissites(bid);
			}
			if(egyezik(param[2], "tankolhato") || egyezik(param[2], "tankolható"))
			{
				if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;
				if(params < 4) return Msg(playerid, "/Benzinkút adat tankolható [Benzinkút ID] [0(Benzin & Diesel) vagy 1(Kerozin)]");
				new kut = strval(param[3]);	
				new szam = strval(param[4]);
				if(szam < 0 || szam > 1) return Msg(playerid,"Mondom 0 vagy 1");
				BenzinKutak[kut][bMelyikvan] = szam;
				Msg(playerid,"Kész");
				BenzinKutFrissites(kut);
				return 1;
			}
			if(egyezik(param[2], "alapara") || egyezik(param[2], "alapára"))
			{
				if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;
				if(params < 4) return Msg(playerid, "/Benzinkút adat alapára [Benzinkút ID] [Bérlés ár(1 napra vonatkozóan)]");
				new k = strval(param[3]);	
				new szam = strval(param[4]);
				if(szam < 0) return Msg(playerid,"Nem 0...!");
				BenzinKutak[k][bAlapAra] = szam;
				SendFormatMessage(playerid,COLOR_LIGHTBLUE,"A %d számú benzinkút napi bérlés díja: %d FT",k, BenzinKutak[k][bAlapAra]);
				BenzinKutFrissites(k);
				return 1;
			}
			if(egyezik(param[2], "berelheto") || egyezik(param[2], "bérelhetõ"))
			{
				if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;
				if(params < 3) return Msg(playerid, "/Benzinkút adat bérelhetõ [Benzinkút ID]");
				new k = strval(param[3]);	
				if(k < 0 || k > MAX_BENZINKUT) return Msg(playerid,"Hiba");
				if(BenzinKutak[k][bBerelheto] == 0)
				{
					BenzinKutak[k][bBerelheto] = 1;
					Msg(playerid,"Bérelhetõ!");
				}
				else
				{
					BenzinKutak[k][bBerelheto] = 0;
					Msg(playerid,"Nem bérelhetõ!");
				}	
				BenzinKutFrissites(k);
				return 1;
			}
		}
		if(egyezik(param[1], "bérlés"))
		{
			if(params < 2) return Msg(playerid, "/benzinkút bérlés [Átad/Felmond/Kibérel/idõ]");
			new bid = IsAtGasStation(playerid);
			if(bid == NINCS) return Msg(playerid, "Nem vagy benzinkútnál.");
			if(egyezik(param[2], "átad") || egyezik(param[2], "atad"))
			{
				if(SQLID(playerid) != BenzinKutak[bid][bTulajID] && !Admin(playerid, 1338)) return Msg(playerid,"Ez a kút nem a tied...");
				if(params < 3) return Msg(playerid, "/benzinkút bérlés átad [játékos]");
				new player = ReturnUser(param[3]);
				if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
				if(PlayerInfo[player][pBenzinkut] != NINCS) return Msg(playerid,"Neki már van egy benzinkút bérlése");
				if(GetDistanceBetweenPlayers(playerid, player) > 2)
					return Msg(playerid, "Nincs a közeledben!");
				if(BenzinKutak[bid][bSzef] < 0) 
				{
					Msg(playerid,"Mivel minuszba van a széf levontuk tõled....");
					PenzLevesz(playerid, BenzinKutak[bid][bSzef]);
				}	
				BenzinKutak[bid][bTulajID] = SQLID(player);	
				strmid(BenzinKutak[bid][bTulaj], PlayerName(player), 0, strlen(PlayerName(player)), 255);
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*A benzinkutadat átadtad neki %s", ICPlayerName(player));
				SendClientMessage(player, COLOR_LIGHTGREEN, "*Te lettél ennek a benzinkútnak a tulaja.");
				BenzinKutFrissites(bid);
				CorrectPlayerDatas(playerid);
				CorrectPlayerDatas(player);
			}
			if(egyezik(param[2], "kibérel") || egyezik(param[2], "kiberel"))
			{
				if(BenzinKutak[bid][bBerelheto] != 1) return Msg(playerid,"Ezt egyenlõre nem lehet bérelni!");
				if(BenzinKutak[bid][bAlapAra] == 0) return Msg(playerid,"Ezt egyenlõre nem lehet bérelni!");
				if(BenzinKutak[bid][bTulajID] != NINCS && BenzinKutak[bid][bTulajID] != SQLID(playerid)) return Msg(playerid, "Ezt a benzinkútat már bérlik!");
				if(PlayerInfo[playerid][pBenzinkut] != NINCS && BenzinKutak[bid][bTulajID] != SQLID(playerid)) return Msg(playerid,"Neked már van egy benzinkút bérlésed");
				if(params < 3) return Msg(playerid,"Használata: /benzinkút bérlés kibérel [Bérlési idõ(nap)]");
				new ido = strval(param[3]);
				if(BenzinKutak[bid][bTulajID] == SQLID(playerid))
				{	
					new mostaniido;
					mostaniido = floatround((BenzinKutak[bid][bBerlesIdo]-UnixTime)/86400);		
					if(ido+mostaniido < 7 || ido+mostaniido > 90) return Msg(playerid,"A bérlés nem lehet több, mint 90 nap vagy nem lehet kevesebb mint 7 nap)");
				}
				else
					if(ido < 7 || ido > 90) return Msg(playerid,"A bérlés nem lehet több, mint 90 nap vagy nem lehet kevesebb mint 7 nap)");
				
				new kutara; 
				if(BenzinKutak[bid][bTulajID] != SQLID(playerid))
				{
					kutara = (BenzinKutak[bid][bAlapAra]*ido)+(BenzinKutak[bid][bBenzin]*300)+(BenzinKutak[bid][bDiesel]*300)+(BenzinKutak[bid][bKerozin]*400);
				}
				else
					kutara = BenzinKutak[bid][bAlapAra]*ido;
				
				if(!BankkartyaFizet(playerid, kutara))
				{
					SendFormatMessage(playerid,COLOR_LIGHTRED,"Nincs elég pénzed,erre az idõre a kút bérlése %d Ft", kutara);
					return 1;
				}
				if(BenzinKutak[bid][bTulajID] != SQLID(playerid))
				{	
					BenzinKutak[bid][bSzef] = 0;
					BenzinKutak[bid][bBerlesIdo] = UnixTime+(ido*86400);
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Kibérelted a kutat, %d napra, a bérlés ára volt: %d",ido, kutara);
				}
				else if(BenzinKutak[bid][bTulajID] == SQLID(playerid))
				{
					new mostido = floatround((BenzinKutak[bid][bBerlesIdo]-UnixTime)/86400);	
					BenzinKutak[bid][bBerlesIdo] = UnixTime+((mostido+ido)*86400);
					SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Meghosszabbítottad a bérlésedet, %d nappal, a bérlés ára volt: %d",ido, kutara);
				}
				BenzinKutak[bid][bTulajID] = SQLID(playerid);
				strmid(BenzinKutak[bid][bTulaj], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 255);
				BenzinKutFrissites(bid);
				CorrectPlayerDatas(playerid);
			}
			if(egyezik(param[2], "felmond"))
			{
				if(SQLID(playerid) != BenzinKutak[bid][bTulajID]) return Msg(playerid,"Ez a kút nem a tied...");
				if(BenzinKutak[bid][bSzef] < 0) 
				{
					Msg(playerid,"Mivel minuszba van a széf levontuk tõled....");
					PenzLevesz(playerid, BenzinKutak[bid][bSzef]);
				}
				BenzinKutak[bid][bTulajID] = NINCS;
				strmid(BenzinKutak[bid][bTulaj], "Class_City", 0, strlen("Class_City"), 20);
				Msg(playerid,"Felmondtad a kutadat");
				BenzinKutFrissites(bid);
				CorrectPlayerDatas(playerid);
			}
			if(egyezik(param[2], "afelmond"))
			{
				if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;
				if(strlen(BenzinKutak[bid][bTulaj]) < 1) return Msg(playerid, "Ezt a benzinkútat nem bérlik.");
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Felbontottad a szerzõdést, a bérlõ %s volt.", BenzinKutak[bid][bTulaj]);
				strmid(BenzinKutak[bid][bTulaj], "Class_City", 0, strlen("Class_City"), 20);
				BenzinKutak[bid][bTulajID] = NINCS;
				BenzinKutFrissites(bid);
			}
			if(egyezik(param[2], "idõ"))
			{
				new ido;
				if( BenzinKutak[bid][bBerlesIdo] < 0)
					BenzinKutak[bid][bBerlesIdo] = 0;
				ido = floatround((BenzinKutak[bid][bBerlesIdo]-UnixTime)/86400);
				
				if(ido < 1)
				{
					ido = floatround((BenzinKutak[bid][bBerlesIdo]-UnixTime)/3600);
					if(ido < 1)
					{
						ido = floatround((BenzinKutak[bid][bBerlesIdo]-UnixTime)/60);
						SendFormatMessage(playerid,COLOR_LIGHTBLUE,"A benzinkút bérlés %d perc múlva jár le...", ido);
					}
					else
						SendFormatMessage(playerid,COLOR_LIGHTBLUE,"A benzinkút bérlés %d óra múlva jár le...", ido);
				}
				else
					SendFormatMessage(playerid,COLOR_LIGHTBLUE,"A benzinkút bérlés %d nap múlva jár le...", ido);
			}
		}
		if(egyezik(param[1], "Info") || egyezik(param[1], "Infó"))
		{
			new b = 0;
			for(new k = 0; k < MAX_BENZINKUT; k++)
			{
				if(PlayerToPoint(BenzinKutak[k][bTav], playerid, BenzinKutak[k][bPosX], BenzinKutak[k][bPosY], BenzinKutak[k][bPosZ]))
				{
					b = 1;
					SendFormatMessage(playerid, COLOR_LIGHTRED,"============[Benzinkút Infó - %s]============", BenzinKutak[k][bNev]);
					if(BenzinKutak[k][bMelyikvan] == 0)
					{
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Tulaj: %s", BenzinKutak[k][bTulaj]); 
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Benzin: %dFt/liter",BenzinKutak[k][bBenzinAra]);
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Diesel: %dFt/liter",BenzinKutak[k][bDieselAra]);
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*A kúton %d/10000 liter benzin van.", BenzinKutak[k][bBenzin]);
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*A kúton %d/10000 liter diesel van.", BenzinKutak[k][bDiesel]);
					}
					else if(BenzinKutak[k][bMelyikvan] == 1)
					{
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Tulaj: %s", BenzinKutak[k][bTulaj]); 
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Kerozin: %dFt/liter",BenzinKutak[k][bKerozinAra]);
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*A kúton %d/10000 liter kerozin van.", BenzinKutak[k][bKerozin]);
					}
					return 1;
				}
			}
			if(b < 1) return Msg(playerid, "Nem vagy benzinkútnál.");
		}
		if(egyezik(param[1], "aInfo") || egyezik(param[1], "aInfó"))
		{
			if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;
			if(params < 1) return Msg(playerid, "/Benzinkút aInfó [Benzinkút ID]");
			new bid;
			if(params < 2)  bid = melyikkut;
			else bid = strval(param[2]);
			if(bid < 0 || bid > MAX_BENZINKUT)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Az ID nem lehet kissebb mint 0, és nem lehet nagyobb mint %d", MAX_BENZINKUT);
				return 1;
			}
			SendFormatMessage(playerid, COLOR_LIGHTRED, "============[Benzinkút Infó - %s]============", BenzinKutak[bid][bNev]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Tulaj: %s", BenzinKutak[bid][bTulaj]); 
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Benzin: %dFt/liter",BenzinKutak[bid][bBenzinAra]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Diesel: %dFt/liter",BenzinKutak[bid][bDieselAra]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "*Kerozin: %dFt/liter",BenzinKutak[bid][bKerozinAra]);

			if(BenzinKutak[bid][bMelyikvan] == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN,"Tankolható: Benzin és diesel");
			}
			else if(BenzinKutak[bid][bMelyikvan] == 1)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN,"Tankolható: Kerozin");
			}	
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* A kúton %d/10000 liter benzin van.", BenzinKutak[bid][bBenzin]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* A kúton %d/10000 liter diesel van.", BenzinKutak[bid][bDiesel]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* A kúton %d/10000 liter kerozin van.", BenzinKutak[bid][bKerozin]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Koordináta: X: %f | Y: %f | Z: %f | HatóTávolság: %f", BenzinKutak[bid][bPosX], BenzinKutak[bid][bPosY], BenzinKutak[bid][bPosZ], BenzinKutak[bid][bTav]);
		}
		if(egyezik(param[1], "áthelyez") || egyezik(param[1], "athelyez"))
		{
			if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;
			if(params < 3)
			{
				Msg(playerid, "/Benzinkút Áthelyez [Benzinkút ID] [HatóTávolság]");
				Msg(playerid , "Mielött átrakod, nézd meg hogy nem-e van már valahova lerakva! (/benzinkút go id)");
				Msg(playerid , "Átlagos távolság: 5-25");
				return 1;
			}
			new bid = strval(param[2]);
			new Float:tav = strval(param[3]);
			if(tav < 5 || tav > 25) return Msg(playerid, "A távolság 5 és 25 között lehet.");
			if(bid < 0 || bid > MAX_BENZINKUT)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Az ID nem lehet kissebb mint 0, és nem lehet nagyobb mint %d", MAX_BENZINKUT);
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			if(BenzinKutak[bid][bTulajID] == NINCS)
				strmid(BenzinKutak[bid][bTulaj], "Class_City", 0, strlen("Class_City"), 20);
			BenzinKutak[bid][bPosX] = X;
			BenzinKutak[bid][bPosY] = Y;
			BenzinKutak[bid][bPosZ] = Z;
			BenzinKutak[bid][bTav] = tav;
			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s lerakott/áthelyezett egy benzinkútat >>", AdminName(playerid));
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* %d számú benzinkút átrakva! (Koordínáta: X: %f | Y: %f | Z: %f | HatóTávolság: %f)", bid, X, Y, Z, tav);
			BenzinKutFrissites(bid);
		}
		if(egyezik(param[1], "Go"))
		{
			if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;
			if(params < 2) return Msg(playerid, "/Benzinkút Go [Benzinkút ID]");
			new bid = strval(param[2]);
			if(bid < 0 || bid > MAX_BENZINKUT)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Az ID nem lehet kissebb mint 0, és nem lehet nagyobb mint %d", MAX_BENZINKUT);
				return 1;
			}
			SetPlayerPos(playerid,  BenzinKutak[bid][bPosX], BenzinKutak[bid][bPosY], BenzinKutak[bid][bPosZ]);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Teleportálva a %d számú benzinkúthoz.. (Koordínáta: X: %f | Y: %f | Z: %f | HatóTávolság: %f)", bid, BenzinKutak[bid][bPosX], BenzinKutak[bid][bPosY], BenzinKutak[bid][bPosZ], BenzinKutak[bid][bTav]);
		}
		if(egyezik(param[1], "törlés") || egyezik(param[1], "torles"))
		{
			if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;
			if(params < 1) return Msg(playerid, "/Benzinkút törlés [Benzinkút ID]");
			
			new bid;
			if(params < 2)  bid = melyikkut;
			else bid = strval(param[2]);
			
			if(bid < 0 || bid > MAX_BENZINKUT) return SendFormatMessage(playerid, COLOR_LIGHTRED, "* Az ID nem lehet kissebb mint 0, és nem lehet nagyobb mint %d", MAX_BENZINKUT);

			BenzinKutak[bid][bPosX] = 0;
			BenzinKutak[bid][bPosY] = 0;
			BenzinKutak[bid][bPosZ] = 0;
			BenzinKutak[bid][bTav] = 0;
			BenzinKutak[bid][bBenzin] = 0;
			BenzinKutak[bid][bBenzinAra] = 300;
			BenzinKutak[bid][bKerozinAra] = 400;
			BenzinKutak[bid][bDieselAra] = 300;
			BenzinKutak[bid][bDiesel] = 0;
			BenzinKutak[bid][bKerozin] = 0;
			BenzinKutak[bid][bTulajID] = NINCS;
			BenzinKutak[bid][bBerlesIdo] = 0;
			BenzinKutak[bid][bAlapAra] = 0;
			BenzinKutak[bid][bBerelheto] = 0;
			strmid(BenzinKutak[bid][bTulaj], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 255);
			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s törölt egy benzinkútat(%d) >>", AdminName(playerid), bid);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* %d számú benzinkút törölve! (Koordínáta: X: %f | Y: %f | Z: %f | HatóTávolság: %f)", bid, BenzinKutak[bid][bPosX], BenzinKutak[bid][bPosY], BenzinKutak[bid][bPosZ], BenzinKutak[bid][bTav]);
			BenzinKutFrissites(bid);
		}	
	}
	if(egyezik(cmd, "/pickups"))
	{
		if(!Admin(playerid,1340)) return 1;
		if(params < 1) return Msg(playerid, "/pickups [Go / Pos / Üres / töröl]");

		if(egyezik(param[1], "go"))
		{
			if(params < 2) return Msg(playerid, "/pickups go [PICKUP ID]");
			new pickid = strval(param[2]);
			if(pickid < 0 || pickid > MAX_PICKUP) return Msg(playerid, "Hibás PICKUP ID.");
			SetPlayerPos(playerid, PICKUP[pickid][pPosX], PICKUP[pickid][pPosY], PICKUP[pickid][pPosZ]);
			SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "* Teleportáltál a PICKUP-hoz. (ID: %d - Koordínáta: X: %f | Y: %f | Z: %f) ", pickid, PICKUP[pickid][pPosX], PICKUP[pickid][pPosY], PICKUP[pickid][pPosZ]);
		}
		if(egyezik(param[1], "pos"))
		{
			if(params < 3)
			{
				Msg(playerid, "/pickups [Go, pos]");
				Msg(playerid, "ID-k: szív: 1240 | Páncél:1242 | Info: 1239 | Kékház: 1272 | Zöldház: 1273");
				Msg(playerid, "ID-k: pénz:1212 | Adneralin: 1241 | Csillag: 1247 | GTAIII: 1248 | Bomba: 1252");
				Msg(playerid, "ID-k: kamera: 1253 | Halálfej: 1254 | Pénz: 1274 | Kékpoló: 1275 | Kéthalálfej: 1313");
				Msg(playerid, "ID-k: Két player: 1314 | Zöldv: 1276 | Ejtõernyõ: 1310 | Fehérnyíl: 1318 | Drugcsomag: 1279");
				return 1;
			}
			new tipus = strval(param[2]);
			new pickid = strval(param[3]);
			if(pickid < 0 || pickid > MAX_PICKUP) return Msg(playerid, "Hibás PICKUP ID.");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			PICKUP[pickid][pPosX] = X;
			PICKUP[pickid][pPosY] = Y;
			PICKUP[pickid][pPosZ] = Z;
			PICKUP[pickid][pTipus] = tipus;
			if(PICKUP[pickid][pObjectID] > 0)
				DestroyDynamicPickup(PICKUP[pickid][pObjectID]);
			PICKUP[pickid][pObjectID] = UjPickup(tipus, 23, X, Y, Z);
			SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "* Pickup áthelyezve. (ID: %d - Koordínáta: X: %.2f | Y: %.2f | Z: %.2f) ", pickid, PICKUP[pickid][pPosX], PICKUP[pickid][pPosY], PICKUP[pickid][pPosZ]);
			Streamer_Update(playerid);
			SetPlayerPos(playerid, X, Y, Z);
			SavePICKUP();
		}
		if(egyezik(param[1], "töröl"))
		{
			if(params < 2) return Msg(playerid, "ID?");
			new pickid = strval(param[2]);
			if(pickid < 0 || pickid > MAX_PICKUP) return Msg(playerid, "Hibás PICKUP ID.");
			if(PICKUP[pickid][pObjectID] > 0)
				DestroyDynamicPickup(PICKUP[pickid][pObjectID]);
			PICKUP[pickid][pPosX] = 0.0;
			PICKUP[pickid][pPosY] = 0.0;
			PICKUP[pickid][pPosZ] = 0.0;
			PICKUP[pickid][pTipus] = 0;
			SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "Törölve PICKUP: %d",pickid);
			SavePICKUP();
		}
		if(egyezik(param[1], "üres"))
		{
			new szamlalo;
			for(new a = 0; a < MAX_PICKUP; a++)
			{
				if(PICKUP[a][pTipus] == 0)
				{
					SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "*Üres Pickup-ok: ID: %d ",a);
					szamlalo++;
					if(szamlalo > 6) return 1;
				}
			}
		}
		if(egyezik(param[1], "közel"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "====[ Legközelebbi pickup ]=====");
			new Float:PPos[3], Float:legkozelebb = 5000.0, Float:tav;
			GetPlayerPos(playerid, PPos[0], PPos[1], PPos[2]);
			new kozel;
			for(new a = 0; a < MAX_PICKUP; a++)
			{
				tav = GetDistanceBetweenPoints(PPos[0], PPos[1], PPos[2],  PICKUP[a][pPosX], PICKUP[a][pPosY], PICKUP[a][pPosZ]);
				if(tav < legkozelebb)
				{
					legkozelebb = tav;
					kozel = a;
				}
			}

			if(legkozelebb == 5000.0) return Msg(playerid, "Nincs találat");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "ID: %d", kozel);
			SetPlayerCheckpoint(playerid,  PICKUP[kozel][pPosX], PICKUP[kozel][pPosY], PICKUP[kozel][pPosZ], 2);
			return 1;
		}
	}
	if(egyezik(cmd, "/parkhely"))
	{

		if(params < 1 && PlayerInfo[playerid][pAdmin] >3)
		{
			Msg(playerid, "/parkhely [funkció]");
			Msg(playerid, "Funkciók: [ | lerak | üres | töröl | közel]");
			return 1;
		}
		else if(params <1)
		{
			Msg(playerid, "/parkhely [közel]");
			return 1;
		}
		if(PlayerInfo[playerid][pAdmin] >3)
		{
			if(egyezik(param[1], "go"))
			{
				if(params < 2) return Msg(playerid, "/parkhely go [ID]");
				new goid = strval(param[2]);
				if(goid < 0 || goid > MAX_PARKOLO) return Msg(playerid, "Hibás ID.");
				SetPlayerPos(playerid,  PARKOLO[goid][parkPosX], PARKOLO[goid][parkPosY], PARKOLO[goid][parkPosZ]);
				SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "* Teleportáltál a parkolóhozhoz. (ID: %d - Koordínáta: X: %f | Y: %f | Z: %f Távolság: %d) ", goid, PARKOLO[goid][parkPosX], PARKOLO[goid][parkPosY], PARKOLO[goid][parkPosZ],PARKOLO[goid][parkTAV]);
			}
			if(egyezik(param[1], "lerak"))
			{
				if(params < 3)
				{
					Msg(playerid, "/parkhely lerak [id] [táv]");
					return 1;
				}
				new goid = strval(param[2]);
				new tav = strval(param[3]);
				if(goid < 0 || goid >= MAX_PARKOLO) return Msg(playerid, "Hibás ID.");
				if(PARKOLO[goid][parkTAV] != 0 && PlayerInfo[playerid][pAdmin] < 1338) return Msg(playerid, "Ezt már lerakták. Ha tényleg ezt akarod elõbb töröld ki!");
				if(tav < 1 || tav > 75) return Msg(playerid, "1-75 között a táv");
				GetPlayerPos(playerid, PARKOLO[goid][parkPosX], PARKOLO[goid][parkPosY], PARKOLO[goid][parkPosZ]);
				PARKOLO[goid][parkTAV]=tav;
				DisablePlayerCheckpoint(playerid);
				SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "* Lerakva a park hely (ID: %d - Koordínáta: X: %f | Y: %f | Z: %f Távolság: %d) ", goid, PARKOLO[goid][parkPosX], PARKOLO[goid][parkPosY], PARKOLO[goid][parkPosZ],PARKOLO[goid][parkTAV]);
				
				SavePARKOLO();
				SetPlayerCheckpoint(playerid,  PARKOLO[goid][parkPosX], PARKOLO[goid][parkPosY], PARKOLO[goid][parkPosZ], PARKOLO[goid][parkTAV]);
			
				return 1;
			}
			if(egyezik(param[1], "töröl"))
			{
				if(params < 2) return Msg(playerid, "ID?");
				new goid = strval(param[2]);
				if(goid < 0 || goid >= MAX_OBJECTSZ) return Msg(playerid, "Hibás ID.");

				PARKOLO[goid][parkPosX]=0.0;
				PARKOLO[goid][parkPosY]=0.0;
				PARKOLO[goid][parkPosZ]=0.0;
				PARKOLO[goid][parkTAV]=0;
				SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "Törölve PARKid: %d",goid);
				SavePARKOLO();
			}
			if(egyezik(param[1], "üres"))
			{
				new szamlalo;
				for(new a = 0; a < MAX_PARKOLO; a++)
				{
					if(PARKOLO[a][parkTAV] == 0)
					{
						SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "*Üres PARK: ID: %d ",a);
						szamlalo++;
						if(szamlalo > 6) return 1;
					}
				}
			}
		}
		if(egyezik(param[1], "közel"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "====[ Legközelebbi parkoló ]=====");
			new Float:PPos[3], Float:legkozelebb = 5000.0, Float:tav;
			GetPlayerPos(playerid, PPos[0], PPos[1], PPos[2]);
			new kozel;
			for(new a = 0; a < MAX_PARKOLO; a++)
			{
				tav = GetDistanceBetweenPoints(PPos[0], PPos[1], PPos[2], PARKOLO[a][parkPosX], PARKOLO[a][parkPosY], PARKOLO[a][parkPosZ]);
				if(tav < legkozelebb)
				{
					legkozelebb = tav;
					kozel = a;
				}
			}
			if(legkozelebb == 5000.0) return Msg(playerid, "Nincs találat");
			DisablePlayerCheckpoint(playerid);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "ID: %d", kozel);
			SetPlayerCheckpoint(playerid,  PARKOLO[kozel][parkPosX], PARKOLO[kozel][parkPosY], PARKOLO[kozel][parkPosZ], PARKOLO[kozel][parkTAV]);
			return 1;
		}
	}
	if(egyezik(cmd, "/forgalom"))
	{
		if(!Admin(playerid,1340) && !IsScripter(playerid)) return 1;
		if(params < 1)
		{
			Msg(playerid, "/forgalom [funkció]");
			Msg(playerid, "Funkciók: [ lerak | üres | töröl | közel] go");
			return 1;
		}

		if(egyezik(param[1], "lerak"))
		{
		
			
			if(params < 2)
			{
				Msg(playerid, "/forgalom lerak [táv] [id]");
				return 1;
			}
			
			new /*szamlalo=NINCS,*/ goid;
			if(params != 3)
			{
				goid=UresForgalom();
				
			}
			else
				goid = strval(param[3]);
			
			if(goid == NINCS) return Msg(playerid, "Nincs több hely!");
			new tav = strval(param[2]);
			if(goid < 0 || goid >= MAX_AREA_HELY) return Msg(playerid, "Hibás ID.");
			if(tav < 1 || tav > 75) return Msg(playerid, "1-75 között a táv");
	
			
			GetPlayerPos(playerid, AreaForgalom[goid][Ax], AreaForgalom[goid][Ay], AreaForgalom[goid][Az]);
			AreaForgalom[goid][As]=tav;
			DisablePlayerCheckpoint(playerid);
		
			
			if(!IsPlayerInAnyVehicle(playerid))
				GetPlayerFacingAngle(playerid, AreaForgalom[goid][Aangle]);
			else
				GetVehicleZAngle(GetPlayerVehicleID(playerid),AreaForgalom[goid][Aangle]);
				
			
			SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "* Lerakva a forgalom hely (ID: %d - Koordínáta: X: %f | Y: %f| z: %f| Átmérõ: %f | Angle: %f) ", goid,  AreaForgalom[goid][Ax], AreaForgalom[goid][Ay],AreaForgalom[goid][Az], AreaForgalom[goid][As], AreaForgalom[goid][Aangle]);
			
			
			SaveAreaforgalom();
			
			
			if(IsValidDynamicArea(AreaForgalom[goid][Aid])) DestroyDynamicArea(AreaForgalom[goid][Aid]), AreaForgalom[goid][Aid]= NINCS, AreaForgalom[goid][AVan] = NINCS;
			
			AreaForgalom[goid][Aid] = CreateDynamicCircle(AreaForgalom[goid][Ax], AreaForgalom[goid][Ay], AreaForgalom[goid][As], 0);
		
			AreaForgalom[goid][AVan] = true;
			
			
			SetPlayerCheckpoint(playerid,  AreaForgalom[goid][Ax], AreaForgalom[goid][Ay],AreaForgalom[goid][Az], AreaForgalom[goid][As]);
			
			
			return 1;
		}
		if(egyezik(param[1], "töröl"))
		{
			if(params < 2) return Msg(playerid, "ID?");
			new go = strval(param[2]);
			if(go < 0 || go >= MAX_AREA_HELY) return Msg(playerid, "Hibás ID.");
			
			if(IsValidDynamicArea(AreaForgalom[go][Aid])) DestroyDynamicArea(AreaForgalom[go][Aid]), AreaForgalom[go][Aid]= NINCS;
			AreaForgalom[go][Aangle] = 0.0;
			AreaForgalom[go][Ax]= 0.0;
			AreaForgalom[go][Ay] = 0.0;
			AreaForgalom[go][As] = 0.0;
			AreaForgalom[go][AVan] = NINCS;
			SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "Törölve a forgalom ellenõrzõ: %d",go);
			SaveAreaforgalom();
		}
		if(egyezik(param[1], "go"))
		{
			if(params < 2) return Msg(playerid, "ID?");
			new gox = strval(param[2]);
			if(gox < 0 || gox >= MAX_AREA_HELY) return Msg(playerid, "Hibás ID.");
			
			if(!IsValidDynamicArea(AreaForgalom[gox][Aid])) Msg(playerid, "Nem létezik az area");
			
			Tele(playerid,AreaForgalom[gox][Ax],AreaForgalom[gox][Ay],AreaForgalom[gox][Az],true,0,0,AreaForgalom[gox][Aangle]);
			
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "ID: %d X:%f, Y:%f, Z:%f TAV: %f,", gox, AreaForgalom[gox][Ax],AreaForgalom[gox][Ay],AreaForgalom[gox][Az], AreaForgalom[gox][As]);
			SetPlayerCheckpoint(playerid, AreaForgalom[gox][Ax],AreaForgalom[gox][Ay],AreaForgalom[gox][Az], AreaForgalom[gox][As]);
			return 1;
			
		}
		if(egyezik(param[1], "közel"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "====[ Legközelebbi forgalom ellenõrzõ ]=====");
			new Float:PPos[3], Float:legkozelebb = 5000.0, Float:tav;
			GetPlayerPos(playerid, PPos[0], PPos[1], PPos[2]);
			new kozel;
			for(new a = 0; a < MAX_AREA_HELY; a++)
			{
				if(AreaForgalom[a][AVan])
				{
					tav = GetDistanceBetweenPoints(PPos[0], PPos[1], PPos[2], AreaForgalom[a][Ax],AreaForgalom[a][Ay],AreaForgalom[a][Az]);
					if(tav < legkozelebb)
					{
						legkozelebb = tav;
						kozel = a;
					}
				}
			}
			if(legkozelebb == 5000.0) return Msg(playerid, "Nincs találat");
			DisablePlayerCheckpoint(playerid);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "ID: %d X:%f, Y:%f, Z:%f TAV: %f,", kozel, AreaForgalom[kozel][Ax],AreaForgalom[kozel][Ay],AreaForgalom[kozel][Az], AreaForgalom[kozel][As]);
			SetPlayerCheckpoint(playerid, AreaForgalom[kozel][Ax],AreaForgalom[kozel][Ay],AreaForgalom[kozel][Az], AreaForgalom[kozel][As]);
			return 1;
		}
	}
	
	if(egyezik(cmd, "/atm"))
	{
		if(!Admin(playerid, 1340) && !IsScripter(playerid)) return 1;
		if(params < 1)
		{
			Msg(playerid, "/atm [funkció]");
			Msg(playerid, "Funkciók: Go, pos, üres, töröl, közel");
			return 1;
		}
		if(egyezik(param[1], "go"))
		{
			if(params < 2) return Msg(playerid, "/atm go [ATM ID]");
			new atmid = strval(param[2]);
			if(atmid < 0 || atmid > MAX_ATM) return Msg(playerid, "Hibás ATM ID.");
			SetPlayerPos(playerid, ATM[atmid][aPosX], ATM[atmid][aPosY], ATM[atmid][aPosZ]);
			if(ATM[atmid][aVw] < 0)
			{
				SetPlayerVirtualWorld(playerid, 0);
			}
			else 
				SetPlayerVirtualWorld(playerid,ATM[atmid][aVw]);
				
			if(ATM[atmid][aInt] < 0)
			{
				SetPlayerInterior(playerid, 0);
			}
			else	
				SetPlayerInterior(playerid,ATM[atmid][aInt]);
				
			SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "* Teleportáltál az ATM-hez. (ID: %d - Koordínáta: X: %f | Y: %f | Z: %f | VW: %d | INT: %d) ", atmid, ATM[atmid][aPosX], ATM[atmid][aPosY], ATM[atmid][aPosZ],ATM[atmid][aVw],ATM[atmid][aInt]);
		}
		if(egyezik(param[1], "pos"))
		{
			if(params < 1) return Msg(playerid, "/atm pos [ATM ID]");
			new atmid = strval(param[2]);

			if(atmid < 0 || atmid >= MAX_ATM) return Msg(playerid, "Hibás ATM ID.");
			if(params < 2)
			{
				atmid=UresATM();
				if(atmid == NINCS) return Msg(playerid, "Nincs szabad hely!");
			}
			//if(ATM[atmid][aPosX] != 0 && PlayerInfo[playerid][pAdmin] >= 1338) return Msg(playerid, "Ezt már lerakták. Ha tényleg ezt akarod elõbb töröld ki!");
			new Float:X, Float:Y, Float:Z, Float:A;
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, A);
		
			ATM[atmid][aInt] =GetPlayerInterior(playerid);
			ATM[atmid][aVw]=GetPlayerVirtualWorld(playerid);

			ATM[atmid][aPosX] = X;
			ATM[atmid][aPosY] = Y;
			ATM[atmid][aPosZ] = Z;
			ATM[atmid][aPosA] = A;
			if(ATM[atmid][aObjectID] > 0)
				if(IsValidDynamicObject(ATM[atmid][aObjectID])) DestroyDynamicObject(ATM[atmid][aObjectID]), ATM[atmid][aObjectID]=INVALID_OBJECT_ID;
			ATM[atmid][aObjectID] = CreateDynamicObject(2942, X, Y, Z-0.3, 0.0, 0.0, ATM[atmid][aPosA],ATM[atmid][aVw],ATM[atmid][aInt]);

			SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "* ATM lerakva. (ID: %d - Koordínáta: X: %.2f | Y: %.2f | Z: %.2f | A: %.2f | VW: %d | INT: %d) ", atmid, ATM[atmid][aPosX], ATM[atmid][aPosY], ATM[atmid][aPosZ], ATM[atmid][aPosA],ATM[atmid][aVw],ATM[atmid][aInt]);
			Streamer_Update(playerid);
			SetPlayerPos(playerid, X, Y, Z+2.0);
			SaveATM();
		}
		if(egyezik(param[1], "töröl"))
		{
			if(params < 2) return Msg(playerid, "/atm töröl [ATM ID]");
			new atmid = strval(param[2]);
			if(atmid < 0 || atmid >= MAX_ATM) return Msg(playerid, "Hibás ATM ID.");
			if(ATM[atmid][aObjectID] > 0)
				if(IsValidDynamicObject(ATM[atmid][aObjectID])) DestroyDynamicObject(ATM[atmid][aObjectID]), ATM[atmid][aObjectID]=INVALID_OBJECT_ID;
		
			ATM[atmid][aPosX] = 0.0;
			ATM[atmid][aPosY] = 0.0;
			ATM[atmid][aPosZ] = 0.0;
			ATM[atmid][aPosA] = 0.0;
			ATM[atmid][aObjectID] = 0;
			SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "Törölve ATM: %d",atmid);
			SaveATM();
		}
		if(egyezik(param[1], "üres"))
		{
			new szamlalo;
			for(new a = 0; a < MAX_ATM; a++)
			{
				if(ATM[a][aPosX] == 0)
				{
					SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "*Üres ATM: ID: %d ",a);
					szamlalo++;
					if(szamlalo > 6) return 1;
				}
			}
		}
		if(egyezik(param[1], "közel"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "====[ Legközelebbi ATM ]=====");
			new Float:PPos[3], Float:legkozelebb = 5000.0, Float:tav;
			GetPlayerPos(playerid, PPos[0], PPos[1], PPos[2]);
			new kozel;
			for(new a = 0; a < MAX_ATM; a++)
			{
				tav = GetDistanceBetweenPoints(PPos[0], PPos[1], PPos[2],  ATM[a][aPosX], ATM[a][aPosY], ATM[a][aPosZ]);
				if(tav < legkozelebb)
				{
					legkozelebb = tav;
					kozel = a;
				}
			}

			if(legkozelebb == 5000.0) return Msg(playerid, "Nincs találat");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "ID: %d | VW: %d | INT %d", kozel,ATM[kozel][aVw],ATM[kozel][aInt]);
			SetPlayerCheckpoint(playerid,  ATM[kozel][aPosX], ATM[kozel][aPosY], ATM[kozel][aPosZ], 2);
			return 1;
		}

	}
	if(egyezik(cmd, "/széf") || egyezik(cmd, "/szef"))
	{
		if(Civil(playerid) && !IsScripter(playerid) && !Admin(playerid, 1337)) return Msg(playerid, "Nem tartozol frakcióhoz.");
		new Melo = PlayerInfo[playerid][pMember], szeflog[256];
		if(params < 1)
		{
			if(!Admin(playerid, 1337) && SzefEngedely[playerid] != 1 && !IsScripter(playerid)) return Msg(playerid, "/Széf [Be / Ki / Minrang(Leadernek) / Megnéz / Ingyentankolás / ingyenszerel]");
			Msg(playerid, "/Széf [Be / Ki / Minrang(Leadernek) / Pos / Megnéz / Go / Objectnulla / Resi / Érték / Engedély / Ingyentankolás / ingyenszerel]");
			return 1;
		}
		if(egyezik(param[1], "ingyentankolas") || egyezik(param[1], "ingyentankolás"))
		{
			if(PlayerInfo[playerid][pLeader] == 0) return Msg(playerid, "Kizárólag Leadernek!");

			if(!FrakcioInfo[Melo][fIngyenTank])
			{
				FrakcioInfo[Melo][fIngyenTank] = 1;
				
				
				format(szeflog, 256, "[%d. frakció(%s) - info]%s bekapcsolta az ingyentankolást", Melo, Szervezetneve[Melo - 1][2],PlayerName(playerid)); Log("Szef", szeflog);
				Msg(playerid, "Mostantól minden frakciókocsit ingyen tankolhattok");
			}
			else
			{
				FrakcioInfo[Melo][fIngyenTank] = 0;
				format(szeflog, 256, "[%d. frakció(%s) - info]%s kikapcsolta az ingyentankolást",Melo, Szervezetneve[Melo - 1][2],PlayerName(playerid)); Log("Szef", szeflog);
				Msg(playerid, "Mostantól már nem tankolhatják ingyen a frakciókocsikat");
			}
		}
		if(egyezik(param[1], "ingyenszerel") || egyezik(param[1], "ingyenszerel"))
		{
			if(PlayerInfo[playerid][pLeader] == 0) return Msg(playerid, "Kizárólag Leadernek!");

			if(!FrakcioInfo[Melo][fIngyenSzerel])
			{
				FrakcioInfo[Melo][fIngyenSzerel] = 1;
				format(szeflog, 256, "[%d. frakció(%s) - info]%s bekapcsolta az ingyenszerelést", Melo, Szervezetneve[Melo - 1][2],PlayerName(playerid)); Log("Szef", szeflog);
				Msg(playerid, "Mostantól minden frakciókocsit ingyen szerelnek a tagok!");
			}
			else
			{
				FrakcioInfo[Melo][fIngyenSzerel] = 0;
				format(szeflog, 256, "[%d. frakció(%s) - info]%s kikapcsolta az ingyenszerelést", Melo, Szervezetneve[Melo - 1][2],PlayerName(playerid)); Log("Szef", szeflog);
				Msg(playerid, "Mostantól már nem szerelik ingyen a kocsikat a tagok!");
			}
		}
		if(egyezik(param[1], "érték") || egyezik(param[1], "ertek"))
		{
			if(!Admin(playerid, 1340) && !IsScripter(playerid)) return 1;

			if(params < 3) return Msg(playerid, "/Széf Érték [Frakció ID] [Mennyi]");
			
			new munka = strval(param[2]);
			new Mennyit = strval(param[3]);
			new Penz = FrakcioInfo[Melo][fPenz];
			if(Mennyit < 0) return Msg(playerid, "Minuszt?");
			ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s %s beállította a(z) (%d)%s frakció széfének tartalmát! >>",AdminRangNev(playerid), PlayerName(playerid), munka, Szervezetneve[munka-1][1]);
			ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< Adat: Pénz | Új: %s | Régi: %s >>", FormatNumber( Mennyit, 0, ',' ), FormatNumber( Penz, 0, ',' ));
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Széf tartalma beállítva: %sFt | Régi: %s", FormatNumber( Mennyit, 0, ',' ), FormatNumber( Penz, 0, ',' ));
			FrakcioInfo[munka][fPenz] = Mennyit;
			INI_Save(INI_TYPE_TELEFONDATA, munka);
		}
		if(egyezik(param[1], "engedély"))
		{
			if(!IsScripter(playerid) && !Admin(playerid, 1340)) return 1;
			if(params < 2) return Msg(playerid, "/Széf Engedély [Játékos Neve / ID]");
			new jatekos = ReturnUser(param[2]);
			if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
			if(!Admin(jatekos, 5)) return Msg(playerid, "A játékosnak legalább 5ös szintû adminnak kell lennie.");
			if(SzefEngedely[jatekos] == 0)
			{
				SzefEngedely[jatekos] = 1;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Engedélyezted %s-nak/nek.", PlayerName(jatekos));
				SendFormatMessage(jatekos, COLOR_LIGHTGREEN, "* Engedélyt kaptál a széfekhez %s-tõl", PlayerName(playerid));

				format(szeflog, 256, "[%s]%s engedélyezte a széfet neki: %s", Szervezetneve[Melo - 1][2], PlayerName(playerid), PlayerName(jatekos)); Log("Szef", szeflog);
			}
			else
			{
				SzefEngedely[jatekos] = 0;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Tiltottad %s-nak/nek.", PlayerName(jatekos));
				SendFormatMessage(jatekos, COLOR_LIGHTGREEN, "* %s elvette az engedélyed a széfektõl.", PlayerName(playerid));

				format(szeflog, 256, "[%s]%s tiltotta a széfet neki: %s", Szervezetneve[Melo - 1][2], PlayerName(playerid), PlayerName(jatekos)); Log("Szef", szeflog);
			}
		}
		if(egyezik(param[1], "objectnulla"))
		{
			if(!IsScripter(playerid)) return 1;
			if(params < 2) return Msg(playerid, "/Széf Objectnulla [Biztos törlöd?(Ha igen: 'igen')]");
			if(egyezik(param[2], "igen"))
			{
				for(new x = 0; x < MAX_FRAKCIO; x++)
				{
					if(FrakcioInfo[x][fObject] != 0)
					{
						if(IsValidDynamicObject(FrakcioInfo[x][fObjectID])) DestroyDynamicObject(FrakcioInfo[x][fObjectID]), FrakcioInfo[x][fObjectID]=INVALID_OBJECT_ID;
						FrakcioInfo[x][fObject] = 0;
						FrakcioInfo[x][fObjectID] = 0;
					}
				}
				Msg(playerid, "Kész");
			}
		}
		if(egyezik(param[1], "Resi"))
		{
			if(!Admin(playerid, 1338) && SzefEngedely[playerid] != 1 && IsScripter(playerid)) return 1;
			SzefToltes();
			Msg(playerid, "Széf objectek újra töltve.");
		}
		if(egyezik(param[1], "Go"))
		{
			if(!Admin(playerid, 1337) && SzefEngedely[playerid] != 1) return 1;
			if(params < 2) return Msg(playerid, "/Széf Go [Munka]");
			new munka = strval(param[2]);
			SetPlayerPos(playerid, FrakcioInfo[munka][fPosX], FrakcioInfo[munka][fPosY], FrakcioInfo[munka][fPosZ]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Teleportálva a %d számú széfhez. Pos: %f, %f, %f", munka, FrakcioInfo[munka][fPosX], FrakcioInfo[munka][fPosY], FrakcioInfo[munka][fPosZ]);
		}
		if(egyezik(param[1], "Amegnéz"))
		{
			if(!Admin(playerid, 1337) && SzefEngedely[playerid] != 1  && IsScripter(playerid)) return 1;
			if(params < 2) return Msg(playerid, "/Széf Amegnéz [Munka]");
			new munka = strval(param[2]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "===========[Széf Tartalma]===========");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Pénz: %sFt", FormatNumber( FrakcioInfo[munka][fPenz], 0, ',' ));
			SendFormatMessage(playerid, COLOR_YELLOW, "Frakció: %d | Neve: %s", munka, Szervezetneve[munka-1][1]);
		}
		if(egyezik(param[1], "Megnéz")  || egyezik(param[1], "Megnez"))
		{
			if(!PlayerToPoint(3, playerid, FrakcioInfo[Melo][fPosX], FrakcioInfo[Melo][fPosY], FrakcioInfo[Melo][fPosZ])) return Msg(playerid, "Nem vagy a széf közelében.");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "===========[Széf Tartalma]===========");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Pénz: %sFt", FormatNumber( FrakcioInfo[Melo][fPenz], 0, ',' ));
			Cselekves(playerid, "megnézte a széfet...", 1);
		}
		if(egyezik(param[1], "Pos"))
		{
			if(!Admin(playerid, 1337) && SzefEngedely[playerid] != 1 && !IsScripter(playerid)) return 1;
			if(params < 3) return Msg(playerid, "/Széf Pos [Munka] [Object Legyen?(0 - nem, 1 - igen)]");
			new munka = strval(param[2]);
			new objectlegyen = strval(param[3]);
			if(munka > MAX_FRAKCIO) return 1;
			if(objectlegyen < 0 || objectlegyen > 1) return 1;
			new Float:X, Float:Y, Float:Z, Float:A;
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, A);


			FrakcioInfo[munka][fObject] = objectlegyen;
			FrakcioInfo[munka][fPosX] = X;
			FrakcioInfo[munka][fPosY] = Y;
			FrakcioInfo[munka][fPosZ] = Z;
			FrakcioInfo[munka][fPosA] = A; //(A < 180) ? (A + 180) : (A - 180);
			FrakcioInfo[munka][fVW]=GetPlayerVirtualWorld(playerid);
			if(objectlegyen)
			{
				if(FrakcioInfo[munka][fObjectID] != 0)
					if(IsValidDynamicObject(FrakcioInfo[munka][fObjectID])) DestroyDynamicObject(FrakcioInfo[munka][fObjectID]), FrakcioInfo[munka][fObjectID]=INVALID_OBJECT_ID;

				FrakcioInfo[munka][fObjectID] = CreateDynamicObject(2332, X, Y, Z-0.6, 0.0, 0.0, FrakcioInfo[munka][fPosA],FrakcioInfo[munka][fVW]);
			}
			else
			{
				if(FrakcioInfo[munka][fObjectID] != 0)
				{
					if(IsValidDynamicObject(FrakcioInfo[munka][fObjectID])) DestroyDynamicObject(FrakcioInfo[munka][fObjectID]), FrakcioInfo[munka][fObjectID]=INVALID_OBJECT_ID;
					FrakcioInfo[munka][fObjectID] = 0;
				}
			}

			if(objectlegyen) SzefToltes();
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Széf átrakva. Munka: %d, Object: %d, Pos: %f, %f, %f, VW: %d", munka, objectlegyen, X, Y, Z, FrakcioInfo[munka][fVW]);
		}
		if(egyezik(param[1], "Minrang"))
		{
			if(PlayerInfo[playerid][pLeader] == 0) return Msg(playerid, "Kizárólag Leadernek!");
			if(params < 2)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: /széf minrang [0-%d]", OsszRang[PlayerInfo[playerid][pLeader]]);
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Jelenleg %d rangtól lehet kivenni.", FrakcioInfo[Melo][fMinrang]);
				return 1;
			}
			new rang = strval(param[2]);
			if(rang < 0 || rang > OsszRang[PlayerInfo[playerid][pLeader]])
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: 0-%d", OsszRang[PlayerInfo[playerid][pLeader]]);
				return 1;
			}

			format(szeflog, 256, "[%d. frakció (%s) - info]%s átírta a frakció széf min. rangját errõl: %d, erre: %d", Melo, Szervezetneve[Melo - 1][2],PlayerName(playerid), FrakcioInfo[Melo][fMinrang], rang); Log("Szef", szeflog);

			FrakcioInfo[Melo][fMinrang] = rang;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* A széfbõl mostantól %d rangtól lehet kivenni.", rang);
		}
		if(egyezik(param[1], "Be"))
		{
			if(params < 2) return Msg(playerid, "/Széf Be [Mennyit]");
			new Mennyit = strval(param[2]);
			new Penz = GetMoney(playerid);
			if(Mennyit < 0) return Msg(playerid, "Minuszt?");
			if(!PlayerToPoint(3, playerid, FrakcioInfo[Melo][fPosX], FrakcioInfo[Melo][fPosY], FrakcioInfo[Melo][fPosZ])) return Msg(playerid, "Nem vagy a széf közelében.");
			if(Penz < Mennyit) return Msg(playerid, "Nincs elég pénzed.");
			GiveMoney(playerid, -Mennyit);
			FrakcioSzef(Melo, Mennyit);
			//FrakcioInfo[Melo][fPenz] += Mennyit;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Beraktál %sFt-ot a széfbe.", FormatNumber( Mennyit, 0, ',' ));

			format(szeflog, 256, "[%d. frakció (%s) - PÉNZ]%s berakott a széfbe %s Ft-ot", Melo, Szervezetneve[Melo - 1][2], PlayerName(playerid), FormatInt(Mennyit)); Log("Szef", szeflog);
		}
		if(egyezik(param[1], "Ki"))
		{
			if(PlayerInfo[playerid][pRank] < FrakcioInfo[Melo][fMinrang])
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Nem elég nagy a rangod, minimum rang: %d", FrakcioInfo[Melo][fMinrang]);
				return 1;
			}
			if(params < 2) return Msg(playerid, "/Széf Ki [Mennyit]");
			//if(LMT(playerid, FRAKCIO_ONKORMANYZAT) && !Admin(playerid, 1)) return Msg(playerid, "Visszaélések miatt megszüntetve");
			new Mennyit = strval(param[2]);
			new Penz = FrakcioInfo[Melo][fPenz];
			if(Mennyit < 0) return Msg(playerid, "Minuszt?");
			if(!PlayerToPoint(3, playerid, FrakcioInfo[Melo][fPosX], FrakcioInfo[Melo][fPosY], FrakcioInfo[Melo][fPosZ])) return Msg(playerid, "Nem vagy a széf közelében.");
			if(Penz < Mennyit) return Msg(playerid, "Nincs elég pénz a széfben.");
			GiveMoney(playerid, Mennyit);
			FrakcioInfo[Melo][fPenz] -= Mennyit;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Kivettél %dFt-ot a széfbõl.", Mennyit);

			format(szeflog, 256, "[%d. frakció (%s) - PÉNZ]%s kivett a széfbõl %s Ft-ot", Melo, Szervezetneve[Melo - 1][2], PlayerName(playerid), FormatInt(Mennyit)); Log("Szef", szeflog);
			INI_Save(INI_TYPE_TELEFONDATA, Melo);
		}
	}
	/*if(egyezik(cmd, "/szerelõduty") || egyezik(cmd, "/szereloduty") || egyezik(cmd, "/szduty"))
	{
		if(PlayerInfo[playerid][pSzerelo]<1) return Msg(playerid, "Nem vagy autószerelõ!");
		if(OnDuty[playerid]) return Msg(playerid, "Döntsd elõbb el mit dolgozol! ((frakció dutyba nem!))");
		if(!PlayerToPoint(5, playerid, 2048.4619, -2066.4832, 12.5586) && !PlayerToPoint(3, playerid, -1857.7086, 129.7148, 14.1156)) // Új szerelõ hq LS-SF)
		{
			Msg(playerid, "Nem vagy a HQn! A GPS-ed mutatja.");
			SetPlayerCheckpoint(playerid, 2048.4619, -2066.4832, 12.5586, 2);
			return 1;
		}
		if(JobDuty[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Most már nem vagy szolgálatban mint autószerelõ.");
			JobDuty[playerid] = 0;
			if(PlayerInfo[playerid][pChar] > 0 && OnDuty[playerid] || PlayerInfo[playerid][pChar] > 0 && !LegalisSzervezetTagja(playerid) && !Civil(playerid))
			{
				SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
			}
			else
			{
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Szolgáltaba áltál mint autószerelõ.");
			SendClientMessageToAll(COLOR_LIGHTBLUE, "* Autószerelõ szolgálatban(/service mechanic)");
			JobDuty[playerid] = 1;
			if(PlayerInfo[playerid][pSex] == 1)
			{
				SetPlayerSkin(playerid, 50);
			}
			else
			{
				SetPlayerSkin(playerid, 69);
			}
		}
	}*/
	if(egyezik(cmd, "/zero"))
	{
		if(!Admin(playerid, 6)) return 1;
		if(TilosOlni == 0)
		{
			TilosOlni = 1;
			SendClientMessageToAll(COLOR_LIGHTBLUE, "============[Zero Tolerancia]============");
			SendClientMessageToAll(COLOR_LIGHTRED, "* Zero tolerancia bekapcsolva!");
			SendClientMessageToAll(COLOR_LIGHTRED, "* Amíg ez érvényben van, tilos ölni, aki megszegi automata 120 perc AJail-t kap!");
			SendClientMessageToAll(COLOR_LIGHTRED, "* Kivétel ez alól: PAINTBALL-ozók és WAR-ozok rájuk nem hat!!!");
		}
		else
		{
			TilosOlni = 0;
			SendClientMessageToAll(COLOR_LIGHTBLUE, "============[Zero Tolerancia]============");
			SendClientMessageToAll(COLOR_LIGHTRED, "* Zero tolerancia kikapcsolva!");
		}
	}

	if(egyezik(cmd, "/putto") || egyezik(cmd, "/puttó"))
	{
		if(!PlayerToPoint(10.0, playerid, 830.5727,3.6759,1004.1797)) return Msg(playerid, "Nem vagy lottózóban!");
		if(VanSzelvenye[playerid] == 1)
		{
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Már van szelvényed!(Számok: %d, %d, %d, %d, %d, %d, %d, B:%d)", PSzam1[playerid], PSzam2[playerid], PSzam3[playerid], PSzam4[playerid], PSzam5[playerid], PSzam6[playerid], PSzam7[playerid], PSzam8[playerid]);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Sorsolás %d Perc múlva.", PSorsolas/60);
			return 1;
		}
		if(GetMoney(playerid) < 500) return Msg(playerid, "500Ft egy szelvény...");
		if(params < 8) return Msg(playerid, "/puttó [Szám1] [Szám2] [Szám3] [Szám4] [Szám5] [Szám6] [Szám7] [B(1-4)]");
		new szam1 = strval(param[1]);
		new szam2 = strval(param[2]);
		new szam3 = strval(param[3]);
		new szam4 = strval(param[4]);
		new szam5 = strval(param[5]);
		new szam6 = strval(param[6]);
		new szam7 = strval(param[7]);
		new szam8 = strval(param[8]);

		if(szam1 < 1 || szam1 > 20) return Msg(playerid, "1-20");
		if(szam2 < 1 || szam2 > 20) return Msg(playerid, "1-20");
		if(szam3 < 1 || szam3 > 20) return Msg(playerid, "1-20");
		if(szam4 < 1 || szam4 > 20) return Msg(playerid, "1-20");
		if(szam5 < 1 || szam5 > 20) return Msg(playerid, "1-20");
		if(szam6 < 1 || szam6 > 20) return Msg(playerid, "1-20");
		if(szam7 < 1 || szam7 > 20) return Msg(playerid, "1-20");
		if(szam8 < 1 || szam8 > 4) return Msg(playerid, "1-4");

		if(szam2 == szam1 || szam2 == szam3 || szam2 == szam4 || szam2 == szam5 || szam2 == szam6 || szam2 == szam7) return Msg(playerid, "2 ugyan olyan számot nem jelölhetsz be.");
		if(szam3 == szam1 || szam3 == szam2 || szam3 == szam4 || szam3 == szam5 || szam3 == szam6 || szam3 == szam7) return Msg(playerid, "2 ugyan olyan számot nem jelölhetsz be.");
		if(szam4 == szam1 || szam4 == szam2 || szam4 == szam3 || szam4 == szam5 || szam4 == szam6 || szam4 == szam7) return Msg(playerid, "2 ugyan olyan számot nem jelölhetsz be.");
		if(szam5 == szam1 || szam5 == szam2 || szam5 == szam3 || szam5 == szam4 || szam5 == szam6 || szam5 == szam7) return Msg(playerid, "2 ugyan olyan számot nem jelölhetsz be.");
		if(szam6 == szam1 || szam6 == szam2 || szam6 == szam3 || szam6 == szam4 || szam6 == szam5 || szam6 == szam7) return Msg(playerid, "2 ugyan olyan számot nem jelölhetsz be.");
		if(szam7 == szam1 || szam7 == szam2 || szam7 == szam3 || szam7 == szam4 || szam7 == szam5 || szam7 == szam6) return Msg(playerid, "2 ugyan olyan számot nem jelölhetsz be.");

		PSzam1[playerid] = szam1;
		PSzam2[playerid] = szam2;
		PSzam3[playerid] = szam3;
		PSzam4[playerid] = szam4;
		PSzam5[playerid] = szam5;
		PSzam6[playerid] = szam6;
		PSzam7[playerid] = szam7;
		PSzam8[playerid] = szam8;

		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Puttó szelvény megvéve.(Ára: 500Ft)");
		GiveMoney(playerid, -500);
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Megjelölt számok: %d, %d, %d, %d, %d, %d, %d, B:%d", szam1, szam2, szam3, szam4, szam5, szam6, szam7, szam8);
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Sorsolás %d Perc múlva.", PSorsolas/60);
		VanSzelvenye[playerid] = 1;
	}
	/*if(egyezik(cmd, "/öatuning") || egyezik(cmd, "/oatuning") || egyezik(cmd, "/örökatuning"))//adminnak
	{
		if(!Admin(playerid, 1337)) return Msg(playerid, "Nem használhatod ezt a parancsot!");
		if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "A jármû mellett kell állnod");
		if(params < 1) return Msg(playerid, "/öatunig [Alien / XFLOW / Kerék / Matrica / Neon / Riasztó / Detektor / Hidraulika / Levesz]");
		if(egyezik(param[1], "levesz"))
		{
			if(params < 2) return Msg(playerid, "/öatunig levesz [Kerék / Kasztni / Matrica / Neon / Riasztó / Hidraulika / Detektor]");
			new kocsi, vs;
			kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5) return Msg(playerid, "Nincs a közelben a jármû!");

			vs = IsAVsKocsi(kocsi);
			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			if(egyezik(param[2], "Kerék") || egyezik(param[2], "Kerek"))
			{
				CarInfo[vs][cKerek] = 0;
				CarUpdate(vs, CAR_Kerek);
				Msg(playerid, "Kerék leszedve.");
			}
			if(egyezik(param[2], "Kasztni"))
			{
				CarInfo[vs][cTuning] = 0;
				CarUpdate(vs, CAR_Tuning);
				Msg(playerid, "Kasztni leszedve.");
			}
			if(egyezik(param[2], "Matrica"))
			{
				CarInfo[vs][cMatrica] = 3;
				CarUpdate(vs, CAR_Matrica);
				Msg(playerid, "Matrica leszedve.");
			}
			if(egyezik(param[2], "hidraulika"))
			{
				CarInfo[vs][cHidraulika] = 0;
				CarUpdate(vs, CAR_Hidraulika);
				Msg(playerid, "Hidraulika leszedve");
			}
			if(egyezik(param[2], "neon"))
			{
				CarInfo[vs][cNeon] = 0;
				CarUpdate(vs, CAR_Neon);
				if(IsValidDynamicObject(NeonCar[kocsi][0])) DestroyDynamicObject(NeonCar[kocsi][0]), NeonCar[kocsi][0]=INVALID_OBJECT_ID;
				if(IsValidDynamicObject(NeonCar[kocsi][1])) DestroyDynamicObject(NeonCar[kocsi][1]), NeonCar[kocsi][1]=INVALID_OBJECT_ID;
				Msg(playerid,"Neon leszedve!");
				Neon[kocsi] = 0;
				return 1;
			}
			if(egyezik(param[2], "riaszto") || egyezik(param[2], "riasztó"))
			{
				CarInfo[vs][cRiaszto] = 0;
				CarUpdate(vs, CAR_Riaszto);
				Msg(playerid,"Riasztó kiszedve!");
				return 1;
			}
			if(egyezik(param[2], "detektor"))
			{
				CarInfo[vs][cDetektor] = 0;
				CarUpdate(vs, CAR_Detektor);
				Msg(playerid, "Detektor leszedve!");
			}
		}
		if(egyezik(param[1], "matrica"))
		{
			if(params < 2)
			{
				Msg(playerid, "/öatunig matrica [1-4] - 4 = leveszi a matricát.");
				Msg(playerid, "Figyelmeztetés: Csak lowrider és tuning kocsikra, ha másra rakod a pénzt nem kapod vissza!");
				return 1;
			}
			new matrica = strval(param[2]);
			if(matrica < 1 || matrica > 4) return Msg(playerid, "1-4 legyen a matrica száma.");
			new kocsi, vs;
			kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5) return Msg(playerid, "Nincs a közelben a jármû!");

			vs = IsAVsKocsi(kocsi);
			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			ChangeVehiclePaintjob(kocsi, (matrica - 1));
			CarInfo[vs][cMatrica] = (strval(param[2]) - 1);
			CarUpdate(vs, CAR_Matrica);
			Msg(playerid, "Matrica felrakva.");
		}
		if(egyezik(param[1], "Alien"))
		{
			new kocsi, vs;
			kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5) return Msg(playerid, "Nincs a közelben a jármû!");

			vs = IsAVsKocsi(kocsi);
			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			if(CarInfo[vs][cModel] == 560)
			{
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 562)
			{
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 559)
			{
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 558)
			{
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 561)
			{
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 565)
			{
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
		}
		if(egyezik(param[1], "Xflow"))
		{
			new kocsi, vs;
			kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5) return Msg(playerid, "Nincs a közelben a jármû!");

			vs = IsAVsKocsi(kocsi);
			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			if(CarInfo[vs][cModel] == 560)
			{
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 562)
			{
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 559)
			{
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 558)
			{
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 561)
			{
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 565)
			{
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve(Resizni kell a kocsit hogy rajta legyen).");
				CarUpdate(vs, CAR_Tuning);
			}
		}
		if(egyezik(param[1], "kerék") || egyezik(param[1], "kerek"))
		{
			new kocsi, vs;
			kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5) return Msg(playerid, "Nincs a közelben a jármû!");

			vs = IsAVsKocsi(kocsi);
			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			if(params < 2) return Msg(playerid, "/öatunig kerék [1-13]");
			new kerek = strval(param[2]);
			if(kerek < 1 || kerek > 13) return Msg(playerid, "Kerék csak 1-13 lehet.");
			Msg(playerid, "Kerék felszerelve(Resizni kell a kocsit hogy rajta legyen).");
			new k = kerek+1072;
			CarInfo[vs][cKerek] = k;
			CarUpdate(vs, CAR_Kerek);
		}
		if(egyezik(param[1], "neon"))
		{
			new kocsi, vs;
			kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5) return Msg(playerid, "Nincs a közelben a jármû!");

			vs = IsAVsKocsi(kocsi);
			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			if(CarInfo[vs][cNeon] > 0) return Msg(playerid,"Ezen a kocsin van már neon");
			if(params < 2) return Msg(playerid, "/öatunig neon [Kék (1) / Piros (2) / Rózsaszín (3) / Fehér (4) / Zöld (5) / Sárga (6)]");
			new neon = strval(param[2]);
			if(neon < 1 || neon > 6) return Msg(playerid, "Neon ID csak 1-6 között lehet. Kék (1) / Piros (2) / Rózsaszín (3) / Fehér (4) / Zöld (5) / Sárga (6)");
			Msg(playerid, "Neon felszerelve.");
			CarInfo[vs][cNeon] = neon;
			CarUpdate(vs, CAR_Neon);
		}
		if(egyezik(param[1], "riaszto") || egyezik(param[1], "riasztó"))
		{
			new kocsi, vs;
			kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5) return Msg(playerid, "Nincs a közelben a jármû!");

			vs = IsAVsKocsi(kocsi);
			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			if(params < 2)
			{
				Msg(playerid, "/öt riasztó [1 / 2 / 3 / 4]");
				Msg(playerid, "Információ: 1.Szintû:Csak sípol(100.000FT)");
				Msg(playerid, "Információ: 2.Szintû:Sípol és jelez a tulajnak(300.000FT)");
				Msg(playerid, "Információ: 3.Szintû:Sípol, jelez a tulajnak és a rendõrségnek(500.000FT)");
				Msg(playerid, "Információ: 4.Szintû:Gátolja a kocsi indítását teljesen lopásbiztos(2.000.000FT)!");
				return 1;
			}
			if(CarInfo[vs][cRiaszto] > 0) return Msg(playerid,"Ezen a kocsin van már riasztó");
			new riaszto = strval(param[2]);
			if(riaszto < 1 || riaszto > 4) return Msg(playerid, "Riasztó csak 1-4 között lehet.");
			CarInfo[vs][cRiaszto] = riaszto;
			CarUpdate(vs, CAR_Riaszto);
			Msg(playerid, "Riasztó felszerelve.");
			
		}
		if(egyezik(param[1], "detektor"))
		{
			new kocsi, vs;
			kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5) return Msg(playerid, "Nincs a közelben a jármû!");

			vs = IsAVsKocsi(kocsi);
			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			if(params < 2)
			{
				Msg(playerid, "/öt detektor [1 / 2 / 3]");
				Msg(playerid, "Információ: 1. szintû: Csak blokkolja a bemérést - 5.000.000 Ft");
				Msg(playerid, "Információ: 2. szintû: Csak bejelez a vezetõnek, ha 100 méteres körzetben traffipax található - 7.500.000 Ft");
				Msg(playerid, "Információ: 3. szintû: Bejelez a vezetõnek, ha 100 méteres körzetben traffipax található és blokkolja a bemérést - 10.000.000 Ft");
				return 1;
			}
			if(CarInfo[vs][cDetektor] > 0) return Msg(playerid,"Ezen a kocsin van már detektor");
			new detektor = strval(param[2]);
			if(detektor < 1 || detektor > 3) return Msg(playerid, "Detektor csak 1-3 között lehet.");
			CarInfo[vs][cDetektor] = detektor;
			CarUpdate(vs, CAR_Detektor);
			Msg(playerid, "Detektor felszerelve.");
		}
		if(egyezik(param[1], "hidraulika"))
		{
			new kocsi, vs;
			kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5) return Msg(playerid, "Nincs a közelben a jármû!");

			vs = IsAVsKocsi(kocsi);
			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			CarInfo[vs][cHidraulika] = 1;
			CarUpdate(vs, CAR_Hidraulika);
			AddVehicleComponent(kocsi, 1087);
			Msg(playerid, "Hidraulika felszerelve.");
		}
		return true;
	}
	if(egyezik(cmd, "/öröktuning") || egyezik(cmd, "/oroktuning") || egyezik(cmd, "/öt") || egyezik(cmd, "/ot"))
	{
		if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "A jármû mellett kell állnod");
		if(params < 1) return Msg(playerid, "/öröktuning [Alien / XFLOW / Kerék / Matrica / Neon / Riasztó / Detektor / Hidraulika / Levesz]");
		if(!PlayerToPoint(5, playerid, -1849.6693, 124.3866, 13.2226) && //SF szerelõmûhely
		!PlayerToPoint(5, playerid, -1836.9281, 124.0847, 13.5826) && //SF szerelõmûhely
		!PlayerToPoint(5, playerid, 2073.3018, -2068.2964, 11.6834) && // Új szerelõ hq(LS)
		!PlayerToPoint(5, playerid, 2060.6958, -2067.9758, 11.6834) && // Új szerelõ hq(LS)
		!PlayerToPoint(5, playerid, 2032.7006, -2068.5708, 12.3234) && // Új szerelõ hq(LS)
		!PlayerToPoint(5, playerid, 2020.0752, -2068.7749, 12.3234) && // Új szerelõ hq(LS)
		!PlayerToPoint(3, playerid, 1860.0858,-2460.5942,14.7284))
			return SendClientMessage(playerid, COLOR_GREY, "Nem vagy a tuning mûhelybe!");


		new kocsi, vs;
		kocsi = GetClosestVehicle(playerid);
		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5) return Msg(playerid, "Nincs a közelben a jármû!");

		vs = IsAVsKocsi(kocsi);

		if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			
		//SendFormatMessage(playerid, COLOR_YELLOW, "%d != %d && %d != %d",CarInfo[vs][cTulaj],PlayerInfo[playerid][pID],CarInfo[vs][cKereskedo],PlayerInfo[playerid][pID]);
		if(CarInfo[vs][cTulaj] != PlayerInfo[playerid][pID] && CarInfo[vs][cKereskedo] !=  PlayerInfo[playerid][pID]) return Msg(playerid, "Ez nem a tied!");
		
		
		if(egyezik(param[1], "levesz"))
		{
			if(params < 2) return Msg(playerid, "/öröktuning levesz [Kerék / Kasztni / Matrica / Hidraulika / Detektor]");

			if(egyezik(param[2], "detektor"))
			{
				if(CarInfo[vs][cDetektor] == 0) return Msg(playerid, "Ezen nincs detektor!");
				CarInfo[vs][cDetektor] = 0;
				CarUpdate(vs, CAR_Detektor);
				Msg(playerid, "Detektor kikapcsolva");
			}
			if(egyezik(param[2], "Kerék") || egyezik(param[2], "Kerek"))
			{
				if(CarInfo[vs][cKerek] == 0) return Msg(playerid, "Ezen nincs tuningolt kerék!");
				CarInfo[vs][cKerek] = 0;
				CarUpdate(vs, CAR_Kerek);
				Msg(playerid, "Kerék leszedve.");
			}
			if(egyezik(param[2], "Kasztni"))
			{
				if(CarInfo[vs][cTuning] == 0) return Msg(playerid, "Ezen nincs kasztni!");
				CarInfo[vs][cTuning] = 0;
				CarUpdate(vs, CAR_Tuning);
				Msg(playerid, "Kasztni leszedve.");
			}
			if(egyezik(param[2], "Matrica"))
			{
				if(CarInfo[vs][cMatrica] == 3) return Msg(playerid, "Ezen nincs matrica!");
				CarInfo[vs][cMatrica] = 3;
				CarUpdate(vs, CAR_Matrica);
				Msg(playerid, "Matrica leszedve.");
			}
			if(egyezik(param[2], "hidraulika"))
			{
				if(CarInfo[vs][cHidraulika] == 0) return Msg(playerid,"Nincs ezen a kocsin hidraulika!");
				CarInfo[vs][cHidraulika] = 0;
				CarUpdate(vs, CAR_Hidraulika);
				Msg(playerid, "Hidraulika kiszedve");
			}
			if(egyezik(param[2], "neon"))
			{
				if(CarInfo[vs][cNeon] == 0) return Msg(playerid, "Ezen nincs Neon!");
				CarInfo[vs][cNeon] = 0;
				CarUpdate(vs, CAR_Neon);
				if(IsValidDynamicObject(NeonCar[kocsi][0])) DestroyDynamicObject(NeonCar[kocsi][0]), NeonCar[kocsi][0]=INVALID_OBJECT_ID;
				if(IsValidDynamicObject(NeonCar[kocsi][1])) DestroyDynamicObject(NeonCar[kocsi][1]), NeonCar[kocsi][1]=INVALID_OBJECT_ID;
				Msg(playerid,"Leszedted a neon-t!");
				Cselekves(playerid,"leszedett egy neon-t...",1);
				Neon[kocsi] = 0;
				return 1;
			}
			if(egyezik(param[2], "riaszto") || egyezik(param[2], "riasztó"))
			{
				if(CarInfo[vs][cRiaszto] == 0) return Msg(playerid, "Ezen nincs riasztó!");
				CarInfo[vs][cRiaszto] = 0;
				CarUpdate(vs, CAR_Riaszto);
				Msg(playerid,"Kiszedted a riasztót!");
				Cselekves(playerid,"kiszedett egy riasztót",1);
				return 1;
			}
			JarmuTuning(kocsi);
		}
		/////
		if(egyezik(param[1], "detektor"))
		{
			if(params < 2)
			{
				Msg(playerid, "/öt detektor [1 / 2 / 3]");
				Msg(playerid, "Információ: 1. szintû: Csak blokkolja a bemérést - 5.000.000 Ft");
				Msg(playerid, "Információ: 2. szintû: Csak bejelez a vezetõnek, ha 100 méteres körzetben traffipax található - 7.500.000 Ft");
				Msg(playerid, "Információ: 3. szintû: Bejelez a vezetõnek, ha 100 méteres körzetben traffipax található és blokkolja a bemérést - 10.000.000 Ft");
				return 1;
			}
			if(egyezik(param[2], "1"))
			{
				if(CarInfo[vs][cDetektor] > 0) return Msg(playerid,"Ebben a kocsiban már van detektor, elõször szereld ki!");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)) return Msg(playerid, "Nincs elég pénzed, 5.000.000 Ft az ára!");
				
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cDetektor] = 1;
				CarUpdate(vs, CAR_Detektor);
				Cselekves(playerid,"beszerelt a vezetõ ülés alá valamit... ", 1);
				Msg(playerid,"1. szintû detektor beszerelve! Ne feledd, ez csak blokkolja a bemérést! Ki-bekapcsolása: /detektor!");
				BizPenz(BIZ_AUTOSBOLT, 5000000);
			}
			elseif(egyezik(param[2], "2"))
			{
				if(CarInfo[vs][cDetektor] > 0) return Msg(playerid,"Ebben a kocsiban már van detektor, elõször szereld ki!");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 7500000)) return Msg(playerid, "Nincs elég pénzed, 7.500.000 Ft az ára!");
				
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cDetektor] = 2;
				CarUpdate(vs, CAR_Detektor);
				Cselekves(playerid,"beszerelt a vezetõ ülés alá valamit... ", 1);
				Msg(playerid,"2. szintû detektor beszerelve! Ne feledd, ez csak bejelez, ha 10 méteres körzetben traffipax van! Ki-bekapcsolása: /detektor");
				BizPenz(BIZ_AUTOSBOLT, 7500000);
			}
			elseif(egyezik(param[2], "3"))
			{
				if(CarInfo[vs][cDetektor] > 0) return Msg(playerid,"Ebben a kocsiban már van detektor, elõször szereld ki!");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 10000000)) return Msg(playerid, "Nincs elég pénzed, 10.000.000 Ft az ára!");
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cDetektor] = 3;
				CarUpdate(vs, CAR_Detektor);
				Cselekves(playerid,"beszerelt a vezetõ ülés alá valamit... ", 1);
				Msg(playerid,"3. szintû detektor beszerelve! Ez teljeskörû védelmet nyújt! Ki-bekapcsolása: /detektor");
				BizPenz(BIZ_AUTOSBOLT, 10000000);
			}
		}
		if(egyezik(param[1], "riasztó") || egyezik(param[1], "riaszto"))
		{
			if(params < 2)
			{
				Msg(playerid, "/öt riasztó [1 / 2 / 3 / 4]");
				Msg(playerid, "Információ: 1.Szintû:Csak sípol(100.000FT)");
				Msg(playerid, "Információ: 2.Szintû:Sípol és jelez a tulajnak(300.000FT)");
				Msg(playerid, "Információ: 3.Szintû:Sípol, jelez a tulajnak és a rendõrségnek(500.000FT)");
				Msg(playerid, "Információ: 4.Szintû:Gátolja a kocsi indítását teljesen lopásbiztos(2.000.000FT)!");
				return 1;
			}
			if(egyezik(param[2], "1"))
			{
				if(CarInfo[vs][cRiaszto] > 0) return Msg(playerid,"Ebben a kocsiban már van riasztó, elõször szereld ki!");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 100000)){ Msg(playerid, "Nincs elég pénzed 100.000 Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cRiaszto] = 1;
				CarUpdate(vs, CAR_Riaszto);
				SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_RIASZTO, 0);
				Freeze(playerid);
				Cselekves(playerid,"elkezdett beszerelni egy 1.Szintû riasztót...",1);
				Msg(playerid,"Elkezdted beszerelni, várj ameddig végzel...");
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				BizPenz(BIZ_AUTOSBOLT, 100000);
			}
			else if(egyezik(param[2], "2"))
			{
				if(CarInfo[vs][cRiaszto] > 0) return Msg(playerid,"Ebben a kocsiban már van riasztó, elõször szereld ki!");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 300000)){ Msg(playerid, "Nincs elég pénzed 300.000 Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cRiaszto] = 2;
				CarUpdate(vs, CAR_Riaszto);
				SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_RIASZTO, 0);
				Freeze(playerid);
				Cselekves(playerid,"elkezdett beszerelni egy 2.Szintû riasztót...",1);
				Msg(playerid,"Elkezdted beszerelni, várj ameddig végzel...");
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				BizPenz(BIZ_AUTOSBOLT, 300000);
			}
			else if(egyezik(param[2], "3"))
			{
				if(CarInfo[vs][cRiaszto] > 0) return Msg(playerid,"Ebben a kocsiban már van riasztó, elõször szereld ki!");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 500000)){ Msg(playerid, "Nincs elég pénzed 500.000 Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cRiaszto] = 3;
				CarUpdate(vs, CAR_Riaszto);
				SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_RIASZTO, 0);
				Freeze(playerid);
				Cselekves(playerid,"elkezdettf beszerelni egy 3.Szintû riasztót...",1);
				Msg(playerid,"Elkezdted beszerelni, várj ameddig végzel...");
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				BizPenz(BIZ_AUTOSBOLT, 500000);
			}
			else if(egyezik(param[2], "4"))
			{
				if(CarInfo[vs][cRiaszto] > 0) return Msg(playerid,"Ebben a kocsiban már van riasztó, elõször szereld ki!");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 2000000)){ Msg(playerid, "Nincs elég pénzed 2.000.000 Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cRiaszto] = 4;
				CarUpdate(vs, CAR_Riaszto);
				SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_RIASZTO, 0);
				Freeze(playerid);
				Cselekves(playerid,"elkezdett beszerelni egy 4.Szintû riasztót...",1);
				Msg(playerid,"Elkezdted beszerelni, várj ameddig végzel...");
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				BizPenz(BIZ_AUTOSBOLT, 2000000);
			}
			return 1;
		}	
		////
		if(egyezik(param[1], "neon"))
		{
			if(Neon[kocsi] != 0) return Msg(playerid, "Elõször kapcsold ki a meglévõ neont!");

			if(params < 2) return Msg(playerid, "/öt neon [Kék / Piros / Rózsaszín / Fehér / Zöld / Sárga]");

			if(egyezik(param[2], "Kék"))
			{
				if(CarInfo[vs][cNeon] > 0) return Msg(playerid,"Ezen a kocsin van már neon");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 1000000)) return Msg(playerid,"A neon 1 millióba kerül...");
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cNeon] = 1;
				CarUpdate(vs, CAR_Neon);
				SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_NEON, 0);
				Freeze(playerid);
				Cselekves(playerid,"elkezdett felszerelni egy kék neon-t...",1);
				Msg(playerid,"Elkezdted felszerelni, várj ameddig végzel...");
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);

				BizPenz(BIZ_TUNING, 600000);
			}
			else if(egyezik(param[2], "Piros"))
			{
				if(CarInfo[vs][cNeon] > 0) return Msg(playerid,"Ezen a kocsin van már neon");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 1000000)) return Msg(playerid,"A neon 1 millióba kerül...");
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cNeon] = 2;
				CarUpdate(vs, CAR_Neon);
				SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_NEON, 0);
				Freeze(playerid);
				Cselekves(playerid,"elkezdett felszerelni egy piros neon-t...",1);
				Msg(playerid,"Elkezdted felszerelni, várj ameddig végzel...");
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				BizPenz(BIZ_TUNING, 600000);
			}
			else if(egyezik(param[2], "Rózsaszín"))
			{
				if(CarInfo[vs][cNeon] > 0) return Msg(playerid,"Ezen a kocsin van már neon");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 1000000)) return Msg(playerid,"A neon 1 millióba kerül...");
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cNeon] = 3;
				CarUpdate(vs, CAR_Neon);
				SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_NEON, 0);
				Freeze(playerid);
				Cselekves(playerid,"elkezdett felszerelni egy rózsaszín neon-t...",1);
				Msg(playerid,"Elkezdted felszerelni, várj ameddig végzel...");
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				BizPenz(BIZ_TUNING, 600000);
			}
			else if(egyezik(param[2], "Fehér"))
			{
				if(CarInfo[vs][cNeon] > 0) return Msg(playerid,"Ezen a kocsin van már neon");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 1000000)) return Msg(playerid,"A neon 1 millióba kerül...");
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cNeon] = 4;
				CarUpdate(vs, CAR_Neon);
				SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_NEON, 0);
				Freeze(playerid);
				Cselekves(playerid,"elkezdett felszerelni egy fehér neon-t...",1);
				Msg(playerid,"Elkezdted felszerelni, várj ameddig végzel...");
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);

				BizPenz(BIZ_TUNING, 600000);
			}
			else if(egyezik(param[2], "Zöld"))
			{
				if(CarInfo[vs][cNeon] > 0) return Msg(playerid,"Ezen a kocsin van már neon");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 1000000)) return Msg(playerid,"A neon 1 millióba kerül...");
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cNeon] = 5;
				CarUpdate(vs, CAR_Neon);
				SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_NEON, 0);
				Freeze(playerid);
				Cselekves(playerid,"elkezdett felszerelni egy zöld neon-t...",1);
				Msg(playerid,"Elkezdted felszerelni, várj ameddig végzel...");
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);

				BizPenz(BIZ_TUNING, 600000);
			}
			else if(egyezik(param[2], "Sárga"))
			{
				if(CarInfo[vs][cNeon] > 0) return Msg(playerid,"Ezen a kocsin van már neon");
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 1000000)) return Msg(playerid,"A neon 1 millióba kerül...");
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cNeon] = 6;
				CarUpdate(vs, CAR_Neon);
				SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_NEON, 0);
				Freeze(playerid);
				Cselekves(playerid,"elkezdett felszerelni egy sárga neon-t...",1);
				Msg(playerid,"Elkezdted felszerelni, várj ameddig végzel...");
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				BizPenz(BIZ_TUNING, 600000);
			}
			KocsiObjectTorol(kocsi);
			return 1;
		}
		if(egyezik(param[1], "hidraulika"))
		{
			if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 2000000)){ Msg(playerid, "Nincs elég pénzed 2 Millió Ft kell!"); return 1; }
					
			if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
			CarInfo[vs][cHidraulika] = 1;
			CarUpdate(vs, CAR_Hidraulika);
			AddVehicleComponent(kocsi, 1087);
			BizPenz(BIZ_TUNING, 2000000);
			Msg(playerid,"Felrakva!");
		}
		if(egyezik(param[1], "matrica"))
		{
			if(params < 2)
			{
				Msg(playerid, "/öröktuning matrica [0-3] - 3 = leveszi a matricát. 15 millió ft");
				Msg(playerid, "Figyelmeztetés: Csak lowrider és tuning kocsikra, ha másra rakod a pénzt nem kapod vissza!");
				return 1;
			}
			new matrica = strval(param[2]);
			if(matrica < 0 || matrica > 3) return Msg(playerid, "0-3 legyen a matrica száma.");

			if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 15000000)){ Msg(playerid, "Nincs elég pénzed 15 Millió Ft kell!"); return 1; }
					
			if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
			ChangeVehiclePaintjob(kocsi, (matrica));
			CarInfo[vs][cMatrica] = (strval(param[2]));
			CarUpdate(vs, CAR_Matrica);
			BizPenz(BIZ_TUNING, 15000000);
			Msg(playerid, "Matrica felrakva.");
		}
		if(egyezik(param[1], "Alien"))
		{
			//new tuningstyle = 1;
	
			if(CarInfo[vs][cModel] == 560)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve.");
				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 562)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve.");
				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 559)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve.");

				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 558)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve.");
				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 561)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve.");
				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 565)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cTuning] = 1;
				Msg(playerid, "Alien Tuning felszerelve.");
				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			JarmuTuning(kocsi);
		}
		if(egyezik(param[1], "Xflow"))
		{
	
			if(CarInfo[vs][cModel] == 560)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve.");
				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 562)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve.");
				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 559)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve.");
				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 558)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve.");
				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 561)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve.");
				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			if(CarInfo[vs][cModel] == 565)
			{
				if(PlayerInfo[playerid][pAjandek] != 4)
					if(!BankkartyaFizet(playerid, 5000000)){ Msg(playerid, "Nincs elég pénzed 5 Millió Ft kell!"); return 1; }
					
				if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
				CarInfo[vs][cTuning] = 2;
				Msg(playerid, "Xflow Tuning felszerelve.");
				BizPenz(BIZ_TUNING, 5000000);
				CarUpdate(vs, CAR_Tuning);
			}
			JarmuTuning(kocsi);
		}
		if(egyezik(param[1], "kerék") || egyezik(param[1], "kerek"))
		{
	
			if(params < 2) return Msg(playerid, "/öröktuning kerék [1-17]");
			new kerek = strval(param[2]);
			if(kerek < 1 || kerek > 17) return Msg(playerid, "Kerék csak 1-17 lehet.");
			if(PlayerInfo[playerid][pAjandek] != 4)
				if(!BankkartyaFizet(playerid, 60000)){ Msg(playerid, "Nincs elég pénzed 60 000 Ft kell!"); return 1; }
			Msg(playerid, "Kerék felszerelve.");
			new k;
			
			if(kerek < 14)
				k = kerek+1072;
			else
			{
				switch(kerek)
				{
					case 14: k=1025;
					case 15: k=1096;
					case 16: k=1097;
					case 17: k=1098;
				}
			
			}
			
			AddVehicleComponent(kocsi,k);
			CarInfo[vs][cKerek] = k;
			BizPenz(BIZ_TUNING, 50000);
			CarUpdate(vs, CAR_Kerek);
			if(PlayerInfo[playerid][pAjandek] == 4) PlayerInfo[playerid][pAjandek] = NINCS;
		}
	}*/
	if(egyezik(cmd, "/út") || egyezik(cmd, "/ut"))
	{
		if(!IsACop(playerid) && PlayerInfo[playerid][pSwattag] != 1) return Msg(playerid, "Nem vagy rendõr!");
		if(OnDuty[playerid]!=1) return Msg(playerid, "Nem vagy szolgálatba.");
		if(!Munkarang(playerid, 6) && !LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA) && !Admin(playerid, 1337)) return Msg(playerid, "Minimum 6os rang.");
		if(params < 1) return Msg(playerid, "/Út [Lezár / Megnyit]");
		if(egyezik(param[1], "lezár") || egyezik(param[1], "lezar"))
		{
			if(LezartUtat[playerid] != 0) return Msg(playerid, "Már zártál le utat.");

			new tipus2 = NINCS;

			tipus2 = 981;

			new Float:x, Float:y, Float:z, Float:a, Float:X, Float:Y;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, a);
			GetXYInFrontOfPlayer(playerid, X, Y, 5.0); // Elé rakja le

			/*if(tipus2 == 16437)
				LezartUtat[playerid] = CreateDynamicObject(tipus2, X, Y, Z+3, 0.0, 0.0, A+180);
			else*/
			LezartUtat[playerid] = CreateDynamicObject(tipus2, X, Y, z, 0.0, 0.0, a+180);
			LezartUtX[playerid] = X;
			LezartUtY[playerid] = Y;
			LezartUtZ[playerid] = z;

			SetPlayerPos(playerid, x, y, z+0.1); // Hogy a streamer frissitse a játékost

			Msg(playerid, "Út lezárva, ha elakarod tüntetni írd be: ('/út megnyit')");
			new utlezaras[128];
			Format(utlezaras, "[Útlezárás (Figyelmeztetés)][%d]%s lezárt egy utat.", playerid, PlayerName(playerid));
			ABroadCast(COLOR_LIGHTRED, utlezaras, 1);
			CopMsgFormat(COLOR_DBLUE, "HQ: %s lezárt egy út szakaszt.", ICPlayerName(playerid));
		}
		if(egyezik(param[1], "megnyit"))
		{
			if(!PlayerToPoint(15, playerid, LezartUtX[playerid], LezartUtY[playerid], LezartUtZ[playerid]))
			{
				Msg(playerid, "Nem vagy a lezárt útnál, a gps-ed mutatja.");
				SetPlayerCheckpoint(playerid, LezartUtX[playerid], LezartUtY[playerid], LezartUtZ[playerid], 15);
				return 1;
			}
			if(IsValidDynamicObject(LezartUtat[playerid])) DestroyDynamicObject(LezartUtat[playerid]), LezartUtat[playerid]=INVALID_OBJECT_ID;
			LezartUtat[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			Msg(playerid, "Út megnyitva.");
			CopMsgFormat(COLOR_DBLUE, "HQ: %s megnyitott egy útszakaszt.", ICPlayerName(playerid));
		}
	}
	if(egyezik(cmd, "/lehallgat"))
	{
		if(!IsHitman(playerid) && !LMT(playerid, FRAKCIO_FBI)) return 1;
		if(LMT(playerid, FRAKCIO_FBI) && !PlayerToPoint(30.0, playerid, 285.105, 182.403, 1007.179) && !IsHitman(playerid)) return Msg(playerid, "Az FBI Fõépületében kell lenned.");
		if(LMT(playerid, FRAKCIO_FBI) && !IsHitman(playerid)) return Msg(playerid, "/pda..");
		if(LMT(playerid, FRAKCIO_FBI) && !Munkarang(playerid, 4)) return Msg(playerid, "Minimum 4es rang.");
		if(params != 2) return Msg(playerid, "/lehallgat [Rádió] [Állómás]");
		if(egyezik(param[1], "rádió") || egyezik(param[1], "radio"))
		{
			new Allomas = strval(param[2]);
			if(egyezik(param[2], "kikapcsol") || egyezik(param[2], "off"))
			{
				Msg(playerid, "Kikapcsolva");
				RadioHallgatas[playerid] = NINCS;
				return 1;
			}
			if(Allomas < 1 || Allomas > MAX_FRAKCIO)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Rádió állomások: 1-%d", MAX_FRAKCIO);
				return 1;
			}
			RadioHallgatas[playerid] = Allomas;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Csatlakozás sikeres. Állomás: %d", Allomas);
			SendClientMessage(playerid, COLOR_LIGHTRED, "=============[Rádió Adatok]=============");
			new szneve[32];
			new szam = RadioHallgatas[playerid] - 1;
			szneve = Szervezetneve[szam][0];
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Szervezet Neve: %s", szneve);
			new menyien = 0;
			for(new oj = 0; oj < MAX_PLAYERS; oj++)
			{
				if(PlayerInfo[oj][pMember] == RadioHallgatas[playerid] || PlayerInfo[oj][pLeader] == RadioHallgatas[playerid]) menyien++;
			}
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* A rádiót %d-an/en hallgatják.", menyien);
			SendClientMessage(playerid, COLOR_YELLOW, "* Kikapcsoláshoz: /lehallgat rádió kikapcsol");
			Cselekves(playerid, "átkapcsolt a rádióján.", 1);
		}
	}
	if(egyezik(cmd, "/méreg") || egyezik(cmd, "/mereg"))
	{
		if(!IsHitman(playerid)) return 1;/*&& !IsScripter(playerid)) return 1; kivettem, mert felesleges ezzel szórakoznia by Amos*/
		if(params != 1) return Msg(playerid, "/méreg [Játékos Neve / ID]");
		new player;
		player = ReturnUser(param[1]);
		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
		if(GetDistanceBetweenPlayers(playerid,player) > 2) return Msg(playerid, "A játékos nincs a közelben.");
		if(Mergezve[player] > 0) return Msg(playerid, "Ez a játékos már megvan mérgezve.");
		SetTimerEx("Mergezes", 10000, false, "ii", player);
		Mergezve[player] = 10;
		KiMergezte[player] = playerid;
		SendFormatMessage(playerid, COLOR_LIGHTRED, "* Megmérgezted %s-t, hamarosan hatni fog!", ICPlayerName(player));
		Cselekves(playerid, "elõveszi a tût és bele nyomja a célpont nyakába.", 1);
		Cselekves(playerid, "-t megmérgeztek.", 1);
		SendClientMessage(player, COLOR_LIGHTRED, "* Megmérgeztek!");
	}
	if(egyezik(cmd, "/adat"))
	{
		if(!AMT(playerid, MUNKA_DETEKTIV) && !IsHitman(playerid) && !Admin(playerid, 1) && !IsScripter(playerid)) return Msg(playerid, "Nem vagy detektív.");
		if(params != 1) return Msg(playerid, "/adat [Játékos]");
		new player = ReturnUser(param[1]);
		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
		ShowDetektivPlayerStats(playerid, player);
	}
	if(egyezik(cmd, "/robbant") || egyezik(cmd, "/robbant"))
	{
		if(!Admin(playerid, 1337)) return 1;

		if(params != 1) return Msg(playerid, "Használata: /robbant [játékosnév / id]");

		new player;
		player = ReturnUser(param[1]);

		if(player != INVALID_PLAYER_ID)
		{
			if(IsScripter(player)) return 1;
			if(Admin(playerid, 1337) || PlayerInfo[playerid][pAdmin] >= PlayerInfo[player][pAdmin])
			{
				format(string, sizeof(string), "* Felrobbantottad a játékost.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				Format(string, "<< %s felrobbantotta %s-t >>", AdminName(playerid), PlayerName(player));
			}
			else
			{
				format(string, sizeof(string), "* Felrobbantottad a magad.");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				Format(string, "<< %s felrobbantotta magát >>", AdminName(playerid));
				player = playerid;
			}
			ABroadCast(COLOR_LIGHTRED, string, 1);
			SetHealth(player, 0);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(player, x, y, z);
			CreateExplosion(x, y, z, 7, 10);
		}
		return 1;
	}
	if(egyezik(cmd, "/hitmanrádió") || egyezik(cmd, "/hr"))
	{
	    if(IsHitman(playerid))
	    {
			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /(H)itman(R)ádió [IC Üzeneted]");

			if(SzovegEllenorzes(playerid, result, "/hr", ELLENORZES_HIRDETES))
				return 1;

			if(PlayerInfo[playerid][pHitmanNev] == 0)
			{
				format(string, sizeof(string), "** Új Ügynök: %s **", result);
				SendMessage(SEND_MESSAGE_HITMAN, string, COLOR_LIGHTBLUE);
			}
			else
			{
			    format(string, sizeof(string), "** %s: %s **", PlayerInfo[playerid][pHitmanNev], result);
				SendMessage(SEND_MESSAGE_HITMAN, string, COLOR_LIGHTBLUE);
			}
			format(string, sizeof(string), "[Rádió]Valaki mondja: %s", result);
			ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		}
		return 1;
	}

	if(egyezik(cmd, "/hitmanrádiób") || egyezik(cmd, "/hrb"))
	{
	    if(IsHitman(playerid))
	    {
			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /(H)itman(R)adio(B) [OOC Üzeneted]");

			if(SzovegEllenorzes(playerid, result, "/hrb", ELLENORZES_MINDKETTO))
				return 1;

			if(PlayerInfo[playerid][pHitmanNev] == 0)
			{
				format(string, sizeof(string), "** Új Ügynök: (( %s )) **", result);
				SendMessage(SEND_MESSAGE_HITMAN, string, COLOR_LIGHTBLUE);
			}
			else
			{
			    format(string, sizeof(string), "** %s: (( %s )) **", PlayerInfo[playerid][pHitmanNev],  result);
				SendMessage(SEND_MESSAGE_HITMAN, string, COLOR_LIGHTBLUE);
			}
			format(string, sizeof(string), "[Rádió]Valaki mondja: (( %s ))", result);
			ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		}
		return 1;
	}

	if(egyezik(cmd, "/hitman"))
	{
	    if(!IsDirector(playerid) && !IsScripter(playerid)) return Msg(playerid, "a-a");
		if(params < 1) return Msg(playerid, "/Hitman [Viadal / Megbízás / Leader / iFelvesz  / Kirúg]");

		if(egyezik(param[1], "Felvesz"))
		{
			if(params != 2) return Msg(playerid, "/Hitman Felvesz [Játékos Neve / ID]");
            new player;
			player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
			if(IsHitman(player)) return Msg(playerid, "Õ már hitman!");
			PlayerInfo[player][pHitman] = 1;
			SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: %s-t felvetted a Hitmanekhez! Ne felejts el nevet adni neki![/HitmanNév]", PlayerName(player));
			Msg(player, "Hitman lettél! Segítségért: (/help)");
			return 1;
		}
		if(egyezik(param[1], "Leader"))
		{
			if(!IsScripter(playerid)) return 1;
			if(params != 2) return Msg(playerid, "/Hitman Leader [Játékos Neve / ID]");
            new player;
			player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
			if(IsDirector(player))
			{
			PlayerInfo[player][pHitman] = 0;
			SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: %s már nem director többé!", PlayerName(player));
			Msg(player, "Hitman director lettél! Segítségért: (/help)");
			}
			else
			{
			PlayerInfo[player][pHitman] = 2;
			SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: %s mostantól director!", PlayerName(player));
			Msg(player, "Hitman director lettél! Segítségért: (/help)");
			}
			return 1;
		}
		if(egyezik(param[1], "iFelvesz"))
		{
		    if(!IsDirector(playerid) && !IsScripter(playerid)) return 1;
			if(params != 3) return Msg(playerid, "/Hitman iFelvesz [Játékos Neve / ID] [idõ (nap)]");

			new player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");

			//if(IsHitman(player)) return Msg(playerid, "Õ már hitman!");

			new ido = strval(param[3]);
			if(ido < 1 || ido > 90)
				return Msg(playerid, "Az idõ 1 és 90 között lehet!");

			PlayerInfo[player][pHitman] = 1;
			PlayerInfo[player][pHitmanIdo] = UnixTime + (ido * 86400);
			SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: %s-t felvetted a hitmanekhez %d napra! Ne felejts el nevet adni neki! [/HitmanNév]", PlayerName(player),ido);
			SendFormatMessage(player, COLOR_LIGHTRED, "ClassRPG: A bérgyilkosok fõnöke felvett téged %d napra", ido);
			return 1;
		}
		if(egyezik(param[1], "Kirúg") || egyezik(param[1], "Kirug"))
		{
		    if(!IsDirector(playerid) && !IsScripter(playerid)) return 1;
		    if(params != 3) return Msg(playerid, "/Hitman Kirúg [Játékos Neve / ID] [0/1] (robbantás kell-e vagy sem)]");
            new player, robbantas;
			player = ReturnUser(param[2]);
			robbantas = strval(param[3]);
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
			if(!IsHitman(player)) return Msg(playerid, "Õ nem hitman!");
			PlayerInfo[player][pHitman] = 0;
			SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: %s-t kirúgtad a Hitmanektõl!", PlayerName(player));
			Msg(player, "A fõnököd aktivált egy bombát a testedben.");
			if(ConnectedToPC[player] > 0)
		 		ConnectedToPC[player] = 0;

		 	if(HitmanDuty[player] > 0)
				HitmanDuty[player] = 0;

			SetHealth(player, 0);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(player, x, y, z);
			if(robbantas == 1)
			{
				CreateExplosion(x, y, z, 7, 10);
			}
			return 1;
		}

		if(egyezik(param[1], "megbízás"))
		{
			if(params < 4)
				return Msg(playerid, "/hitman megbízás [célpont] [játékos] [összeg]");

			new celpont, megbizott, osszeg;

			if(egyezik(param[2], "rnd"))
				celpont = 555;
			else
			{
				celpont = ReturnUser(param[2]);
				if(celpont == INVALID_PLAYER_ID)
					return Msg(playerid, "Nem aktív játékos");
			}

			if(celpont == 555)
			{
				new van;
				foreach(Jatekosok, x)
					if(PlayerInfo[x][pHeadValue] > 0) van++;

				if(van == 0) return Msg(playerid, "Nincs vérdíj senkin");

				new meg = Rand(1, van);
				for(new x = 0; x < MAX_PLAYERS; x++)
				{
					if(!RendesJatekos(x) || PlayerInfo[x][pHeadValue] <= 0) continue;

					meg--;
					if(meg == 0)
					{
						celpont = x;
						break;
					}

					if(x == (MAX_PLAYERS - 1))
						x = 0;
				}

				if(celpont == 555) return Msg(playerid, "Hiba");
			}

			if(egyezik(param[3], "frakcio") || egyezik(param[3], "frakció"))
			{
				megbizott = strval(param[4]);
				if(megbizott < 1 || megbizott >= MAX_FRAKCIO)
					return Msg(playerid, "Nincs ilyen frakció!");

				megbizott += 1000;
			}
			else if(egyezik(param[3], "all"))
				megbizott = 9999;
			else if(egyezik(param[3], "civil"))
				megbizott = 10000;
			else
			{
				megbizott = ReturnUser(param[3]);
				if(megbizott == INVALID_PLAYER_ID)
					return Msg(playerid, "Nem aktív játékos");

				if(megbizott == celpont)
					return Msg(playerid, "Önmagát csak nem fogja kinyírni...");
			}

			if(1000 < megbizott < 9999)
				osszeg = strval(param[5]);
			else
				osszeg = strval(param[4]);

			if(osszeg < 100000 && osszeg != 0)
				return Msg(playerid, "Az minimum összeg 100,000Ft");

			if(megbizott < 1000)
			{
				if(osszeg <= 0)
				{
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s megbízása törölve!", PlayerName(megbizott));
					SendClientMessage(megbizott, COLOR_YELLOW, "SMS: Megbízásod törölve, Feladó: Hitman");
					Felberelve[megbizott] = NINCS;
					FelberelveOsszeg[megbizott] = 0;
					NoName[megbizott] = false;
					NevMutatas(megbizott, 1);
				}
				else if(Felberelve[megbizott] == celpont)
				{
					if(FelberelveOsszeg[megbizott] == osszeg)
						Msg(playerid, "Neki most is ugyanez a megbízása van");
					else
					{
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s megbízása frissítve! Célpont: %s, Új fizetése: %dFt", PlayerName(megbizott), PlayerName(celpont), osszeg);
						SendFormatMessage(megbizott, COLOR_YELLOW, "SMS: Megbízás frissítve! Célpont: %s, Új fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
						FelberelveOsszeg[megbizott] = osszeg;
					}
				}
				else if(Felberelve[megbizott] != NINCS && Felberelve[megbizott] != celpont)
				{
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s megbízása frissítve! Új célpont: %s, Fizetése: %dFt", PlayerName(megbizott), PlayerName(celpont), osszeg);
					SendFormatMessage(megbizott, COLOR_YELLOW, "SMS: Megbízás frissítve! Új célpont: %s, Fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
					Felberelve[megbizott] = celpont;
					FelberelveOsszeg[megbizott] = osszeg;
				}
				else
				{
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Megbíztad %s-t hogy ölje meg %s-t %dFt-ért.", PlayerName(megbizott), PlayerName(celpont), osszeg);
					SendFormatMessage(megbizott, COLOR_YELLOW, "SMS: Megbízást kaptál! Célpont: %s, Fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
					Msg(megbizott, "Ha a megbízást nem szeretnéd teljesíteni írd be: /cancel megbízás - A neved elrejtése az adminok elõl: /noname");
					Felberelve[megbizott] = celpont;
					FelberelveOsszeg[megbizott] = osszeg;
				}
			}
			else
			{
				if(megbizott == 9999)
				{
					foreach(Jatekosok, ember)
					{
						if(ember == celpont) continue;
						if(osszeg <= 0)
						{
							if(Felberelve[ember] != NINCS)
							{
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Megbízása törölve", PlayerName(ember));
								SendClientMessage(ember, COLOR_YELLOW, "SMS: Megbízásod törölve, Feladó: Hitman");
								Felberelve[ember] = NINCS;
								FelberelveOsszeg[ember] = 0;
								NoName[ember] = false;
								NevMutatas(ember, 1);
							}
							else
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Nincs megbízása", PlayerName(ember), PlayerName(celpont), osszeg);
						}
						else if(Felberelve[ember] == celpont)
						{
							if(FelberelveOsszeg[ember] == osszeg)
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Neki ugyanez a megbízása", PlayerName(ember), PlayerName(celpont), osszeg);
							else
							{
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Megbízás frissítve! Célpont: %s, Új fizetése: %dFt", PlayerName(ember), PlayerName(celpont), osszeg);
								SendFormatMessage(ember, COLOR_YELLOW, "SMS: Megbízás frissítve! Célpont: %s, Új fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
								FelberelveOsszeg[ember] = osszeg;
							}
						}
						else if(Felberelve[ember] != NINCS && Felberelve[ember] != celpont)
						{
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Megbízás frissítve! Új célpont: %s, Fizetése: %dFt", PlayerName(ember), PlayerName(celpont), osszeg);
							SendFormatMessage(ember, COLOR_YELLOW, "SMS: Megbízás frissítve! Új célpont: %s, Fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
							Felberelve[ember] = celpont;
							FelberelveOsszeg[ember] = osszeg;
						}
						else
						{
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Sikeresen megbízva! Célpont: %s, Fizetése: %dFt", PlayerName(ember), PlayerName(celpont), osszeg);
							SendFormatMessage(ember, COLOR_YELLOW, "SMS: Megbízást kaptál! Célpont: %s, Fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
							Msg(ember, "Ha a megbízást nem szeretnéd teljesíteni írd be: /cancel megbízás - A neved elrejtése az adminok elõl: /noname");
							Felberelve[ember] = celpont;
							FelberelveOsszeg[ember] = osszeg;
						}
					}
					Msg(playerid, "Megbízások kiosztva");
				}
				else if(megbizott == 10000)
				{
					foreach(Jatekosok, ember)
					{
						if(ember == celpont || !Civil(ember)) continue;
						if(osszeg <= 0)
						{
							if(Felberelve[ember] != NINCS)
							{
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Megbízása törölve", PlayerName(ember));
								SendClientMessage(ember, COLOR_YELLOW, "SMS: Megbízásod törölve, Feladó: Hitman");
								Felberelve[ember] = NINCS;
								FelberelveOsszeg[ember] = 0;
								NoName[ember] = false;
								NevMutatas(ember, 1);
							}
							else
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Nincs megbízása", PlayerName(ember), PlayerName(celpont), osszeg);
						}
						else if(Felberelve[ember] == celpont)
						{
							if(FelberelveOsszeg[ember] == osszeg)
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Neki ugyanez a megbízása", PlayerName(ember), PlayerName(celpont), osszeg);
							else
							{
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Megbízás frissítve! Célpont: %s, Új fizetése: %dFt", PlayerName(ember), PlayerName(celpont), osszeg);
								SendFormatMessage(ember, COLOR_YELLOW, "SMS: Megbízás frissítve! Célpont: %s, Új fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
								FelberelveOsszeg[ember] = osszeg;
							}
						}
						else if(Felberelve[ember] != NINCS && Felberelve[ember] != celpont)
						{
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Megbízás frissítve! Új célpont: %s, Fizetése: %dFt", PlayerName(ember), PlayerName(celpont), osszeg);
							SendFormatMessage(ember, COLOR_YELLOW, "SMS: Megbízás frissítve! Új célpont: %s, Fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
							Felberelve[ember] = celpont;
							FelberelveOsszeg[ember] = osszeg;
						}
						else
						{
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Sikeresen megbízva! Célpont: %s, Fizetése: %dFt", PlayerName(ember), PlayerName(celpont), osszeg);
							SendFormatMessage(ember, COLOR_YELLOW, "SMS: Megbízást kaptál! Célpont: %s, Fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
							Msg(ember, "Ha a megbízást nem szeretnéd teljesíteni írd be: /cancel megbízás - A neved elrejtése az adminok elõl: /noname");
							Felberelve[ember] = celpont;
							FelberelveOsszeg[ember] = osszeg;
						}
					}
					Msg(playerid, "Megbízások kiosztva");
				}
				else
				{
					new frakcio = megbizott - 1000;
					foreach(Jatekosok, ember)
					{
						if(ember == celpont || PlayerInfo[ember][pMember] != frakcio) continue;

						if(osszeg <= 0)
						{
							if(Felberelve[ember] != NINCS)
							{
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Megbízása törölve", PlayerName(ember));
								SendClientMessage(ember, COLOR_YELLOW, "SMS: Megbízásod törölve, Feladó: Hitman");
								Felberelve[ember] = NINCS;
								FelberelveOsszeg[ember] = 0;
								NoName[ember] = false;
								NevMutatas(ember, 1);
							}
							else
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Nincs megbízása", PlayerName(ember), PlayerName(celpont), osszeg);
						}
						else if(Felberelve[ember] == celpont)
						{
							if(FelberelveOsszeg[ember] == osszeg)
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Neki ugyanez a megbízása", PlayerName(ember), PlayerName(celpont), osszeg);
							else
							{
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Megbízás frissítve! Célpont: %s, Új fizetése: %dFt", PlayerName(ember), PlayerName(celpont), osszeg);
								SendFormatMessage(ember, COLOR_YELLOW, "SMS: Megbízás frissítve! Célpont: %s, Új fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
								FelberelveOsszeg[ember] = osszeg;
							}
						}
						else if(Felberelve[ember] != NINCS && Felberelve[ember] != celpont)
						{
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Megbízás frissítve! Új célpont: %s, Fizetése: %dFt", PlayerName(ember), PlayerName(celpont), osszeg);
							SendFormatMessage(ember, COLOR_YELLOW, "SMS: Megbízás frissítve! Új célpont: %s, Fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
							Felberelve[ember] = celpont;
							FelberelveOsszeg[ember] = osszeg;
						}
						else
						{
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s: Sikeresen megbízva! Célpont: %s, Fizetése: %dFt", PlayerName(ember), PlayerName(celpont), osszeg);
							SendFormatMessage(ember, COLOR_YELLOW, "SMS: Megbízást kaptál! Célpont: %s, Fizetés: %dFt, Feladó: Hitman", PlayerName(celpont), osszeg);
							Msg(ember, "Ha a megbízást nem szeretnéd teljesíteni írd be: /cancel megbízás - A neved elrejtése az adminok elõl: /noname");
							Felberelve[ember] = celpont;
							FelberelveOsszeg[ember] = osszeg;
						}
					}
					Msg(playerid, "Megbízások kiosztva");
				}
			}
		}
		if(egyezik(param[1], "Viadal"))
		{
		    if(params < 2) return Msg(playerid, "/Hitman Viadal [Indít / Benevez] [Játékos Neve / ID]");
		    if(egyezik(param[2], "Indít") || egyezik(param[2], "Indit"))
		    {
				if(BVStart == 1) return Msg(playerid, "Már Folyamatban van egy viadal!");
				for(new x = 0; x < MAX_PLAYERS; x++)
				{
				    if(!IsPlayerConnected(x) || !Logged(x) || IsPlayerNPC(x) || BViadal[x] != 1) continue;
				    SendClientMessage(x, COLOR_YELLOW, "SMS: A Viadal megkezdõdõtt! A versenyzõket látod a radaron! Csak egy maradhat!| Feladó: Hitman Director");
				    SendFormatMessage(x, COLOR_YELLOW, "SMS: Fõnyeremény: %dFt és Hitman tagság | Feladó: Hitman Director", BVPenz);
					Msg(x, " Mj.: Ha meghalsz, kilépsz, automatikusan kiszállsz a versenybõl", false, COLOR_YELLOW);
				}
				BVStart = 1;
				Msg(playerid, "A Viadal megkezdõdõtt!");
		    }
		    else if(egyezik(param[2], "Benevez"))
		    {
		        if(params != 3) return Msg(playerid, "/Hitman Viadal Benevez [Játékos Neve / ID]");
				new player;
				player = ReturnUser(param[3]);
				if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
				//if(IsHitman(player)) return Msg(playerid, "A játékos már hitman, nem nevezheted be!");
				if(BViadal[player] == 1) return Msg(playerid, "Ezt a játékost már benevezted.");
				BViadal[player] = 1;
				BVPenz += 100000;
				BVJatekosok++;
				Msg(playerid, "Benevezted a viadalra.");
				new BVuzi[256];
				format(BVuzi, sizeof(BVuzi), "SMS: Beneveztünk téged egy viadalra, verseny kezdetéig NE ölj meg senkit. | Feladó: Hitman Director");
				SendClientMessage(player, COLOR_YELLOW, "SMS: Beneveztünk téged egy viadalra, a viadal az utolsó emberig tart, ha nyersz, pénzt és bérgyilkosi címet kapsz | Feladó: Hitman Director");
			}
			else if(egyezik(param[2], "idõ") || egyezik(param[2], "ido"))
			{
				if(params != 3) return Msg(playerid, "/hitman viadal idõ [idõ]");
				new ido;
				ido = strval(param[3]);
				if(ido < 5 || ido > 7200) return Msg(playerid, "Az érték 5 és 7200 között lehet");

				SendFormatMessage(playerid, COLOR_WHITE, " Új idõ: %dmp", ido);
				BVIdo = ido;

				return 1;
			}
			return 1;
		}
		return 1;
	}
	if(egyezik(cmd, "/privát") || egyezik(cmd, "/privat"))
	{
		// Playerid = Te | Player = Tulaj
		if(params != 2) return Msg(playerid, "/Privát [Játékos Neve / ID] [Összeg]");
        new player;
		player = ReturnUser(param[1]);
		new Menyiert;
		Menyiert = strval(param[2]);
	 	new biznisz = BizbeVan(playerid);
		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
		if(PlayerInfo[player][pPbiskey] != BIZ_PIGPEN) return Msg(playerid, "Csak a biznisz tulaja adhat engedélyt!");
		if(biznisz != BIZ_PIGPEN) return Msg(playerid, "Nem vagy a PigPenben!");
		if(GetDistanceBetweenPlayers(playerid,player) > 5) return Msg(playerid, "Nincs a közeledben a játékos!");
		if(Menyiert < 5000) return Msg(playerid, "Minimum 5000Ft.");
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Beakarsz menni a privát szobába %dFt-ért.", Menyiert);
  		SendFormatMessage(player, COLOR_LIGHTBLUE, "* %s beakar menni a privát szobába %dFt-ért. Elfogadás:(/accept privát)", ICPlayerName(player), Menyiert);
  		PrivatAjanlat[player] = playerid;
		PrivatAr[player] = Menyiert;
  		return 1;
	}
	if(egyezik(cmd, "/ofelfügeszt"))
	{
		if(!LMT(playerid, FRAKCIO_OKTATO)) return Msg(playerid, "Nem vagy oktató!");
		if(!Munkarang(playerid, 6)) return Msg(playerid, "Minimum 6-os rang kell hogy használhasd!");
		if(params < 1) return	Msg(playerid, "/ofelfügeszt [Játékos Neve / ID]");
		new player = ReturnUser(param[1]);
		if(!IsPlayerConnected(player)) return Msg(playerid, "A játékos nem Online.");
		PlayerInfo[player][pRank] = 0;
		SendFormatMessage(player,COLOR_LIGHTRED,"Felfüggesztett: %s",ICPlayerName(playerid));
		SendFormatMessage(playerid,COLOR_LIGHTRED,"Felfüggesztetted: %s",ICPlayerName(player));
	}
	if (strcmp("/kreszvizsga", cmdtext, true, 11) == 0)
	{
 		if (PlayerToPoint(1.0, playerid, 1549.1091,1613.5458,10.8364) || PlayerToPoint(1.0, playerid, 1549.1093,1610.0614,10.8294) || PlayerToPoint(1.0, playerid, 1546.8599,1613.5428,10.8294) || PlayerToPoint(1.0, playerid, 1546.8577,1609.9434,10.8294))
		{
			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_LIST, "COK számítógép üzetenet: Mit szeretne?","Letenni a kreszvizsgát\nElolvasni a kresz szabályokat és tudnivalákat", "Választ", "Kilépés");
			Cselekves(playerid, "leült egy számítógép elé és bekapcsolta");

		}
		else SendClientMessage(playerid, 0xFF6347AA, "ClassRPG:Nem vagy COK számítógépnél!");
	}
 	if (strcmp("/kreszinfo", cmdtext, true, 12) == 0)
	{
		if (PlayerToPoint(1.0, playerid, 1552.0785,1609.7266,10.8294))
 		{
   			ShowPlayerDialog(playerid, 20, DIALOG_STYLE_MSGBOX, "COK információ", "Kresz információk...olvasd el figyelmesen.\n \n-A kreszteszt kitöltése a számítógépen történik, oktató nemszükséges a vizsgához!\n-A vizsga ára 40ezer forint\n-A teszt sikeres kitöltése után rendelkezni fog egy kresz lappal, ami a vizsgákhoz szükséges!\n \n \nA kresz szükséges az alábbi vizsgákhoz:\n-Autó, motor, kamion\n \n \nTovábbi információkért és vizsgalehetõséghez üljön le egy számítógéphez!((/kreszvizsga))", "Ok", "");
			Cselekves(playerid, "megnézte a kresz információkat");
		}
		else SendClientMessage(playerid, 0xFF6347AA, "ClassRPG:Nem vagy COK információs táblájánál!");

		return 1;
	}
	if(egyezik(cmd, "/vizsgáztat") || egyezik(cmd, "/vizsgaztat"))
	{
		if(!LMT(playerid, FRAKCIO_OKTATO)) return Msg(playerid, "Nem vagy oktató!");
		
		if(!Munkarang(playerid, 1)) return Msg(playerid, "Minimum 1-es rang kell hogy használhasd!");
		if(params < 2)
		{
			Msg(playerid, "/Vizsgáztat [Játékos Neve / ID] [Mire]");
			SendClientMessage(playerid,COLOR_LIGHTRED,"Jogosítványok: Autó, Motor, Kamion, Repülõ, Hajó, Fegyver, Horgász, Helikopter, Vadász, Speciális");
			return 1;
		}
		Msg(playerid, "FIGYELEM! VIZSGA KÖZBEN TILOS ESC-ELNI! Emiatt keletkezõ hibák miatt NE írj bugok topikba!!");
		new szerzodes[700];
		new player = ReturnUser(param[1]);
		if(!IsPlayerConnected(player)) return Msg(playerid, "A játékos nem Online.");
		if(GetDistanceBetweenPlayers(playerid, player) > 2) return Msg(playerid, "A játékos nincs a közeledbe");
		if(player == playerid) return Msg(playerid, "A-A");
		if(PlayerInfo[player][pJogsiTiltIdo] > 0 && !egyezik(PlayerInfo[player][pJogsiTiltOk],"NINCS"))
		{
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Nem vizsgáztathatod le. Õ el van tíltva %d hónapra(óra). Oka: %s ",PlayerInfo[player][pJogsiTiltIdo],PlayerInfo[player][pJogsiTiltOk]);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "Nem tud levizsgáztatni. El vagy tíltva %d hónapra(óra). Oka: %s ",PlayerInfo[player][pJogsiTiltIdo],PlayerInfo[player][pJogsiTiltOk]);
			return 1;
		}

		if(egyezik(param[2], "auto") || egyezik(param[2], "autó"))
		{
			if(PlayerInfo[player][pKreszJogsi] <= 0) return Msg(playerid, "Nem ártatna megnézni van-e KRESZ vizsgája");
			if(!Munkarang(playerid, 2)) return Msg(playerid, "Minimum 2-es rang kell hogy használhasd!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Oktató: Felajánlottad %s-nak/nek hogy levizsgáztatod autóra.", ICPlayerName(player));
			format(szerzodes, 700,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\n%s%s",
			"Oktatási szerzõdés\n\n",
			"A felkínált szerzõdés aláírásával elfogadja,\n",
			"a vizsgáztatói szerzõdéseket,\n",
			"amely a következõket foglalja magában:\n",
			"-A vizsga összegét semmilyen esetben nem térítjük vissza\n",
			"-A vizsgán 3 hiba már bukás\n",
			"-Csakis oktató által kijelölt autóval történik a vizsga\n",
			"-Csakis a GPS rendszer által mutatott úton lehet közlekedni\n\n",
			"Hibának számít:\n",
			"-Közlekedési lámpa figyelmen kívül hagyása\n-Sebesség korlát átlépése\n",
			"-Gondatlan vezetés\n",
			"-Apróbb figyelmetlenségek\n",
			"-Oktató által megjelölt egyéb hibák\n\n",
			"Vizsga fajtája: Kocsi\n",
			"Vizsga ára:\n",
			FormatNumber(Autojogsi, 0, ',' ),
			"Vizsgáztatód neve:\n",
			ICPlayerName(playerid));
			
			ShowPlayerDialog(player, DIALOG_CCOK_SZERZODES, DIALOG_STYLE_MSGBOX, "Class Oktatási Központ", szerzodes, "Aláírás", "Elutasítás");
			//SendFormatMessage(player, COLOR_LIGHTBLUE, "* Oktató: %s felajánlotta hogy levizsgáztat autóra %s Ft-ért. Elfogadás:(/accept Vizsga)", PlayerName(playerid), FormatNumber( Autojogsi, 0, ',' ));
			VizsgaAjanlat[player] = playerid;
			Vizsgafajta[player] = 1;
			VizsgaAr[player] = Autojogsi;
			Tanulofelpenz[player] = floatround(float(Autojogsi) / 2.0);
		}
		else if(egyezik(param[2], "motor"))
		{
			if(PlayerInfo[player][pKreszJogsi] <= 0) return Msg(playerid, "Nem ártatna megnézni van-e KRESZ vizsgája");
			if(!Munkarang(playerid, 2)) return Msg(playerid, "Minimum 2-es rang kell hogy használhasd!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Oktató: Felajánlottad %s-nak/nek hogy levizsgáztatod motorra.", ICPlayerName(player));
			format(szerzodes, 700,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\n%s%s",
			"Oktatási szerzõdés\n\n",
			"A felkínált szerzõdés aláírásával elfogadja,\n",
			"a vizsgáztatói szerzõdéseket,\n",
			"amely a következõket foglalja magában:\n",
			"-A vizsga összegét semmilyen esetben nem térítjük vissza\n",
			"-A vizsgán 3 hiba már bukás\n",
			"-Csakis oktató által kijelölt motorral történik a vizsga\n",
			"-Csakis a GPS rendszer által mutatott úton lehet közlekedni\n\n",
			"Hibának számít:\n",
			"-Közlekedési lámpa figyelmen kívül hagyása\n-Sebesség korlát átlépése\n",
			"-Gondatlan vezetés\n",
			"-Apróbb figyelmetlenségek\n",
			"-Oktató által megjelölt egyéb hibák\n\n",
			"Vizsga fajtája: Motor\n",
			"Vizsga ára:\n",
			FormatNumber(Motorjogsi, 0, ',' ),
			"Vizsgáztatód neve:\n",
			ICPlayerName(playerid));
			ShowPlayerDialog(player, DIALOG_CCOK_SZERZODES, DIALOG_STYLE_MSGBOX, "Class Oktatási Központ", szerzodes, "Aláírás", "Elutasítás");
			//SendFormatMessage(player, COLOR_LIGHTBLUE, "* Oktató: %s felajánlotta hogy levizsgáztat motorra %s Ft-ért. Elfogadás:(/accept Vizsga)", PlayerName(playerid), FormatNumber( Motorjogsi, 0, ',' ));
			VizsgaAjanlat[player] = playerid;
			Vizsgafajta[player] = 2;
			VizsgaAr[player] = Motorjogsi;
			Tanulofelpenz[player] = floatround(float(Motorjogsi) / 2.0);
		}
		else if(egyezik(param[2], "kamion"))
		{
			if(PlayerInfo[player][pKreszJogsi] <= 0) return Msg(playerid, "Nem ártatna megnézni van-e KRESZ vizsgája");
			if(!Munkarang(playerid, 3)) return Msg(playerid, "Minimum 3-es rang kell hogy használhasd!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Oktató: Felajánlottad %s-nak/nek hogy levizsgáztatod kamionra.", ICPlayerName(player));
			format(szerzodes, 700,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\n%s%s",
			"Oktatási szerzõdés\n\n",
			"A felkínált szerzõdés aláírásával elfogadja,\n",
			"a vizsgáztatói szerzõdéseket,\n",
			"amely a következõket foglalja magában:\n",
			"-A vizsga összegét semmilyen esetben nem térítjük vissza\n",
			"-A vizsgán 3 hiba már bukás\n",
			"-Csakis oktató által kijelölt kamionnal történik a vizsga\n",
			"-Csakis a GPS rendszer által mutatott úton lehet közlekedni\n\n",
			"Hibának számít:\n",
			"-Közlekedési lámpa figyelmen kívül hagyása\n-Sebesség korlát átlépése\n",
			"-Gondatlan vezetés\n",
			"-Apróbb figyelmetlenségek\n",
			"-Oktató által megjelölt egyéb hibák\n\n",
			"Vizsga fajtája: Kamion\n",
			"Vizsga ára:\n",
			FormatNumber(Kamionjogsi, 0, ',' ),
			"Vizsgáztatód neve:\n",
			ICPlayerName(playerid));
			ShowPlayerDialog(player, DIALOG_CCOK_SZERZODES, DIALOG_STYLE_MSGBOX, "Class Oktatási Központ", szerzodes, "Aláírás", "Elutasítás");
			//SendFormatMessage(player, COLOR_LIGHTBLUE, "* Oktató: %s felajánlotta hogy levizsgáztat kamionra %s Ft-ért. Elfogadás:(/accept Vizsga)", PlayerName(playerid), FormatNumber( Kamionjogsi, 0, ',' ));
			VizsgaAjanlat[player] = playerid;
			Vizsgafajta[player] = 3;
			VizsgaAr[player] = Kamionjogsi;
			Tanulofelpenz[player] = floatround(float(Kamionjogsi) / 2.0);
		}
		else if(egyezik(param[2], "hajó") || egyezik(param[2], "hajo"))
		{
			if(!Munkarang(playerid, 3)) return Msg(playerid, "Minimum 3-as rang kell hogy használhasd!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Oktató: Felajánlottad %s-nak/nek hogy levizsgáztatod hajóra.", ICPlayerName(player));
			format(szerzodes, 700,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\n%s%s",
			"Oktatási szerzõdés\n\n",
			"A felkínált szerzõdés aláírásával elfogadja,\n",
			"a vizsgáztatói szerzõdéseket,\n",
			"amely a következõket foglalja magában:\n",
			"-A vizsga összegét semmilyen esetben nem térítjük vissza\n",
			"-A vizsgán 3 hiba már bukás\n",
			"-Csakis oktató által kijelölt hajóval történik a vizsga\n",
			"-Csakis a GPS rendszer által mutatott vonalon lehet haladni\n\n",
			"Hibának számít:\n",
			"-Gondatlan vezetés\n",
			"-Apróbb figyelmetlenségek\n",
			"-Oktató által megjelölt egyéb hibák\n\n",
			"Vizsga fajtája: Hajó\n",
			"Vizsga ára:\n",
			FormatNumber(Hajojogsi, 0, ',' ),
			"Vizsgáztatód neve:\n",
			ICPlayerName(playerid));
			ShowPlayerDialog(player, DIALOG_CCOK_SZERZODES, DIALOG_STYLE_MSGBOX, "Class Oktatási Központ", szerzodes, "Aláírás", "Elutasítás");
			//SendFormatMessage(player, COLOR_LIGHTBLUE, "* Oktató: %s felajánlotta hogy levizsgáztat hajóra %sFt-ért. Elfogadás:(/accept Vizsga)", PlayerName(playerid), FormatNumber( Hajojogsi, 0, ',' ));
			VizsgaAjanlat[player] = playerid;
			Vizsgafajta[player] = 4;
			VizsgaAr[player] = Hajojogsi;
			Tanulofelpenz[player] = floatround(float(Hajojogsi) / 2.0);
		}
		else if(egyezik(param[2], "fegyver"))
		{
			if(!Munkarang(playerid, 5)) return Msg(playerid, "Minimum 5-ös rang kell hogy használhasd!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Oktató: Felajánlottad %s-nak/nek hogy vizsgázzon lövészetbõl.", ICPlayerName(player));
			format(szerzodes, 700,"%s%s%s%s%s%s%s%s%s%s%s%s\n%s%s",
			"Oktatási szerzõdés\n\n",
			"A felkínált szerzõdés aláírásával elfogadja,\n",
			"a vizsgáztatói szerzõdéseket,\n",
			"amely a következõket foglalja magában:\n",
			"-A vizsga összegét semmilyen esetben nem térítjük vissza\n",
			"-A vizsgán 3 hiba már bukás\n",
			"Hibának számít:\n",
			"-Apróbb figyelmetlenségek\n",
			"-Oktató által megjelölt egyéb hibák\n\n",
			"Vizsga fajtája: Fegyver\n",
			"Vizsga ára:\n",
			FormatNumber(Fegyverjogsi, 0, ',' ),
			"Vizsgáztatód neve:\n",
			ICPlayerName(playerid));
			ShowPlayerDialog(player, DIALOG_CCOK_SZERZODES, DIALOG_STYLE_MSGBOX, "Class Oktatási Központ", szerzodes, "Aláírás", "Elutasítás");
			//SendFormatMessage(player, COLOR_LIGHTBLUE, "* Oktató: %s felajánlotta hogy levizsgáztat lövészetbõl %sFt-ért. Elfogadás:(/accept Vizsga)", PlayerName(playerid), FormatNumber( Fegyverjogsi, 0, ',' ));
			VizsgaAjanlat[player] = playerid;
			Vizsgafajta[player] = 5;
			VizsgaAr[player] = Fegyverjogsi;
			Tanulofelpenz[player] = floatround(float(Fegyverjogsi) / 2.0);
		}
		else if(egyezik(param[2], "horgász") || egyezik(param[2], "horgasz"))
		{
			if(!Munkarang(playerid, 1)) return Msg(playerid, "Minimum 1-es rang kell hogy használhasd!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Oktató: Felajánlottad %s-nak/nek hogy adsz neki horgászengedélyt.", ICPlayerName(player));
			format(szerzodes, 700,"%s%s%s%s\n%s%s",
			"Oktatási szerzõdés\n\n",
			"Vizsga fajtája: Horgász\n",
			"Vizsga ára:\n",
			FormatNumber(Horgaszjogsi, 0, ',' ),
			"Vizsgáztatód neve:\n",
			ICPlayerName(playerid));
			ShowPlayerDialog(player, DIALOG_CCOK_SZERZODES, DIALOG_STYLE_MSGBOX, "Class Oktatási Központ", szerzodes, "Aláírás", "Elutasítás");
			//SendFormatMessage(player, COLOR_LIGHTBLUE, "* Oktató: %s felajánlotta hogy ad neked horgászengedélyt %sFt-ért. Elfogadás:(/accept Vizsga)", PlayerName(playerid), FormatNumber( Horgaszjogsi, 0, ',' ));
			VizsgaAjanlat[player] = playerid;
			Vizsgafajta[player] = 6;
			VizsgaAr[player] = Horgaszjogsi;
		}
		else if(egyezik(param[2], "repülõ") || egyezik(param[2], "repulo") || egyezik(param[2], "repülö"))
		{
			if(!Munkarang(playerid, 4)) return Msg(playerid, "Minimum 4-es rang kell hogy használhasd!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Oktató: Felajánlottad %s-nak/nek hogy levizsgáztatod repülõre.", ICPlayerName(player));
			format(szerzodes, 700,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\n%s%s",
			"Oktatási szerzõdés\n\n",
			"A felkínált szerzõdés aláírásával elfogadja,\n",
			"a vizsgáztatói szerzõdéseket,\n",
			"amely a következõket foglalja magában:\n",
			"-A vizsga összegét semmilyen esetben nem térítjük vissza\n",
			"-A vizsgán 3 hiba már bukás\n",
			"-Csakis oktató által kijelölt helikopterrel történik a vizsga\n",
			"-Csakis a GPS rendszer által mutatott légvonalban lehet haladni\n\n",
			"Hibának számít:\n",
			"-Gondatlan repülés\n",
			"-Apróbb figyelmetlenségek\n",
			"-Oktató által megjelölt egyéb hibák\n\n",
			"Vizsga fajtája: Repülõ\n",
			"Vizsga ára:\n",
			FormatNumber(Repulojogsi, 0, ',' ),
			"Vizsgáztatód neve:\n",
			ICPlayerName(playerid));
			ShowPlayerDialog(player, DIALOG_CCOK_SZERZODES, DIALOG_STYLE_MSGBOX, "Class Oktatási Központ", szerzodes, "Aláírás", "Elutasítás");
			
			VizsgaAjanlat[player] = playerid;
			Vizsgafajta[player] = 7;
			VizsgaAr[player] = Repulojogsi;
			Tanulofelpenz[player] = floatround(float(Repulojogsi) / 2.0);
		}
		else if(egyezik(param[2], "adr"))
		{
			if(PlayerInfo[player][pKreszJogsi] <= 0) return Msg(playerid, "Nem ártatna megnézni van-e KRESZ vizsgája");
			if(!Munkarang(playerid, 4)) return Msg(playerid, "Minimum 4-es rang kell hogy használhasd!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Oktató: Felajánlottad %s-nak/nek hogy levizsgáztatod adr engedélyre.", ICPlayerName(player));
			format(szerzodes, 700,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\n%s%s",
			"Oktatási szerzõdés\n\n",
			"A felkínált szerzõdés aláírásával elfogadja,\n",
			"a vizsgáztatói szerzõdéseket,\n",
			"amely a következõket foglalja magában:\n",
			"-A vizsga összegét semmilyen esetben nem térítjük vissza\n",
			"-A vizsgán 3 hiba már bukás\n",
			"-Csakis oktató által kijelölt kamionnal történik a vizsga\n",
			"-Csakis a GPS rendszer által mutatott úton lehet közlekedni\n\n",
			"Hibának számít:\n",
			"-Közlekedési lámpa figyelmen kívül hagyása\n-Sebesség korlát átlépése\n",
			"-Gondatlan vezetés\n",
			"-Apróbb figyelmetlenségek\n",
			"-Oktató által megjelölt egyéb hibák\n\n",
			"Vizsga fajtája: ADR\n",
			"Vizsga ára:\n",
			FormatNumber(Adrjogsi, 0, ',' ),
			"Vizsgáztatód neve:\n",
			ICPlayerName(playerid));
			ShowPlayerDialog(player, DIALOG_CCOK_SZERZODES, DIALOG_STYLE_MSGBOX, "Class Oktatási Központ", szerzodes, "Aláírás", "Elutasítás");
			//SendFormatMessage(player, COLOR_LIGHTBLUE, "* Oktató: %s felajánlotta hogy levizsgáztat adr engedélyre. %sFt-ért. Elfogadás:(/accept Vizsga)", PlayerName(playerid), FormatNumber( Adrjogsi, 0, ',' ));
			VizsgaAjanlat[player] = playerid;
			Vizsgafajta[player] = 8;
			VizsgaAr[player] = Adrjogsi;
			Tanulofelpenz[player] = floatround(float(Adrjogsi) / 2.0);
		}
		else if(egyezik(param[2], "helikopter") || egyezik(param[2], "heli"))
		{
			if(!Munkarang(playerid, 4)) return Msg(playerid, "Minimum 4-es rang kell hogy használhasd!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Oktató: Felajánlottad %s-nak/nek hogy levizsgáztatod helikopterre.", ICPlayerName(player));
			format(szerzodes, 700,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\n%s%s",
			"Oktatási szerzõdés\n\n",
			"A felkínált szerzõdés aláírásával elfogadja,\n",
			"a vizsgáztatói szerzõdéseket,\n",
			"amely a következõket foglalja magában:\n",
			"-A vizsga összegét semmilyen esetben nem térítjük vissza\n",
			"-A vizsgán 3 hiba már bukás\n",
			"-Csakis oktató által kijelölt helikopterrel történik a vizsga\n",
			"-Csakis a GPS rendszer által mutatott légvonalban lehet haladni\n\n",
			"Hibának számít:\n",
			"-Gondatlan repülés\n",
			"-Apróbb figyelmetlenségek\n",
			"-Oktató által megjelölt egyéb hibák\n\n",
			"Vizsga fajtája: helikopter\n",
			"Vizsga ára:\n",
			FormatNumber(Helijogsi, 0, ',' ),
			"Vizsgáztatód neve:\n",
			ICPlayerName(playerid));
			ShowPlayerDialog(player, DIALOG_CCOK_SZERZODES, DIALOG_STYLE_MSGBOX, "Class Oktatási Központ", szerzodes, "Aláírás", "Elutasítás");
			VizsgaAjanlat[player] = playerid;
			Vizsgafajta[player] = 9;
			VizsgaAr[player] = Helijogsi;
			Tanulofelpenz[player] = floatround(float(Helijogsi) / 2.0);
		}
		else if(egyezik(param[2], "vadasz") || egyezik(param[2], "vadász"))
		{
			if(!Munkarang(playerid, 5)) return Msg(playerid, "5-ös rangtól lehet kiadni vadászengedélyt!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Felajánlottad %s-nak/nek, hogy átadsz neki egy vadászengedélyt.", ICPlayerName(player));
			format(szerzodes, 700,"%s%s%s%s%s%s%s%s",
			"Vadászengedély kiállítási szerzõdés\n\n",
			"A felkínált szerzõdés aláírásával elfogadja, hogy:\n",
			"- A szerzõdés összegét semmilyen esetben nem térítjük vissza\n",
			"- Legális lõfegyverrel (Rifle/Shotgun) vadászik\n",
			"- Érvényes fegyverengedéllyel rendelkezik\n\n",
			"Az engedély 48 hónapig ((óráig)) érvényes.\n",
			"Vizsga ára: 150.000 Ft\n",
			"Vizsgáztató neve: ",
			ICPlayerName(playerid));
			ShowPlayerDialog(player, DIALOG_CCOK_SZERZODES, DIALOG_STYLE_MSGBOX, "Vadászengedély kiállítási szerzõdés", szerzodes, "Aláírás", "Elutasítás");
			VizsgaAjanlat[player] = playerid;
			Vizsgafajta[player] = 10;
			VizsgaAr[player] = 150000;
		}
		else if(egyezik(param[2], "specialis") || egyezik(param[2],"speciális"))
		{
			if(params < 4) return Msg(playerid,"/vizsgáztat [Játékos Neve / ID] speciális [ára] [jogsineve vagy óra neve]");
			
			new ara;
			new jogsinev[128];
			if(sscanf(pms, "r{s[9]}ds[128]", player,ara, jogsinev))
		
			if(PlayerInfo[player][pKreszJogsi] <= 0) return Msg(playerid, "Nem ártatna megnézni van-e KRESZ vizsgája");
			if(!Munkarang(playerid, 2)) return Msg(playerid, "Minimum 2-es rang kell hogy használhasd!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Oktató: Felajánlottad %s-nak/nek hogy levizsgáztat egy speciális jogsira.", ICPlayerName(player));
			format(szerzodes, 700,"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\n%s%s",
			"Oktatási szerzõdés\n\n",
			"A felkínált szerzõdés aláírásával elfogadja,\n",
			"a vizsgáztatói szerzõdéseket,\n",
			"amely a következõket foglalja magában:\n",
			"-A vizsga összegét semmilyen esetben nem térítjük vissza\n",
			"-A vizsgán 3 hiba már bukás\n",
			"-Csakis oktató által kijelölt autóval történik a vizsga\n",
			"Hibának számít:\n",
			"-Közlekedési lámpa figyelmen kívül hagyása\n-Sebesség korlát átlépése\n",
			"-Gondatlan vezetés\n",
			"-Apróbb figyelmetlenségek\n",
			"-Oktató által megjelölt egyéb hibák\n\n",
			"Vizsga fajtája:\n",jogsinev,
			"Vizsga ára:\n",
			FormatNumber(ara, 0, ',' ),
			"Vizsgáztatód neve:\n",
			ICPlayerName(playerid));
			
			ShowPlayerDialog(player, DIALOG_CCOK_SZERZODES, DIALOG_STYLE_MSGBOX, "Class Oktatási Központ", szerzodes, "Aláírás", "Elutasítás");
			//SendFormatMessage(player, COLOR_LIGHTBLUE, "* Oktató: %s felajánlotta hogy levizsgáztat autóra %s Ft-ért. Elfogadás:(/accept Vizsga)", PlayerName(playerid), FormatNumber( Autojogsi, 0, ',' ));
			VizsgaAjanlat[player] = playerid;
			Vizsgafajta[player] = 11;
			VizsgaAr[player] = ara;
			Tanulofelpenz[player] = floatround(float(ara) / 2.0);
			
			return 1;
		}
	}
	if(egyezik(cmd, "/bank"))
	{
		if(!egyezik(PlayerName(playerid), BankTulaj) && !egyezik(PlayerName(playerid), BankMasodTulaj) && !IsScripter(playerid)) return Msg(playerid, "Kizárólag a tulajnak / másodtulajnak!");
		if(params < 1) return Msg(playerid, "/Bank [Info / (Pénz)Kivétel / (Pénz)Befizet]");
		if(egyezik(param[1], "Info"))
		{
			Msg(playerid, "==========[Bank Info]==========", false);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Tulaj: %s - Másodtulaj: %s", BankTulaj, BankMasodTulaj);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Széf: %s Ft", FormatNumber( BankSzef, 0, ',' ));
			return 1;
		}
		if(egyezik(param[1], "befizet"))
		{
			if(!PlayerToPoint(30, playerid, 2312.601562, -7.930725, 26.742187)) return Msg(playerid, "Nem vagy bankba!");
			if(params < 2) return Msg(playerid, "/Bank Befizetés [Összeg]");
			new osszeg = strval(param[2]);
			if(osszeg < 1) return Msg(playerid, "Normális összegett!");
			if(GetMoney(playerid) < osszeg) return Msg(playerid, "Nincs nálad ennyi pénz!");
			BankSzef += osszeg;
			GiveMoney(playerid, -osszeg);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Befizettél %dFt-ot a széfbe, most %dFt van benne.", osszeg, BankSzef);
			Cselekves(playerid, "pénzt rakott be a bank széfjébe...");
			return 1;
		}
		if(egyezik(param[1], "kivétel") || egyezik(param[1], "kivetel"))
		{
			if(!PlayerToPoint(30, playerid, 2312.601562, -7.930725, 26.742187)) return Msg(playerid, "Nem vagy bankba!");
			if(params < 2) return Msg(playerid, "/Bank Kivétel [Összeg]");
			new osszeg = strval(param[2]);
			if(osszeg < 1) return Msg(playerid, "Normális összegett!");
			if((BankSzef - osszeg) < 0) return Msg(playerid, "Ennyi pénz nincs a széfben!");
			BankSzef -= osszeg;
			GiveMoney(playerid, osszeg);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Kivettél %dFt-ot a széfbõl, maradt %dFt.", osszeg, BankSzef);
			Cselekves(playerid, "pénzt vett ki a bank széfjébõl...");
			return 1;
		}
		if(egyezik(param[1], "tulaj"))
		{
			if(!IsScripter(playerid)) return 1;
			if(params < 2) return Msg(playerid, "/Bank Tulaj [Játékos Neve / ID]");
			new player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
			strmid(BankTulaj, PlayerName(player), 0, strlen(PlayerName(player)), 255);
			SaveBankAdatok();
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Az új bank tulaj: %s", BankTulaj);
			SendClientMessage(player, COLOR_LIGHTGREEN, "* Te lettél az új bank tulaj!");
			return 1;
		}
		if(egyezik(param[1], "másodtulaj") || egyezik(param[1], "masodtulaj"))
		{
			if(params < 2) return Msg(playerid, "/Bank MásodTulaj [Játékos Neve / ID]");
			new player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
			strmid(BankMasodTulaj, PlayerName(player), 0, strlen(PlayerName(player)), 255);
			SaveBankAdatok();
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Az új bank tulaj: %s", BankMasodTulaj);
			SendClientMessage(player, COLOR_LIGHTGREEN, "* Te lettél az új bank másodtulaj!");
			return 1;
		}
	}
    if(egyezik(cmd, "/c4"))
	{
		if(Szint(playerid) < 10) return Msg(playerid, "10es szinttõl!");
		if(params != 1) return Msg(playerid, "Használata: /C4 [Hatástalanít / Vesz / Felszerel / Robbant]");

		if(egyezik(param[1], "hatástalanít") || egyezik(param[1], "hatastalanit"))
		{
			new id = NINCS;
			foreach(Jatekosok, p)
			{
				if(PlayerToPoint(3.0, playerid, C4X[p], C4Y[p], C4Z[p]))
				{
					id = p;
					break;
				}
			}

			if(id == NINCS)
				return Msg(playerid, "A közeledben nincs C4");

			if(id == playerid)
			{
				if(C4Kocsiban[playerid] == NINCS)
				{
					if(IsValidDynamicObject(C4Object[playerid]))
						DestroyDynamicObject(C4Object[playerid]),C4Object[playerid]=INVALID_OBJECT_ID;
					if(IsValidDynamic3DTextLabel(C4Text[playerid]))
						DestroyDynamic3DTextLabel(C4Text[playerid]),C4Text[playerid]=INVALID_3D_TEXT_ID;
				}
				C4Ido[playerid] = 0;
				C4X[playerid] = 0.0;
				C4Y[playerid] = 0.0;
				C4Z[playerid] = 0.0;
				C4Kocsiban[playerid] = NINCS;
				PlayerInfo[playerid][pC4] = 0;
				Msg(playerid, "C4 hatástalanítva");
				Cselekves(playerid, "hatástalanította a saját C4ét");
			}
			else if(LMT(playerid, FRAKCIO_KATONASAG) || PlayerInfo[playerid][pSwattag] || LMT(playerid, FRAKCIO_FBI) && PlayerInfo[playerid][pRank] >= 4 || LMT(playerid, FRAKCIO_CIA))
			{
				if(MunkaFolyamatban[playerid])
					return Msg(playerid, "Türelem");

				Msg(playerid, "C4 hatástalanítás alatt...");
				Cselekves(playerid, "hatástalanít egy C4et...");
				MunkaFolyamatban[playerid] = 1;
				SetTimerEx("Munkavege", MunkaIdo[10], false, "ddd", playerid, M_HATASTALANIT, id);
				//Freeze(playerid, MunkaIdo[10]);
				Freeze(playerid);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
			}
			else
				Msg(playerid, "Csak a Katonaság és SWAT hatástalaníthatja");

			return 1;
		}

		if(LegalisSzervezetTagja(playerid)) return Msg(playerid, "Legális szervezet tagja vagy! Ezért nem vehetsz C4-et...");

        if(egyezik(param[1], "Vesz"))
		{
			if(PlayerInfo[playerid][pC4] != 0) return Msg(playerid, "Már van C4-ed!");
            new fbolt = BizbeVan(playerid);
			if(fbolt == BIZ_GS1 || fbolt == BIZ_GS2)
			{
				if(GetMoney(playerid) < 300000) return Msg(playerid, "Ahoz hogy megvedd a C4-et, 300,000Ft-ra van szükséged!");
				Msg(playerid, "Megvetted a C4-et! Ára: 300,000Ft");
				PlayerInfo[playerid][pC4] = 1;
				GiveMoney(playerid, -300000);
				Cselekves(playerid, "vett egy C4-et...", 1);
				new bizben = BizbeVan(playerid);
				BizPenz(bizben, 300000);
				BizzInfo[bizben][bProducts] -= 3;
				return 1;
			}
			else
			{
			    Msg(playerid, "Nem vagy fegyverboltban!");
			    return 1;
			}
		}
		else if(egyezik(param[1], "Felszerel"))
		{
			if(PlayerInfo[playerid][pC4] == 0) return Msg(playerid, "Nincs C4-ed!");
			if(Bortonben(playerid))
			{
			    Msg(playerid, "C4-et börtönben? Nem kéne...");
			    return 1;
			}
			if(IsAt(playerid, IsAt_Korhaz))
			{
			    Msg(playerid, "C4-et kórházban? Nem kéne...");
			    return 1;
			}
			if(C4Lerakva[playerid] || C4Kocsiban[playerid] != NINCS || C4Ido[playerid]) return Msg(playerid, "Már raktál le C4-et!");
			if(PlayerToPoint(2, playerid, 2144.5300292969, 1626.8874511719, 994.06573486328))
			{
				if(MikorRabolhato > 0)
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "* Nem rég rabolták! (%d)",MikorRabolhato);
					return 1;
				}
				
				if(ZsarukOnline() < 5)
					return SendClientMessage(playerid,COLOR_LIGHTRED,"Nem robbanthatod fel, mert nincs elég szolgálatban lévõ rendõr!");

				C4Lerakva[playerid] = 1;
				Msg(playerid, "Elkezdted felszerelni a széf ajtajára a C4-et, várj!");
				Freeze(playerid, 6000);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				SetTimerEx("c4szereles", 6000, false, "i", playerid);
				Cselekves(playerid, "elkezdett felszerelni egy C4-et a széf ajtajára...");
				return 1;
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
  				new kocsim = GetPlayerVehicleID(playerid);
				C4Kocsiban[playerid] = kocsim;
				C4Lerakva[playerid] = 1;
				SetTimerEx("c4szereles", 6000, false, "ii", playerid);
				Msg(playerid, "Elkezted felszerelni a C4-et a kocsiba!");
				Freeze(playerid, 6000);
				Cselekves(playerid, "elkezdett felszerelni egy C4-et a kocsiba...", 1);
				return 1;
			}
			else
			{
				C4Lerakva[playerid] = 1;
				C4Kocsiban[playerid] = NINCS;
				SetTimerEx("c4szereles", 6000, false, "ii", playerid);
				Msg(playerid, "Elkezdted felszerelni a C4-et!");
				Cselekves(playerid, "elkezdett felszerelni egy C4-et...", 1);
				Freeze(playerid, 6000);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
			}
			return 1;
		}
		else if(egyezik(param[1], "Robbant"))
		{
			if(PlayerInfo[playerid][pC4] == 0) return Msg(playerid, "Nincs C4-ed!");
			if(C4Lerakva[playerid] == 0 || C4X[playerid] == 0.0 && C4Kocsiban[playerid] == NINCS) return Msg(playerid, "Nem raktál le C4-et!");
			if(C4Ido[playerid]) return Msg(playerid, "Már idõzítve van egy C4ed");
			ShowPlayerDialog(playerid, DIALOG_C4, DIALOG_STYLE_LIST, "C4 Aktiválás", "Azonnali robbantás\n5 másodperces késleltetés\n10 másodperces késleltetés\n15 másodperces késleltetés\n30 másodperces késleltetés\n1 perces késleltetés", "Aktivál", "Visszavon");
			return 1;
		}
        else if(egyezik(param[1], "Pos"))
		{
			if(!IsScripter(playerid)) return 1;
			SendFormatMessage(playerid, COLOR_LIGHTRED, "C4 Pos: %f, %f, %f", C4X[playerid], C4Y[playerid], C4Z[playerid]);
			return 1;
		}
		return 1;
	}
	if(egyezik(cmd, "/cheatarmor") || egyezik(cmd, "/carmor"))
	{
		if(!SAdmin(playerid, 1) && !IsScripter(playerid)) return 1;

		if(params < 2)
			return Msg(playerid, "Használata: /cheatarmor [játékos] [+ vagy -] > Levesz vagy hozzáad a játékos páncéljához 1et");

		new player = ReturnUser(param[1]);
		if(player == INVALID_PLAYER_ID || NPC(player))
			return Msg(playerid, "Hibás játékos");

		new Float:regi, log[256], egyeb[32];
		GetPlayerArmour(player, regi);

		if(Szunet[playerid])
			format(egyeb, 32, "-ESC(%d)", SzunetIdo[playerid]);

		if(Animban[playerid])
			strcat(egyeb, "Animban", 32);

		if(egyezik(param[2], "+"))
		{
			if(regi >= 99.0)
				return Msg(playerid, "A játékos páncélja már 99 felett van, ne növeld tovább, hanem csökkentsd a páncélját");

			SetPlayerArmour(player, regi + 1.0);
			format(log, 256, "<< [CheatArmor] [%d]%s adott 1 páncélt neki: [%d]%s - Régi élet: %.1f, új: %.1f  >>",playerid, AdminName(playerid), player, Nev(player), egyeb, regi, regi + 1.0);
		}
		else
		{
			if(regi < 1.0)
				return Msg(playerid, "A játékos páncélja már 1 alatt van, ne csökkentsd tovább, hanem növeld a páncélját");

			SetPlayerArmour(player, regi - 1.0);
			format(log, 256, "<< [CheatArmor] [%d]%s elvett 1 páncélt tõle: [%d]%s - Régi élet: %.1f, új: %.1f  >>",playerid, AdminName(playerid), player, Nev(player), egyeb, regi, regi - 1.0);
		}

		ABroadCast(COLOR_YELLOW, log, 1);
		Log("Admin", log);

		return 1;
	}

	if(egyezik(cmd, "/cheathp") || egyezik(cmd, "/chp"))
	{
		if(!SAdmin(playerid, 1) && !IsScripter(playerid)) return 1;

		if(params < 2)
			return Msg(playerid, "Használata: /cheathp [játékos] [+ vagy -] > Levesz vagy hozzáad a játékos életéhez 1et");

		new player = ReturnUser(param[1]);
		if(player == INVALID_PLAYER_ID || NPC(player))
			return Msg(playerid, "Hibás játékos");

		new Float:regi, log[256], egyeb[32];
		GetPlayerHealth(player, regi);

		if(Szunet[playerid])
			format(egyeb, 32, "-ESC(%d)", SzunetIdo[playerid]);

		if(Animban[playerid])
			strcat(egyeb, "Animban", 32);

		if(egyezik(param[2], "+"))
		{
			if(regi >= 149.0)
				return Msg(playerid, "A játékosnak élete már 149 felett van, ne növeld tovább, hanem csökkentsd az életét!");

			SetHealth(player, regi + 1.0);
			format(log, 256, "<< [CheatHP] [%d]%s adott 1hp-t neki: [%d]%s(%s) - Régi élet: %.1f, új: %.1f  >>",playerid, AdminName(playerid), player, Nev(player), egyeb, regi, regi + 1.0);
		}
		else
		{
			if(regi < 30.0)
				return Msg(playerid, "A játékosnak élete már 30 alatt van, ne csökkentsd tovább, hanem növeld az életét!");

			SetHealth(player, regi - 1.0);
			format(log, 256, "<< [CheatHP] [%d]%s elvett 1hp-t tõle: [%d]%s(%s) - Régi élet: %.1f, új: %.1f  >>",playerid, AdminName(playerid), player, Nev(player), egyeb, regi, regi - 1.0);
		}

		ABroadCast(COLOR_YELLOW, log, 1);
		Log("Admin", log);

		return 1;
	}
	if(egyezik(cmd, "/bankszámla") || egyezik(cmd, "/bankszamla")  || egyezik(cmd, "/bsz"))
	{
		//if(GetPlayerVirtualWorld(playerid) == 1555 && Rob > 2500) return Msg(playerid, "Nem rég rabolták a bankot, ezért nem lehet használni!");
		if(PlayerToPoint(4, playerid, 1931.01899229, -2438.59397467, 14.1843142578) && GetPlayerVirtualWorld(playerid) == 1555 && Rob > 2500) return Msg(playerid, "Nem rég rabolták a bankot, ezért nem lehet használni!");
		if(PlayerToPoint(30, playerid, 2312.601562, -7.930725, 26.742187) && GetPlayerVirtualWorld(playerid) == 1555 && Rob > 9700) return Msg(playerid, "Nem rég rabolták a bankot, ezért nem lehet használni!");
		
		if(GetPlayerVirtualWorld(playerid)==9999) return Msg(playerid, "Ez nem bank!");
		if(PlayerInfo[playerid][pZarolva] == 1) return Msg(playerid, "A számlád zárolva van!");
		if(!PlayerToPoint(30, playerid, 2312.601562, -7.930725, 26.742187) && !PlayerToPoint(4, playerid, 1913.67269229, -2415.88067467, 13.9656142578) && !IsAt(playerid, IsAt_ATM)) return Msg(playerid, "Nem vagy bankba / ATMnél!");
		if(PlayerToPoint(30, playerid, 2312.601562, -7.930725, 26.742187) || PlayerToPoint(4, playerid, 1913.67269229, -2415.88067467, 13.9656142578))
		{
			ShowPlayerDialog(playerid, DIALOG_BBSZ, DIALOG_STYLE_LIST, "Bankszámla", "Nyit\nBelép\nBefizetés\nKivétel\nUtalás\nJelszóváltás\nSMS infó", "Tovább","Mégse");
		}
		else if(IsAt(playerid, IsAt_ATM))
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				Msg(playerid, "Jármûbõl akarod használni az ATM-et?");
				return 1;
			}
			format(string,sizeof(string),"ATM %d",AtmKozel(playerid));
			ShowPlayerDialog(playerid, DIALOG_ABSZ, DIALOG_STYLE_LIST, string, "Belép\nKivétel", "Tovább","Mégse");
		}
		else if(PlayerToPoint(30.0, playerid, 285.105, 182.403, 1007.179))
		{
			if(!LMT(playerid, FRAKCIO_FBI)) return 1;
			if(LMT(playerid, FRAKCIO_FBI)) return Msg(playerid, "/pda..");
			if(!PlayerToPoint(30.0, playerid, 285.105, 182.403, 1007.179)) return Msg(playerid, "Az FBI Fõépületében kell lenned.");
			if(params < 2) return Msg(playerid, "/bankszámla zárolás [számlaszám]");
			new bsz = strval(param[2]);

			if( bsz < 1 )
				return Msg(playerid, "Érvénytelen bankszámlaszám");

			new player = BankSzamla(bsz);

			if(player == NINCS)
				return Msg(playerid, "Nincs ilyen bankszámlaszám");

			if(PlayerInfo[player][pZarolva] == 1)
			{
				Msg(playerid, "Feloldottad a zárolást a számláról.");
				SendRadioMessageFormat(FRAKCIO_FBI, COLOR_DBLUE, "HQ: %s feloldotta a zárolást egy bankszámláról(Számlaszám: %d)", ICPlayerName(playerid), bsz);
				PlayerInfo[player][pZarolva] = 0;
				Msg(player, "Az FBI feloldotta a zárolást a számládról.");
				return 1;
			}
			if(PlayerInfo[player][pZarolva] == 0)
			{
				Msg(playerid, "Lezároltad a számlát.");
				SendRadioMessageFormat(FRAKCIO_FBI, COLOR_DBLUE, "HQ: %s lezárt egy számlát(Számlaszám: %d)", ICPlayerName(playerid), bsz);
				PlayerInfo[player][pZarolva] = 1;
				Msg(player, "Az FBI lezárolta a számlád.");
				return 1;
			}
		}
	}	
    if(egyezik(cmd, "/felvesz"))
	{
		if(params < 1)
		{
			Msg(playerid, "/felvesz [Fizetés / Mûanyag / Fém / Rádió / Csipogó / fegyver / pénz  / marihuana / materials / kokain]");
			Msg(playerid, "[heroin / Rendõrpajzs / Jelvény]");
			return true;
		}

		if(FloodCheck(playerid)) return 1;
		if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid,"Kocsiból? :)");
		new id = KozeliEldobottCucc(playerid);

		if(egyezik(param[1], "Fizetés") || egyezik(param[1], "Fizetes"))
		{
			if(GetPlayerVirtualWorld(playerid)==9999) return Msg(playerid, "Ez nem bank!");
			if(PlayerInfo[playerid][pBankSzamla] != 0) return Msg(playerid, "Van bankszámlád, a fizetést oda kapod...");
			if(!IsAt(playerid, IsAt_Bank)) return Msg(playerid, "Nem vagy a bankban!");
			if(PlayerInfo[playerid][pPayCheck] < 10000) return Msg(playerid, "Legalább 10,000Ft-nak kell lennie a fizetésednek!");
			GiveMoney(playerid, PlayerInfo[playerid][pPayCheck]);
			SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Fizetés felvéve! Összeg: %sFt", FormatNumber( PlayerInfo[playerid][pPayCheck], 0, ',' ));
            PlayerInfo[playerid][pPayCheck] = 0;
            Cselekves(playerid, "felvette a fizetését...");
			return 1;
		}
		elseif(egyezik(param[1], "jelvény") || egyezik(param[1], "jelveny"))
		{
			new melo = PlayerInfo[playerid][pMember];
			if(!IsACop(playerid)) return Msg(playerid, "Számodra nem elérhetõ!");
			if(!PlayerToPoint(3, playerid, FrakcioInfo[melo][fPosX], FrakcioInfo[melo][fPosY], FrakcioInfo[melo][fPosZ])) return Msg(playerid, "Nem vagy a széf közelében.");
			if(PlayerInfo[playerid][pJelveny]) return Msg(playerid, "Már van nálad jelvény!");
			PlayerInfo[playerid][pJelveny] = 1;
			Cselekves(playerid, "felvett egy jelvényt a széfbõl.");
		}
		else if(egyezik(param[1],"pénz") || egyezik(param[1],"penz"))
		{
			for(new i = 0; i < sizeof(PenzDropInfo); i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0,PenzDropInfo[i][PenzX],PenzDropInfo[i][PenzY],PenzDropInfo[i][PenzZ]) && GetPlayerVirtualWorld(playerid) == PenzDropInfo[i][PenzVW] && GetPlayerInterior(playerid) == PenzDropInfo[i][PenzInt])
				{
					ApplyAnimation(playerid, "MISC","pickup_box",4.0,0,0,1,0,0);
					
					if(IsValidDynamicObject(EldobottPenzObject[i]))
						DestroyDynamicObject(EldobottPenzObject[i]),EldobottPenzObject[i]=INVALID_OBJECT_ID;
					if(IsValidDynamic3DTextLabel(EldobottPenzText[i]))
						DestroyDynamic3DTextLabel(EldobottPenzText[i]),EldobottPenzText[i]=INVALID_3D_TEXT_ID;

					GiveMoney(playerid,PenzDropInfo[i][PenzOsszeg]);
					PenzDropInfo[i][PenzX] = 0.0;
					PenzDropInfo[i][PenzY] = 0.0;
					PenzDropInfo[i][PenzZ] = 0.0;
					PenzDropInfo[i][PenzOsszeg] = 0;
					PenzDropInfo[i][PenzIdo] = NINCS;
					PenzDropInfo[i][PVan] = false;
					Cselekves(playerid,"felvett egy kis pénzt a földrõl.",0);
					return 1;
				}
			}
		}
		else if(egyezik(param[1],"rendõrpajzs") || egyezik(param[1],"rendorpajzs"))
		{
		    if(!IsACop(playerid)) return Msg(playerid, "Nem vagy rendõr!");

            if(!Munkarang(playerid, 3))
				return Msg(playerid, "Nincs elegendõ rangod, hogy használhasd!");

			new kocsi = GetClosestVehicle(playerid);
	        if(IsACopCar(kocsi))
			{
			    if(Bikes(kocsi))
			        return Msg(playerid, "Ebben a jármûben nincs pajzs!");
					
				if(PajzsNala[playerid]) return Msg(playerid, "Elõtte rakd el a SWAT Pajzsot!");

		        if(RendorPajzsIdo[playerid] == 0)
				{
			        RendorPajzsIdo[playerid] = 30; // 30mp-ig
					PutRiotShieldOnArm(playerid);
					Msg(playerid, "Felvetted a pajzsot! Intenzív támadás esetén 30 másodpercig megvéd téged!");
				} else if(RendorPajzsIdo[playerid] > 0)
				{
				    if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_SLOT_ZSAK_PAJZS_BILINCS)) RemovePlayerAttachedObject(playerid, ATTACH_SLOT_ZSAK_PAJZS_BILINCS);
				    Msg(playerid, "Levetted a pajzsod!");
				    RendorPajzsIdo[playerid] = 0;
				}
			}
			else Msg(playerid, "Nincs a közeledben rendvédelmis jármû!");
			return true;
		}
		else if(egyezik(param[1],"fegyver"))
		{
			if(PlayerState[playerid] != PLAYER_STATE_ONFOOT)
				return Msg(playerid, "Jármûben?");
			
			if(params < 2)
				return Msg(playerid, "Használata: /felvesz fegyver [fegyvernév / ID] - közelben lévõ fegyverek: /felvesz szétnéz");
			
			new weapon;
			if(isNumeric(param[2]))
				weapon = strval(param[2]);
			else
				weapon = GetGunID(param[2]);
			
			if(weapon < 1 || weapon > MAX_WEAPONS)
				return Msg(playerid, "Ilyen fegyver nem létezik");
				
			for(new i = 0; i < MAX_DROP; i++)
			{
				if(DropInfo[i][dVan] && DropInfo[i][dType] == DROP_TYPE_WEAPON && DropInfo[i][dData][0] == weapon && IsPlayerInRangeOfPoint(playerid, DROP_DEFAULT_DISTANCE, ArrExt(DropInfo[i][dPos])) && GetPlayerVirtualWorld(playerid) == DropInfo[i][dVW] && GetPlayerInterior(playerid) == DropInfo[i][dInt])
				{
					if(WeaponGiveWeapon(playerid, weapon, _, 0) >= 0)
					{
						format(_tmpString, 128, "[/felvesz fegyver] %s felvette ezt: %s", PlayerName(playerid), GunName(weapon)), Log("Fegyver", _tmpString);
						Cselekves(playerid,"felvett egy fegyvert a földrõl.",0);
						ApplyAnimation(playerid, "MISC","pickup_box",4.0,0,0,1,0,0);
						
						DropRemove(i);
					}
					else
						Msg(playerid, "Nem tudod felvenni");
						
					return 1;
				}
			}
			
			Msg(playerid, "Nincs ilyen fegyver a közelben");
		}
		else if(egyezik(param[1], "loszer") || egyezik(param[1], "lõszer"))
		{
			if(PlayerState[playerid] != PLAYER_STATE_ONFOOT)
				return Msg(playerid, "Jármûben?");
			
			if(params < 2)
				return Msg(playerid, "Használata: /felvesz lõszer [fegyvernév / ID] [max mennyiség] - közelben lévõ fegyverek: /felvesz szétnéz");
			
			new weapon = GetGunFromString(param[2]);			
			if(weapon < 1 || weapon > MAX_WEAPONS)
				return Msg(playerid, "Ilyen fegyver nem létezik");
			
			new felvenni, felveve, t;
			if(params >= 3 && isNumeric(param[3]))
				felvenni = strval(param[3]);
			
			felvenni = max(0, min(felvenni, WeaponMaxAmmo(weapon) - WeaponAmmo(playerid, weapon)));
			
			if(!felvenni || !WeaponCanHoldAmmo(playerid, weapon, felvenni))
				return Msg(playerid, "Nem tudsz ilyen lõszert felvenni, tele vagy!");
				
			for(new i = 0; i < MAX_DROP; i++)
			{
				if(DropInfo[i][dVan] && DropInfo[i][dType] == DROP_TYPE_AMMO && DropInfo[i][dData][0] == weapon && DropInfo[i][dData][1] > 0 && IsPlayerInRangeOfPoint(playerid, DROP_DEFAULT_DISTANCE, ArrExt(DropInfo[i][dPos])) && GetPlayerVirtualWorld(playerid) == DropInfo[i][dVW] && GetPlayerInterior(playerid) == DropInfo[i][dInt])
				{
					t = max(0, min(felvenni, DropInfo[i][dData][1]));
					
					if(t)
					{
						felvenni -= t;
						felveve += t;
						DropInfo[i][dData][1] -= t;
						WeaponGiveAmmo(playerid, weapon, t);
						
						if(!DropInfo[i][dData][1])
							DropRemove(i);
					}
				}
			}
			
			if(felveve)
			{
				format(_tmpString, 128, "[/felvesz lõszer] %s felvette ezt: %ddb %s lõszer", PlayerName(playerid), felveve, GunName(weapon)), Log("Fegyver", _tmpString);
				format(_tmpString, 64, "felvett %ddb %s lõszert a földrõl", felveve, GunName(weapon)), Cselekves(playerid, _tmpString, 0);
				ApplyAnimation(playerid, "MISC","pickup_box", 4.0, 0, 0, 1, 0, 0);
			}
			else
				Msg(playerid, "Nem vettél fel egy lõszert sem");
		}
		else if(egyezik(param[1], "szetnez") || egyezik(param[1], "szétnéz"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "=[ Fegyverek és lõszerek a földön ]=");
			
			_tmpString = "";
			for(new d = 0; d < MAX_DROP; d++)
			{
				if(DropInfo[d][dVan] && DropInfo[d][dType] == DROP_TYPE_WEAPON && IsPlayerInRangeOfPoint(playerid, DROP_DEFAULT_DISTANCE, ArrExt(DropInfo[d][dPos])))
				{
					if(strlen(_tmpString) >= 100)
						SendClientMessage(playerid, COLOR_WHITE, _tmpString), _tmpString = "";
					
					if(!strlen(_tmpString))
						format(_tmpString, 128, "Fegyver: %s", GetGunName(DropInfo[d][dData][0]));
					else
						format(_tmpString, 128, "%s, %s", _tmpString, GetGunName(DropInfo[d][dData][0]));
				}
			}
			
			if(strlen(_tmpString))
				SendClientMessage(playerid, COLOR_WHITE, _tmpString), _tmpString = "";
			else
				SendClientMessage(playerid, COLOR_WHITE, "Fegyver: nincs");
			
			for(new d = 0; d < MAX_DROP; d++)
			{
				if(DropInfo[d][dVan] && DropInfo[d][dType] == DROP_TYPE_AMMO && IsPlayerInRangeOfPoint(playerid, DROP_DEFAULT_DISTANCE, ArrExt(DropInfo[d][dPos])))
				{
					if(strlen(_tmpString) >= 100)
						SendClientMessage(playerid, COLOR_WHITE, _tmpString), _tmpString = "";
					
					if(!strlen(_tmpString))
						format(_tmpString, 128, "Lõszerek: %s (%ddb)", GetGunName(DropInfo[d][dData][0]), DropInfo[d][dData][1]);
					else
						format(_tmpString, 128, "%s, %s (%ddb)", _tmpString, GetGunName(DropInfo[d][dData][0]), DropInfo[d][dData][1]);
				}
			}
			
			if(strlen(_tmpString))
				SendClientMessage(playerid, COLOR_WHITE, _tmpString), _tmpString = "";
			else
				SendClientMessage(playerid, COLOR_WHITE, "Lõszer: nincs");
		}
		else if(egyezik(param[1], "Mûanyag") || egyezik(param[1], "Muanyag"))
		{
			if(Szint(playerid) < IllegalisMunkak[0]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[0]);
			new darab;
			
			if(sscanf(param[2], "d", darab)) return Msg(playerid, "/felvesz mûanyag [darab]");
			if(!PlayerToPoint(3, playerid, 90.638587, -183.727081, 1.484375) && !PlayerToPoint(3, playerid,	-1688.1918,-17.7540,3.5547)) return Msg(playerid, "Nem vagy mûanyag felvevõ helyen!");
			if(PlayerInfo[playerid][pMuanyag] + darab > MAXMUANYAG) return Msg(playerid, "Ez kicsit sok lesz!");
			if(PlayerInfo[playerid][pMuanyag] >= MAXMUANYAG) return Msg(playerid, "Ennyi mûanyagot nem bírsz el!");
	    	if(GetMoney(playerid) < 600*darab) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Nincs elég pénzed! (%dFt)", 600*darab);
			
    		GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Felvettel par muanyagdobozt...", 3000, 3);
			PlayerInfo[playerid][pMuanyag] += darab;
			GiveMoney(playerid, -600*darab);
			Cselekves(playerid, "felvett pár mûanyagdobozt...");
			return 1;
		}
		else if(egyezik(param[1], "fém") || egyezik(param[1], "fem"))
		{
			if(Szint(playerid) < IllegalisMunkak[0]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[0]);
			if(PlayerInfo[playerid][pFem] >= MAXFEM) return Msg(playerid, "Nem fér el nálad ennyi fém!");
			if(!PlayerToPoint(5, playerid, 321.2111,-45.0681,1.5693))
			{
				Msg(playerid, "Nem itt kell felvenni(térképen jelöltük)");
				SetPlayerCheckpoint(playerid, 321.2111,-45.0681,1.5693, 5);
				return 1;
			}
			if(GetMoney(playerid) < 6000) return Msg(playerid, "6000 forint...");
			PlayerInfo[playerid][pFem]++;
			Cselekves(playerid, "felvett egy fémdarabot.", 0);
			GiveMoney(playerid, -6000);
			return 1;
		}
		else if(egyezik(param[1], "Rádió") || egyezik(param[1], "Radio"))
		{
			new Melo = PlayerInfo[playerid][pMember];
			if(!PlayerToPoint(3, playerid, FrakcioInfo[Melo][fPosX], FrakcioInfo[Melo][fPosY], FrakcioInfo[Melo][fPosZ])) return Msg(playerid, "Nem vagy a széf közelében.");
			if(PlayerInfo[playerid][pRadio])	return Msg(playerid, "Már van nálad rádió!");
			PlayerInfo[playerid][pRadio] = 1;
			Cselekves(playerid, "felvett egy rádiót a széfbõl.");
			return 1;
		}
		else if(egyezik(param[1], "Csipogó") || egyezik(param[1], "Csipogo"))
		{
			new Melo = PlayerInfo[playerid][pMember];
			if(LegalisSzervezetTagja(playerid) && !LMT(playerid, FRAKCIO_TUZOLTO))return Msg(playerid, "Csak Illegális vehet fel csipogót");
			if(!PlayerToPoint(3, playerid, FrakcioInfo[Melo][fPosX], FrakcioInfo[Melo][fPosY], FrakcioInfo[Melo][fPosZ])) return Msg(playerid, "Nem vagy a széf közelében.");
			if(PlayerInfo[playerid][pCsipogo])	return Msg(playerid, "Már van nálad csipogó!");
			PlayerInfo[playerid][pCsipogo] = 1;
			Cselekves(playerid, "felvett egy csipogót a széfbõl.");
			return 1;
		}
		else if(egyezik(param[1],"materials"))
		{
			if(id > 0)
			{
				if(Eldob[id][Tipus] == 4 && Eldob[id][eVw] == GetPlayerVirtualWorld(playerid))
				{
					new mats = PlayerInfo[playerid][pMats] + Eldob[id][Mennyiseg];
					if(mats > MAXMATI) return Msg(playerid, "Nem fér el nálad ennyi!.");

					PlayerInfo[playerid][pMats] += Eldob[id][Mennyiseg];
					EldobottCuccNullazas(id);
					Cselekves(playerid,  "felvett némi materialt a földrõl.", 0);
					return 1;
				}
				else
					return Msg(playerid, "Nincs materials a közeledben!");
			}
			else
				return Msg(playerid, "Nincs objektum a közeledben!");
		}
		else if(egyezik(param[1],"heroin"))
		{
			if(id > 0)
			{
				if(Eldob[id][Tipus] == 5 && Eldob[id][eVw] == GetPlayerVirtualWorld(playerid))
				{
					new mats = PlayerInfo[playerid][pHeroin] +Eldob[id][Mennyiseg];
					if(mats > MAXHEROIN) return Msg(playerid, "Nem fér el nálad ennyi!.");
					PlayerInfo[playerid][pHeroin] += Eldob[id][Mennyiseg];
					EldobottCuccNullazas(id);
					Cselekves(playerid,  "felvett némi heroint a földrõl.", 0);
					return 1;
				}
				else
					return Msg(playerid, "Nincs heroin a közeledben!");
			}
			else
				return Msg(playerid, "Nincs objektum a közeledben!");
		}
		else if(egyezik(param[1],"kokain"))
		{
			if(id > 0)
			{
				if(Eldob[id][Tipus] == 6 && Eldob[id][eVw] == GetPlayerVirtualWorld(playerid))
				{
					new mats = PlayerInfo[playerid][pKokain] +Eldob[id][Mennyiseg];
					if(mats > MAXKOKAIN) return Msg(playerid, "Nem fér el nálad ennyi!.");
					PlayerInfo[playerid][pKokain] += Eldob[id][Mennyiseg];
					EldobottCuccNullazas(id);
					Cselekves(playerid,  "felvett némi kokaint a földrõl.", 0);
					return 1;
				}
				else
					return Msg(playerid, "Nincs kokain a közeledben!");
			}
			else
				return Msg(playerid, "Nincs objektum a közeledben!");
		}
		else if(egyezik(param[1],"marihuana"))
		{
			if(id > 0)
			{
				if(Eldob[id][Tipus] == 7 && Eldob[id][eVw] == GetPlayerVirtualWorld(playerid))
				{
					new mats = PlayerInfo[playerid][pMarihuana] +Eldob[id][Mennyiseg];
					if(mats > MAXMARIHUANA) return Msg(playerid, "Nem fér el nálad ennyi!.");
					PlayerInfo[playerid][pMarihuana] += Eldob[id][Mennyiseg];
					EldobottCuccNullazas(id);
					Cselekves(playerid,  "felvett némi marihuanat a földrõl.", 0);
					return 1;
				}
				else
					return Msg(playerid, "Nincs marihuana a közeledben!");
			}
			else
				return Msg(playerid, "Nincs objektum a közeledben!");
		}
		else
			Msg(playerid, "/felvesz [Fizetés / Mûanyag / Fém / marihuana / materials / kokain / heroin]");

		return 1;
	}	
	if(strcmp(cmd, "/mentõátír", true) == 0)
	{
	    if(!LMT(playerid, FRAKCIO_MENTO)) return Msg(playerid, "Ezt a parancsot nem használhatod");
		if(PlayerInfo[playerid][pRank] < 8) return Msg(playerid, "Csak Mentõ Igazgató és Vezérigazgató!");
		if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				Msg(playerid, "Használat: /mentõátír [Játékos neve / ID] [szám] [db]");
				Msg(playerid, "|1 Összes | Többi késõbb");

				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
	    	{
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						Msg(playerid, "Használat: /mentõátír [Játékos neve / ID] [szám] [db]");
						Msg(playerid, "|1 Összes | Többi késõbb");
						return 1;
					}
					new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						Msg(playerid, "Használat: /mentõátír [Játékos neve / ID] [szám] [db]");
						Msg(playerid, "|1 Mentõ | Többi késõbb");
						return 1;
					}
					new amount;
					amount = strval(tmp);
					if(stat > 1) return Msg(playerid, "1-est írj. Többit késõbb!!");
					{
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pMechSkill] = amount;
								format(string, sizeof(string), "A Mentõs Tapasztalatod átírva erre: %d", amount);
							}
							case 2:
							{
								//PlayerInfo[giveplayerid][pKamiSkill] = amount;
								//format(string, sizeof(string), "A Kamion vizsgáinak száma átírva erre: %d", amount);
							}
							case 3:
							{
								//PlayerInfo[giveplayerid][pRepSkill] = amount;
								//format(string, sizeof(string), "A Repülõ vizsgáinak száma átírva erre:%d", amount);
							}
							case 4:
							{
								//PlayerInfo[giveplayerid][pFegySkill] = amount;
								//format(string, sizeof(string), "Az Fegyver vizsgáinak száma átírva erre: %d", amount);
							}
							case 5:
							{
								//PlayerInfo[giveplayerid][pAdrSkill] = amount;
								//format(string, sizeof(string), "Az ADR vizsgáinak száma átírva erre: %d", amount);
							}
							case 6:
							{
								//PlayerInfo[giveplayerid][pHajoSkill] = amount;
								//format(string, sizeof(string), "A Hajó vizsgáinak száma átírva erre: %d", amount);
							}

						}
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
				else Msg(playerid, "A játékos nem elérhetõ.");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/oktatásaim"))
	{

		if(!LMT(playerid, FRAKCIO_OKTATO)) return Msg(playerid, "Ezt a parancsot nem használhatod");
		{
			new level = PlayerInfo[playerid][pAutmotSkill];
			new level1 = PlayerInfo[playerid][pKamiSkill];
			new level2 = PlayerInfo[playerid][pRepSkill];
			new level3 = PlayerInfo[playerid][pHajoSkill];
			new level4 = PlayerInfo[playerid][pFegySkill];
			new level5 = PlayerInfo[playerid][pAdrSkill];

			SendClientMessage(playerid, COLOR_LIGHTBLUE, "===Kiadott engedélyek/jogosítványok száma===");
			SendFormatMessage(playerid, COLOR_WHITE, "Auto és motor: %d db", level);
			SendFormatMessage(playerid, COLOR_WHITE, "Kamion: %d db", level1);
			SendFormatMessage(playerid, COLOR_WHITE, "Helikopter: %d  db", level2);
			SendFormatMessage(playerid, COLOR_WHITE, "Hajó: %d db", level3);
			SendFormatMessage(playerid, COLOR_WHITE, "Fegyver: %d db", level4);
			SendFormatMessage(playerid, COLOR_WHITE, "ADR: %d db", level5);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "===Kiadott engedélyek/jogosítványok száma===");

		}

	}
	if(egyezik(cmd, "/felirat"))
	{
		if(!LMT(playerid, FRAKCIO_OKTATO)) return Msg(playerid, "Ezt a parancsot nem használhatod");
		new kocsi = GetClosestVehicle(playerid);
		
		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5)
			return Msg(playerid, "A közeledben nincs jármû!");
		
		new szam = OktatoFeliratFrissites(kocsi);
		if(szam == 0) return Msg(playerid, "Nem oktató jármû.");
		if(szam == 2) return Msg(playerid, "A felirat kikapcsolva!");
		if(szam == 1) return Msg(playerid, "A felirat felrakva!");
		
		return 1;
	
	}
	if(egyezik(cmd, "/oktatások"))
	
	{
		if(!LMT(playerid, FRAKCIO_OKTATO)) return Msg(playerid, "Ezt a parancsot nem használhatod");
		if(PlayerInfo[playerid][pRank] < 6) return Msg(playerid, "Csak COK vezetõsége!");
		if(params < 1) return Msg(playerid, "Használata: /oktatások [Játékos Neve / ID]");
		giveplayerid = ReturnUser(param[1]);
		if(IsPlayerConnected(giveplayerid))

		{
		    if(giveplayerid != INVALID_PLAYER_ID)
		    {
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "===Kiadott engedélyek/jogosítványok száma===");
				format(string, 256, "Autó és motor: %d db", PlayerInfo[giveplayerid][pAutmotSkill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, 256, "Kamion: %d db", PlayerInfo[giveplayerid][pKamiSkill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, 256, "Helikopter: %d db", PlayerInfo[giveplayerid][pRepSkill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, 256, "Hajó: %d db", PlayerInfo[giveplayerid][pHajoSkill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, 256, "Fegyver: %d db", PlayerInfo[giveplayerid][pFegySkill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, 256, "ADR: %d db", PlayerInfo[giveplayerid][pAdrSkill]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "===Kiadott engedélyek/jogosítványok száma===");


			}
			else Msg(playerid, "A játékos nem online.");

		}

	}
	if(strcmp(cmd, "/oktatásátír", true) == 0)
	{
	    if(!LMT(playerid, FRAKCIO_OKTATO)) return Msg(playerid, "Ezt a parancsot nem használhatod");
		if(PlayerInfo[playerid][pRank] < 7) return Msg(playerid, "Csak COK Igazgató és Vezérigazgató!");
		if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				Msg(playerid, "Használat: /oktatásátír [Játékos neve / ID] [szám] [db]");
				Msg(playerid, "|1 Autó és motor |2 Kamion |3 Repülõ |4 Fegyver |5 ADR|6 Hajó");

				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
	    	{
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						Msg(playerid, "Használat: /oktatásátír [Játékos neve / ID] [szám] [db]");
						Msg(playerid, "|1 Autó és motor |2 Kamion |3 Repülõ |4 Fegyver |5 ADR|6 Hajó");
						return 1;
					}
					new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						Msg(playerid, "Használat: /oktatásátír [Játékos neve / ID] [szám] [db]");
						Msg(playerid, "|1 Autó és motor |2 Kamion |3 Repülõ |4 Fegyver |5 ADR|6 Hajó");
						return 1;
					}
					new amount;
					amount = strval(tmp);
					if(stat > 6) return Msg(playerid, "0-6 között!");
					{
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pAutmotSkill] = amount;
								format(string, sizeof(string), "Az Autó és motor vizsgáinak száma átírva erre: %d", amount);
							}
							case 2:
							{
								PlayerInfo[giveplayerid][pKamiSkill] = amount;
								format(string, sizeof(string), "A Kamion vizsgáinak száma átírva erre: %d", amount);
							}
							case 3:
							{
								PlayerInfo[giveplayerid][pRepSkill] = amount;
								format(string, sizeof(string), "A Repülõ vizsgáinak száma átírva erre:%d", amount);
							}
							case 4:
							{
								PlayerInfo[giveplayerid][pFegySkill] = amount;
								format(string, sizeof(string), "Az Fegyver vizsgáinak száma átírva erre: %d", amount);
							}
							case 5:
							{
								PlayerInfo[giveplayerid][pAdrSkill] = amount;
								format(string, sizeof(string), "Az ADR vizsgáinak száma átírva erre: %d", amount);
							}
							case 6:
							{
								PlayerInfo[giveplayerid][pHajoSkill] = amount;
								format(string, sizeof(string), "A Hajó vizsgáinak száma átírva erre: %d", amount);
							}

						}
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
				else Msg(playerid, "A játékos nem online.");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/vizsgavége") || egyezik(cmd, "/vizsgavege"))
	{
		if(!LMT(playerid, FRAKCIO_OKTATO)) return Msg(playerid, "Csak oktató használhatja!");
		{
			Oktat[playerid] = 0;
			Msg(playerid, "Elérhetõvé tetted magad!");
		}
	}

	if(egyezik(cmd, "/oktatók") || egyezik(cmd, "/oktatok"))
	{


		new oktatok;

		Msg(playerid, "======================== Szolgálatban lévõ Oktatók ======================== ", false, COLOR_LIGHTBLUE);

		for(new x = 0; x < MAX_PLAYERS; x++)
		{
			if(!IsPlayerConnected(x) || IsPlayerNPC(x) || PlayerInfo[x][pMember] != FRAKCIO_OKTATO || PlayerInfo[x][pRank] < 1 || OnDuty[x] == 0) continue;
			oktatok++;


		    new level = PlayerInfo[x][pRank];
			new teloszam[32];
			format(teloszam, sizeof(teloszam), "%s", FormatNumber( PlayerInfo[x][pPnumber], 0, '-' ));
			
			if(level == 1) { SendFormatMessage(playerid, COLOR_WHITE, "%s (Elérhetõ) | Tel.: %s | Rang: %d || Kiadható engedélyek/jogosítványok: Horgász", ICPlayerName(x), teloszam, PlayerInfo[x][pRank]); }
			else if(level == 2 && Oktat[x] == 0) { SendFormatMessage(playerid, COLOR_WHITE, "%s (Elérhetõ) | Tel.: %s | Rang: %d || Kiadható engedélyek/jogosítványok: Autó, motor", ICPlayerName(x), teloszam, PlayerInfo[x][pRank]); }
			else if(level == 2 && Oktat[x] == 1) { SendFormatMessage(playerid, COLOR_PIROS, "%s (Vizsgáztat) | Tel.: %s | Rang: %d || Kiadható engedélyek/jogosítványok: Autó, motor", ICPlayerName(x), teloszam, PlayerInfo[x][pRank]); }
			else if(level <= 3 && Oktat[x] == 0) {  SendFormatMessage(playerid, COLOR_WHITE, "%s (Elérhetõ) | Tel.: %s | Rang: %d || Kiadható engedélyek/jogosítványok: Autó, motor, kamion", ICPlayerName(x), teloszam, PlayerInfo[x][pRank]); }
			else if(level <= 3 && Oktat[x] == 1) {  SendFormatMessage(playerid, COLOR_PIROS, "%s (Vizsgáztat) | Tel.: %s | Rang: %d || Kiadható engedélyek/jogosítványok: Autó, motor, kamion", ICPlayerName(x), teloszam, PlayerInfo[x][pRank]); }
			else if(level <= 4 && Oktat[x] == 0) {  SendFormatMessage(playerid, COLOR_WHITE, "%s (Elérhetõ) | Tel.: %s | Rang: %d || Kiadható engedélyek/jogosítványok: Autó, motor, kamion, adr, repülõ, hajó", ICPlayerName(x), teloszam, PlayerInfo[x][pRank]); }
			else if(level <= 4 && Oktat[x] == 1) {  SendFormatMessage(playerid, COLOR_PIROS, "%s (Vizsgáztat) | Tel.: %s | Rang: %d || Kiadható engedélyek/jogosítványok: Autó, motor, kamion, adr, repülõ, hajó", ICPlayerName(x), teloszam, PlayerInfo[x][pRank]); }
			else if(level <= 8 && Oktat[x] == 0) {  SendFormatMessage(playerid, COLOR_WHITE, "%s (Elérhetõ) | Tel.: %s | Rang: %d || Kiadható engedélyek/jogosítványok: <Minden>", ICPlayerName(x), teloszam, PlayerInfo[x][pRank]); }
			else if(level <=8 && Oktat[x] == 1) SendFormatMessage(playerid, COLOR_PIROS, "%s (Vizsgáztat)  | Tel.: %s | Rang: %d || Kiadható engedélyek/jogosítványok: <Minden>", ICPlayerName(x), teloszam, PlayerInfo[x][pRank]);

		}
		if(oktatok < 1) Msg(playerid, "Jelenleg nincs szolgálatban egy oktató sem!");
		Msg(playerid, "======================== Szolgálatban lévõ Oktatók ========================  ", false, COLOR_LIGHTBLUE);

		return 1;
	}

	if(egyezik(cmd, "/objdel"))
	{
		if(!IsScripter(playerid)) return 1;

		if(params != 1) return Msg(playerid, "/objdel [meddig]");

		new mennyi;
		mennyi = strval(GetParam(cmdtext, 1));

		for(new x = 0; x < mennyi; x++)
			if(IsValidDynamicObject(x)) DestroyDynamicObject(x), x=INVALID_OBJECT_ID;

		return 1;
	}
	
	if(egyezik(cmd, "/hq"))
	{
	    Msg(playerid, "/központ");
		return 1;
	}

	if(egyezik(cmd, "/központ") || egyezik(cmd,"/kozpont"))
	{
		if(!IsPlayerConnected(playerid)) return 1;
		if(!MunkaLeader(playerid, FRAKCIO_SCPD) && !MunkaLeader(playerid, FRAKCIO_FBI) && !MunkaLeader(playerid, FRAKCIO_MENTO) && !MunkaLeader(playerid, FRAKCIO_SFPD) && !MunkaLeader(playerid, FRAKCIO_KATONASAG) && !MunkaLeader(playerid, FRAKCIO_NAV) && !MunkaLeader(playerid, FRAKCIO_TUZOLTO) && !MunkaLeader(playerid, FRAKCIO_TAXI))
			return Msg(playerid, "Nem vagy Rendõr / FBI / Katona / Tûzoltó / Mentõ / Sheriff leader!");

        new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /központ [Üzeneted]");

		SendRadioMessageFormat(PlayerInfo[playerid][pLeader], COLOR_YELLOW, "** Központ: %s, vége**", result);

		return 1;
	}

	if(egyezik(cmd, "/kivanitt"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
		new Float:tav = 300, emberek, txt[256], Float:tavolsag;

		if(params >= 1) tav = floatstr(GetParam(cmdtext, 1));

		if(tav < 1 || tav > 5000.0) return Msg(playerid, "A táv hosza 1 és 5000.0 között lehet!");

		SendClientMessage(playerid, COLOR_WHITE, "=============== A közelben lévõ emberek ===============");
		for(new x = 0; x < MAX_PLAYERS; x++)
		{
			if(x != playerid && IsPlayerConnected(x) && Logged(x))
			{
				tavolsag = GetDistanceBetweenPlayers(playerid, x);
				if(tavolsag <= tav)
				{
					emberek++;
					if(!IsHitman(x) || IsHitman(x) && IsScripter(playerid))
					{
						if(emberek % 4 != 0)
						{
							if(emberek % 4 == 1)
								format(txt, sizeof(txt), "%s [%.2f]", PlayerName(x), tavolsag);
							else
								format(txt, sizeof(txt), "%s, %s [%.2f]", txt, PlayerName(x), tavolsag);
						}
						else
						{
							format(txt, sizeof(txt), "%s, %s [%.2f]", txt, PlayerName(x), tavolsag);
							SendClientMessage(playerid, COLOR_GREY, txt);
						}
					}
					else
					{
						if(emberek % 4 != 0)
						{
							if(emberek % 4 == 1)
								format(txt, sizeof(txt), "Hitman [%.2f]", tavolsag);
							else
								format(txt, sizeof(txt), "%s, Hitman [%.2f]", txt, PlayerName(x), tavolsag);
						}
						else
						{
							format(txt, sizeof(txt), "%s, Hitman [%.2f]", txt, PlayerName(x), tavolsag);
							SendClientMessage(playerid, COLOR_GREY, txt);
						}
					}
				}
			}
			if(x == (MAX_PLAYERS - 1) && emberek % 4 != 0)
			{
				//format(txt, sizeof(txt), "%s, %s [%.2f]", txt, PlayerName(x), tavolsag);
				SendClientMessage(playerid, COLOR_GREY, txt);
			}
		}

		if(emberek < 1)
			SendClientMessage(playerid, COLOR_LIGHTRED, "A közelben nincs senki...");
		SendClientMessage(playerid, COLOR_WHITE, "=============== A közelben lévõ emberek ===============");

		return 1;
	}

	if(egyezik(cmd, "/igénylések"))
	{
		if(!IsScripter(playerid)) return 1;

		if(params < 1) return SendClientMessage(playerid, COLOR_GREY, "Használata: /igénylések [be/ki]");

		tmp = GetParam(cmdtext, 1);

		if(egyezik(tmp, "be"))
		{
			if(IgenylesEngedelyezve == 0)
			{
				IgenylesEngedelyezve = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Engedélyezted az igényléseket!");
				SendClientMessageToAll(COLOR_LIGHTGREEN, "A Házmesterek Zrt. úgy döntött, hogy épít házakat kérésre");
			}
			else
				SendClientMessage(playerid, COLOR_GREY, "Engedélyezve van!");
		}
		else if(egyezik(tmp, "ki"))
		{
			if(IgenylesEngedelyezve == 1)
			{
				IgenylesEngedelyezve = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Letiltottad az igényléseket!");
				SendClientMessageToAll(COLOR_LIGHTRED, "A Házmesterek Zrt. úgy döntött, nem kíván több házat építeni!");
			}
			else
				SendClientMessage(playerid, COLOR_GREY, "Tiltva van!");
		}
		else
			SendFormatMessage(playerid, COLOR_GREY, "Használata: /igénylések [be/ki] - %s", tmp);

		return 1;
	}

	if(egyezik(cmd, "/igénytörlése") || egyezik(cmd, "/igenytorlese"))
	{
		if(!Admin(playerid, 1337)) return 1;

		new hazak = sizeof(HouseInfo);
		for(new i = 0; i < hazak; i++)
		{
			if(HouseInfo[i][Van] == 0) continue;

			if(PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
				if(HouseInfo[i][hCsak] == 1)
				{
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Class utca %d igényelhetõsége törölve, így bárki megveheti!", i);
					SendFormatMessageToAll(COLOR_LIGHTRED, "Házmesterek Zrt: A cég úgydöntött törli a Class utca %d ház igényelhetõségét, így bárki megveheti! Ára %dFt", i, HouseInfo[i][hValue]);
					HouseInfo[i][hCsak] = 0;
				}
				else
					SendClientMessage(playerid, COLOR_GREY, "Ezt a házat bárki megveheti...");
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Nem vagy a ház bejáratánál!");
		return 1;
	}

	if(egyezik(cmd, "/tuning"))
	{
		if(PlayerInfo[playerid][pSzerelo]<0) return Msg(playerid, "Nem vagy autószerelõ.");
        if(!PlayerToPoint(5, playerid, -1849.6693, 124.3866, 13.2226) && //SF szerelõmûhely
		!PlayerToPoint(5, playerid, -1836.9281, 124.0847, 13.5826) && //SF szerelõmûhely
		!PlayerToPoint(5, playerid, 2073.3018, -2068.2964, 11.6834) && // Új szerelõ hq(LS)
		!PlayerToPoint(5, playerid, 2060.6958, -2067.9758, 11.6834) && // Új szerelõ hq(LS)
		!PlayerToPoint(5, playerid, 2032.7006, -2068.5708, 12.3234) && // Új szerelõ hq(LS)
		!PlayerToPoint(5, playerid, 2020.0752, -2068.7749, 12.3234) && // Új szerelõ hq(LS)
		!PlayerToPoint(3, playerid, 1860.0858,-2460.5942,14.7284))
			return SendClientMessage(playerid, COLOR_GREY, "Nem vagy a tuning mûhelybe!");
			
		if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "A jármû mellett kell állnod");
		if(BizzInfo[BIZ_TUNING][bProducts] < 1)
		{
			GameTextForPlayer(playerid, "~r~Nincsenek alkatreszek", 5000, 1);
			return 1;
		}
		new kocsim;
		kocsim = GetClosestVehicle(playerid);
		if(GetPlayerDistanceFromVehicle(playerid, kocsim) > 5.5) return Msg(playerid, "Nincs a közelben a jármû!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
            SendClientMessage(playerid, COLOR_LIGHTGREEN, "Üdv a tuning mûhelyben!");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Használata: /tuning [komponens]");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Komponensek:");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nitro: 65.000FT");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Hidraulika: 35.000FT");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "XFLOW(Sultan, Jester, Uranus, Flash, Stratum, Elegy): 75.000FT");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "ALIEN(Sultan, Jester, Uranus, Flash, Stratum, Elegy): 75.000FT");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kerék: 7.000Ft");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Festés + Javítás: 75.000Ft");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "__________________________________");
			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
			return 1;
		}
		if(tuningolo[playerid] > 0) return Msg(playerid, "Jelenleg tuningolsz, megkell várnod amíg elkészül.");

		if(egyezik(tmp, "nitro") || egyezik(tmp, "nitró"))
		{
			if(!BankkartyaFizet(playerid, 65000, false))
			{
            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nincs elég pénzed!");
            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
            return 1;
			}
			tuningolo[playerid] = 1;
			Freeze(playerid, 36000);
			SetTimerEx("AlapTuning", 36000, false, "i", playerid);
		}

		else if(egyezik(tmp, "hidraulika"))
		{
		    if(!BankkartyaFizet(playerid, 35000, false))
			{
            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nincs elég pénzed!");
            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
            return 1;
			}
			tuningolo[playerid] = 2;
			Freeze(playerid, 36000);
			SetTimerEx("AlapTuning", 36000, false, "i", playerid);
		}

		else if(egyezik(tmp, "kerek") || egyezik(tmp, "kerék"))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Használata: /tuning kerék [1-13]");

			new kerek = strval(tmp);
			if(!BankkartyaFizet(playerid, 7000, false))
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nincs elég pénzed!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
				return 1;
			}
			if(kerek < 1 || kerek > 13) return SendClientMessage(playerid, COLOR_GREY, "Ehhh... Te mit akarsz? Meglett mondva hogy 1-13");
			Tkerek[playerid] = (kerek + 1072);
			tuningolo[playerid] = 6;
			Freeze(playerid, 36000);
			SetTimerEx("AlapTuning", 36000, false, "i", playerid);
		}

        else if(egyezik(tmp, "ALIEN"))
		{
		    if(!BankkartyaFizet(playerid, 75000, false))
			{
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nincs elég pénzed!");
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
	            return 1;
			}
			tuningolo[playerid] = 3;
			Freeze(playerid, 36000);
			SetTimerEx("AlapTuning", 36000, false, "i", playerid);
		}

        else if(egyezik(tmp, "XFLOW"))
		{
		    if(!BankkartyaFizet(playerid, 75000, false))
			{
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nincs elég pénzed!");
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
	            return 1;
			}
			tuningolo[playerid] = 4;
			Freeze(playerid, 36000);
			SetTimerEx("AlapTuning", 36000, false, "i", playerid);
		}

        else if(egyezik(tmp, "festes") || egyezik(tmp, "festés"))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Használata: /tuning festés [0-255]");

			new szin = strval(tmp);
	
			new id = NINCS;
			//new frakcio = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				for(new kk = 0; kk  <MAX_FRAKCIO; kk++)
				{
					if(!FrakcioKocsi[kk][k][fVan]) continue;

					if(FrakcioKocsi[kk][k][fVan] && FrakcioKocsi[kk][k][fID] == kocsim)
					{
						//frakcio=kk;
						id = k;
						break;
					}
				}
			}
			if(id != NINCS) return Msg(playerid, "Frakció autót ne fesd át!");

			if(!BankkartyaFizet(playerid, 75000, false))
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nincs elég pénzed! Az ára 75.000Ft");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Tuning]================");
				return 1;
			}
			if(szin < 0 || szin > 255) return SendClientMessage(playerid, COLOR_GREY, "A szín 0-255 között lehet");
			Tszin[playerid] = szin;
			tuningolo[playerid] = 5;
			Freeze(playerid, 36000);
			SetTimerEx("AlapTuning", 36000, false, "i", playerid);
		}

		return 1;
	}
	if(egyezik(cmd, "/atuning"))
	{
        if(!Admin(playerid, 4)) return SendClientMessage(playerid, COLOR_GREY, "Csak szeretnéd! ((o.O))");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy kocsiban!");
		new kocsim;
		kocsim = GetPlayerVehicleID(playerid);
		new kocsi;
		kocsi = GetVehicleModel(kocsim);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Használata: /tuning [komponens]");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Komponensek:");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nitro: Ingyenes");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Hidraulika: Ingyenes");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "XFLOW(Sultan, Jester, Uranus, Flash, Stratum, Elegy): Ingyenes");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "ALIEN(Sultan, Jester, Uranus, Flash, Stratum, Elegy): Ingyenes");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kerék: Ingyenes");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Festés + Javítás: Ingyenes");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Matrica: Ingyenes");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "__________________________________");
			SendClientMessage(playerid, COLOR_RED, "\\KOCSI RESPAWN UTÁN ELTÛNIK A TUNING!//");
			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
			return 1;
		}
		if(egyezik(param[1], "matrica"))
		{
			if(params < 2) return Msg(playerid, "/atuning matrica [0-5]");
			new matrica = strval(param[2]);
			if(matrica < 0 || matrica > 5) return 1;
			ChangeVehiclePaintjob(kocsim, matrica);
			Msg(playerid, "Matrica felrakva.");
		}
		else if(egyezik(param[1], "rendszám") || egyezik(param[1], "rendszam"))
		{
			if(!IsScripter(playerid)) return 1;
			if(params < 2) return Msg(playerid, "/atuning rendszám [szöveg], SPACE NE LEGYEN BENNE!");
			SetVehicleNumberPlate(kocsi, param[2]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kocsi rendszáma átírva erre: %s", param[2]);
		}
		else if(egyezik(tmp, "nitro") || egyezik(tmp, "nitró"))
		{
			new sofor = KocsiSofor(kocsim); if(sofor != NINCS && PlayerRaceInfo[sofor][xVersenyen] != NINCS || PlayerRaceInfo[playerid][xVersenyen] != NINCS) return Msg(playerid, "Nem használhatod!");

			AddVehicleComponent(kocsim, 1010);
			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: 10x Nitró felszerelve!");
			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
		}

		else if(egyezik(tmp, "hidraulika"))
		{
			new sofor = KocsiSofor(kocsim); if(sofor != NINCS && PlayerRaceInfo[sofor][xVersenyen] != NINCS || PlayerRaceInfo[playerid][xVersenyen] != NINCS) return Msg(playerid, "Nem használhatod!");
			AddVehicleComponent(kocsim, 1087);
			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: Hidraulika felszerelve!");
			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
		}

		else if(egyezik(tmp, "kerek") || egyezik(tmp, "kerék"))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Használata: /tuning kerék [1-13]");

			new kerek = strval(tmp);

		//	if(kerek < 1 || kerek > 13) return SendClientMessage(playerid, COLOR_GREY, "Ehhh... Te mit akarsz? Meglett mondva hogy 1-13");
			AddVehicleComponent(kocsim, (kerek + 1072));
			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: Új kerék felrakva!");
			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
		}

        else if(egyezik(tmp, "ALIEN"))
		{
			if(kocsi == 560)
			{
				AddVehicleComponent(kocsim, 1026);
				AddVehicleComponent(kocsim, 1027);
				AddVehicleComponent(kocsim, 1032);
				AddVehicleComponent(kocsim, 1169);
				AddVehicleComponent(kocsim, 1138);
				AddVehicleComponent(kocsim, 1141);
				AddVehicleComponent(kocsim, 1028);
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: ALIEN tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
			else if(kocsi == 562)
			{
				AddVehicleComponent(kocsim, 1034);
				AddVehicleComponent(kocsim, 1038);
				AddVehicleComponent(kocsim, 1036);
				AddVehicleComponent(kocsim, 1040);
				AddVehicleComponent(kocsim, 1147);
				AddVehicleComponent(kocsim, 1149);
	            AddVehicleComponent(kocsim, 1171);
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: ALIEN tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
            else if(kocsi == 559)
			{
				AddVehicleComponent(kocsim, 1065);
				AddVehicleComponent(kocsim, 1067);
				AddVehicleComponent(kocsim, 1069);
				AddVehicleComponent(kocsim, 1071);
				AddVehicleComponent(kocsim, 1159);
				AddVehicleComponent(kocsim, 1160);
	            AddVehicleComponent(kocsim, 1162);
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: ALIEN tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
            else if(kocsi == 558)
			{
				AddVehicleComponent(kocsim, 1088);
				AddVehicleComponent(kocsim, 1090);
				AddVehicleComponent(kocsim, 1092);
				AddVehicleComponent(kocsim, 1094);
				AddVehicleComponent(kocsim, 1164);
				AddVehicleComponent(kocsim, 1166);
	           	AddVehicleComponent(kocsim, 1168);
	 			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: ALIEN tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
			else if(kocsi == 561)
			{
				AddVehicleComponent(kocsim, 1055);
				AddVehicleComponent(kocsim, 1056);
				AddVehicleComponent(kocsim, 1058);
				AddVehicleComponent(kocsim, 1062);
				AddVehicleComponent(kocsim, 1064);
				AddVehicleComponent(kocsim, 1154);
	 			AddVehicleComponent(kocsim, 1155);
	 			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: ALIEN tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
			else if(kocsi == 565)
			{
				AddVehicleComponent(kocsim, 1046);
				AddVehicleComponent(kocsim, 1047);
				AddVehicleComponent(kocsim, 1049);
				AddVehicleComponent(kocsim, 1051);
				AddVehicleComponent(kocsim, 1054);
				AddVehicleComponent(kocsim, 1150);
				AddVehicleComponent(kocsim, 1153);
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: ALIEN tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
			else
			{
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Szerelõ: Sultan,Jester,Uranus,Flash,Stratum,Elegy kocsikra!");
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
	            return 1;
			}
		}

        else if(egyezik(tmp, "XFLOW"))
		{
            if(kocsi == 560)
			{
				AddVehicleComponent(kocsim, 1029);
				AddVehicleComponent(kocsim, 1030);
				AddVehicleComponent(kocsim, 1031);
				AddVehicleComponent(kocsim, 1133);
				AddVehicleComponent(kocsim, 1139);
				AddVehicleComponent(kocsim, 1140);
				AddVehicleComponent(kocsim, 1170);
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: XFLOW tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
			else if(kocsi == 562)
			{
				AddVehicleComponent(kocsim, 1035);
				AddVehicleComponent(kocsim, 1037);
				AddVehicleComponent(kocsim, 1039);
				AddVehicleComponent(kocsim, 1041);
				AddVehicleComponent(kocsim, 1146);
				AddVehicleComponent(kocsim, 1148);
	            AddVehicleComponent(kocsim, 1172);
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: XFLOW tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
            else if(kocsi == 559)
			{
				AddVehicleComponent(kocsim, 1066);
				AddVehicleComponent(kocsim, 1068);
				AddVehicleComponent(kocsim, 1070);
				AddVehicleComponent(kocsim, 1072);
				AddVehicleComponent(kocsim, 1158);
				AddVehicleComponent(kocsim, 1161);
	            AddVehicleComponent(kocsim, 1173);
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: XFLOW tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
            else if(kocsi == 558)
			{
				AddVehicleComponent(kocsim, 1089);
				AddVehicleComponent(kocsim, 1091);
				AddVehicleComponent(kocsim, 1093);
				AddVehicleComponent(kocsim, 1095);
				AddVehicleComponent(kocsim, 1163);
				AddVehicleComponent(kocsim, 1165);
	 			AddVehicleComponent(kocsim, 1167);
	 			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: XFLOW tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
			else if(kocsi == 561)
			{
				AddVehicleComponent(kocsim, 1057);
				AddVehicleComponent(kocsim, 1059);
				AddVehicleComponent(kocsim, 1050);
				AddVehicleComponent(kocsim, 1061);
				AddVehicleComponent(kocsim, 1063);
				AddVehicleComponent(kocsim, 1156);
	            AddVehicleComponent(kocsim, 1157);
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: XFLOW tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
			else if(kocsi == 565)
			{
				AddVehicleComponent(kocsim, 1045);
				AddVehicleComponent(kocsim, 1048);
				AddVehicleComponent(kocsim, 1050);
				AddVehicleComponent(kocsim, 1052);
				AddVehicleComponent(kocsim, 1053);
				AddVehicleComponent(kocsim, 1151);
	            AddVehicleComponent(kocsim, 1152);
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: XFLOW tuning felszerelve!");
				SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
				RepairVehicle(kocsim);
			}
			else
			{
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, "Szerelõ: Sultan,Jester,Uranus,Flash,Stratum,Elegy kocsikra tudok csak!");
	            SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
	            return 1;
			}
		}

        else if(egyezik(tmp, "festes") || egyezik(tmp, "festés"))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Használata: /tuning festés [0-255]");

			new szin = strval(tmp);
			if(szin < 0 || szin > 255) return SendClientMessage(playerid, COLOR_GREY, "Ehhh... Te mit akarsz? Meglett mondva hogy 0-255");

			new szin2; tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) szin2 = szin;
			else szin2 = strval(tmp);
			if(szin2 < 0 || szin2 > 255) return SendClientMessage(playerid, COLOR_GREY, "Ehhh... Te mit akarsz? Meglett mondva hogy 0-255");

			SetVehicleColor(kocsim, szin, szin2);
			RepairVehicle(kocsim);
			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Szerelõ: Kocsid átfestve!");
			SendClientMessage(playerid, COLOR_LIGHTRED, "================[Admin Tuning]================");
		}

		return 1;
	}
	if(egyezik(cmd, "/engedély") || egyezik(cmd, "/engedely"))
	{
		new neve[MAX_PLAYER_NAME];
		neve = PlayerName(playerid);

		if(!Admin(playerid,1)) return 1;

		new akcio[256];

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Használata: /engedély [ad/elvesz] [név/id]");

		akcio = tmp;
		if(!egyezik(akcio, "ad") && !egyezik(akcio, "elvesz"))
			return SendClientMessage(playerid, COLOR_GREY, "Használata: /engedély [ad/elvesz] [név/id]");

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Használata: /engedély [ad/elvesz] [név/id]");

		new kinek = ReturnUser(tmp);
		if(IsPlayerConnected(kinek) && kinek != INVALID_PLAYER_ID)
		{
			if(egyezik(akcio, "ad"))
			{
				if(Engedely[kinek] == 1)
					return SendClientMessage(playerid, COLOR_GREY, "Neki már van engedélye!");

				Engedely[kinek] = 1;
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Adtál neki engedélyt, hogy beléphessen: %s", PlayerName(kinek));
				SendClientMessage(kinek, COLOR_LIGHTBLUE, "Kaptál engedélyt a kocsitárolóba lépésre. Ha kijössz az engedély elveszlik!");
			}
			else if(egyezik(akcio, "elvesz"))
			{
				if(Engedely[kinek] == 0)
					return SendClientMessage(playerid, COLOR_GREY, "Neki nincs engedélye!");

				Engedely[kinek] = 0;
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Elvetted %s engedélyét", PlayerName(kinek));
				SendClientMessage(kinek, COLOR_LIGHTBLUE, "Elvették a belépési engedélyedet!");
			}
		}

		return 1;
	}

	if(egyezik(cmd, "/jelszovaltas") || egyezik(cmd, "/jelszóváltás"))
	{
		if(Nincsbelepve(playerid)) return 1;

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Használata: /jelszóváltás [jelszó] | FONTOS: A jelszó ne tartalmazzon ékezetet, szóközt és speciális karaktereket.");

		if( !(8 <= strlen(tmp) <= 20) ) return Msg(playerid, "A jelszónak minimum 8, maximum 20 karakterhosszúnak kell lennie!");

		new jelszo[128];
		strcpy( jelszo, md5( tmp ), 40 );
		strcpy( PlayerInfo[playerid][pKey], jelszo, 40 );

		format( jelszo, 128, "UPDATE %s SET Pass='%s' WHERE ID='%d'", SQL_DB_Player, jelszo, SQLID( playerid ));
		doQuery( jelszo );

		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Az új jelszó beállítva!");
		new uzenet[64];
		Format(uzenet, "<< %s jelszót váltott >>", PlayerName(playerid));
		ABroadCast(COLOR_LIGHTRED, uzenet, 1);
		return 1;
	}

	/*if(strcmp(cmd, "/lefoglal", true) == 0)
	{
		if(Nincsbelepve(playerid)) return 1;
		if(!IsACop(playerid) && !Admin(playerid, 1)) return Msg(playerid, "Nem vagy rendõr.");
		if(FloodCheck(playerid)) return 1;
		new kocsi = GetClosestVehicle(playerid);

		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5) return Msg(playerid, "Nincs a közelben jármû.");

		if(Locked(kocsi)) return Msg(playerid, "A jármû zárva.");

		PutPlayerInVehicle(playerid, kocsi, 0);
		Msg(playerid, "Jármû lefoglalva.");
		Cselekves(playerid, "lefoglalt egy jármûvet...", 1);
		Lefoglalt[playerid] = 1;
		new uzenet[200];
		Format(uzenet, "<< %s lefoglalt egy jármûvet(%s) >>", PlayerName(playerid), GetVehicleModelName(GetVehicleModel(kocsi)));
		ABroadCast(COLOR_LIGHTRED, uzenet, 1);
		return 1;
	}*/

	if(egyezik(cmd, "/alefoglal"))
	{
		if(!Admin(playerid, 3)) return 1;
		if(!Admin(playerid, 5) && !AdminDuty[playerid]) return Msg(playerid, "Csak admin szolgálatban!");
		new kocsi = GetClosestVehicle(playerid);

		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5) return Msg(playerid, "Nincs a közelben jármû.");

		
		format(string,sizeof(string),"<< %s lefoglalt egy jármûvet! Rendszám: %d / Model: %s >>", PlayerName(playerid), kocsi, GetVehicleModelName(kocsi, true));
		SendMessage(SEND_MESSAGE_ADMIN,string,COLOR_LIGHTRED,PlayerInfo[playerid][pAdmin]);
			
		
		PutPlayerInVehicle(playerid, kocsi, 0);
		Msg(playerid, "Jármû lefoglalva.");
		//Cselekves(playerid, "lefoglalt egy jármûvet...", 1); OOC, Admin parancs
		Lefoglalt[playerid] = true;

		new vs=IsAVsKocsi(kocsi), fk=IsFrakcioKocsi(kocsi), mk=IsMunkaKocsi(kocsi);
		if(!Admin(playerid,1340))
		{
			if(vs != NINCS)
				format(string, sizeof(string),"[/alefoglal VS]Lefoglalta: %s | Rendszám: %d | Model: %s | Tulaj: %s>>", PlayerName(playerid), kocsi, GetVehicleModelName(kocsi, true),CarInfo[vs][cOwner]);
			else if(fk != NINCS)
				format(string, sizeof(string),"[/alefoglal Frakció]Lefoglalta: %s | Rendszám: %d | Model: %s | Tulaj %s >>", PlayerName(playerid), kocsi, GetVehicleModelName(kocsi, true),Szervezetneve[fk-1][1]);
			else if(mk != NINCS)
				format(string, sizeof(string),"[/alefoglal Munkakocsi]Lefoglalta: %s | Rendszám: %d | Model: %s  Tulaj %d munka>>", PlayerName(playerid), kocsi, GetVehicleModelName(kocsi, true),mk);
			else
				format(string, sizeof(string),"[/alefoglal]Lefoglalta: %s | Rendszám: %d | Model: %s  >>", PlayerName(playerid), kocsi, GetVehicleModelName(kocsi, true));
		}
		Log("Admin", string);
		return 1;
	}

	if(egyezik(cmd, "/vontat"))
	{
		
		if(veh == -1) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy kocsiban!");
		if(Bikes(veh)) return Msg(playerid, "Persze...");
		if(IsARepulo(veh)) return Msg(playerid, "Repülõvel vontatni???");
		new bool:Vontatokocsi;
		for(new x = 0; x < sizeof(Vontatokocsik); x++){ if(pveh == Vontatokocsik[x]) {Vontatokocsi = true; break;} }
		if(!Vontatokocsi) return SendClientMessage(playerid, COLOR_GREY, "Ezzel a kocsival nem lehet vontatni!");

		
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			return Msg(playerid, "Nem vagy sofõr!");
			
		new kocsi = GetClosestVehicle(playerid, false);
		if(IsKocsi(kocsi, "Farmer")) return Msg(playerid, "Nem nem! Farmer kocsit nem fogsz vontatni!");

		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 10)
			return SendClientMessage(playerid, COLOR_GREY, "A közelben nincs jármû!");

		if(GetVehicleTrailer(veh) == 0)
			AttachTrailerToVehicle(kocsi, veh);
		else
			DetachTrailerFromVehicle(veh),SebessegKorlat[playerid]=0;
			
        SetVehicleVirtualWorld(kocsi, GetPlayerVirtualWorld(playerid));
        LinkVehicleToInterior(kocsi, GetPlayerInterior(playerid));

		return 1;
	}
	if(egyezik(cmd, "/vontatid"))
	{
		
		if(veh == -1) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy kocsiban!");
		if(Bikes(veh)) return Msg(playerid, "Persze...");
		if(IsARepulo(veh)) return Msg(playerid, "Repülõvel vontatni???");
		new bool:Vontatokocsi;
		for(new x = 0; x < sizeof(Vontatokocsik); x++){ if(pveh == Vontatokocsik[x]) {Vontatokocsi = true; break;} }
		if(!Vontatokocsi) return SendClientMessage(playerid, COLOR_GREY, "Ezzel a kocsival nem lehet vontatni!");

        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
			return Msg(playerid, "Nem vagy sofõr!");
		
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			Msg(playerid, "Használat: /vontatid [JármûID]");
			return true;
		}
		new kocsiid = strval(tmp);
		if(!IsVehicleConnected(kocsiid))
			return Msg(playerid, "Nem létezõ JármûID.");

		if(GetPlayerDistanceFromVehicle(playerid, kocsiid) > 10)
			return SendClientMessage(playerid, COLOR_GREY, "Ez a JármûID nincs a közelben!");
			

		if(IsKocsi(kocsiid, "Farmer")) return Msg(playerid, "Nem nem! Farmer kocsit nem fogsz vontatni!");

			
		if(GetVehicleTrailer(kocsiid) == 0)
			AttachTrailerToVehicle(kocsiid, veh);
		else
			Msg(playerid, "Már vontatsz!");
			
        SetVehicleVirtualWorld(kocsiid, GetPlayerVirtualWorld(playerid));
        LinkVehicleToInterior(kocsiid, GetPlayerInterior(playerid));
		return 1;
	}
    if(egyezik(cmd,"/eldob"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(NemMozoghat(playerid)) return Msg(playerid, "A-a!");
			if(FloodCheck(playerid)) return 1;
			if(PlayerState[playerid] != PLAYER_STATE_ONFOOT) return Msg(playerid, "Jármûben? Attól még megtalálják!");
			if(params < 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Használat: /eldob [mit]");
    			SendClientMessage(playerid, COLOR_WHITE, "Használható: Fegyverek(nem marad a földön), fegyver, lõszer, materials, heroin, kokain, marihuana, mûanyag, telefon, rádió, csipogó");
				return 1;
			}
			new Float:playerpos[3];
			new eldobastring[128];
			new id = GetNewIndex();
			GetPlayerPos(playerid, playerpos[0], playerpos[1], playerpos[2]);

			if(egyezik(param[1], "kötszer"))
			{
				PlayerInfo[playerid][pKotszer] = 0;
				Cselekves(playerid,  "eldobja a kötszereket", 0);
			}
			if(egyezik(param[1],"fegyver"))
			{
				if(params < 2)
					return Msg(playerid, "Használat: /eldob fegyver [fegyvernév / ID]");
				
				
				if(Paintballozik[playerid] && GetPlayerVirtualWorld(playerid) == 98765 || Loterben[playerid] && GetPlayerVirtualWorld(playerid) == 5995)
				{	
					format(PlayerInfo[playerid][pFegyverTiltOk], 128, "eldob fegyver paintball vagy lõtéren");
					PlayerInfo[playerid][pFegyverTiltIdo] = PlayerInfo[playerid][pHaviAktivitas]*2;
					
					Msg(playerid, "Nah most meg vagy élvezd a fegyver eltiltásodat!");
					return 1;
				}
				
				new weapon;
				if(isNumeric(param[2]))
					weapon = strval(param[2]);
				else
					weapon = GetGunID(param[2]);
				
				if(weapon < 1 || weapon > MAX_WEAPONS)
					return Msg(playerid, "Ilyen fegyver nem létezik");
				
				if(!WeaponTakeWeapon(playerid, weapon))
					return Msg(playerid, "Nincs ilyen fegyvered");
				
				new Float:pos[3];
				GetPlayerPos(playerid, ArrExt(pos));
				DropAddWeapon(ArrExt(pos), weapon, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));

				format(_tmpString, 128, "[/eldob fegyver] %s eldobta ezt: %s", PlayerName(playerid), GunName(weapon)), Log("Fegyver", _tmpString);
				format(_tmpString, 128, "eldobott egy fegyvert (%s)", GunName(weapon)), Cselekves(playerid, _tmpString, 0);
				return 1;
			}
			if(egyezik(param[1], "lõszer") || egyezik(param[1], "loszer"))
			{
				if(PlayerDropInfo[playerid][pAmmoDropped] >= 5)
					return Msg(playerid, "Az elmúlt 5 percben már legalább 5 lõszerdobozt dobtál a földre, elérted a limitet!");
					
				if(params < 2)
					return Msg(playerid, "Használat: /eldob lõszer [fegyvernév / ID] [mennyiség]");
				
				new weapon;
				if(isNumeric(param[2]))
					weapon = strval(param[2]);
				else
					weapon = GetGunID(param[2]);
				
				if(weapon < 1 || weapon > MAX_WEAPONS)
					return Msg(playerid, "Ilyen fegyver nem létezik");
				
				new ammo = strval(param[3]);
				ammo = max(0, min(ammo, WeaponAmmo(playerid, weapon)));
				if(!ammo)
					return Msg(playerid, "Nincs lõszered ehhez a fegyverhez");
				
				WeaponGiveAmmo(playerid, weapon, -ammo);
				
				new Float:pos[3];
				GetPlayerPos(playerid, ArrExt(pos));
				DropAddAmmo(ArrExt(pos), weapon, ammo, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
				PlayerDropInfo[playerid][pAmmoDropped]++;

				format(_tmpString, 128, "[/eldob lõszer] %s eldobott %ddb %s lõszert", PlayerName(playerid), ammo, GunName(weapon)), Log("Fegyver", _tmpString);
				format(_tmpString, 128, "eldobott némi %s fegyver lõszert", GunName(weapon)), Cselekves(playerid, _tmpString, 0);
				return 1;
			}
			else if(egyezik(param[1],"fegyverek"))
			{
                //ResetWeapon(playerid);
				WeaponResetAll(playerid);
 				Cselekves(playerid,  "eldobja fegyvereit.", 0);
				WeaponRefreshAttachments(playerid);
				return 1;
			}
			else if(egyezik(param[1],"pénz") || egyezik(param[1],"penz"))
			{
				new Float:X,Float:Y,Float:Z;
				new penznala = GetMoney(playerid);
				if(penznala <= 0) return Msg(playerid,"Mit akarsz eldobni?!");
				GetPlayerPos(playerid, X, Y, Z);
				PenzEldob(playerid, penznala,X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));
				Cselekves(playerid,  "eldobta a pénzét", 0);
				Streamer_UpdateEx(playerid,X,Y,Z);
				return 1;
			}
			else if(egyezik(param[1], "fém") || egyezik(param[1], "fem"))
			{
				PlayerInfo[playerid][pFem] = 0;
				Cselekves(playerid, "eldobja a nála lévõ fémdarabokat", 1);
				return 1;
			}
			else if(egyezik(param[1],"telefon"))
			{
				if(PlayerInfo[playerid][pPnumber] == 0) return Msg(playerid,"Mit akarsz eldobni?!");
                PlayerInfo[playerid][pPnumber] = 0;
 				Cselekves(playerid,  "eldobja a telefonját.", 0);
				foreach(Jatekosok,x)
				{
					if(IsACop(x))
						SetPlayerMarkerForPlayer(x, playerid, COLOR_INVISIBLE);
				}
				return 1;
			}
			else if(egyezik(param[1],"cserje"))
			{
                PlayerInfo[playerid][pCserje] = 0;
 				Cselekves(playerid,  "eldobja a cserjéit.");
				return 1;
			}
			else if(egyezik(param[1],"mák") || egyezik(param[1], "mak"))
			{
                PlayerInfo[playerid][pMak] = 0;
 				Cselekves(playerid,  "eldobja a mákjait.");
				return 1;
			}
			else if(egyezik(param[1],"cannabis"))
			{
                PlayerInfo[playerid][pCannabis] = 0;
 				Cselekves(playerid,  "eldobja a cannabist a zsebébõl.", 0);
				return 1;
			}
			else if(egyezik(param[1],"mûanyag") || egyezik(param[1], "muanyag"))
			{
                PlayerInfo[playerid][pMuanyag] = 0;
 				Cselekves(playerid,  "eldobja a mûanyagokat.", 0);
				return 1;
			}
			else if(egyezik(param[1],"kevlar") || egyezik(param[1],"mellény") || egyezik(param[1],"melleny"))
			{
                SetPlayerArmour(playerid, 0);
                Cselekves(playerid,  "eldobja a golyóálló mellényét.", 0);
				return 1;
			}
			else if(egyezik(param[1], "rádió") || egyezik(param[1], "radio"))
			{
				PlayerInfo[playerid][pRadio] = 0;
 				format(string, sizeof(string), "* Valaki eldobja a rádióját.");
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else if(egyezik(param[1], "csipogó") || egyezik(param[1], "csipogo"))
			{
				PlayerInfo[playerid][pCsipogo] = 0;
 				format(string, sizeof(string), "* Valaki eldobja a csipogóját.");
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else if(egyezik(param[1],"materials"))
			{
				if(PlayerInfo[playerid][pMats] > 0)
				{
					format(eldobastring, sizeof(eldobastring), "Materials\nMennyiség: %ddb", PlayerInfo[playerid][pMats]);
					EldobottCucc(id, 4, PlayerInfo[playerid][pMats],eldobastring, playerpos[0], playerpos[1], playerpos[2], GetPlayerVirtualWorld(playerid));
					PlayerInfo[playerid][pMats] = 0;
					Cselekves(playerid,  "eldobja a materialjait.", 0);
					return 1;
				}
			}
			else if(egyezik(param[1],"heroin"))
			{
				if(PlayerInfo[playerid][pHeroin] > 0)
				{
					format(eldobastring, sizeof(eldobastring), "Heroin\nMennyiség: %dg", PlayerInfo[playerid][pHeroin]);
					EldobottCucc(id, 5, PlayerInfo[playerid][pHeroin], eldobastring, playerpos[0], playerpos[1], playerpos[2], GetPlayerVirtualWorld(playerid));
					PlayerInfo[playerid][pHeroin] = 0;
					Cselekves(playerid,  "eldobja a heroinjait.", 0);
					return 1;
				}
			}
			else if(egyezik(param[1],"kokain"))
			{
				if(PlayerInfo[playerid][pKokain] > 0)
				{
					format(eldobastring, sizeof(eldobastring), "Kokain\nMennyiség: %dg", PlayerInfo[playerid][pKokain]);
					EldobottCucc(id, 6, PlayerInfo[playerid][pKokain], eldobastring, playerpos[0], playerpos[1], playerpos[2], GetPlayerVirtualWorld(playerid));
					PlayerInfo[playerid][pKokain] = 0;
					Cselekves(playerid,  "eldobja a kokainjait.", 0);
					return 1;
				}
			}
			else if(egyezik(param[1],"marihuana"))
			{
				if(PlayerInfo[playerid][pMarihuana] > 0)
				{
					format(eldobastring, sizeof(eldobastring), "Marihuana\nMennyiség: %dg", PlayerInfo[playerid][pMarihuana]);
					EldobottCucc(id, 7, PlayerInfo[playerid][pMarihuana], eldobastring, playerpos[0], playerpos[1], playerpos[2], GetPlayerVirtualWorld(playerid));
					PlayerInfo[playerid][pMarihuana] = 0;
					Cselekves(playerid,  "eldobja a marihuanjait.", 0);
					return 1;
				}
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/úttisztítás") || egyezik(cmd, "/uttisztitas"))
	{
		if(Nincsbelepve(playerid)) return 1;
		if(OnDuty[playerid]) return Msg(playerid, "Döntsd elõbb el mit dolgozol! ((frakció dutyba nem!))");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy kocsiban!");
		if(!AMT(playerid, MUNKA_UTTISZTITO) && PlayerInfo[playerid][pKozmunka] != MUNKA_UTTISZTITO) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy úttisztitó!");
		if(!IsKocsi(veh, "Uttisztito")) return SendClientMessage(playerid, COLOR_GREY, "Ez nem úttisztitó kocsi!");

		if(!PlayerToPoint(100.0, playerid, 1946.825, -2085.823, 13.253))
			return Msg(playerid, "Menj a munkahelyre!");

		new csekkpont, Float:x, Float:y, Float:z;
		if(Munkaban[playerid] != MUNKA_UTTISZTITO)
		{
			csekkpont = random(sizeof(UttisztitoCheckpointok));
			Munkaban[playerid] = MUNKA_UTTISZTITO;
			MunkaCheckpoint[playerid] = csekkpont;
			MunkaCheckpoint2[playerid] = NINCS;

			GetPlayerPos(playerid, MunkaStarthely[playerid][0], MunkaStarthely[playerid][1], MunkaStarthely[playerid][2]);

			x = UttisztitoCheckpointok[csekkpont][0];
			y = UttisztitoCheckpointok[csekkpont][1];
			z = UttisztitoCheckpointok[csekkpont][2];
			SetPlayerCheckpoint(playerid, x, y, z, 5);

			SendClientMessage(playerid, COLOR_LIGHTGREEN, "A munkát elkezdted. Menj, tisztítsd az utat a checkpont felé.");
		}
		else
		{
			Munkaban[playerid] = NINCS;
			MunkaCheckpoint[playerid] = NINCS;
			DisablePlayerCheckpoint(playerid);

			SendClientMessage(playerid, COLOR_LIGHTGREEN, "A munkát befejezted. A munkádért kapott pénzt fizetéskor megkapod!");
		}
		return 1;
	}
	if(egyezik(cmd, "/alma"))
	{
		if(FloodCheck(playerid)) return 1;
		if(params < 1) return Msg(playerid,"Használat: /alma [szedés / lead / evés]");

		if(egyezik(param[1], "szedés") || egyezik(param[1],"/szedes"))
		{

			if(params < 2) return Msg(playerid,"Használat: /alma [szedés] [kocsi / zseb / befejez]");
			if(egyezik(param[2], "kocsi"))
			{
				if(MunkaFolyamatban[playerid] == 1) return Msg(playerid,"A-a");
				if(!PlayerToPoint(5, playerid, -1675.43, -1409.58, 2.03) &&
				!PlayerToPoint(5, playerid, -206.38, -1422.24, 1.05) &&
				!PlayerToPoint(5, playerid, -229.71, -1425.38, 2.91) &&
				!PlayerToPoint(5, playerid, -255.70, -1427.98, 5.89) &&
				!PlayerToPoint(5, playerid, -278.56, -1430.65, 9.15) &&
				!PlayerToPoint(5, playerid, -297.19, -1430.59, 11.63) &&
				!PlayerToPoint(5, playerid, -315.22, -1431.04, 12.63) &&
				!PlayerToPoint(5, playerid,-315.22, -1410.00, 11.63) &&
				!PlayerToPoint(5, playerid, -315.22, -1390.00, 10.45) &&
				!PlayerToPoint(5, playerid, -316.18, -1366.60, 7.48) &&
				!PlayerToPoint(5, playerid, -313.00, -1345.55, 6.72) &&
				!PlayerToPoint(5, playerid, -312.78, -1325.70, 6.72) &&
				!PlayerToPoint(5, playerid,-296.75, -1409.43, 11.03) &&
				!PlayerToPoint(5, playerid,-297.34, -1345.02, 6.72) &&
				!PlayerToPoint(5, playerid, -297.57, -1325.41, 6.60) &&
				!PlayerToPoint(5, playerid, -298.27, -1389.83, 9.13) &&
				!PlayerToPoint(5, playerid, -300.24, -1366.79, 6.52) &&
				!PlayerToPoint(5, playerid, -278.55, -1409.39, 9.71) &&
				!PlayerToPoint(5, playerid, -255.45, -1407.98, 7.53) &&
				!PlayerToPoint(5, playerid, -279.34, -1389.27, 8.61) &&
				!PlayerToPoint(5, playerid, -279.92, -1366.25, 7.61) &&
				!PlayerToPoint(5, playerid,-283.13, -1344.03, 5.42) &&
				!PlayerToPoint(5, playerid, -283.77, -1325.19, 6.24) &&
				!PlayerToPoint(5, playerid,-256.71, -1388.48, 8.01) &&
				!PlayerToPoint(5, playerid,-256.35, -1365.82, 7.71) &&
				!PlayerToPoint(5, playerid,-260.28, -1343.21, 5.34) &&
				!PlayerToPoint(5, playerid, -260.84, -1324.40, 7.06) &&
				!PlayerToPoint(5, playerid,-226.43, -1406.60, 5.25) &&
				!PlayerToPoint(5, playerid,-225.34, -1388.48, 6.23) &&
				!PlayerToPoint(5, playerid, -226.28, -1365.79, 5.55) &&
				!PlayerToPoint(5, playerid, -224.34, -1342.62, 7.18) &&
				!PlayerToPoint(5, playerid, -224.41, -1323.15, 9.14) &&
				!PlayerToPoint(5, playerid,-205.59, -1405.14, 3.43) &&
				!PlayerToPoint(5, playerid,-205.63, -1388.49, 3.87) &&
				!PlayerToPoint(5, playerid, -206.46, -1365.74, 3.53) &&
				!PlayerToPoint(5, playerid, -204.36, -1342.51, 7.25) &&
				!PlayerToPoint(5, playerid, -205.07, -1323.57, 7.12)

				) return Msg(playerid,"Nem vagy fa mellett!");

				if(SzedZseb[playerid] == 1) return Msg(playerid,"Már szeded a zsebedbe elõször azt fejezd be");
				new kocsi = GetClosestVehicle(playerid);
				if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid,"Kocsiból? :)");
				if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.0) return Msg(playerid, "Nincs melletted kocsi");
				if(IsABicikli(kocsi)) return Msg(playerid, "Biciklibe akarsz almát szedni?");
				SzedKocsi[playerid] = 1;
				Almaszedeskozbe[kocsi] = 1;
				SetTimerEx("AlmaSzedes", 2000, false, "d", playerid);
				Cselekves(playerid,"elkezdte szedni az almát a kocsijába");
				Msg(playerid,"Elkezdted szedni az almát");
				MunkaFolyamatban[playerid] = 1;
				NemregiKocsi[playerid] = kocsi;
			}
			else if(egyezik(param[2], "zseb"))
			{
			    if(PlayerInfo[playerid][pAlma] >= MAXALMA) return Msg(playerid, "Nem fér el nálad több alma! Menj és add le!");
				if(MunkaFolyamatban[playerid] == 1) return Msg(playerid,"A-a");
				if(!PlayerToPoint(5, playerid, -1675.43, -1409.58, 2.03) &&
				!PlayerToPoint(5, playerid, -206.38, -1422.24, 1.05) &&
				!PlayerToPoint(5, playerid, -229.71, -1425.38, 2.91) &&
				!PlayerToPoint(5, playerid, -255.70, -1427.98, 5.89) &&
				!PlayerToPoint(5, playerid, -278.56, -1430.65, 9.15) &&
				!PlayerToPoint(5, playerid, -297.19, -1430.59, 11.63) &&
				!PlayerToPoint(5, playerid, -315.22, -1431.04, 12.63) &&
				!PlayerToPoint(5, playerid,-315.22, -1410.00, 11.63) &&
				!PlayerToPoint(5, playerid, -315.22, -1390.00, 10.45) &&
				!PlayerToPoint(5, playerid, -316.18, -1366.60, 7.48) &&
				!PlayerToPoint(5, playerid, -313.00, -1345.55, 6.72) &&
				!PlayerToPoint(5, playerid, -312.78, -1325.70, 6.72) &&
				!PlayerToPoint(5, playerid,-296.75, -1409.43, 11.03) &&
				!PlayerToPoint(5, playerid,-297.34, -1345.02, 6.72) &&
				!PlayerToPoint(5, playerid, -297.57, -1325.41, 6.60) &&
				!PlayerToPoint(5, playerid, -298.27, -1389.83, 9.13) &&
				!PlayerToPoint(5, playerid, -300.24, -1366.79, 6.52) &&
				!PlayerToPoint(5, playerid, -278.55, -1409.39, 9.71) &&
				!PlayerToPoint(5, playerid, -255.45, -1407.98, 7.53) &&
				!PlayerToPoint(5, playerid, -279.34, -1389.27, 8.61) &&
				!PlayerToPoint(5, playerid, -279.92, -1366.25, 7.61) &&
				!PlayerToPoint(5, playerid,-283.13, -1344.03, 5.42) &&
				!PlayerToPoint(5, playerid, -283.77, -1325.19, 6.24) &&
				!PlayerToPoint(5, playerid,-256.71, -1388.48, 8.01) &&
				!PlayerToPoint(5, playerid,-256.35, -1365.82, 7.71) &&
				!PlayerToPoint(5, playerid,-260.28, -1343.21, 5.34) &&
				!PlayerToPoint(5, playerid, -260.84, -1324.40, 7.06) &&
				!PlayerToPoint(5, playerid,-226.43, -1406.60, 5.25) &&
				!PlayerToPoint(5, playerid,-225.34, -1388.48, 6.23) &&
				!PlayerToPoint(5, playerid, -226.28, -1365.79, 5.55) &&
				!PlayerToPoint(5, playerid, -224.34, -1342.62, 7.18) &&
				!PlayerToPoint(5, playerid, -224.41, -1323.15, 9.14) &&
				!PlayerToPoint(5, playerid,-205.59, -1405.14, 3.43) &&
				!PlayerToPoint(5, playerid,-205.63, -1388.49, 3.87) &&
				!PlayerToPoint(5, playerid, -206.46, -1365.74, 3.53) &&
				!PlayerToPoint(5, playerid, -204.36, -1342.51, 7.25) &&
				!PlayerToPoint(5, playerid, -205.07, -1323.57, 7.12)

				) return Msg(playerid,"Nem vagy fa mellett!");

				if(SzedKocsi[playerid] == 1) return Msg(playerid,"Már szeded a kocsiba elõször azt fejezd be");
				if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid,"Kocsiból? :)");
				SzedZseb[playerid] = 1;
				SetTimerEx("AlmaSzedes", 2000, false, "d", playerid);
				Cselekves(playerid,"elkezdte szedni az almát a zsebébe");
				Msg(playerid,"Elkezdted szedni az almát");
				MunkaFolyamatban[playerid] = 1;

			}
			if(egyezik(param[2], "befejez"))
			{
				SzedZseb[playerid] = 0;
				SzedKocsi[playerid] = 0;
				Cselekves(playerid,"befejezte az alma szedést");
				Msg(playerid,"Befejezted az almaszedést!");
				MunkaFolyamatban[playerid] = 0;
				Almaszedeskozbe[NemregiKocsi[playerid]] = 0;
			}
		}
		if(egyezik(param[1], "lead"))
		{
			if(params < 2) return Msg(playerid,"Használat: /alma lead [Zseb / Kocsi]");

			if(egyezik(param[2], "zseb"))
			{
				if(!PlayerToPoint(4.0, playerid, -368.6811,-1417.5376,25.7266))
				{
					Msg(playerid,"Itt nem tudod leadni, GPS jelzi hol kell!");
					SetPlayerCheckpoint(playerid, -368.6811,-1417.5376,25.7266, 2.5);
					return 1;
				}
				if(params < 3) return Msg(playerid, "És mennyit?");
				new dbx = strval(param[3]);
				if(params > 1 && dbx < 1)
					return Msg(playerid, "Minimum 1db!");
				if(PlayerInfo[playerid][pAlma] < 1) return Msg(playerid,"Nicsn nálad alma!");
				new darab = dbx;
				if(darab > PlayerInfo[playerid][pAlma]) return Msg(playerid,"Nincs ennyi Almád!");
				PlayerInfo[playerid][pAlma] -= darab;

				new osszeg = darab*200;
				PlayerInfo[playerid][pPayCheck] += osszeg;
				SendFormatMessage(playerid,COLOR_LIGHTRED,"Az almát leadtad! kapott összeg: %dFT! Az összeget hozáírtuk a fizetésedhez!",osszeg);
				Cselekves(playerid, "leadott némi almát...");
			}
			else if(egyezik(param[2], "kocsi"))
			{
				if(!PlayerToPoint(5.0, playerid, -379.0021,-1426.9717,25.7266))
				{
					Msg(playerid,"Itt nem tudod leadni, GPS jelzi hol kell!");
					SetPlayerCheckpoint(playerid, -379.0021,-1426.9717,25.7266, 2.5);
					return 1;
				}
				if(params < 3) return Msg(playerid, "És mennyit?");
				new dbx = strval(param[3]);
				if(params > 1 && dbx < 1)
					return Msg(playerid, "Minimum 1db!");
				new darab = dbx;
				veh = GetClosestVehicle(playerid);
				new Float:tav = GetPlayerDistanceFromVehicle(playerid, veh);
				if(tav >= 3) return Msg(playerid, "A közeledben nincs jármû!");
				if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Jármûben nem...");
				if(GetJarmu(veh, KOCSI_CSOMAGTARTO) == 0) return Msg(playerid, "Nyisd ki a csomagtartót!");
				if(Locked(veh)) return Msg(playerid, "Ez a kocsi zárva van!");
				if(CarTrunk[veh][cAlma] <= 0) return Msg(playerid, "A kocsiban nincs Alma!");
				if(CarTrunk[veh][cAlma] < darab) return Msg(playerid,"Nincs ennyi Alma a kocsiban!");
				CarTrunk[veh][cAlma] -= darab;

				new osszeg = darab*200;
				PlayerInfo[playerid][pPayCheck] += osszeg;
				SendFormatMessage(playerid,COLOR_LIGHTRED,"Az almát leadtad! kapott összeg: %dFT! Az összeget hozáírtuk a fizetésedhez!",osszeg);
				Cselekves(playerid, "leadott némi almát...");
		
				SaveCarTrunk(veh);

			}
		}
		if(egyezik(param[1], "evés") || egyezik(param[1],"eves"))
		{
			if(PlayerInfo[playerid][pAlma] < 1) return Msg(playerid,"Nincs almád...");
			if(!Ehseg[playerid]) return Msg(playerid, "Nem vagy éhes");
			ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
			Szukseglet(playerid, -15,1);
			PlayerInfo[playerid][pAlma]--;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Megettél egy almát");
			Cselekves(playerid, "elõvett egy almát és megette", 1);
			return 1;
		}
	}
    if(egyezik(cmd, "/fûnyírás") || egyezik(cmd, "/funyiras"))
	{
		if(Nincsbelepve(playerid)) return 1;
		if(OnDuty[playerid]) return Msg(playerid, "Döntsd elõbb el mit dolgozol! ((frakció dutyba nem!))");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy kocsiban!");
		if(!AMT(playerid, MUNKA_FUNYIRO) && PlayerInfo[playerid][pKozmunka] != MUNKA_FUNYIRO) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy fûnyíró!");
		if(!IsKocsi(veh, "Funyiro")) return SendClientMessage(playerid, COLOR_GREY, "Ez nem fûnyíró!");

		if(!PlayerToPoint(50.0, playerid, 1960.394, -1237.911, 19.663))
			return Msg(playerid, "Menj a munkahelyre!");

		new csekkpont, Float:x, Float:y, Float:z;
		if(Munkaban[playerid] != MUNKA_FUNYIRO)
		{
			csekkpont = random(sizeof(FarmerCheckpointok));
			Munkaban[playerid] = MUNKA_FUNYIRO;
			MunkaCheckpoint[playerid] = csekkpont;
			MunkaCheckpoint2[playerid] = NINCS;

			GetPlayerPos(playerid, MunkaStarthely[playerid][0], MunkaStarthely[playerid][1], MunkaStarthely[playerid][2]);

			x = FunyiroCheckpointok[csekkpont][0];
			y = FunyiroCheckpointok[csekkpont][1];
			z = FunyiroCheckpointok[csekkpont][2];
			SetPlayerCheckpoint(playerid, x, y, z, 5);

			SendClientMessage(playerid, COLOR_LIGHTGREEN, "A munkát elkezdted. Menj át a checkpointokon.");
		}
		else
		{
			Munkaban[playerid] = NINCS;
			MunkaCheckpoint[playerid] = NINCS;
			DisablePlayerCheckpoint(playerid);

			SendClientMessage(playerid, COLOR_LIGHTGREEN, "A munkát befejezted. A munkádért kapott pénzt fizetéskor megkapod!");
		}
		return 1;
	}

	/*if(strcmp(cmd, "/checkprop", true) == 0)
	{
		if(!IsScripter(playerid)) return 1;
		if(params != 2) return Msg(playerid, "Használata: /checkprop [ház/kocsi] [hány darabot]");
		new darab = strval(param[2]);
		if(darab < 1 || darab > 5) return Msg(playerid, "1 és 5 között!");
		checkprop = darab;

		if(egyezik(param[1], "ház") || egyezik(param[1], "haz"))
		{
			SendClientMessage(playerid, COLOR_GREY, "Lellenõrizted a házakat... ha lesz olyan ház aminek a tulaja rég nem lépett be, eladja...");
			Checkprop(DP_Haz);
		}
		else if(egyezik(param[1], "kocsi"))
		{
			SendClientMessage(playerid, COLOR_GREY, "Lellenõrizted a kocsiat... ha lesz olyan kocsi aminek a tulaja rég nem lépett be, eladja...");
			Checkprop(DP_Kocsi);
		}
		else
			Msg(playerid, "Használata: /checkprop [ház/kocsi]");

		return 1;
	}*/
	if(egyezik(cmd, "/mvisz"))
	{
		if(Nincsbelepve(playerid)) return 1;

		if(Visz[playerid] != NINCS)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Elengedted");
			Visz[playerid] = NINCS;
			return 1;
		}

		new jatekos;
		if(params > 0)
			jatekos = strval(param[1]);
		else
			jatekos = GetClosestPlayer(playerid);

		if(!LMT(playerid, FRAKCIO_MENTO) && !Onkentesszolgalatban[playerid])
			return Msg(playerid, "Nem vagy mentõs!");

		if(Bortonben(jatekos) && PlayerInfo[jatekos][pJailed] != 2) return Msg(playerid, "Nem kéne...igy a rácsokon keresztül...");

		if(Animban[jatekos] != 1)
			return Msg(playerid, "A játékos nem sérült tud menni a saját lábán!");

		if(!IsPlayerConnected(jatekos)) return 1;

		if(GetDistanceBetweenPlayers(playerid, jatekos) <= 5.0)
		{
			Visz[playerid] = jatekos;
			SendClientMessage(playerid, COLOR_GREY, "Megfogtad és viszed...");
			TogglePlayerControllable(jatekos, false);

			if(!Leutve[jatekos])
				ApplyAnimation(jatekos,"SWORD","sword_block",50.0,0,1,1,1,1);
		}
		else
			Msg(playerid, "Nincs senki a közeledben!");
		return 1;
	}
	if(egyezik(cmd, "/visz"))
	{
		if(Nincsbelepve(playerid)) return 1;
		if(PlayerInfo[playerid][pLevel] < 5) return Msg(playerid, "LVL 5-tõl");
		if(Visz[playerid] != NINCS)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Elengedted");
			Visz[playerid] = NINCS;
			return 1;
		}

		new jatekos;
		if(params > 0)
			jatekos = strval(param[1]);
		else
			jatekos = GetClosestPlayer(playerid);

		if(!NemMozoghat(jatekos))
			return Msg(playerid, "A játékos nincs megbilincselve / leütve / animban");

		//if(Bortonben(jatekos) && PlayerInfo[jatekos][pJailed] != 2) return Msg(playerid, "Nem kéne...igy a rácsokon keresztül...");

		//if(PlayerCuffed[jatekos] != 2 && !Leutve[jatekos])
		//	return Msg(playerid, "A játékos nincs megbilincselve / leütve");

		if(!IsPlayerConnected(jatekos)) return 1;

		if(GetDistanceBetweenPlayers(playerid, jatekos) <= 2.0)
		{
			Visz[playerid] = jatekos;
			SendClientMessage(playerid, COLOR_GREY, "Megfogtad és viszed...");
			
			if(PlayerCuffed[playerid] != 2)
				TogglePlayerControllable(jatekos, false);

			if(!Leutve[jatekos])
				ApplyAnimation(jatekos,"SWORD","sword_block",50.0,0,1,1,1,1);
		}
		else
			Msg(playerid, "Nincs senki a közeledben!");
		return 1;
	}
    if(egyezik(cmd, "/asellcar"))
	{
		if(!Admin(playerid, 1338)) return Msg(playerid, "Nem használhatod !");
		new kocsi;
		if(sscanf(pms, "d", kocsi))
			return SendClientMessage(playerid, COLOR_WHITE, "Használata: /asellcar [JármûID]");

		new vs = IsAVsKocsi(kocsi);
		if(vs == NINCS)
			return Msg(playerid, "Ez nem VS jármû");

		/*if(testcar < 0 || testcar >= MAXVSKOCSI) return 1;
		if(!InaktivCucc(vs, INAKTIV_KOCSI) && !Admin(playerid, 1338))
			return Msg(playerid, "Ez még NEM eladható!");*/
			
		if(!InaktivCucc(vs, INAKTIV_KOCSI) && Biztos[playerid] != 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Ez még NEM eladható! Amennyiben mégis el szeretnéd adni, írd be mégegyszer a parancsot");
			Biztos[playerid] = 1;
			return 1;
		}

        ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< Admin %s eladta a %d ID-jû jármûvet | Régi Tulaj: %s >>", AdminName(playerid), kocsi , CarInfo[vs][cOwner]);
		SendFormatMessage(playerid, COLOR_LIGHTGREEN, "JármûID: %d rendszámú jármû eladva - Régi tulaj: %s", kocsi, CarInfo[vs][cOwner]);

		CarInfo[vs][cOwned] = 0;
		strmid(CarInfo[vs][cOwner], "Nincs_Tulaj", 0, strlen("Nincs_Tulaj"), 20);
		CarInfo[vs][cTulaj] = NINCS;
		CarInfo[vs][cDate] = 0;
		CarUpdate(vs, CAR_Owned, CAR_Owner, CAR_Date, CAR_Tulaj);
		return 1;
	}
	if(egyezik(cmd, "/v"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Nincsbelepve(playerid)) return 1;

	        if(params < 1)
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "Használata: (/v)ehicle [funkció]");
	            SendClientMessage(playerid, COLOR_WHITE, "Funkciók: park, zár, szin, elad, vesz");
	            return 1;
	        }
			if(egyezik(param[1], "elad"))
			{
				new kocsi = PlayerInfo[playerid][pPcarkey], kocsi2 = PlayerInfo[playerid][pPcarkey2], kocsi3 = PlayerInfo[playerid][pPcarkey3];
				if(kocsi == NINCS && kocsi2 == NINCS && kocsi3 == NINCS && JarmuKulcs[playerid] == NINCS)
					return Msg(playerid, "Nincs jármûved!");

				new player, car;
				player = GetClosestPlayer(playerid);

				if(GetDistanceBetweenPlayers(playerid, player) > 2)
					return Msg(playerid, "A közeledben nincs senki!");

				if(IsPlayerNPC(player))
					return Msg(playerid, "Persze, majd az NPC elkocsikázik vele mi ? -.-");

				if(!Logged(player))
					return Msg(playerid, "Nincs belépve!");

				if(PlayerInfo[player][pAutoker]<1)
					return Msg(playerid, "Nem autókereskedõ!");

				car = GetClosestVehicle(playerid);

				if(GetPlayerDistanceFromVehicle(playerid, car) > 5.5)
					return Msg(playerid, "Nincs a közelben a jármûved!");

				new vs = IsAVsKocsi(car);
				if(vs == NINCS)
					return Msg(playerid, "Ez nem V-s!");

				if(CarInfo[vs][cOwned] != 1)
					return 1;

				if(CarInfo[vs][cTulaj] != PlayerInfo[playerid][pID]) return Msg(playerid, "Ez nem a tied!");

				//if(!IsAt(playerid, IsAt_KereskedoHQ)) akár hajó vagy repülõ is lehet szóval ez nem kell
				//	return Msg(playerid, "Nem vagy a kereskedõ HQ-n!");

				Cselekves(playerid, "megír egy adásvételi szerzõdést, és átnyújtja az autókereskedõnek.");
				Msg(playerid, "El szeretnéd adni a jármûvedet az autókereskedõnek.", false, COLOR_LIGHTGREEN);
				SendFormatMessage(player, COLOR_LIGHTGREEN, "%s eladná neked a jármûvét - Model: %s", ICPlayerName(playerid), GetVehicleModelName(GetVehicleModel(car)));
				KereskedoKocsiVetel[player] = playerid;
				KereskedoKocsi[player] = vs;

				return 1;
			}
			else if(egyezik(param[1], "csere"))
			{
				new kocsi = PlayerInfo[playerid][pPcarkey];
				new vs = IsAVsKocsi(kocsi);

				new player = KereskedoKocsiCsere[playerid];
				if(player == NINCS || !IsPlayerConnected(player) || IsPlayerNPC(player) || !Logged(player)) return 1;
				new car = KereskedoKocsi[playerid];
				if(CarInfo[car][cOwned] != 0) return 1;

				if(!IsAt(playerid, IsAt_KereskedoHQ))
					return Msg(playerid, "Nem vagy a kereskedõ HQ-n!");
				if(GetDistanceBetweenPlayers(playerid, player) > 2)
					return Msg(playerid, "Nincs a közeledben!");


				CarInfo[vs][cOwned] = 0;
				new nev[MAX_PLAYER_NAME];
				format(nev, sizeof(nev), "%s",PlayerName(player));
				strmid(CarInfo[vs][cOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
				CarInfo[vs][cTulaj] = NINCS;
				CarInfo[vs][cDate] = UnixTime;
				CarInfo[vs][cKereskedo] = PlayerInfo[player][pID];
				CarUpdate(vs, CAR_Owned, CAR_Owner, CAR_Tulaj, CAR_Date, CAR_KERESKEDO);
				CorrectPlayerDatas(player);

				new nev2[MAX_PLAYER_NAME];
				CarInfo[car][cOwned] = 1;
				Format(nev2, "%s", PlayerName(playerid));
				strmid(CarInfo[car][cOwner], nev2, 0, strlen(nev2), 25);
				CarInfo[car][cTulaj] = PlayerInfo[playerid][pID];
				CarInfo[car][cDate] = UnixTime;
				CarInfo[car][cKereskedo] = NINCS;
				CarUpdate(car, CAR_Owned, CAR_Owner, CAR_Tulaj, CAR_Date, CAR_KERESKEDO);
				CorrectPlayerDatas(playerid);

				Cselekves(playerid, "aláírta a csereszerzõdést szerzõdést, és elcserélte jármûvét");
				Msg(playerid, "Elcserélted a jármûvedet", false, COLOR_LIGHTGREEN);
				SendFormatMessage(player, COLOR_LIGHTGREEN, "%s elcserélte veled a jármûvét - Model: %s", ICPlayerName(playerid), GetVehicleModelName(GetVehicleModel(CarInfo[vs][cId])));
				KereskedoKocsiElad[playerid] = NINCS;
				return 1;
			}
			else if(egyezik(param[1],"vásárol"))
			{
				
				new kocsi = PlayerInfo[playerid][pPcarkey], kocsi2 = PlayerInfo[playerid][pPcarkey2], kocsi3 = PlayerInfo[playerid][pPcarkey3];
				if(kocsi != NINCS)
					if(PlayerInfo[playerid][pPremiumPont] > 0 && kocsi2 != NINCS && kocsi3 != NINCS || PlayerInfo[playerid][pPremiumPont] < 1)
						return Msg(playerid, "Már van jármûved!");
			
				if(!IsPlayerInAnyVehicle(playerid))	return Msg(playerid, "Nem ülsz jármûben!");
				new car = GetPlayerVehicleID(playerid);
				car = IsAVsKocsi(car);
				if(CarInfo[car][cOwned] != 0) return Msg(playerid, "Nem kereskedõ kocsi!");
				
				if(CarInfo[car][cValue] < 200000) return Msg(playerid, "Hibás ár miatt nem eladó!");
				
				if(kocsi != NINCS && Biztos[playerid] != 1)
				{
					Msg(playerid, "Biztos, hogy meg szeretnéd venni? Ezzel fehasználsz egy prémiumpontot, amiért házat is vehetnél. Ha igen, írd be újra a parancsot!");
					Biztos[playerid] = 1;
					return 1;
				}
				Biztos[playerid] = 0;
				if(!BankkartyaFizet(playerid,CarInfo[car][cValue])) return Msg(playerid, "Nincs elég pénzed rá!");
				

				

				if(kocsi != NINCS)
				{
					PlayerInfo[playerid][pPremiumPont]--;
					Msg(playerid, "Egy prémiumpont levonva");
				}
				new vetellog[256];
				format(vetellog, 256, "[/v vásárol] - %s vett egy %s -tõl egy %s típusú jármûvet. %d v-s rendszám.",PlayerName(playerid),CarInfo[car][cOwner],GetVehicleModelName(GetVehicleModel(CarInfo[car][cId])),car);
				EgyebLog(vetellog);
				
				CarInfo[car][cOwned] = 1;
				new nev[MAX_PLAYER_NAME];
				Format(nev, "%s", PlayerName(playerid));
				strmid(CarInfo[car][cOwner], nev, 0, strlen(nev), 25);
				CarInfo[car][cTulaj] = PlayerInfo[playerid][pID];
				CarInfo[car][cDate] = UnixTime;
				new kereskedoid =CarInfo[car][cKereskedo];
				CarInfo[car][cKereskedo] = NINCS;
				CarInfo[car][cKulcsok][0] = NINCS;
				CarInfo[car][cKulcsok][1] = NINCS;
				CarUpdate(car, CAR_Owned, CAR_Owner, CAR_Tulaj, CAR_Date, CAR_KERESKEDO,CAR_Kulcsok1,CAR_Kulcsok2);

				CorrectPlayerDatas(playerid);

				Cselekves(playerid, "aláírta az adásvételi szerzõdést, és vett egy jûrmûvet.");
				Msg(playerid, "Gratulálunk, megvetted a jármûvet!.", false, COLOR_LIGHTGREEN);
				
				KereskedoFelirat(car, true);
				
				new kezelesikolt;
				kezelesikolt=floatround(float(CarInfo[car][cValue]) *0.01);
				BankSzef += kezelesikolt;

				new kereskedo = OnlineUID(kereskedoid);
				if(kereskedo > NINCS)
				{
					SendFormatMessage(kereskedo, COLOR_YELLOW,"%s megvette a jármûvedet Model %s || %s Ft || Kezelési költség: %s Ft || Bank utalt: %s Ft-ott.",ICPlayerName(playerid), GetVehicleModelName(GetVehicleModel(CarInfo[car][cId])),FormatInt(CarInfo[car][cValue]),kezelesikolt,FormatInt(CarInfo[car][cValue]-kezelesikolt));
					PlayerInfo[kereskedo][pAccount] +=CarInfo[car][cValue]-kezelesikolt;
					
					
					format(vetellog, 256, "[/v vásárol] - %s megkapta az utalást %s Ft.",PlayerName(kereskedo),FormatInt(CarInfo[car][cValue]-kezelesikolt));
					EgyebLog(vetellog);
				}
				else
				{
					for(new slot;slot < MAX_KERESKEDO; slot++)
					{
						if(KeredkedoVetel[slot][kUID] < 1)
						{
							KeredkedoVetel[slot][kUID] = kereskedoid;
							format(KeredkedoVetel[slot][kKOCSI],120,"%s",GetVehicleModelName(GetVehicleModel(CarInfo[car][cId])));
							KeredkedoVetel[slot][kAra] = CarInfo[car][cValue]-kezelesikolt;
							
							format(vetellog, 256, "[/v vásárol] - UID: %d nem kapta meg az utalást, mentve az összeg: %s Ft. Kocsi %s",kereskedoid,FormatInt(CarInfo[car][cValue]-kezelesikolt),GetVehicleModelName(GetVehicleModel(CarInfo[car][cId])));
							EgyebLog(vetellog);
							SaveKereskedo();
							return 1;
						}
					}
				}				
				


				return 1;
			
			}
			else if(egyezik(param[1], "vesz"))
			{
				new kocsi = PlayerInfo[playerid][pPcarkey], kocsi2 = PlayerInfo[playerid][pPcarkey2], kocsi3 = PlayerInfo[playerid][pPcarkey3];
				if(kocsi != NINCS)
					if(PlayerInfo[playerid][pPremiumPont] > 0 && kocsi2 != NINCS && kocsi3 != NINCS || PlayerInfo[playerid][pPremiumPont] < 1)
						return Msg(playerid, "Már van jármûved!");

				new player;
				new vetellog[256];
				player = KereskedoKocsiElad[playerid];
				if(player == NINCS || !IsPlayerConnected(player) || IsPlayerNPC(player) || !Logged(player)) return 1;
				new car = KereskedoKocsi[playerid];
				if(CarInfo[car][cOwned] != 0) return 1;

			/*	if(!IsAt(playerid, IsAt_KereskedoHQ))
					return Msg(playerid, "Nem vagy a kereskedõ HQ-n!");*/
				if(GetDistanceBetweenPlayers(playerid, player) > 2)
					return Msg(playerid, "Nincs a közeledben!");

				if(kocsi != NINCS && Biztos[playerid] != 1)
				{
					Msg(playerid, "Biztos, hogy meg szeretnéd venni? Ezzel fehasználsz egy prémiumpontot, amiért házat is vehetnél. Ha igen, írd be újra a parancsot!");
					Biztos[playerid] = 1;
					return 1;
				}
				Biztos[playerid] = 0;

				if(kocsi != NINCS)
				{
					PlayerInfo[playerid][pPremiumPont]--;
					Msg(playerid, "Egy prémiumpont levonva");
				}

				CarInfo[car][cOwned] = 1;
				new nev[MAX_PLAYER_NAME];
				Format(nev, "%s", PlayerName(playerid));
				strmid(CarInfo[car][cOwner], nev, 0, strlen(nev), 25);
				CarInfo[car][cTulaj] = PlayerInfo[playerid][pID];
				CarInfo[car][cDate] = UnixTime;
				CarInfo[car][cKereskedo] = NINCS;
				CarInfo[car][cKulcsok][0] = NINCS;
				CarInfo[car][cKulcsok][1] = NINCS;
				CarUpdate(car, CAR_Owned, CAR_Owner, CAR_Tulaj, CAR_Date, CAR_KERESKEDO,CAR_Kulcsok1,CAR_Kulcsok2);

				CorrectPlayerDatas(playerid);

				Cselekves(playerid, "aláírta az adásvételi szerzõdést, és vett egy jûrmûvet.");
				Msg(playerid, "Gratulálunk, megvetted a jármûvet!.", false, COLOR_LIGHTGREEN);
				SendFormatMessage(player, COLOR_LIGHTGREEN, "%s megvette a jármûvet - Model: %s", ICPlayerName(playerid), GetVehicleModelName(CarInfo[car][cModel]));
				KereskedoKocsiElad[playerid] = NINCS;	
				format(vetellog, 256, "[/v vesz] - %s vett %s -tõl egy %s típusú jármûvet. %d v-s rendszám.",PlayerName(playerid),PlayerName(player),GetVehicleModelName(GetVehicleModel(CarInfo[car][cId])),car);
				EgyebLog(vetellog);

				return 1;
			}
	        else if(egyezik(param[1],"park"))
	        {
	            new Float:x, Float:y, Float:z, Float:a, carid;

				carid = GetClosestVehicle(playerid);
				if(GetPlayerDistanceFromVehicle(playerid, carid) > 5.5)
					return Msg(playerid, "A közeledben nincs jármû!");

				new kocsi = IsAVsKocsi(carid);

				if(kocsi == NINCS)
					return SendClientMessage(playerid, COLOR_GREY, "Ez nem V-s jármû!");

				if(CarInfo[kocsi][cOwned] != 1 || CarInfo[kocsi][cTulaj] != PlayerInfo[playerid][pID])
					return SendClientMessage(playerid, COLOR_GREY, "Ez nem a tied!");

				if(!Parkolohely(playerid) && GetVehicleModel(kocsi) != 483 && GetVehicleModel(kocsi) != 508)
					return Msg(playerid, "Itt nem parkolhatod le!");

				GetVehiclePos(carid, x, y, z);
				GetVehicleZAngle(carid, a);

				format(string, sizeof(string), "~n~~g~Leparkoltad");
				GameTextForPlayer(playerid, string, 10000, 3);

				new panelek, ajto, vilagitas, gumi, Float:elet;
				GetVehicleDamageStatus(carid, panelek, ajto, vilagitas, gumi);
				GetVehicleHealth(carid, elet);
				
				
				ACrs[carid]=true;
				ParkCar(kocsi, x, y, z, a, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
				ACrs[carid]=false;
				
				UpdateVehicleDamageStatus(CarInfo[kocsi][cId], panelek, ajto, vilagitas, gumi);
				SetVehicleHealth(CarInfo[kocsi][cId], elet);

				if(IsPlayerInVehicle(playerid, carid))
				{
					TogglePlayerControllable(playerid, 1);
					SetPlayerPos(playerid,x,y,z+1);
				}

				return 1;
	        }

	        else if(egyezik(param[1],"zár") || egyezik(param[1], "zar") || egyezik(param[1], "lock"))
	        {
                new carid;
				carid = GetClosestVehicle(playerid);
				if(GetPlayerDistanceFromVehicle(playerid, carid) > 5.5)
					return Msg(playerid, "A közeledben nincs jármû!");

				new vs;
				
				vs = IsAVsKocsi(carid);
				
				if(vs == NINCS)
					return Msg(playerid, "Ez nem V-s!");
				
				if(CarInfo[vs][cOwned] != 1 || CarInfo[vs][cTulaj] != PlayerInfo[playerid][pID] && CarInfo[vs][cKulcsok][0] != PlayerInfo[playerid][pID] && CarInfo[vs][cKulcsok][1] != PlayerInfo[playerid][pID] && JarmuKulcs[playerid] != vs)
					return Msg(playerid, "Ez nem a tied!");
				
				SetVehicleIndex(playerid, carid, true, true, true);
				VehicleInfo[carid][Kozos] = 1;
				if(CarInfo[vs][cLock] == 1)
				{
					SetVehicleIndex(playerid, carid, false, false, true);
					VehicleInfo[carid][Kozos] = 1;
					UnLockCar(carid);
					format(string, sizeof(string), "~w~Jarmu~n~~g~nyitva");
					GameTextForPlayer(playerid, string, 4000, 3);
					CarInfo[vs][cLock] = 0;
					KocsiRiaszto[carid] = 0;
					Inditasgatlo[carid] = 0;
					SetJarmu(carid, KOCSI_RIASZTO, 0);
					if(CarInfo[vs][cRiaszto] >= 1)
					{
						Cselekves(playerid, "kinyitotta a jármûvét és kikapcsolta a riasztót",0);
					}
					else
					{
						Cselekves(playerid, "kinyitotta a jármûvét",0);
					}
				}
				else
				{
					SetVehicleIndex(playerid, carid, false, false, true);
					VehicleInfo[carid][Kozos] = 1;
					LockCar(carid);
					format(string, sizeof(string), "~w~Jarmu~n~~r~zarva");
					GameTextForPlayer(playerid, string, 4000, 3);
					CarInfo[vs][cLock] = 1;
					KocsiRiaszto[carid] = 1;
					SetJarmu(carid, KOCSI_RIASZTO, 0);
					if(CarInfo[vs][cRiaszto] >= 1)
					{
						Cselekves(playerid, "bezárta a jármûvét és bekapcsolta a riasztót",0);
					}
					else
					{
						Cselekves(playerid, "bezárta a jármûvét",0);
					}
				}
				new Float:pos[3];
				GetPlayerPos(playerid, ArrExt(pos));
				foreach(Jatekosok, p)
				{
					if(PlayerToPoint(10, p, ArrExt(pos))) 
						PlayerPlaySound(p, 1145, 0.0, 0.0, 0.0);
				}
				SetTimerEx("Indexvege", 500, false, "dd", carid, playerid);
				CarUpdate(vs, CAR_Lock);
				return 1;
	        }
	        else if(egyezik(param[1],"color") || egyezik(param[1], "szin") || egyezik(param[1], "szín"))
	        {
				if(!IsAt(playerid, IsAt_Festo)) return Msg(playerid, "Nem vagy egy festõnél sem! (Pay 'n' Spray)");

				new kocsi, vs;
				kocsi = GetClosestVehicle(playerid);
				if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.5)
					return Msg(playerid, "A közeledben nincs jármû!");

				vs = IsAVsKocsi(kocsi);
				if(vs == NINCS)
					return Msg(playerid, "Ez nem V-s!");
				if(CarInfo[vs][cTulaj] != PlayerInfo[playerid][pID] && CarInfo[vs][cKereskedo] !=  PlayerInfo[playerid][pID])
					return Msg(playerid, "Ez nem a tied!");
				
				new Float:hp;
				GetVehicleHealth(kocsi, hp);

				if(hp < 970) return Msg(playerid, "Ez a kocsi nagyon össze van törve, így nem tudjuk lefesteni!");
				
	        	if(params < 3) return SendClientMessage(playerid, COLOR_WHITE, "Használata: /v szin [szín1] [szín2] - A színek megtekinthetõek a wikipédián!");

				new color1 = strval(param[2]);
				if(color1 < 0 && color1 > 255) return SendClientMessage(playerid, COLOR_GREY, "A szín minimum 0 és max 255 lehet!");

				new color2 = strval(param[3]);
				if(color2 < 0 && color2 > 255) return SendClientMessage(playerid, COLOR_GREY, "A szín minimum 0 és max 255 lehet!");

				if(!BankkartyaFizet(playerid, 150000)){ SendClientMessage(playerid, COLOR_GREY,"Nincs elég pénzed! A festés ára 150,000Ft"); return 1; }
				if(CarInfo[vs][cColorOne] != color1 || CarInfo[vs][cColorTwo] != color2)
					CarInfo[vs][cPainted] = 1;
				else
					CarInfo[vs][cPainted] = 0;

       			CarInfo[vs][cColorOne] = color1;
                CarInfo[vs][cColorTwo] = color2;
				BizPenz(BIZ_FIXCAR, 150000);

                GameTextForPlayer(playerid, "~w~Ujrafestve!~n~~r~-150,000Ft", 5000, 1);
				SetVehicleColor(kocsi, color1, color2);
				CarUpdate(vs, CAR_ColorOne, CAR_ColorTwo);

				return 1;
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "Használata: (/v)ehicle [funkció]");
	            SendClientMessage(playerid, COLOR_WHITE, "Funkciók: park, zár, szin, elad, vesz");
	            return 1;
	        }
	    }
	    return 1;
	}

	if(egyezik(cmd, "/rendszám") || egyezik(cmd, "/rendszam"))
	{
	    if(Nincsbelepve(playerid)) return 1;
	    if(!IsPlayerInAnyVehicle(playerid))
		{
			veh = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, veh) > 5.0)
				return Msg(playerid, "Nincs jármû a közeledben");
		}
	    SendFormatMessage(playerid, COLOR_GREY, "A jármû rendszáma: %d", veh);
	    return 1;
	}

	if(egyezik(cmd, "/eladóházak") || egyezik(cmd, "/eladohazak"))
	{
	    if(Nincsbelepve(playerid)) return 1;

	    new h, eddig, osszeselado;
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "================ Eladó házak ================");
	    format(string, sizeof(string), "Eladó:");
	    for(h = 0; h < MAXHAZ; h++)
	    {
	        if(HouseInfo[h][Van] == 1)
	        {
	            if(HouseInfo[h][hOwned] == 0)
	            {
	                eddig++;
	                osszeselado++;
	                if(HouseInfo[h][hCsak] != 1)
		                format(string, sizeof(string), "%s Házszám: %d ára: %s hely: %s belsõ: %d ||| ", string, h, FormatNumber( HouseInfo[h][hValue], 0, ',' ), Haztipus(HouseInfo[h][hTipus]), HouseInfo[h][hBelso]);
					else
					    format(string, sizeof(string), "%s %d[%s]", string, h, HouseInfo[h][hCsakneki]);

	                if(eddig == MAXHAZPERSOR)
	                {
		                SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
		                format(string, sizeof(string), "Eladó:");
		                eddig = 0;
	                }
	            }
	        }

            if((h+1) == MAXHAZ)
            {
                if(osszeselado == 0)
                	SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs eladó ház!");
				else if(eddig > 0)
    				SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
            }
	    }
	    SendClientMessage(playerid, COLOR_GREY, "Ahhoz, hogy megkeresd: /gps ház [házszám]");
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "============================================");
	    return 1;
	}

	if(egyezik(cmd, "/eladókocsik") || egyezik(cmd, "/eladokocsik"))
	{

	    new h, eddig, osszeselado;
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "================ Eladó kocsik ================");
	    for(h = 0; h < MAXVSKOCSI; h++)
	    {
	        if(CarInfo[h][Van] == 1)
	        {

				if(CarInfo[h][cOwned] == 0)
				{

					if(OnlineUID(CarInfo[h][cKereskedo]) > NINCS)
					{
						eddig++;
						osszeselado++;
					
						format(string, sizeof(string), "[%d]Model: %s, Futott Km-er: %d KM, Rendszám: CLS-%d Irányár: %s Ft Eladó[online]: %s", h,  GetVehicleModelName(GetVehicleModel(CarInfo[h][cId])),floatround(KmSzamol[CarInfo[h][cId]]/1000),CarInfo[h][cId],FormatNumber( CarInfo[h][cValue], 0, ',' ),CarInfo[h][cOwner]); 

						SendClientMessage(playerid, COLOR_LIGHTGREEN, string);

					}
					else
					{
						eddig++;
						osszeselado++;
					
						format(string, sizeof(string), "[%d]Model: %s, Futott Km-er: %d KM, Rendszám: CLS-%d Irányár: %s Ft Eladó[offline]: %s", h,  GetVehicleModelName(GetVehicleModel(CarInfo[h][cId])),floatround(KmSzamol[CarInfo[h][cId]]/1000),CarInfo[h][cId],FormatNumber( CarInfo[h][cValue], 0, ',' ),CarInfo[h][cOwner]); 

						SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
					
					
					}
				}
	        }
            if((h+1) == MAXVSKOCSI)
            {
                if(osszeselado == 0)
                	SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs eladó kocsi!");

            }
	    }
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "A jármûvek megvehetõek az eladó nélkül is /v vásárol!");
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "============================================");
	    return 1;
	}

	if(egyezik(cmd, "/ip") || egyezik(cmd, "/getip"))
	{
		if(Nincsbelepve(playerid)) return 1;
		if(!Admin(playerid, 1337)) return 1;

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		    return SendClientMessage(playerid, COLOR_GREY, "Használata: /ip [Játékos]");

		new playa = ReturnUser(tmp);
		if(IsPlayerConnected(playa))
	    {
	        if(playa != INVALID_PLAYER_ID)
	        {
	            new ip[16];
	            GetPlayerName(playa, playername, sizeof(playername));
	            GetPlayerIp(playa, ip, sizeof(ip));

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "A játékos IP címe: %s", ip);
				return 1;
			}
	    }

	    return 1;
	}

	if(egyezik(cmd, "/getskin2"))
	{
		if(Nincsbelepve(playerid)) return 1;
		if(!IsHitman(playerid))
			return SendClientMessage(playerid, COLOR_GREY, "Nem vagy hitman!");
			
		new kocsi = GetClosestVehicle(playerid);
		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 3.0) return !Msg(playerid, "Csak Jármû mellet.");

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		    return SendClientMessage(playerid, COLOR_GREY, "Használata: /getskin2 [név/id]");

		new playa = ReturnUser(tmp);
		if(IsPlayerConnected(playa))
	    {
	        if(playa != INVALID_PLAYER_ID)
	        {
	            new skin = GetPlayerSkin(playa);
	            SetPlayerSkin(playerid, skin);
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Ezen az emberen ez a skin van: %d | És automatikusan átöltöztél ebbe!", skin);
				return 1;
			}
	    }

	    return 1;
	}

	if(egyezik(cmd, "/getskin"))
	{
		if(Nincsbelepve(playerid)) return 1;
		if(!IsHitman(playerid) && !Admin(playerid, 1) && !IsScripter(playerid))
			return SendClientMessage(playerid, COLOR_GREY, "Nem vagy hitman!");

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		    return SendClientMessage(playerid, COLOR_GREY, "Használata: /getskin [Játékos]");

		new playa = ReturnUser(tmp);
		if(IsPlayerConnected(playa))
	    {
	        if(playa != INVALID_PLAYER_ID)
	        {
	            new skin = GetPlayerSkin(playa);
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Ezen az emberen ez a skin van: %d", skin);
				return 1;
			}
	    }

	    return 1;
	}

	if(egyezik(cmd, "/kiszed"))
	{
		if(Nincsbelepve(playerid)) return 1;

		new playa = GetClosestPlayer(playerid);

		if(params > 0)
			playa = ReturnUser(param[1]);

		if(IsPlayerConnected(playa))
	    {
	        if(playa != INVALID_PLAYER_ID)
	        {
				if(IsPlayerNPC(playa)) return SendClientMessage(playerid, COLOR_GREY, "NPC-t nem!");

	            if(GetDistanceBetweenPlayers(playerid, playa) <= 2.5)
	            {
					if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Kocsiban vagy!");
					if(IsPlayerInAnyVehicle(playa))
					{
						new kocsi = GetClosestVehicle(playa);
						if(Locked(kocsi)) return Msg(playerid, "A jármû zárva");
						if(IsKocsi(kocsi, "Kamion") || IsKocsi(kocsi, "Uttisztito") || IsKocsi(kocsi, "Farmer") || IsKocsi(kocsi, "Taxi")) return Msg(playerid, "Nem rángatod ki munkakocsiból!");
						if(GetVehicleModel(kocsi) == 427 && PlayerInfo[playa][pJailed] == 2)
						{
							PlayerInfo[playa][pJailed] = 0;
							PlayerInfo[playa][pJailTime] = 0;
						}

						new Float:x, Float:y, Float:z;
						GetPlayerPos(playerid, x, y, z);
						Tele(playa, x + 0.5, y + 0.5, z, false);
						Animbanemrakhato[playa] = 0;
						format(string, sizeof(string), "* Valakit kirángattak a jármûbõl");

						if(GetPlayerState(playa) == PLAYER_STATE_DRIVER)
							UnFreeze(playa);

						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
						SendClientMessage(playerid, COLOR_GREY, "Nincs kocsiban!");
				}
				else
					SendClientMessage(playerid, COLOR_GREY, "Nincs senki a közelben!");
			}
	    }

	    return 1;
	}

	if(egyezik(cmd, "/hitmannev") || egyezik(cmd, "/hitmannév"))
	{
		if(!IsDirector(playerid)) return 1;

		if(params != 2) return Msg(playerid, "/HitmanNév [Játékos Neve / ID] [Új Név]");

		new id = ReturnUser(param[1]);

		if(id == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
		if(!IsHitman(id)) return Msg(playerid, "Játékos nem hitman!");

		strmid(PlayerInfo[id][pHitmanNev], param[2], 0, strlen(param[2]), MAX_PLAYER_NAME);
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Hitman: Új nevet adtál neki: %s [%s]", PlayerName(id), param[2]);
		SendFormatMessage(id, COLOR_LIGHTBLUE, "Hitman: Új nevet kaptál! [%s]", param[2]);

		return 1;
	}

	if(egyezik(cmd, "/asegit"))
	{
	    if(Nincsbelepve(playerid)) return 1;
	    if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
		
		
		
		if(params != 1) return SendClientMessage(playerid, COLOR_GREY, "Használata: /asegit [Játékos]");
		new jatekos = ReturnUser(param[1]);
		if(jatekos == INVALID_PLAYER_ID || IsPlayerNPC(jatekos))
			return Msg(playerid, "Nincs ilyen játékos!");
		
		if(MentoOnline() > 3 && !Admin(playerid, 5)) return Msg(playerid, "Van online mentõs õ lássa el!");
		if(jatekos == playerid && !Admin(playerid, 5) && !AdminDuty[playerid]) return Msg(playerid, "Nem segítheted fel magadat!");
		if(PInfo(jatekos,Elajult))
		{
			PInfo(jatekos,Elajult) = false;
			Feketeseg(jatekos, false);
			SetPlayerDrunkLevel(jatekos, 0);
			ClearAnim(jatekos);
			
			PlayerInfo[jatekos][pEllatva] = false;
			Leutve[jatekos] = false;
			Feketeseg(jatekos, false);
			Animban[jatekos] = 0;
			Leutve[jatekos] = false;
			UnFreeze(jatekos);
			
			Msg(playerid, "Felélesztetted!");
			new Float:elet;
			GetPlayerHealth(jatekos, elet);
			if(elet < 15.0)
				SetHealth(jatekos, 22.0);
			else if(elet < 95.0)
				SetHealth(jatekos, elet+5.0);
			
			if(IsValidDynamic3DTextLabel(Elajult[jatekos])) DestroyDynamic3DTextLabel(Elajult[jatekos]), Elajult[jatekos] = INVALID_3D_TEXT_ID;
			
			if(SAdmin(playerid, 1337) && (playerid == jatekos)) return true;
			else ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< Admin %s felsegítette %s-t! >>", AdminName(playerid), PlayerName(jatekos));
			return 1;
		}
		if(PlayerInfo[jatekos][pLoves] > UnixTime)
		{
			PlayerInfo[jatekos][pLoves] = NINCS;
			if(SAdmin(playerid, 1337) && (playerid == jatekos)) return true;
			else ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< Admin %s elálította a vérzést %s-nél! >>", AdminName(playerid), PlayerName(jatekos));
		}
	    if(Animban[jatekos] == 1)
	    {
 			Animban[jatekos] = 0;
			SetPlayerDrunkLevel(jatekos, 0);
	        GetPlayerName(jatekos, playername, sizeof(playername));
		    GameTextForPlayer(jatekos, "~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Az Admin felsegitett!", 3000, 3);
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Felsegitetted %s-t!", playername);
			ClearAnim(jatekos);
			UnFreeze(jatekos);
			
			Ehseg[jatekos] = 0.0;
			new Float:elet;
			GetPlayerHealth(jatekos, elet);
			if(elet < 15.0)
				SetHealth(jatekos, 22.0);
			else if(elet < 95.0)
				SetHealth(jatekos, elet+5.0);
				
			if(IsValidDynamic3DTextLabel(Elajult[jatekos])) DestroyDynamic3DTextLabel(Elajult[jatekos]), Elajult[jatekos] = INVALID_3D_TEXT_ID;
			
            if(SAdmin(playerid, 1337) && (playerid == jatekos)) return true;
			else ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< Admin %s felsegítette %s-t! >>", AdminName(playerid), PlayerName(jatekos));
		}
		else
		    SendClientMessage(playerid, COLOR_YELLOW, "Ez a játékos nem szorul segítségre!");

		return 1;
	}
    if(egyezik(cmd, "/vontatokotel") || egyezik(cmd, "/vontatókötél"))
	{
		if(veh == 1 || veh != 1) return Msg(playerid, "Ideiglenesen kivéve!");
	    if(PlayerInfo[playerid][pVontatokotel] == 1)
	    {
			tmp = strtok(cmdtext, idx);
			new kocsiid = strval(tmp);
			new kocsi = GetClosestVehicle(playerid, false);
			
     		if(Nincsbelepve(playerid)) return 1;
			if(veh == -1) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy kocsiban!");
			if(Bikes(veh)) return Msg(playerid, "Persze...");
			if(IsARepulo(veh)) return Msg(playerid, "Repülõvel vontatni???");

            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				return Msg(playerid, "Nem vagy sofõr!");
				
			if(IsKocsi(kocsi, "Farmer")) return Msg(playerid, "Nem nem! Farmer kocsit nem fogsz vontatni!");

			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 10) return SendClientMessage(playerid, COLOR_GREY, "A közelben nincs jármû!");
		
			new Float:hp1;
			new Float:hp2;
			GetVehicleHealth(veh,hp2);
			GetVehicleHealth(kocsi,hp1);
			SendFormatMessage(playerid,COLOR_YELLOW,"[1] vezetett: %.3f vontatott: %.3f",hp1,hp2);
			if(params == 1)
			{
				if(!IsVehicleConnected(kocsiid)) return Msg(playerid, "Nem létezõ JármûID.");
				if(GetVehicleTrailer(veh) == 0)
				AttachTrailerToVehicle(kocsiid, veh);
				else
				Msg(playerid, "Ha le szeretnéd kapcsolni a kocsit, jármû id nélkül írd be: /vontatókötél");
			}
			else if(params == 0)
			{
				if(GetVehicleTrailer(veh) == 0)
				{	
					AttachTrailerToVehicle(kocsi, veh);
					GetVehicleHealth(veh,hp2);
					GetVehicleHealth(kocsi,hp1);
					SendFormatMessage(playerid,COLOR_YELLOW,"[csatlakozas után] vezetett: %.3f vontatott: %.3f",hp1,hp2);
				}
				else
				{
				
					DetachTrailerFromVehicle(veh);
					GetVehicleHealth(veh,hp2);
					GetVehicleHealth(kocsi,hp1);
					SendFormatMessage(playerid,COLOR_YELLOW,"[lecsatol] vezetett: %.3f vontatott: %.3f",hp1,hp2);
				
				}
			}
		}
		else return Msg(playerid, "Vegyél vontató kötelet a 24/7-ben.");
	}
	if(egyezik(cmd, "/cigi"))
	{
	    if(PlayerInfo[playerid][pCigi] != 0)
	    {
			if(PlayerInfo[playerid][pGyujto] != 0)
			{
				if(PlayerInfo[playerid][pCigiUsed] == 5)
				{
					SendClientMessage(playerid, COLOR_RED, "Függõ lettél! Ha leakarsz szokni, vegyél a 24/7-be nikotin tapaszt!");
					PlayerInfo[playerid][pCigiFuggoseg] = 1;
				}
				if(PlayerInfo[playerid][pCigiFuggoseg] == 1)
				{
					SendClientMessage(playerid, COLOR_RED, "Nagyon vártál már erre a cigire!");
					new Float:health;
					health = GetPlayerHealth(playerid, health);
					SetHealth(playerid, health+15);
				}
				PlayerInfo[playerid][pCigi]--;
				PlayerInfo[playerid][pGyujto]--;
				PlayerInfo[playerid][pCigiUsed]++;
				CigiFuggo[playerid]=false;
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
				format(string, sizeof(string), "* Valaki elõveszi a gyújtót.");
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "* Valaki rágyújtott egy cigire.");
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "* Valaki elteszi a gyújtót.");
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else
				SendClientMessage(playerid, COLOR_RED, "Nincs gyújtód...Akkor hogy akarsz rágyújtani?!");
		}
		else
  			SendClientMessage(playerid, COLOR_YELLOW, "Nincs cigid");
		return 1;
	}
	if(egyezik(cmd, "/objectinfo"))
	{
		if(!SAdmin(playerid, 2) && !IsScripter(playerid))
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a parancsot nem használhatod!");
		    
        if(params != 1 && SAdmin(playerid, 1337) || params != 1 && IsScripter(playerid))
			return SendClientMessage(playerid,COLOR_WHITE, "Használata: /objectinfo [0/1] | 1 = Object adatainak mentése, 0 = Információ");

        SendClientMessage(playerid, COLOR_GREEN, "[Info]: Kattints egy tetszõleges Objectre az információ lekéréséhez!");
        if(SAdmin(playerid, 1337) || IsScripter(playerid)) {
			if(egyezik(param[1], "1"))
				ObjectIDje[playerid][2] = 2;
			else
			    ObjectIDje[playerid][2] = 1;
		} else
		    ObjectIDje[playerid][2] = 1;
			
		SelectObject(playerid);
	    return true;
	}
 	if(egyezik(cmd, "/ivás") || egyezik(cmd, "/ivas"))
	{
	    if(PlayerInfo[playerid][pPia] != 0)
	    {
  			PlayerInfo[playerid][pPia]--;
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
			format(string, sizeof(string), "* Valaki elõvesz egy üveg piát, és megissza.");
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		else
		{
  			SendClientMessage(playerid, COLOR_YELLOW, "Nincs piád! Vegyél a 24/7-be.");
		}
		return 1;
	}
    if(strcmp(cmd, "/nikotin", true) == 0)
	{
	    if(PlayerInfo[playerid][pNikotin] != 0)
	    {
     		if(PlayerInfo[playerid][pCigiFuggoseg] == 0)
	        {
	            SendClientMessage(playerid, COLOR_RED, "Minek neked nikotin tapasz, amikor nem vagy függõ?");
	        }
	        else
	        {
	        PlayerInfo[playerid][pNikotin]--;
   			PlayerInfo[playerid][pCigiFuggoseg] = 0;
   			SendClientMessage(playerid, COLOR_YELLOW, "Feltettél egy nikotin tapaszt a kezedre! Most már nem vagy függõ.");
			format(string, sizeof(string), "* Valaki feltesz egy nikotin tapaszt.");
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
	        }
		}
		else
		{
  			SendClientMessage(playerid, COLOR_YELLOW, "Nincs nikotin tapaszod! Vegyél a 24/7-be!");
		}
		return 1;
	}
	if(egyezik(cmd, "/kezetfog"))
	{
		if(params < 2) return Msg(playerid, "/Kezetfog [Tipus(1-3)] [Játékos]");
		new t = strval(param[1]);
		if(t < 1 || t > 3) return Msg(playerid, "Tipus 1-3");
		new p = ReturnUser(param[2]);
		if(p == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
		if(GetDistanceBetweenPlayers(playerid,p) > 1) return Msg(playerid, "Nincs a közeledben a játékos!");
		if(t == 1)
		{
			OnePlayAnim(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0);
			OnePlayAnim(p,"GANGS","hndshkba",4.0,0,0,0,0,0);
		}
		if(t == 2)
		{
			OnePlayAnim(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
			OnePlayAnim(p,"GANGS","hndshkda",4.0,0,0,0,0,0);
		}
		if(t == 3)
		{
			OnePlayAnim(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
			OnePlayAnim(p,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
		}
		SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Kezetfogtál vele: %s.", ICPlayerName(p));
		SendFormatMessage(p, COLOR_LIGHTGREEN, "* Kezetfogtál vele: %s.", ICPlayerName(playerid));
		Cselekves(playerid, "kezetfogott valakivel.", 1);
	}
	if(egyezik(cmd, "/ellát") || egyezik(cmd, "/ellat"))
	{
		new jatekos = GetClosestPlayer(playerid);
		if(!LMT(playerid, FRAKCIO_MENTO) && !Onkentesszolgalatban[playerid] && MentoOnline() > 3 )
			return Msg(playerid, "Csak mentõs. ((ha nincs fent engedi))");
		if(NemMozoghat(playerid)) return Msg(playerid, "Most nem használhatod!");
			
		if(GetDistanceBetweenPlayers(playerid, jatekos) > 5.0) return Msg(playerid, "Nincs a közeledbe!");
		if(params < 1)	return Msg(playerid, "/ellát [sérülés/ájulás/vérzés]");
		if(PlayerInfo[playerid][pKotszer] == 0) return Msg(playerid, "Nincs kötszered!");
		if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
		if(!Animban[jatekos]) return Msg(playerid, "Õ nincs animban");
		
		if(PlayerInfo[jatekos][pEllatva] && PlayerInfo[jatekos][pLoves] > UnixTime && !LMT(playerid, FRAKCIO_MENTO) && !Onkentesszolgalatban[playerid])
		//if(!PlayerToPoint(20,playerid,1944.6885,-2458.5464,13.5703) || GetPlayerVirtualWorld(playerid) != 104) return Msg(playerid, "Nem vagy kórházban!"); Megbeszélés alatt álló dolog by Amos
			return SendFormatMessage(playerid, COLOR_LIGHTRED,"Lõtt sérült, még nem lehet felsegíteni kb %d sec-ig",PlayerInfo[jatekos][pLoves]-UnixTime);
	
		if(!LMT(playerid, FRAKCIO_MENTO) && !Onkentesszolgalatban[playerid])
		{
			if(FloodMegprobal[playerid]>0)
			{
				SendFormatMessage(playerid, COLOR_YELLOW, "A-A ez túl sûrûn van. Legközelebb %d s múlva lehet!",FloodMegprobal[playerid]);
				return 1;
			}
			new db=random(100)+1;
		//	SendFormatMessage(playerid,COLOR_YELLOW,"/ellát %d",db);
			switch(db)
			{
				
				case 1..50:
				{
					if(PlayerInfo[playerid][pHamisNev] == 0)
						format(string, sizeof(string), "** %s megpróbálja felsegíteni/ellátni és nem sikerül neki", ICPlayerName(playerid));
					else
						format(string, sizeof(string), "** %s megpróbálja felsegíteni/ellátni és nem sikerül neki", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
					ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
					FloodMegprobal[playerid]=45;
					return 1;
				}
				default:
				{
					if(PlayerInfo[playerid][pHamisNev] == 0)
						format(string, sizeof(string), "** %s megpróbálja felsegíteni és sikerül neki", ICPlayerName(playerid));
					else
						format(string, sizeof(string), "** %s megpróbálja felsegíteni és sikerül neki", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
					ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					FloodMegprobal[playerid]=45;
				}
			}
		}	
		if(KiertMegy[playerid]	== jatekos && MentoHivas[jatekos] == 2)
		{
			KiertMegy[playerid] = NINCS;
			MentoHivas[jatekos] = 0;
			MentoSegit[playerid] = 0;
		}
		if(egyezik(param[1],"sérülés") || egyezik(param[1],"serules"))
		{
		
			//if(PlayerInfo[jatekos][pLoves] < UnixTime) return Msg(playerid, "Õ nem sérült!");
			if(PlayerInfo[jatekos][pEllatva] && PlayerInfo[jatekos][pLoves] > UnixTime && !LMT(playerid, FRAKCIO_MENTO) && !Onkentesszolgalatban[playerid])
				return SendFormatMessage(playerid, COLOR_LIGHTRED,"Lõtt sérült, még nem lehet felsegíteni kb %d sec-ig",PlayerInfo[jatekos][pLoves]-UnixTime);
			
			MunkaFolyamatban[playerid] = 1;
			GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Felsegited...", 3000, 3);
			TogglePlayerControllable(playerid, false);
			TogglePlayerControllable(jatekos, false);
			ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
			ApplyAnimation(jatekos, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
			SetTimerEx("Munkavege", 10000, false, "ddd", playerid, M_SEGIT, jatekos);
			PlayerInfo[playerid][pKotszer]--;
			PlayerInfo[playerid][pMechSkill]++;
			return 1;
		}
		if(egyezik(param[1],"vérzés") || egyezik(param[1],"verzes"))
		{
			if(Animban[jatekos] == 1 && PlayerInfo[jatekos][pLoves] > UnixTime)
			{
				if(NemMozoghat(playerid))
					return 1;
					
				MunkaFolyamatban[playerid] = 1;
				GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Ellatod a vérzést...", 3000, 3);
				TogglePlayerControllable(playerid, false);
				TogglePlayerControllable(jatekos, false);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				ApplyAnimation(jatekos, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
				SetTimerEx("Munkavege", 10000, false, "ddd", playerid, M_ELLAT, jatekos);
				PlayerInfo[playerid][pKotszer]--;
				PlayerInfo[playerid][pMechSkill]++;
				PlayerInfo[playerid][pLoves] = NINCS;

			}
			else
				Msg(playerid, "Õ nem vérzik!");
		
		}
		if(egyezik(param[1],"ájulás")|| egyezik(param[1],"ajulas"))
		{
			if(!PInfo(jatekos,Elajult)) return Msg(playerid, "Õ nincs elájulva!");
			
			MunkaFolyamatban[playerid] = 1;
			GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Kezeled az eszélet vesztését!...", 3000, 3);
			TogglePlayerControllable(playerid, false);
			TogglePlayerControllable(jatekos, false);
			ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
			ApplyAnimation(jatekos, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
			SetTimerEx("Munkavege", 10000, false, "ddd", playerid, M_ELLAT2, jatekos);
			PlayerInfo[playerid][pKotszer]--;
			PlayerInfo[playerid][pMechSkill]++;
			return 1;
		}
	}
	if(egyezik(cmd, "/elalit") || egyezik(cmd,"/elálít"))
	{
		Msg(playerid,"/ellát");
		return 1;
	
	}
	if(egyezik(cmd, "/segit"))
	{
	    Msg(playerid, "/ellát sérülés");
		return 1;
	}


	if(egyezik(cmd, "/helper"))
	{
		if(Nincsbelepve(playerid)) return 1;
		if(Admin(playerid, 5))
		{
			if(params < 1)
			    return SendClientMessage(playerid, COLOR_GRAD2, "Használata: /helper [Játékos] [óra]");

 			new nev = ReturnUser(param[1]);
			if(nev == INVALID_PLAYER_ID) return Msg(playerid, "A játékos nem online.");
			if(PlayerInfo[nev][pAsTilt]==1 || PlayerInfo[playerid][pID] == 8176793)
			{
				SendFormatMessage(nev, COLOR_YELLOW, "Kiakartak nevezni AS-nek, DE el vagy tíltva örökre | Oka: %s!",PlayerInfo[nev][pAsTiltOk]);
				SendFormatMessage(playerid, COLOR_YELLOW, "Kiakartad nevezni AS-nek, DE el van tíltva örökre | Oka: %s!",PlayerInfo[nev][pAsTiltOk]);
				return 1;
			}
			if(PlayerInfo[nev][pAS] > UnixTime)
			{
			    PlayerInfo[nev][pAS] = 0;
			    PlayerInfo[nev][pTVJog] = 0;
			    SendFormatMessage(nev, COLOR_LIGHTBLUE, "%s elvette az Adminsegéd jogodat!", AdminName(playerid));
			    SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Elvetted %s Adminsegéd jogát, ha ismét ki akarod nevezni, akkor /helper %s", PlayerName(nev), PlayerName(nev));
			    ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s elvette %s Adminsegéd jogát! >>", AdminName(playerid), PlayerName(nev));
				Channel(nev, NINCS, true);
			}
			else
			{
				if(params < 2) return Msg(playerid, "/helper [Játékos] [óra]");
				new ido=strval(param[2]);
				if(ido<1 || ido>48) return Msg(playerid, "Minimum 1 és maximum 48 óra lehet!");
				ido=ido*3600;//óra legyen
				PlayerInfo[nev][pAS] = UnixTime+ido;
				ido=ido/3600;
			    SendFormatMessage(nev, COLOR_LIGHTBLUE, "%s kinevezett Adminsegédnek %d IRL órára, így látod a reportokat! Parancsok a /ah-ban!", PlayerName(playerid),ido);
				SendClientMessage(nev, COLOR_YELLOW,"Ne feledd, bármelyik parancsal visszaélsz, azonnali örök bannal fog járni!!!");
			    SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kinevezted %s-t Adminsegédnek %d IRL órára, ha el akarod venni ezt a jogot, akkor /helper %s", PlayerName(nev), ido,PlayerName(nev));
			    ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s kinevezte %s-t %d órára Adminsegédnek! >>", AdminName(playerid), PlayerName(nev),ido);
				Channel(nev, 0, true);
			}
		}
		else
		{
			if(PlayerInfo[playerid][pAS] >UnixTime)
			{
				Channel(playerid, NINCS, true);
			    PlayerInfo[playerid][pAS] = 0;
			    PlayerInfo[playerid][pTVJog] = 0;
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Már nem vagy AS!");
			    ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s lemondta az Adminsegéd jogát! >>", PlayerName(playerid));
			}
			else
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nem vagy Admin(segéd)!");
		}
		return 1;
 	}
    if(strcmp(cmd, "/tvengedely", true) == 0 || strcmp(cmd, "/tvengedély", true) == 0)
	{
		if(Nincsbelepve(playerid)) return 1;
		if(Admin(playerid, 5))
		{
			if(params < 1)
			    return SendClientMessage(playerid, COLOR_GRAD2, "Használata: /tvengedély [Játékos] [óra]");

        	new nev = ReturnUser(param[1]);
			if(nev == INVALID_PLAYER_ID) return Msg(playerid, "A játékos nem online.");
				
		    GetPlayerName(nev, playername, sizeof(playername));
		    GetPlayerName(playerid, sendername, sizeof(sendername));
			
			if(Adminseged[nev] == 1 || IsAS(nev))
			{
				if(PlayerInfo[nev][pTVJog] > UnixTime)
				{
					format(string, sizeof(string), "<< Tiltottad a TVzést neki: %s! >>", playername);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "<< Admin %s tiltotta neked a TVzést! >>", AdminName(playerid));
					SendClientMessage(nev, COLOR_YELLOW, string);
					format(string, sizeof(string), "<< Admin %s tiltotta neki: %s a TVzést! >>", AdminName(playerid), playername);
					ABroadCast(COLOR_LIGHTRED, string, 1);
					PlayerInfo[nev][pTVJog] = 0;
				}
				else
				{
					if(params < 2) return Msg(playerid, "/tvengedély [Játékos] [óra]");
					new ido=strval(param[2]);
					if(ido<1 || ido>48) return Msg(playerid, "Minimum 1 és maximum 48 óra lehet!");
					ido=ido*3600;//óra legyen
					PlayerInfo[nev][pTVJog] = UnixTime+ido;
					ido=ido/3600;
					format(string, sizeof(string), "<< Engedélyezted a TVzést neki: %s %d óráig! >>", playername, ido);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "<< Admin %s engedélyezte neked a TVzést %d óráig! >>", AdminName(playerid), ido);
					SendClientMessage(nev, COLOR_YELLOW, string);
					format(string, sizeof(string), "<< Admin %s engedélyezte neki: %s a TVzést %d óráig! >>", AdminName(playerid), playername, ido);
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ez a játékos nem AS!");
				return 1;
			}

    	}
    	return 1;
 	}
	if(strcmp(cmd, "/parkolohelp", true) ==0)
	{
	 	if(IsPlayerConnected(playerid))
	  	{
	  	    {
				SendClientMessage(playerid,COLOR_RED,"*** Elhelyezése *** Verona Beach közelében, a Conference Center nevû helyen.");
	  	        SendClientMessage(playerid,COLOR_GREEN,"*** Parkolás - Információ *** Két helyre parkolhatsz, Felsõ és Alsó emeletre.");
	  	        SendClientMessage(playerid,COLOR_GREEN,"*** Jegyek ára *** Alsó emelet: 3,000 FT | Felsõ emelet: 5,000 FT.");
	 			SendClientMessage(playerid,COLOR_GREEN,"*** Parancsok *** /alsoparkolo - Az also emeletre parkolójegyet veszel.");
				SendClientMessage(playerid,COLOR_GREEN,"*** Parancsok *** /felsoparkolo - A felsõ emeletre parkolójegyet veszel(Állj a nyílra szigorúan).");
				SendClientMessage(playerid,COLOR_GREEN,"*** Parancsok *** /alsoparkoloki - Ezzel a paranccsal nyílik ki a kapu.");
				SendClientMessage(playerid,COLOR_GREEN,"*** Parancsok *** /felsoparkoloki - Ezzel a paranccsal a lift kiszállít a parkolóból.");
				SendClientMessage(playerid,COLOR_GREEN,"*** Info *** Csak RP-sen, ha csalsz lecsuknak a zsaruk. ");
			}
		}
		return 1;
	}
	if(egyezik(cmd,"/alsoparkolo"))
	{
		
	
	}
	if(strcmp(cmd, "/helper2", true) == 0)
	{
		if(Nincsbelepve(playerid)) return 1;
		if(Admin(playerid, 6))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			    return SendClientMessage(playerid, COLOR_GRAD2, "Használata: /helper2 [név/id]");

 			new nev = ReturnUser(tmp);
		    GetPlayerName(nev, playername, sizeof(playername));
		    GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[nev][pID] == 2297 || PlayerInfo[nev][pID] == 3551) return 1;
			if(PlayerInfo[nev][pAsTilt]==1)
			{
				format(string, sizeof(string), "Kiakartak nevezni AS-nek, DE el vagy tíltva örökre. Oka: %s!",PlayerInfo[nev][pAsTiltOk]);
				SendClientMessage(nev, COLOR_YELLOW, string);
				format(string, sizeof(string), "Kiakartad nevezni AS-nek, DE el vagy tíltva örökre. Oka: %s!",PlayerInfo[nev][pAsTiltOk]);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				return 1;
			}
			if(PlayerInfo[nev][pAS] ==NINCS)
			{
				Channel(nev, NINCS, true);
			    PlayerInfo[nev][pAS] = 0;
			    SendFormatMessage(nev, COLOR_LIGHTBLUE, "%s elvette az adminsegéd jogodat!", sendername);
			    SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Elvetted %s adminsegéd jogát, ha ismét ki akarod nevezni, akkor /helper2 %s", playername, playername);
			    format(string, sizeof(string), "<< Admin %s elvette %s Adminsegéd jogát!>>", AdminName(playerid), playername);
			    ABroadCast(COLOR_LIGHTRED, string, 1);
			}
			else
			{
			    PlayerInfo[nev][pAS] = NINCS;
			    SendFormatMessage(nev, COLOR_LIGHTBLUE, "%s kinevezett ÖRÖK Adminsegédnek, így látod a reportokat! Parancsok a /ah-ban!", sendername);
			    SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kinevezted %s-t ÖRÖK Adminsegédnek, ha el akarod venni ezt a jogot, akkor /helper2 %s", playername, playername);
			    format(string, sizeof(string), "<< Admin %s kinevezte %s-t ÖRÖK Adminsegédnek! >>", AdminName(playerid), playername);
			    ABroadCast(COLOR_LIGHTRED, string, 1);
				Channel(nev, 0, true);
			}
		}
		else
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[playerid][pAS] == -1)
			{
			    PlayerInfo[playerid][pAS] = 0;
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Már nem vagy AS!");
			    format(string, sizeof(string), "<< %s lemondta az ÖRÖK Adminsegéd jogát! >>", sendername);
			    ABroadCast(COLOR_LIGHTRED, string, 1);
				Channel(playerid, NINCS, true);
			}
			else
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nem vagy adminsegéd!");
		}
		return 1;
	}

	if(strcmp(cmd, "/clearchat", true) == 0 || egyezik(cmd, "/cc"))
	{
		if(Nincsbelepve(playerid)) return 1;
		if(Admin(playerid, 1) || IsScripter(playerid))
		{
		    for(new c = 1; c <= 50; c++)
		    {
		        SendClientMessageToAll(COLOR_WHITE, " ");
		    }
		}
		return 1;
	}

	if(strcmp(cmd, "/kaja", true) == 0)
	{
		//if(playerid != NINCS) return Msg(playerid, "Átalakítás miatt a parancs zárolva - Menj és egyél az éttermekben :)");

		if(PlayerInfo[playerid][pKaja] < 1)
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs kajád, vegyél egy boltban!");

		if(!Ehseg[playerid])
			return Msg(playerid, "Nem vagy éhes");

        ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0);
		
		Szukseglet(playerid, -50);
		PlayerInfo[playerid][pKaja]--;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Megettél egy szendvicset!");
		format(string, sizeof(string), "* Valaki elõvett egy szendvicset és megette.");
  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
	}

	if(strcmp(cmd, "/drog", true) == 0)
	{
		if(Harcol[playerid]) return SeeKick(playerid, "[WAR]  Drogozás war közben!");
	    if(Nincsbelepve(playerid)) return 1;
		new kokain = PlayerInfo[playerid][pKokain];
		new heroin = PlayerInfo[playerid][pHeroin];
		new marihuana = PlayerInfo[playerid][pMarihuana];
		new Float:elet, Float:pancel;
		GetPlayerHealth(playerid, elet);
		GetPlayerArmour(playerid, pancel);

		if(kokain < 1 && heroin < 1 && marihuana < 1)
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs drogod!");

		new drog[256];
		tmp = strtok(cmdtext, idx);

		if(!strlen(tmp))
		{
		    SendClientMessage(playerid, COLOR_GRAD2, "Használata: /drog [drog]");
		    SendFormatMessage(playerid, COLOR_GRAD2, "Felhasználható drogjaid: Kokain[%dg] Heroin[%dg] Marihuana[%dg]", kokain, heroin, marihuana);
		   
		    SendClientMessage(playerid, COLOR_GRAD2, "Elhasználáskor: Kokain[10g] Heroin[20g] Marihuana[10g]");
		    
			return 1;
		}

		drog = tmp;

		if(Drogozott[playerid] != 0)
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "Ez túl sok egyszerre, kicsit pihenj...");

		if(strcmp(drog, "kokain", true) == 0)
		{
		    if(kokain < 10)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs elég kokainod!");

			if(elet < 20)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "A-a, ilyenkor már a drog sem segít! Inkább hívj orvost! :)");

			Drogozott[playerid] = 1;
			PlayerInfo[playerid][pDrogido] += 5;
			PlayerInfo[playerid][pKokain] -= 10;

			if(elet < (MAXHP - 10.0))
				SetHealth(playerid, elet + 10.0);
			else
				SetHealth(playerid, MAXHP);

			//SetPlayerWeather(playerid, -66);
			ApplyAnimation(playerid, "GANGS", "drnkbr_prtl_F", 4.000000, 0, 1, 1, 1, -1);
			SetPlayerDrunkLevel(playerid, (GetPlayerDrunkLevel(playerid)+250));

		}

		else if(strcmp(drog, "heroin", true) == 0)
		{
		    if(heroin < 20)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs elég heroinod!");

			if(elet < 10)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "A-a, ilyenkor már a drog sem segít! Inkább hívj orvost! :)");

			Drogozott[playerid] = 1;
			PlayerInfo[playerid][pDrogido] += 15;
			PlayerInfo[playerid][pHeroin] -= 20;

			if(pancel <= 97.0)
				SetPlayerArmour(playerid, pancel + 3.0);
			else
				SetPlayerArmour(playerid, 100.0);
			/*else if(pancel <= 129.0)
				SetPlayerArmour(playerid, pancel + 1.0);
			else
			    SetPlayerArmour(playerid, 130.0);*/

			//SetPlayerWeather(playerid, 45);
			ApplyAnimation(playerid, "GANGS", "drnkbr_prtl_F", 4.000000, 0, 1, 1, 1, -1);
			SetPlayerDrunkLevel(playerid, (GetPlayerDrunkLevel(playerid)+300));

		}

		else if(strcmp(drog, "marihuana", true) == 0)
		{
		    if(marihuana < 10)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs elég marihuánád!");

			if(elet < 10)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "A-a, ilyenkor már a drog sem segít! Inkább hívj orvost! :)");

			Drogozott[playerid] = 1;
			PlayerInfo[playerid][pDrogido] += 20;
			PlayerInfo[playerid][pMarihuana] -= 10;

			if(elet <= (MAXHP - 10.0))
				SetHealth(playerid, elet + 10.0);
			else
			    SetHealth(playerid, MAXHP);

			if(pancel <= 95.0)
				SetPlayerArmour(playerid, pancel + 5.0);
			else
				SetPlayerArmour(playerid, 100.0);
			/*else if(pancel <= 128.0)
				SetPlayerArmour(playerid, pancel + 2.0);
			else if(pancel <= 149.0)
				SetPlayerArmour(playerid, pancel + 1.0);
			else
			    SetPlayerArmour(playerid, 150.0);*/

			//SetPlayerWeather(playerid, -800);
			ApplyAnimation(playerid, "GANGS", "drnkbr_prtl_F", 4.000000, 0, 1, 1, 1, -1);

			SetPlayerDrunkLevel(playerid, (GetPlayerDrunkLevel(playerid)+500));

		}

		else
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Ilyen drog nem létezik...");

	}

	if(strcmp(cmd, "/berak", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new mit[256], mennyit;
			new house = HazabanVan(playerid);
			if(house == NINCS) house = HazabanVan2(playerid);
			if(house != NINCS)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Helyes használat: /berak [mit] [mennyit / slot]");
					SendClientMessage(playerid, COLOR_GRAD2, "Amit berakhatsz: Pénz, Kaja, Cigi, Kokain, Heroin, Marihuana, Material(mati), Fegyver, Lõszer, Ruha, Arany");
					return 1;
				}
				mit = tmp;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Helyes használat: /berak [mit] [mennyit / slot]");
					SendClientMessage(playerid, COLOR_GRAD2, "Amit berakhatsz: Pénz, Kaja, Cigi, Kokain, Heroin, Marihuana, Material(mati), Fegyver, Lõszer, Ruha, Arany");
					return 1;
				}
				mennyit = strval(tmp);

				if(mennyit < 1 && !egyezik(param[1], "fegyver") && !egyezik(param[1], "loszer") && !egyezik(param[1], "lõszer"))
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség / slot");
					
				if(FloodCheck(playerid)) return 1;

				if(strcmp(mit, "pénz", true) == 0 || strcmp(mit, "penz", true) == 0)
				{
				    new penz = GetMoney(playerid);

				    if(penz < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs pénzed, vagy minuszban vagy!");

					if(penz < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %dFT-od van! Többet nem tudsz betenni...", penz);
					    return 1;
	    			}

					GiveMoney(playerid, -mennyit);
					HouseInfo[house][hTakings] += mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál %dFT-t a széfbe", mennyit);
					
					format(string,sizeof(string),"[berak][%d]%s a %d házba %s Ft",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);
					
					//HazUpdate(house, "Penz='%d'", HouseInfo[house][hTakings]);
					HazUpdate(house, HAZ_Takings);
					return 1;
				}
				else if(egyezik(mit, "arany"))
				{
					new arany = PlayerInfo[playerid][pArany];
					if(arany < 1) return Msg(playerid, "Nincs arany nálad!");
					if(arany < mennyit) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %d aranyad van! Többet nem tudsz betenni...", arany);
					PlayerInfo[playerid][pArany] -= mennyit;
					HouseInfo[house][hArany] += mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál %ddb aranyat a házba!", mennyit);
					
					format(string,sizeof(string),"[berak][%d]%s a %d házba %s aranyat",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);
					HazUpdate(house, HAZ_Arany);
				}
				else if(egyezik(mit, "alma"))
				{
					new alma = PlayerInfo[playerid][pAlma], maxalma = MAXHAZALMA;
					if(alma < 1) return Msg(playerid, "Nincs alma a zsebedben!");
					if(alma < mennyit) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %d almád van! Többet nem tudsz betenni...", alma);
					if((HouseInfo[house][hAlma] + mennyit) > maxalma) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Maximum %d alma fér el a házban!", maxalma);
					PlayerInfo[playerid][pAlma] -= mennyit;
					HouseInfo[house][hAlma] += mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál %d almát a házba!", mennyit);
					
					format(string,sizeof(string),"[berak][%d]%s a %d házba %s almát",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);
					HazUpdate(house, HAZ_Alma);
					return 1;
				}

				else if(strcmp(mit, "kaja", true) == 0)
				{
					new kaja = PlayerInfo[playerid][pKaja];
				    if(kaja < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs kajád!");

					if(kaja < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %d kajád van! Többet nem tudsz betenni...", kaja);
					    return 1;
	    			}

					new maxcucc = MAXHAZKAJA;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: maxcucc += floatround(MAXHAZKAJA * 0.05);
							case 800: maxcucc += floatround(MAXHAZKAJA * 0.1);
							case 1600: maxcucc += floatround(MAXHAZKAJA * 0.25);
						}
					}

					if((HouseInfo[house][hKaja] + mennyit) > maxcucc)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %d kaja fér el a házban!", maxcucc);
					    return 1;
	    			}

                    PlayerInfo[playerid][pKaja] -= mennyit;
					HouseInfo[house][hKaja] += mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál %d kaját a házba", mennyit);
					
					format(string,sizeof(string),"[berak][%d]%s a %d házba %s kaja",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);

					//HazUpdate(house, "Kaja='%d'", HouseInfo[house][hKaja]);
					HazUpdate(house, HAZ_Kaja);
					return 1;
				}

				else if(strcmp(mit, "cigi", true) == 0)
				{
					new kaja = PlayerInfo[playerid][pCigi];
				    if(kaja < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs cigid!");

					if(kaja < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %d cigid van! Többet nem tudsz betenni...", kaja);
					    return 1;
	    			}

					new maxcucc = MAXHAZCIGI;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: maxcucc += floatround(MAXHAZCIGI * 0.05);
							case 800: maxcucc += floatround(MAXHAZCIGI * 0.1);
							case 1600: maxcucc += floatround(MAXHAZCIGI * 0.25);
						}
					}

					if((HouseInfo[house][hCigi] + mennyit) > maxcucc)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %d cigi fér el a házban!", maxcucc);
					    return 1;
	    			}

                    PlayerInfo[playerid][pCigi] -= mennyit;
					HouseInfo[house][hCigi] += mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál %d cigit a házba", mennyit);
					
					format(string,sizeof(string),"[berak][%d]%s a %d házba %s cigit",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);

					//HazUpdate(house, "Cigi='%d'", HouseInfo[house][hCigi]);
					HazUpdate(house, HAZ_Cigi);
					return 1;
				}

				else if(strcmp(mit, "kokain", true) == 0)
				{
					new cucc = PlayerInfo[playerid][pKokain];
				    if(cucc < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs kokainod!");

					if(cucc < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %dg kokainod van! Többet nem tudsz betenni...", cucc);
					    return 1;
	    			}

					new maxcucc = MAXHAZKOKAIN;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: maxcucc += floatround(MAXHAZKOKAIN * 0.05);
							case 800: maxcucc += floatround(MAXHAZKOKAIN * 0.1);
							case 1600: maxcucc += floatround(MAXHAZKOKAIN * 0.25);
						}
					}

					if((HouseInfo[house][hKokain] + mennyit) > maxcucc)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %dg kokain fér el a házszéfbe!", maxcucc);
					    return 1;
	    			}

                    PlayerInfo[playerid][pKokain] -= mennyit;
					HouseInfo[house][hKokain] += mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál %dg kokaint a házszéfbe", mennyit);
					
					format(string,sizeof(string),"[berak][%d]%s a %d házba %s kokain",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);

					//HazUpdate(house, "Kokain='%d'", HouseInfo[house][hKokain]);
					HazUpdate(house, HAZ_Kokain);
					return 1;
				}

				else if(strcmp(mit, "heroin", true) == 0)
				{
					new cucc = PlayerInfo[playerid][pHeroin];
				    if(cucc < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs heroinod!");

					if(cucc < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %dg heroinod van! Többet nem tudsz betenni...", cucc);
					    return 1;
	    			}

					new maxcucc = MAXHAZHEROIN;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: maxcucc += floatround(MAXHAZHEROIN * 0.05);
							case 800: maxcucc += floatround(MAXHAZHEROIN * 0.1);
							case 1600: maxcucc += floatround(MAXHAZHEROIN * 0.25);
						}
					}

					if((HouseInfo[house][hHeroin] + mennyit) > maxcucc)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %dg heroin fér el a házszéfbe!", MAXHAZHEROIN);
					    return 1;
	    			}

                    PlayerInfo[playerid][pHeroin] -= mennyit;
					HouseInfo[house][hHeroin] += mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál %dg heroint a házszéfbe", mennyit);
					
					format(string,sizeof(string),"[berak][%d]%s a %d házba %s heroin",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);

					//HazUpdate(house, "Heroin='%d'", HouseInfo[house][hHeroin]);
					HazUpdate(house, HAZ_Heroin);
					return 1;
				}

				else if(strcmp(mit, "marihuana", true) == 0)
				{
					new cucc = PlayerInfo[playerid][pMarihuana];
				    if(cucc < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs marihuánád!");

					if(cucc < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %dg marihuánád van! Többet nem tudsz betenni...", cucc);
					    return 1;
	    			}

					new maxcucc = MAXHAZMARIHUANA;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: maxcucc += floatround(MAXHAZMARIHUANA * 0.05);
							case 800: maxcucc += floatround(MAXHAZMARIHUANA * 0.1);
							case 1600: maxcucc += floatround(MAXHAZMARIHUANA * 0.25);
						}
					}

					if((HouseInfo[house][hMarihuana] + mennyit) > maxcucc)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %dg marihuana fér el a házszéfbe!", maxcucc);
					    return 1;
	    			}

                    PlayerInfo[playerid][pMarihuana] -= mennyit;
					HouseInfo[house][hMarihuana] += mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál %dg marihuana-t a házszéfbe", mennyit);
					
					format(string,sizeof(string),"[berak][%d]%s a %d házba %s marihuana",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);

					//HazUpdate(house, "Marihuana='%d'", HouseInfo[house][hMarihuana]);
					HazUpdate(house, HAZ_Marihuana);
					return 1;
				}
				else if(strcmp(mit, "mellény", true) == 0 || strcmp(mit, "melleny", true) == 0)
				{
					new Float:armor;
					GetPlayerArmour(playerid, armor);
					new pancel = floatround(armor);
					if(pancel == 0) return Msg(playerid, "Nincs mellényed!");
					new maxcucc = 5, fslot = mennyit - 1;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: maxcucc += 1;
							case 800: maxcucc += 2;
							case 1600: maxcucc += 5;
						}
					}
	    			if(mennyit >= 1 && mennyit <= maxcucc)
	    			{
						if(HouseInfo[house][hMellenyek][fslot] == 0)
						{
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál egy mellényt a házszéfbe, állapota: %d százalék", pancel);
							HouseInfo[house][hMellenyek][fslot] = pancel;
							SetPlayerArmour(playerid, 0);
							format(string,sizeof(string),"[berak][%d]%s a %d házba 1 mellényt",playerid,PlayerName(playerid),house);
							Log("Szef",string);
						}
						else return Msg(playerid, "Itt már van mellény!");
					}
					HazUpdate(house, HAZ_Mellenyek);
					return 1;
				}
				else if(strcmp(mit, "mati", true) == 0 || strcmp(mit, "material", true) == 0)
				{
					new cucc = PlayerInfo[playerid][pMats];
				    if(cucc < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs materialod!");

					if(cucc < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %dg materialod van! Többet nem tudsz betenni...", cucc);
					    return 1;
	    			}

					new maxcucc = MAXHAZMATI;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: maxcucc += floatround(MAXHAZMATI * 0.05);
							case 800: maxcucc += floatround(MAXHAZMATI * 0.1);
							case 1600: maxcucc += floatround(MAXHAZMATI * 0.25);
						}
					}

					if((HouseInfo[house][hMati] + mennyit) > maxcucc)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %ddb material fér el a házszéfbe!", maxcucc);
					    return 1;
	    			}

                    PlayerInfo[playerid][pMats] -= mennyit;
					HouseInfo[house][hMati] += mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál %ddb materialt a házszéfbe", mennyit);
					
					format(string,sizeof(string),"[berak][%d]%s a %d házba %s mati",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);

					//HazUpdate(house, "Material='%d'", HouseInfo[house][hMati]);
					HazUpdate(house, HAZ_Mati);
					return 1;
				}
				else if(strcmp(mit, "fegyver", true) == 0 )
				{
					if(params < 2)
						return Msg(playerid, "Használat: /berak fegyver [fegyvernév / ID]");
					
					new weapon = GetGunFromString(param[2]);
					if(weapon < 1 || weapon > MAX_WEAPONS)
						return Msg(playerid, "Ilyen fegyver nem létezik");
					
					if(weapon == WEAPON_CHAINSAW || weapon == WEAPON_FIREEXTINGUISHER)
						return Msg(playerid, "Láncfûrész és poroltó nem rakható el");
						
					new slots = 5;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: slots += 1;
							case 800: slots += 2;
							case 1600: slots += 5;
						}
					}
					
					new slot = NINCS;
					for(new s = 0; s < slots; s++)
					{
						if(!HouseInfo[house][hFegyver][s])
							{ slot = s; break; }
					}
					
					if(slot == NINCS)
						return Msg(playerid, "Nincs szabad hely ennek a fegyvernek");
					
					if(WeaponTakeWeapon(playerid, weapon))
					{
						HouseInfo[house][hFegyver][slot] = weapon;
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál egy fegyvert a házszéfbe: %s", GetGunName(weapon));
						HazUpdate(house, HAZ_Fegyver);

						if(!PlayerInfo[playerid][pMember])
							format(_tmpString, 128, "[Berak][Civil]%s berakott egy fegyvert a %d. házba: %s-t", PlayerName(playerid), house, GetGunName(weapon)), Log("Fegyver", _tmpString);
						else
							format(_tmpString, 128, "[Berak][%s]%s berakott egy fegyvert a %d. házba: %s-t", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][2], PlayerName(playerid), house, GetGunName(weapon)), Log("Fegyver", _tmpString);
					}
				}
				else if(strcmp(mit, "loszer", true) == 0 || strcmp(mit, "lõszer", true) == 0)
				{
					if(params < 3)
						return Msg(playerid, "Használat: /berak lõszer [fegyvernév / ID] [lõszer]");
					
					new weapon = GetGunFromString(param[2]);
					if(weapon < 1 || weapon > MAX_WEAPONS)
						return Msg(playerid, "Ilyen fegyver nem létezik");
					
					if(WeaponType(weapon) == WEAPON_TYPE_HAND)
						return Msg(playerid, "Ez a fegyver nem lõszer alapú");
					
					new ammo = strval(param[3]);
					if(ammo < 1)
						return Msg(playerid, "Hibás lõszer mennyiség");
					
					new berakva, berakni = max(0, min(ammo, WeaponAmmo(playerid, weapon))), t;
					if(!berakni)
						return Msg(playerid, "Nincs ilyen lõszered");
						
					new slots = 5;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: slots += 1;
							case 800: slots += 2;
							case 1600: slots += 5;
						}
					}
					
					for(new s = 0; s < slots; s++)
					{
						if(!HouseInfo[house][hLoszerTipus][s] || HouseInfo[house][hLoszerTipus][s] == weapon)
						{
							t = max(0, min(berakni, WeaponMaxAmmo(weapon) - HouseInfo[house][hLoszerMennyiseg][s]));
							
							berakva += t;
							berakni -= t;
							
							HouseInfo[house][hLoszerTipus][s] = weapon;
							HouseInfo[house][hLoszerMennyiseg][s] += t;
							WeaponGiveAmmo(playerid, weapon, -t);
							
							if(!berakni)
								break;
						}
					}
					
					if(!berakva)
						return Msg(playerid, "Sajnos nem fér több lõszer a széfbe");
					
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál %ddb %s lõszert a házszéfbe", berakva, GunName(weapon));
					HazUpdate(house, HAZ_Loszer);

					if(!PlayerInfo[playerid][pMember])
						format(_tmpString, 128, "[Berak][Civil]%s berakott %ddb %s lõszert %d. ház széfjébe", PlayerName(playerid), berakva, GunName(weapon), house), Log("Fegyver", _tmpString);
					else
						format(_tmpString, 128, "[Berak][%s]%s berakott %ddb %s lõszert %d. ház széfjébe", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][2], PlayerName(playerid), berakva, GunName(weapon), house), Log("Fegyver", _tmpString);
				}
				else if(strcmp(mit, "ruha", true) == 0 )
				{
					new ruha = GetPlayerSkin(playerid);
					new maxcucc = 5, fslot = mennyit - 1;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: maxcucc += 1;
							case 800: maxcucc += 2;
							case 1600: maxcucc += 5;
						}
					}
	    			if(mennyit >= 1 && mennyit <= maxcucc)
	    			{
	    			    if(HouseInfo[house][hRuhak][fslot] == 0)
	    			    {
							if(ruha == 252) return  Msg(playerid,"Nincs rajtad ruha!");
							if(OnDuty[playerid] == 1) return Msg(playerid,"Szolgálatban nem");
	    			    	SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktál egy ruhát a szekrénybe: %d", ruha);
							HouseInfo[house][hRuhak][fslot] = ruha;
							SetPlayerSkin(playerid, 252);
							PlayerInfo[playerid][pModel] = 252;
							HazUpdate(house, HAZ_Ruhak);
	    			    }
	    			    else
	    			    {
	    			        Msg(playerid, "Itt már van ruha!");
						}
					}
					else if(mennyit >= 1 && mennyit <= 10 && mennyit > maxcucc)
					{
						Msg(playerid, "Ez prémium slot!");
					}
				}
				else
					return SendClientMessage(playerid, COLOR_GRAD2, "Amit berakhatsz: Pénz, Kaja, Kokain, Heroin, Material(mati), Fegyver, Ruha");
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Nincs házad");
			}
		}
		return 1;
	}
	
	if(egyezik(cmd, "/mellényeim") || egyezik(cmd, "/mellenyeim"))
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(NincsHaza(playerid) && NincsHaza2(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs házad sem házkulcsod!");
			new house = HazabanVan(playerid);
			if(house == NINCS) house = HazabanVan2(playerid);
	        if(house == NINCS)
	            return Msg(playerid, "Nem vagy a házadban!");

			new maxcucc = 5;
			if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
			{
				switch(PlayerInfo[playerid][pPremiumCsomag])
				{
					case 400: maxcucc += 1;
					case 800: maxcucc += 2;
					case 1600: maxcucc += 5;
				}
			}
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "===========[Mellényeim]===========");
			for(new x = 0; x < 10; x++)
			{
				if(x < maxcucc)
				{
					new pancel = HouseInfo[house][hMellenyek][x];
					if(pancel == 0)
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Slot %d: Üres", x+1);
					else
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Slot %d: Mellény állapota: %d százalék",x+1, pancel);
				}
			}
			if(maxcucc < 10)
				SendFormatMessage(playerid, COLOR_YELLOW, "Slot %d-10: Prémium slot", maxcucc+1);
		}
	}
	if(strcmp(cmd, "/ruhaim", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(NincsHaza(playerid) && NincsHaza2(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs házad sem házkulcsod!");
			new house = HazabanVan(playerid);
			if(house == NINCS) house = HazabanVan2(playerid);
	        if(house == NINCS)
	            return Msg(playerid, "Nem vagy a házadban!");

			new maxcucc = 5;
			if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
			{
				switch(PlayerInfo[playerid][pPremiumCsomag])
				{
					case 400: maxcucc += 1;
					case 800: maxcucc += 2;
					case 1600: maxcucc += 5;
				}
			}

			SendClientMessage(playerid, COLOR_LIGHTBLUE, "===========[Ruhák]===========");
			for(new x = 0; x < 10; x++)
			{
				if(x < maxcucc)
				{
					new ruha = HouseInfo[house][hRuhak][x];
					if(ruha == 0)
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Slot %d: Üres", x+1);
					else
					{
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Slot %d: %d", x+1, ruha);
					}
				}
			}
			if(maxcucc < 10)
				SendFormatMessage(playerid, COLOR_YELLOW, "Slot %d-10: Prémium slot", maxcucc+1);
		}
	}
	if(egyezik(cmd,"/jelzés")|| egyezik(cmd,"/jelzes"))
	{
		foreach(Jatekosok,x)
		{
			if(AdminDuty[x] == 0 && ScripterDuty[x] == 0)
				SetPlayerMarkerForPlayer(playerid, x, COLOR_INVISIBLE);
		}
		return 1;
	}
	if(egyezik(cmd, "/lista"))
	{
		if(params < 1) return Msg(playerid, "/lista [Mentõ  / Tûzoltó / Szerelõ / Riporter / Töröl]");
		Msg(playerid,"Megjelõlés törlése: /jelzés");
		if(egyezik(param[1], "mentõ") || egyezik(param[1], "mento"))
		{
	  		if(LMT(playerid, FRAKCIO_MENTO) || IsOnkentes(playerid) || Admin(playerid, 1) || IsScripter(playerid))
			{
				SendClientMessage(playerid, COLOR_WHITE, "======= [Híváslista] =======");
				foreach(Jatekosok, x)
				{
					if(MentoHivas[x] == 1)
					{
						new szoveg[6] = " ";
						if(MentoLegi[x] == 2) szoveg = " nem ";
						SendFormatMessage(playerid, COLOR_GREY, "[%d]%s | Légiegység:%skell | Oka: %s | Helyszín: %s ", x, ICPlayerName(x), szoveg, Mento[x], MentoHelyszin[x]);
					}
				}
				SendClientMessage(playerid, COLOR_WHITE, "======= [Híváslista] =======");
			} else
			    Msg(playerid, "Te nem vagy Önkéntes, vagy az Országos Mentõszolgálat tagja!");
		}
		if(egyezik(param[1],"mechanic") || egyezik(param[1],"szerelõ") || egyezik(param[1],"szerelo"))
		{
			if(PlayerInfo[playerid][pSzerelo]>0 || Admin(playerid, 1) || IsScripter(playerid))
			{
				SendClientMessage(playerid, COLOR_WHITE, "======= [Híváslista] =======");
				foreach(Jatekosok, x)
				{
					if(SzereloHiv[x] == 1)
					{
						SendFormatMessage(playerid, COLOR_GREY, "[%d]%s", x, ICPlayerName(x));
					}
				}
				SendClientMessage(playerid, COLOR_WHITE, "======= [Híváslista] =======");
			} 
			else
			    Msg(playerid, "Te nem vagy az Országos szerelõk tagja!");
		}
		if(egyezik(param[1], "töröl") || egyezik(param[1], "torol"))
		{
		    if(params < 2) return Msg(playerid, "/lista Töröl [Játékos]");
	  		if(LMT(playerid, FRAKCIO_MENTO) && PlayerInfo[playerid][pRank] > 1)
			{
			    new jatekos = ReturnUser(param[2]);
			    if(MentoHivas[jatekos] == 0) return Msg(playerid, "Õ nem hívott mentõt!");
				SendFormatMessage(playerid, COLOR_ORANGE, "Töröldted a listából [%d] %s hívását!",jatekos, ICPlayerName(jatekos));
				Msg(jatekos, "Mentõs hívásod visszamondva! Ha még kell, RP-s indokkal hívd megint és várj türelmesen.");
				MentoSegit[playerid] = 0;//mento
				MentoHivas[jatekos] = 0;
				foreach(Jatekosok, p)
				{
					SetPlayerMarkerForPlayer(p, playerid, COLOR_INVISIBLE);
					if(KiertMegy[p] == jatekos) KiertMegy[p] = NINCS;
				}
			} 
			if(LMT(playerid, FRAKCIO_RIPORTER) && PlayerInfo[playerid][pRank] > 1)
			{
				new jatekos = ReturnUser(param[2]);
				if(Mobile[jatekos] != 1003) return Msg(playerid, "Õ nem akar bekerülni az élõ adásba!");
				SendFormatMessage(playerid, COLOR_ORANGE, "Töröldted a listából [%d] %s hívását!",jatekos, ICPlayerName(jatekos));
				Msg(jatekos, "A riporter elutasította az élõ adásba való bekerülésedet!");
				OnAirID = 255;
				Mobile[jatekos] = 255;
				SetPlayerSpecialAction(jatekos, SPECIAL_ACTION_STOPUSECELLPHONE);
				TeloElrak[jatekos]=TELOELRAK;
				CellTime[jatekos] = 0;
				SendClientMessage(jatekos, COLOR_GRAD2, "A telefonod beraktad a zsebedbe.");
				Cselekves(jatekos, "letette a telefonját");
			}
		}
		if(egyezik(param[1], "tûzoltó") || egyezik(param[1], "tuzolto"))
		{
			if(LMT(playerid, FRAKCIO_TUZOLTO))
			{
				SendClientMessage(playerid, COLOR_WHITE, "======= [Híváslista] =======");
				foreach(Jatekosok, x)
				{
					if(CallTuz[x])
						SendFormatMessage(playerid, COLOR_GREY, "[%d][%s] | %dmp | Oka: %s", x, ICPlayerName(x), CallTuz[x], CallTuzOk[x]);
				}
				SendClientMessage(playerid, COLOR_WHITE, "======= [Híváslista] =======");
			} else
			    Msg(playerid, "Te nem vagy Tûzoltó!");
		}
		
		if(egyezik(param[1], "riporter"))
		{
			if(!LMT(playerid, FRAKCIO_RIPORTER)) return Msg(playerid, "Nem vagy riporter!");
			SendClientMessage(playerid, COLOR_GREEN, "======= [Híváslista] =======");
			foreach(Jatekosok, x)
				if(Mobile[x] == 1003) SendFormatMessage(playerid, COLOR_WHITE, "[%d][%s]", x, ICPlayerName(x));
			SendClientMessage(playerid, COLOR_GREEN, "======= [Híváslista] =======");
		}
		return 1;
	}

	if(strcmp(cmd, "/házszéf", true) == 0 || strcmp(cmd, "/hazszef", true) == 0)
	{
	    if(Nincsbelepve(playerid)) return 1;

		if(NincsHaza(playerid) && NincsHaza2(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Nincs házad se házkulcsod!");

		if(HazabanVan(playerid) == NINCS && HazabanVan2(playerid) == NINCS)
			return Msg(playerid, "Nem vagy a házadban vagy nincs házkulcsod!");

		new house = IsAt(playerid, IsAt_Haz);

		new penz, kaja, cigis, kokain, heroin, marihuana, material, alma, arany;
		penz = HouseInfo[house][hTakings];
		cigis = HouseInfo[house][hCigi];
		kaja = HouseInfo[house][hKaja];
		kokain = HouseInfo[house][hKokain];
		heroin = HouseInfo[house][hHeroin];
		marihuana = HouseInfo[house][hMarihuana];
		material = HouseInfo[house][hMati];
		alma = HouseInfo[house][hAlma];
		arany = HouseInfo[house][hArany];
		SendClientMessage(playerid, COLOR_YELLOW, "===== Házszéfed =====");
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Pénz: %sFT | Kaja: %ddb/%ddb | Cigi: %ddb/%ddb | Material: %ddb/%sdb | Arany: %ddb", FormatNumber( penz, 0, ',' ), MAXHAZKAJA, kaja, MAXHAZCIGI, cigis, MAXHAZMATI, FormatNumber( material, 0, ',' ), arany);
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kokain: %dg/%sg | Heroin: %dg/%sg | Marihuana: %dg/%sg | Alma: %ddb/%ddb", MAXHAZKOKAIN, FormatNumber( kokain, 0, ',' ), MAXHAZHEROIN, FormatNumber( heroin, 0, ',' ), MAXHAZMARIHUANA, FormatNumber( marihuana, 0, ',' ), MAXHAZALMA, alma);
		SendClientMessage(playerid, COLOR_YELLOW, "=================================");
		
		return 1;
	}

	if(strcmp(cmd, "/kivesz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(FloodCheck(playerid)) return 1;
			new mit[256], mennyit;
			GetPlayerName(playerid, playername, sizeof(playername));

			new house = HazabanVan(playerid);
			if(house == NINCS) house = HazabanVan2(playerid);
			if(house != NINCS)
			{

				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Helyes használat: /kivesz [mit] [mennyit / slot]");
					SendClientMessage(playerid, COLOR_GRAD2, "Amit kivehetsz: Pénz, Kokain, Heroin, Marihuana, Material(mati), Cigi, Fegyver, Lõszer, Ruha, Alma, Arany");
					return 1;
				}
				mit = tmp;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Helyes használat: /kivesz [mit] [mennyit / slot]");
					SendClientMessage(playerid, COLOR_GRAD2, "Amit kivehetsz: Pénz, Kokain, Heroin, Marihuana, Material(mati), Cigi, Fegyver, Lõszer, Ruha, Alma, Arany");
					return 1;
				}
				mennyit = strval(tmp);

				if(mennyit < 1 && !egyezik(param[1], "fegyver") && !egyezik(param[1], "loszer") && !egyezik(param[1], "lõszer"))
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "Hibás mennyiség / slot");

				if(strcmp(mit, "pénz", true) == 0 || strcmp(mit, "penz", true) == 0)
				{
				    new penz = HouseInfo[house][hTakings];

				    if(HouseInfo[house][hTakings] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házszéfben nincs pénz!");

					if(HouseInfo[house][hTakings] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %sFT van! Többet nem tudsz kivenni...", FormatNumber( penz, 0, ',' ));
					    return 1;
	    			}

				    ConsumingMoney[playerid] = 1;
					GiveMoney(playerid, mennyit);
					HouseInfo[house][hTakings] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a széfbõl %sFT-t", FormatNumber( mennyit, 0, ',' ));

					format(string,sizeof(string),"[kivesz][%d]%s a %d házból %s Ft-t",playerid,PlayerName(playerid),house,FormatInt(mennyit));
					Log("Szef",string);
					
					HazUpdate(house, HAZ_Takings);
					return 1;
				}
				else if(egyezik(mit, "arany"))
				{
				    new arany = HouseInfo[house][hArany];
					if(arany < 1) return Msg(playerid, "Nincs arany a házban!");
					if(arany < mennyit) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %d arany van a házban! Többet nem tudsz kivenni...", arany);
					PlayerInfo[playerid][pArany] += mennyit;
					HouseInfo[house][hArany] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél %d aranyat a házból!", mennyit);
					format(string,sizeof(string),"[kivesz][%d]%s a %d házból %d aranyat",playerid,PlayerName(playerid),house,mennyit);
					Log("Szef",string);
					HazUpdate(house, HAZ_Arany);
					return 1;
				}
				else if(egyezik(mit, "alma"))
				{
				    new alma = HouseInfo[house][hAlma];
					if(alma < 1) return Msg(playerid, "Nincs alma a házban!");
					if(alma < mennyit) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %d alma van a házban! Többet nem tudsz kivenni...", alma);
					if((PlayerInfo[playerid][pAlma] + mennyit) > MAXALMA) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Maximum %d alma fér el a nálad!", MAXALMA);
					PlayerInfo[playerid][pAlma] += mennyit;
					HouseInfo[house][hAlma] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél %d almát a házból!", mennyit);
					format(string,sizeof(string),"[kivesz][%d]%s a %d házból %d almát",playerid,PlayerName(playerid),house,mennyit);
					Log("Szef",string);
					HazUpdate(house, HAZ_Alma);
					return 1;
				}
				else if(strcmp(mit, "kaja", true) == 0)
				{

				    if(HouseInfo[house][hKaja] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs kaja!");

					if(HouseInfo[house][hKaja] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %d van! Többet nem tudsz kivenni...", HouseInfo[house][hKaja]);
					    return 1;
	    			}

					if((PlayerInfo[playerid][pKaja] + mennyit) > MAXKAJA)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %d kaja lehet nálad!", MAXKAJA);
					    return 1;
	    			}

                    PlayerInfo[playerid][pKaja] += mennyit;
					HouseInfo[house][hKaja] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %d kaját", mennyit);
					format(string,sizeof(string),"[kivesz][%d]%s a %d házból %d kaját",playerid,PlayerName(playerid),house,mennyit);
					Log("Szef",string);

					//HazUpdate(house, "Kaja='%d'", HouseInfo[house][hKaja]);
					HazUpdate(house, HAZ_Kaja);
					return 1;
				}
				else if(strcmp(mit, "mellény", true) == 0 || strcmp(mit, "melleny", true) == 0)
				{
					new Float:armor;
					GetPlayerArmour(playerid, armor);
					if(armor > 0) return Msg(playerid, "Már van mellényed!");
					new maxcucc = 5, fslot = mennyit - 1;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: maxcucc += 1;
							case 800: maxcucc += 2;
							case 1600: maxcucc += 5;
						}
					}
	    			if(mennyit >= 1 && mennyit <= maxcucc)
	    			{
	    			    if(HouseInfo[house][hMellenyek][fslot] != 0)
	    			    {
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél egy mellényt a házszéfbõl, a mellény állapota: %d", HouseInfo[house][hMellenyek][fslot]);
							SetPlayerArmour(playerid, HouseInfo[house][hMellenyek][fslot]);
							HouseInfo[house][hMellenyek][fslot] = 0;
							
							format(string,sizeof(string),"[kivesz][%d]%s a %d házból 1 mellényt",playerid,PlayerName(playerid),house);
							Log("Szef",string);
						}
						else return Msg(playerid, "Itt nincs mellény!");
					}
				}
				else if(strcmp(mit, "cigi", true) == 0)
				{

				    if(HouseInfo[house][hCigi] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs cigi!");

					if(HouseInfo[house][hCigi] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %d van! Többet nem tudsz kivenni...", HouseInfo[house][hCigi]);
					    return 1;
	    			}

                    PlayerInfo[playerid][pCigi] += mennyit;
					HouseInfo[house][hCigi] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %d szál cigit", mennyit);
					
					format(string,sizeof(string),"[kivesz][%d]%s a %d házból %d cigit",playerid,PlayerName(playerid),house,mennyit);
					Log("Szef",string);

					//HazUpdate(house, "Cigi='%d'", HouseInfo[house][hCigi]);
					HazUpdate(house, HAZ_Cigi);
					return 1;
				}

				else if(strcmp(mit, "kokain", true) == 0)
				{

				    if(HouseInfo[house][hKokain] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs kokain!");

					if(HouseInfo[house][hKokain] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %s g van! Többet nem tudsz kivenni...", FormatNumber( HouseInfo[house][hKokain], 0, ',' ));
					    return 1;
	    			}

					if((PlayerInfo[playerid][pKokain] + mennyit) > MAXKOKAIN)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %s kokaint birsz el!", FormatNumber( MAXKOKAIN, 0, ',' ));
					    return 1;
	    			}

                    PlayerInfo[playerid][pKokain] += mennyit;
					HouseInfo[house][hKokain] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %sg kokaint", FormatNumber( mennyit, 0, ',' ));
					
					format(string,sizeof(string),"[kivesz][%d]%s a %d házból %s g kokaint",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);

					//HazUpdate(house, "Kokain='%d'", HouseInfo[house][hKokain]);
					HazUpdate(house, HAZ_Kokain);
					return 1;
				}

				else if(strcmp(mit, "heroin", true) == 0)
				{

				    if(HouseInfo[house][hHeroin] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs heroin!");

					if(HouseInfo[house][hHeroin] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %sg van! Többet nem tudsz kivenni...", FormatNumber(HouseInfo[house][hHeroin] , 0, ','));
					    return 1;
	    			}

					if((PlayerInfo[playerid][pHeroin] + mennyit) > MAXHEROIN)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %sg heroint birsz el!", FormatNumber( MAXHEROIN, 0, ',' ));
					    return 1;
	    			}

                    PlayerInfo[playerid][pHeroin] += mennyit;
					HouseInfo[house][hHeroin] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %sg heroint", FormatNumber( mennyit, 0, ',' ));
					
					format(string,sizeof(string),"[kivesz][%d]%s a %d házból %s g heroint",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);

					//HazUpdate(house, "Heroin='%d'", HouseInfo[house][hHeroin]);
					HazUpdate(house, HAZ_Heroin);
					return 1;
				}

				else if(strcmp(mit, "marihuana", true) == 0)
				{

				    if(HouseInfo[house][hMarihuana] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs marihuana!");

					if(HouseInfo[house][hMarihuana] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %sg van! Többet nem tudsz kivenni...", FormatNumber( HouseInfo[house][hMarihuana], 0, ',' ));
					    return 1;
	    			}

					if((PlayerInfo[playerid][pMarihuana] + mennyit) > MAXMARIHUANA)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %s marihuanat birsz el!", FormatNumber( MAXMARIHUANA, 0, ',' ));
					    return 1;
	    			}

                    PlayerInfo[playerid][pMarihuana] += mennyit;
					HouseInfo[house][hMarihuana] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %sg marihuánát", FormatNumber(mennyit, 0, ',' ));

					format(string,sizeof(string),"[kivesz][%d]%s a %d házból %s g marihuana",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);
					
					HazUpdate(house, HAZ_Marihuana);
					return 1;
				}

				else if(strcmp(mit, "mati", true) == 0 || strcmp(mit, "material", true) == 0)
				{

				    if(HouseInfo[house][hMati] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs mati!");

					if(HouseInfo[house][hMati] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %sdb van! Többet nem tudsz kivenni...", FormatNumber(HouseInfo[house][hMati], 0, ',' ));
					    return 1;
					}

					if((PlayerInfo[playerid][pMats] + mennyit) > MAXMATI)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %s materialt birsz el!", FormatNumber(MAXMATI, 0, ',' ));
					    return 1;
	    			}

                    PlayerInfo[playerid][pMats] += mennyit;
					HouseInfo[house][hMati] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %sdb materialt", FormatNumber(mennyit, 0, ',' ));
					
					format(string,sizeof(string),"[kivesz][%d]%s a %d házból %s db material",playerid,PlayerName(playerid),house, FormatNumber( mennyit, 0, ',' ));
					Log("Szef",string);

					//HazUpdate(house, "Material='%d'", HouseInfo[house][hMati]);
					HazUpdate(house, HAZ_Mati);
					return 1;
				}

				else if(strcmp(mit, "fegyver", true) == 0 )
				{
					if(params < 2)
						return Msg(playerid, "Használat: /kivesz fegyver [fegyvernév / ID]");
					
					if(Szint(playerid) < WEAPON_MIN_LEVEL)
						return Msg(playerid, "Túl kicsi a szinted a fegyverhasználathoz");
					
					new weapon;
					if(isNumeric(param[2]))
						weapon = strval(param[2]);
					else
						weapon = GetGunID(param[2]);
					
					if(weapon < 1 || weapon > MAX_WEAPONS)
						return Msg(playerid, "Ilyen fegyver nem létezik");
					
					if(!WeaponCanHave(playerid, weapon))
						return Msg(playerid, "Ilyen fegyvert nem viselhetsz");

					new slots = 5;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: slots += 1;
							case 800: slots += 2;
							case 1600: slots += 5;
						}
					}
					
					new slot = NINCS;
					for(new s = 0; s < slots; s++)
					{
						if(HouseInfo[house][hFegyver][s] == weapon)
							{ slot = s; break; }
					}
					
					if(slot == NINCS)
						return Msg(playerid, "Nincs ilyen fegyver a házszéfben");
						
					if(WeaponGiveWeapon(playerid, weapon, _, 0) >= 0)
					{						
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél egy fegyvert a házszéfbõl: %s", GetGunName(weapon));
						
						if(!PlayerInfo[playerid][pMember])
							format(_tmpString, 128, "[Kivesz][Civil]%s kivett egy fegyvert a %d. házból: %s-t", PlayerName(playerid), house, GetGunName(HouseInfo[house][hFegyver][slot])), Log("Fegyver", _tmpString);
						else
							format(_tmpString, 128, "[Kivesz][%s]%s kivett egy fegyvert a %d. házból: %s-t", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][2], PlayerName(playerid), house, GetGunName(HouseInfo[house][hFegyver][slot])), Log("Fegyver", _tmpString);
							
						HouseInfo[house][hFegyver][slot] = 0;
						HazUpdate(house, HAZ_Fegyver);
					}
				}
				else if(strcmp(mit, "loszer", true) == 0 || strcmp(mit, "lõszer", true) == 0)
				{
					if(params < 2)
						return Msg(playerid, "Használat: /kivesz lõszer [fegyvernév / ID] [lõszer]");
					
					new weapon = GetGunFromString(param[2]);
					if(weapon < 1 || weapon > MAX_WEAPONS)
						return Msg(playerid, "Ilyen fegyver nem létezik");
					
					if(WeaponType(weapon) == WEAPON_TYPE_HAND)
						return Msg(playerid, "Ez a fegyver nem lõszer alapú");
					
					new ammo = strval(param[3]);
					if(ammo < 1)
						return Msg(playerid, "Hibás lõszer mennyiség");
					
					new kiveve, kivenni = max(0, min(ammo, WeaponMaxAmmo(weapon) - WeaponAmmo(playerid, weapon))), t;
					if(!kivenni)
						return Msg(playerid, "Nincs hely lõszernek");
						
					new slots = 5;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: slots += 1;
							case 800: slots += 2;
							case 1600: slots += 5;
						}
					}
					
					for(new s = 0; s < slots; s++)
					{
						if(HouseInfo[house][hLoszerTipus][s] == weapon)
						{
							t = max(0, min(kivenni, HouseInfo[house][hLoszerMennyiseg][s]));
							
							kiveve += t;
							kivenni -= t;
							
							HouseInfo[house][hLoszerMennyiseg][s] -= t;
							WeaponGiveAmmo(playerid, weapon, t);
							
							if(HouseInfo[house][hLoszerMennyiseg][s] < 1)
								HouseInfo[house][hLoszerTipus][s] = 0;
								
							if(!kivenni)
								break;
						}
					}
					
					if(!kiveve)
						return Msg(playerid, "A házszéfben nincs ilyen lõszer");
					
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél %ddb %s lõszert a házszéfbõl", kiveve, GunName(weapon));
					HazUpdate(house, HAZ_Loszer);

					if(!PlayerInfo[playerid][pMember])
						format(_tmpString, 128, "[Kivesz][Civil]%s kivett %ddb %s lõszert %d. ház széfjébõl", PlayerName(playerid), kiveve, GunName(weapon), house), Log("Fegyver", _tmpString);
					else
						format(_tmpString, 128, "[Kivesz][%s]%s kivett %ddb %s lõszert %d. ház széfjébõl", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][2], PlayerName(playerid), kiveve, GunName(weapon), house), Log("Fegyver", _tmpString);
				}
				else if(strcmp(mit, "ruha", true) == 0 )
				{
					new maxcucc = 5, fslot = mennyit - 1;
					if(PlayerInfo[playerid][pPremiumCsomag] >= 400)
					{
						switch(PlayerInfo[playerid][pPremiumCsomag])
						{
							case 400: maxcucc += 1;
							case 800: maxcucc += 2;
							case 1600: maxcucc += 5;
						}
					}
	    			if(mennyit >= 1 && mennyit <= maxcucc)
	    			{
	    			    if(HouseInfo[house][hRuhak][fslot] != 0)
	    			    {
	    			    	new ruharajta =GetPlayerSkin(playerid);

							if(OnDuty[playerid] == 1) return Msg(playerid,"Szolgálatban nem");
							if(ruharajta == 252)
							{
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél egy ruhát a szekrényedbõl(Ruha: %d) és felvetted",HouseInfo[house][hRuhak][fslot]);
								SetPlayerSkin(playerid, HouseInfo[house][hRuhak][fslot]);
								PlayerInfo[playerid][pModel] = HouseInfo[house][hRuhak][fslot];
								HouseInfo[house][hRuhak][fslot] = 0;
								HazUpdate(house, HAZ_Ruhak);
							}
							else
							{
								SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél egy ruhát a szekrényedbõl(Ruha: %d) és betetted ami rajtad volt(Ruha:%d)",HouseInfo[house][hRuhak][fslot], ruharajta);
								SetPlayerSkin(playerid, HouseInfo[house][hRuhak][fslot]);
								HouseInfo[house][hRuhak][fslot] = ruharajta;
								HazUpdate(house, HAZ_Ruhak);
							}
					   }
	    			    else
	    			    {
	    			        Msg(playerid, "Itt nincs ruha!");
						}
					}
					else if(mennyit >= 1 && mennyit <= 10 && mennyit > maxcucc)
					{
						Msg(playerid, "Ez prémium slot!");
					}
				}
				else
					return SendClientMessage(playerid, COLOR_GRAD2, "Amit kivehetsz: Pénz, Kaja, Kokain, Heroin, Material(mati), Fegyver, Ruha");
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Nincs házad, vagy nem te vagy a háztulaj!");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/névjegykártya") || egyezik(cmd, "/nevjegykartya"))
	{
				// munkák, csak legálist írja ki
		new jtext[20], jtext2[20];
		new targetid=playerid;
		
		jtext = MunkaNevek(playerid, 1);
		jtext2  = MunkaNevek(playerid, 2);
		//szervezet neve
		new ttext[32];
		new ellen=0;
		if(PlayerInfo[targetid][pMember] > 0)
		{
			new szam = PlayerInfo[targetid][pMember] - 1;
			if (szam != 2 && szam != 4 && szam != 5 && szam != 7 && szam != 10 && szam != 12 && szam != 13 && szam != 16 && szam != 17)
			{
				ttext = Szervezetneve[szam][0];
				ellen=1;
			}
			else {ttext = "Civil";}
		}
		else if(PlayerInfo[targetid][pLeader] > 0)
		{
			new szam = PlayerInfo[targetid][pLeader] - 1;
			if (szam != 2 && szam != 4 && szam != 5 && szam != 7 && szam != 10 && szam != 12 && szam != 13 && szam != 16 && szam != 17)
			{
				ttext = Szervezetneve[szam][0];
				ellen=1;
			}
			else {ttext = "Civil";}
		}
		else
		ttext = "Civil";
		
		new rang = PlayerInfo[playerid][pRank], munka, szneve[32], rangja[32];
		if (ellen == 1)
		{

			if(PlayerInfo[playerid][pMember] > 0)
			{
				new szam = PlayerInfo[playerid][pMember] - 1;
				szneve = Szervezetneve[szam][0];
			}
			if(PlayerInfo[playerid][pLeader] > 0)
			{
				new szam = PlayerInfo[playerid][pLeader] - 1;
				szneve = Szervezetneve[szam][0];
			}
			
			if(PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0)
			{
				rang = PlayerInfo[playerid][pRank];
				if(PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] < MAX_FRAKCIO)
					munka = PlayerInfo[playerid][pLeader] - 1;
				else
					munka = PlayerInfo[playerid][pMember] - 1;

				if(rang <= 0) rangja = Rangok[munka][0];
				else if(rang >= 1 && rang <= 12) rangja = Rangok[munka][rang];
				else rangja = Rangok[munka][12];
			}
		}
		else {rangja="Nincs";}
		
		new player;
		if(sscanf(pms, "u", player))
		{
			Msg(playerid, "/névjegykártya [id]");
			player=playerid;
		}
		else
		{
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
			if(player == playerid) return Msg(playerid, "Ha megakarod nézni a kártyád: /névjegykártya");
			if(GetDistanceBetweenPlayers(playerid,player) > 3) return Msg(playerid, "Õ nincs a közeledben!");
		}

		SendClientMessage(player, COLOR_WHITE, "============[Névjegy kártya]============");
		SendFormatMessage(player, COLOR_LIGHTGREEN, "* %s", ICPlayerName(playerid)); //pnumber
		SendFormatMessage(player, COLOR_LIGHTGREEN, "*Munka: %s |  %s", jtext, jtext2);
		SendFormatMessage(player, COLOR_LIGHTGREEN, "*Szervezet: %s | Rang: %s", ttext, rangja);
		SendFormatMessage(player, COLOR_LIGHTGREEN, "*Telefonszám: %d",  PlayerInfo[playerid][pPnumber]);
		Cselekves(playerid, "felmutatta a névjegykártyáját valakinek.");
		
	
	}
	if(egyezik(cmd, "/tiltás") || egyezik(cmd, "/tiltas"))
	{
		if(PlayerInfo[playerid][pAdmin] < 3 && params < 1 && !IsScripter(playerid)) return Msg(playerid, "/tiltás [Jogsi / Felold]");
		if(PlayerInfo[playerid][pAdmin] > 3 && params < 1 || IsScripter(playerid) && params < 1) return Msg(playerid, "/tiltas [AS / Jogsi / Frakcio / Fegyver / Felold / Leader / Report]");

		new player, oka[128];
		new ido;
		if(egyezik(param[1], "as"))
		{
			if(PlayerInfo[playerid][pAdmin] < 5 && !IsScripter(playerid)) return Msg(playerid, "Nem használhatod!");
			if(sscanf(pms, "{s[2]}rs[128]", player, oka))
				return Msg(playerid, "Használata: /tiltás AS [Játékos] [oka]");
			else if(player == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");
			PlayerInfo[player][pAsTilt]=1;
			PlayerInfo[player][pAS] = 0;
			PlayerInfo[player][pTVJog] = 0;
			format(oka, sizeof(oka), "%s oka: %s",PlayerName(playerid),oka);
			strmid(PlayerInfo[player][pAsTiltOk], oka, 0, strlen(oka), 128);

			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s eltiltotta %s-t az Adminsegédtõl örökre! | Oka: %s >>", AdminName(playerid),PlayerName(player), PlayerInfo[player][pAsTiltOk]);
			SendFormatMessage(player, COLOR_YELLOW, "<< Eltiltottak az Adminsegéd jogtól örökre! | Oka: %s! >>",PlayerInfo[player][pAsTiltOk]);

		}
		if(egyezik(param[1], "leader"))
		{
		
			if(sscanf(pms, "{s[6]}rs[128]", player, oka))
				return Msg(playerid, "Használata: /tiltás leader [Játékos] [oka]");
			else if(player == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

			if(!Admin(playerid,1337)) return 1;
		
			PlayerInfo[player][pLeaderTilt]=1, format(string, sizeof(string), "%s eltiltottad a leaderségtõl!",PlayerName(playerid));
			
			format(oka, sizeof(oka), "%s oka: %s",PlayerName(playerid),oka);
			strmid(PlayerInfo[player][pLeaderoka], oka, 0, strlen(oka), 128);
			
			SendClientMessage(playerid, COLOR_YELLOW, string);
			return 1;
		
		}
		if(egyezik(param[1], "jogsi"))
		{

			if(sscanf(pms, "{s[5]}rds[128]", player, ido, oka))
				return Msg(playerid, "Használata: /tiltás Jogsi [Játékos] [Idõ] [Oka]");
			else if(player == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

			if(ido<1 || ido>15) return Msg(playerid, "Ilyen sok idõre nem tílthatod el!!! ((1-15))");

			if(!LMT(playerid, FRAKCIO_OKTATO) && !IsACop(playerid) && PlayerInfo[playerid][pAdmin] < 5 && !IsScripter(playerid)) return Msg(playerid, "Nem használhatod. Csak rendvédelem, és COK!");
			if(PlayerInfo[playerid][pRank] < 5 && PlayerInfo[playerid][pAdmin] < 5 && !IsScripter(playerid)) return Msg(playerid, "5-ös rangtól lehet csak!");

			if(GetDistanceBetweenPlayers(playerid,player) > 5)
			{
				SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
				return 1;
			}
			if(GetDistanceBetweenPlayers(playerid,player) > 5 ||
				PlayerToPoint(1.0, playerid, 1020.8297,-1336.3837,2469.5093) ||
				PlayerToPoint(1.0, playerid, 1025.0310,-1336.6013,2469.5093) ||
				PlayerToPoint(1.0, playerid, 1026.4802,-1340.5879,2469.5024) ||
				PlayerToPoint(1.0, playerid, 1006.2087,-1337.6930,2469.5093) ||
				PlayerToPoint(1.0, playerid, 1007.4650,-1339.7271,2469.5093))
			{
				Msg(playerid, "Csak az illetõ mellett vagy COK vezetõség számítógépénél!");
				return 1;
			}	
			if(PlayerInfo[player][pJogsiTiltIdo] >0) return Msg(playerid, "Õ már el van tiltva!!!");
			format(oka,128,"%s %s",PlayerName(playerid),oka);
			strmid(PlayerInfo[player][pJogsiTiltOk], oka, 0, strlen(oka), 128);
			PlayerInfo[player][pJogsiTiltIdo]=ido;

			format(string, sizeof(string), "%s eltiltott a vizsgáztatástól %d hónapra(óra) Oka: %s!",PlayerName(playerid),PlayerInfo[player][pJogsiTiltIdo],PlayerInfo[player][pJogsiTiltOk]);
			SendClientMessage(player, COLOR_YELLOW, string);
			format(string, sizeof(string), "%s -t eltitottad a vizsgáztatástól %d hónapra(óra) Oka: %s!",PlayerName(player),PlayerInfo[player][pJogsiTiltIdo],PlayerInfo[player][pJogsiTiltOk]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else if(egyezik(param[1], "frakcio"))
		{

			if(sscanf(pms, "{s[7]}rds[128]", player, ido, oka))
				return Msg(playerid, "Használata: /tiltás Frakció [Játékos] [Idõ] [Oka]");
			else if(player == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

			if(!Admin(playerid,5555) && !IsScripter(playerid))
				if(ido<1 || ido> 51) return Msg(playerid, "Ilyen sok idõre nem tílthatod el!!! ((1-30))");

			if(PlayerInfo[playerid][pAdmin] < 6 && !IsScripter(playerid)) return Msg(playerid, "Legalább FõAdminSegéd!");

			if(PlayerInfo[player][pFrakcioTiltIdo] >0) return Msg(playerid, "Õ már el van tiltva!!!");
			strmid(PlayerInfo[player][pFrakcioTiltOk], oka, 0, strlen(oka), 128);
			PlayerInfo[player][pFrakcioTiltIdo]=ido;

			format(string, sizeof(string), "%s eltiltott a frakcióktól %d játszott órára Oka: %s!",PlayerName(playerid),PlayerInfo[player][pFrakcioTiltIdo],PlayerInfo[player][pFrakcioTiltOk]);
			SendClientMessage(player, COLOR_YELLOW, string);

			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s eltiltotta %s-t a frakciótól %d játszott órára! | Oka: %s >>", AdminName(playerid),PlayerName(player),PlayerInfo[player][pFrakcioTiltIdo], PlayerInfo[player][pFrakcioTiltOk]);
			SendFormatMessage(player, COLOR_YELLOW, "<< Admin %s eltiltott a frakciótól %d játszott órára! | Oka: %s! >>",AdminName(playerid),PlayerInfo[player][pFrakcioTiltIdo], PlayerInfo[player][pFrakcioTiltOk]);

		}
		else if(egyezik(param[1], "fegyver"))
		{

			if(sscanf(pms, "{s[7]}rds[128]", player, ido, oka))
				return Msg(playerid, "Használata: /tiltás fegyver [Játékos] [Idõ] [Oka]");
			else if(player == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

			if(ido<1 || ido> 60) return Msg(playerid, "Ilyen sok idõre nem tílthatod el!!! ((1-60))");

			if(PlayerInfo[playerid][pAdmin] < 3 && !IsScripter(playerid)) return Msg(playerid, "Hármas admintól!");

			if(PlayerInfo[player][pFegyverTiltIdo] >0) return Msg(playerid, "Õ már el van tiltva!!!");
			strmid(PlayerInfo[player][pFegyverTiltOk], oka, 0, strlen(oka), 128);
			PlayerInfo[player][pFegyverTiltIdo]=ido;

			format(string, sizeof(string), "%s eltiltott a fegyverektõl %d játszott órára Oka: %s!",PlayerName(playerid),PlayerInfo[player][pFegyverTiltIdo],PlayerInfo[player][pFegyverTiltOk]);
			SendClientMessage(player, COLOR_YELLOW, string);

			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s eltiltotta %s-t a fegyverektõl %d játszott órára! | Oka: %s >>", AdminName(playerid),PlayerName(player),PlayerInfo[player][pFegyverTiltIdo], PlayerInfo[player][pFegyverTiltOk]);
			SendFormatMessage(player, COLOR_YELLOW, "<< Admin %s eltiltott a fegyverektõl %d játszott órára! | Oka: %s! >>",AdminName(playerid),PlayerInfo[player][pFegyverTiltIdo], PlayerInfo[player][pFegyverTiltOk]);

		}
		else if(egyezik(param[1], "report"))
		{
			if(PlayerInfo[playerid][pAdmin] < 1337 && !IsScripter(playerid)) return Msg(playerid, "Nem használhatod!");
			if(sscanf(pms, "{s[6]}rs[128]", player, oka))
				return Msg(playerid, "Használata: /tiltás report [Játékos] [oka]");
			else if(player == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");
			if(PlayerInfo[player][pReportTilt] == 1) return Msg(playerid, "Õ már el van tiltva a reporthasználattól!");
			PlayerInfo[player][pReportTilt] = 1;
			strmid(PlayerInfo[player][pReportTiltOk], oka, 0, strlen(oka), 128);

			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s eltiltotta %s-t a reporthasználattól! | Oka: %s >>", AdminName(playerid),PlayerName(player), PlayerInfo[player][pReportTiltOk]);
			SendFormatMessage(player, COLOR_YELLOW, "<< %s eltiltott a reporthasználattól! | Oka: %s >>",AdminName(playerid), PlayerInfo[player][pReportTiltOk]);
		}
		else if(egyezik(param[1], "felold"))
		{
			if(PlayerInfo[playerid][pAdmin] > 6 && params < 3 || IsScripter(playerid) && params < 3) Msg(playerid, "Használata: /tiltas felold [AS / Jogsi / Frakcio / Fegyver / Leader] [Játékos]");
			else if(PlayerInfo[playerid][pAdmin] < 6 && params < 3) Msg(playerid, "Használata: /tiltas felold Jogsi [Játékos]");

			if(egyezik(param[2], "as"))
			{
				if(PlayerInfo[playerid][pAdmin] < 6 && !IsScripter(playerid)) return Msg(playerid, "Nem vagy Fõadminsegéd!");
				giveplayerid = ReturnUser(param[3]);
				if(giveplayerid  == INVALID_PLAYER_ID)
						return Msg(playerid, "Nincs ilyen játékos");
				if(PlayerInfo[giveplayerid][pAsTilt]==0) return Msg(playerid, "Nincs eltíltva");
				PlayerInfo[giveplayerid][pAsTilt]=0;
				strmid(PlayerInfo[giveplayerid][pAsTiltOk], "ures", 0, 4, 128);

				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s levette az Adminsegéd tiltást róla: %s >>", AdminName(playerid),PlayerName(giveplayerid));
				SendFormatMessage(giveplayerid, COLOR_YELLOW, "<< Admin %s levette az Adminsegéd tiltást rólad >>",AdminName(playerid));
				return 1;
			}
			if(egyezik(param[2], "leader"))
			{
				if(PlayerInfo[playerid][pAdmin] < 1338 && !IsScripter(playerid)) return Msg(playerid, "1338-tól!");
				giveplayerid = ReturnUser(param[3]);
				if(giveplayerid  == INVALID_PLAYER_ID)
						return Msg(playerid, "Nincs ilyen játékos");
				if(PlayerInfo[giveplayerid][pLeaderTilt]==0) return Msg(playerid, "Nincs eltíltva");
				PlayerInfo[giveplayerid][pLeaderTilt]=0;
				strmid(PlayerInfo[giveplayerid][pLeaderoka], "semmi", 0, 5, 128);

				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s levette a leader tiltást róla: %s >>", AdminName(playerid),PlayerName(giveplayerid));
				SendFormatMessage(giveplayerid, COLOR_YELLOW, "<< Admin %s levette a leader tiltást rólad >>",AdminName(playerid));
				return 1;
			}
			if(egyezik(param[2], "jogsi"))
			{
				if(!LMT(playerid, FRAKCIO_OKTATO) && !IsACop(playerid) && PlayerInfo[playerid][pAdmin] < 5 && !IsScripter(playerid)) return Msg(playerid, "Nem használhatod. Csak rendvédelem, és COK!");
				if(PlayerInfo[playerid][pRank] < 7 && PlayerInfo[playerid][pAdmin] < 5 && !IsScripter(playerid)) return Msg(playerid, "7-es rangtól lehet csak!");
				giveplayerid = ReturnUser(param[3]);
				if(giveplayerid  == INVALID_PLAYER_ID)
						return Msg(playerid, "Nincs ilyen játékos");
				if(GetDistanceBetweenPlayers(playerid,giveplayerid) > 5)
				{
					SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
					return 1;
				}

				PlayerInfo[giveplayerid][pJogsiTiltIdo]=0;
				strmid(PlayerInfo[giveplayerid][pJogsiTiltOk], "semmi", 0, 5, 128);
				format(string, sizeof(string), "%s levette a tíltást a vizsgáztatástól!",PlayerName(playerid));
				SendClientMessage(giveplayerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "%s -ról levetted a tíltást!",PlayerName(giveplayerid));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				return 1;
			}
			else if(egyezik(param[2], "frakcio"))
			{

				if(PlayerInfo[playerid][pAdmin] < 6 && !IsScripter(playerid)) return Msg(playerid, "Nem vagy FõAdminsegéd");
				giveplayerid = ReturnUser(param[3]);
				if(giveplayerid  == INVALID_PLAYER_ID)
						return Msg(playerid, "Nincs ilyen játékos");

				PlayerInfo[giveplayerid][pFrakcioTiltIdo]=0;
				strmid(PlayerInfo[giveplayerid][pFrakcioTiltOk], "semmi", 0, 5, 128);

				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s levette a frakció tiltást róla: %s >>", AdminName(playerid),PlayerName(giveplayerid));
				SendFormatMessage(giveplayerid, COLOR_YELLOW, "<< Admin %s levette a frakció tiltást rólad >>",AdminName(playerid));
				return 1;
			}
			else if(egyezik(param[2], "fegyver"))
			{

				if(PlayerInfo[playerid][pAdmin] < 6 && !IsScripter(playerid)) return Msg(playerid, "Nem vagy FõAdminsegéd!");
				giveplayerid = ReturnUser(param[3]);
				if(giveplayerid  == INVALID_PLAYER_ID)
						return Msg(playerid, "Nincs ilyen játékos");

				PlayerInfo[giveplayerid][pFegyverTiltIdo]=0;
				strmid(PlayerInfo[giveplayerid][pFegyverTiltOk], "semmi", 0, 5, 128);
				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s levette a fegyver tiltást róla: %s >>", AdminName(playerid),PlayerName(giveplayerid));
				SendFormatMessage(giveplayerid, COLOR_YELLOW, "<< Admin %s levette a fegyver tiltást rólad >>",AdminName(playerid));
				return 1;
			}
			else if(egyezik(param[2], "report"))
			{
				if(PlayerInfo[playerid][pAdmin] < 1337 && !IsScripter(playerid)) return Msg(playerid, "Nem vagy Fõadmin!");
				giveplayerid = ReturnUser(param[3]);
				if(giveplayerid  == INVALID_PLAYER_ID)
						return Msg(playerid, "Nincs ilyen játékos");
				if(PlayerInfo[giveplayerid][pReportTilt]==0) return Msg(playerid, "Nincs eltiltva");
				PlayerInfo[giveplayerid][pReportTilt]=0;
				strmid(PlayerInfo[giveplayerid][pReportTiltOk], "Nincs", 0, 5, 128);

				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s levette a reporttiltást róla: %s >>", AdminName(playerid),PlayerName(giveplayerid));
				SendFormatMessage(giveplayerid, COLOR_YELLOW, "<< Admin %s újra engedélyezte, hogy reportolhass! >>",AdminName(playerid));
				return 1;
			}
		}
	}
	if(egyezik(cmd, "/tiltásom") || egyezik(cmd, "/tiltasom"))
	{
		
		SendClientMessage(playerid,COLOR_YELLOW,"====== Tiltásaid =======");
		if(PlayerInfo[playerid][pFrakcioTiltIdo] >0)
			SendFormatMessage(playerid,COLOR_YELLOW,"El vagy tiltva a frakcióktól %d hónapra(óra)! | Oka: %s",PlayerInfo[playerid][pFrakcioTiltIdo],PlayerInfo[playerid][pFrakcioTiltOk]);

		if(PlayerInfo[playerid][pJogsiTiltIdo] >0 && !egyezik(PlayerInfo[playerid][pJogsiTiltOk],"NINCS"))
			SendFormatMessage(playerid,COLOR_YELLOW,"El vagy tiltva a vizsgáztatástól %d hónapra(óra)! | Oka: %s",PlayerInfo[playerid][pJogsiTiltIdo],PlayerInfo[playerid][pJogsiTiltOk]);
			
		if(PlayerInfo[playerid][pFegyverTiltIdo] >0)
			SendFormatMessage(playerid,COLOR_YELLOW,"El vagy tiltva a fegyver használattól %d hónapra(óra)! | Oka: %s",PlayerInfo[playerid][pFegyverTiltIdo],PlayerInfo[playerid][pFegyverTiltOk]);
		if(PlayerInfo[playerid][pAsTilt] == 1 ) SendFormatMessage(playerid, COLOR_YELLOW, "El vagy tiltva az Adminsegédtõl! Oka: %s", PlayerInfo[playerid][pAsTiltOk]);
		if(PlayerInfo[playerid][pLeaderTilt] == 1 ) SendFormatMessage(playerid, COLOR_YELLOW, "El vagy tiltva a leaderségtõl! Oka: %s", PlayerInfo[playerid][pLeaderoka]);
		if(PlayerInfo[playerid][pReportTilt] == 1) SendFormatMessage(playerid, COLOR_YELLOW, "El vagy tiltva a reportolástól! Oka: %s", PlayerInfo[playerid][pReportTiltOk]);
		
		SendClientMessage(playerid,COLOR_YELLOW,"====== Tiltásaid (ha üres nincs) =======");
	}
	if(egyezik(cmd, "/favágás") || egyezik(cmd, "/favagas"))
	{
		if(!AMT(playerid, MUNKA_FAVAGO)) return Msg(playerid, "Nem vagy Favágó");
		if(params < 1) return Msg(playerid, "Használata: /favágás [kezd / hely / felpakol / szállít / lead]");
		if(egyezik(param[1], "debug"))
		{
		    if(Admin(playerid, 2))
		    {
		        new faciklus = -1;
		        for(;++faciklus < sizeof(FaAdatok);)
		        {
		            FavagoHelyek[faciklus][faallapot] = 100;
		        }
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "[Debug]: Minden fa újra generálva!");
		        return true;
		    }
		}

		if(egyezik(param[1], "lead"))
		{
		    if(IsPlayerInRangeOfPoint(playerid, 5.0, -534.2233, -189.4880, 77.9697))
			{
			    if(PlayerInfo[playerid][pFavagozik])
			    {

					if(!IsPlayerInAnyVehicle(playerid))
						return Msg(playerid, "Hova lett a kocsi?!");

					if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 578)
						return Msg(playerid, "Ezzel a jármûvel hogy akartál te fát hozni ide?!");

					if(VehicleAdatok[GetPlayerVehicleID(playerid)][_TREE_NUM_] < 5)
						return Msg(playerid, "Szerintem szállítás közben leesett pár fa!");

					SetTimerEx("FaLepakolasa", 5000, false, "ii", playerid, GetPlayerVehicleID(playerid));

					SendClientMessage(playerid, COLOR_LIGHTRED, "Nyugi haver, elkezdtük neked lepakolni a fát! Csak lazíts!");
					TogglePlayerControllable(playerid, false);
					DisablePlayerCheckpoint(playerid);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
					return 1;
				} else { SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Jelenleg nem dolgozol, vedd fel a felszerelésed! /favágás kezd"); }
			}
			else
		 	{
				SetPlayerCheckpoint(playerid, -534.2233, -189.4880, 77.9697, 2.0);
				SendClientMessage(playerid, 0xFFFFFFFF, "A fa leadásához menj a kijelölt helyre!!");
			}
		}
		if(egyezik(param[1], "kezd"))
		{
		    if(IsPlayerInRangeOfPoint(playerid, 5.0, -1970.8292, -2432.2322, 30.6250))
			{
			    if(!PlayerInfo[playerid][pFavagozik])
			    {
					
					WeaponGiveWeapon(playerid, WEAPON_CHAINSAW);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Felvetted a munkát!");

					PlayerInfo[playerid][pFavagozik] = true;

					SetPlayerSkin(playerid, 27);

					FaVagasTD = CreatePlayerTextDraw(playerid, 440.000000, 340.000000, "Állapot: ~r~100%");
					PlayerTextDrawBackgroundColor(playerid, FaVagasTD, 255);
					PlayerTextDrawFont(playerid, FaVagasTD, 3);
					PlayerTextDrawLetterSize(playerid, FaVagasTD, 0.700000, 2.000000);
					PlayerTextDrawColor(playerid, FaVagasTD, -1);
					PlayerTextDrawSetOutline(playerid, FaVagasTD, 0);
					PlayerTextDrawSetProportional(playerid, FaVagasTD, 1);
					PlayerTextDrawSetShadow(playerid, FaVagasTD, 1);

					return 1;
				} else if(PlayerInfo[playerid][pFavagozik])
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Visszamondtad a munkát!");
				    PlayerInfo[playerid][pFavagozik] = false;

				    //FegyverElvesz(playerid, 9);
				    //ResetWeapon(playerid);
					WeaponTakeWeapon(playerid, WEAPON_CHAINSAW);
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);

				    PlayerTextDrawDestroy(playerid, FaVagasTD);
				    return true;
				}
			} else {
				SetPlayerCheckpoint(playerid, -1970.8292, -2432.2322, 30.6250, 2.5);
				SendClientMessage(playerid, 0xFFFFFFFF, "A munka megkezdéséhez menj a kijelölt helyre!");
			}
		}
		else if(egyezik(param[1], "hely"))
		{
		    if((GetPlayerSkin(playerid) == 27) && (GetPlayerWeapon(playerid) == 9) && PlayerInfo[playerid][pFavagozik])
			{
				new rand = random(sizeof(FavagoHelyek));

				SetPlayerCheckpoint(playerid, FavagoHelyek[rand][fax], FavagoHelyek[rand][fay], FavagoHelyek[rand][faz], 2.0);
				//CreateDynamicCP(FavagoHelyek[rand][fax], FavagoHelyek[rand][fay], FavagoHelyek[rand][faz], 2.0, .playerid = playerid);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Kijelölve egy véletlenszerû hely!");
				Streamer_Update(playerid);
			}
            return 1;
        }
        else if(egyezik(param[2], "felpakol"))
        {
            new fa = GetClosestFa(playerid), kocsi = GetClosestVehicle(playerid);

			if((GetDistanceToFa(playerid, fa) < 5.0) && (GetPlayerDistanceFromVehicle(playerid, kocsi) < 5.0))
			{
				if(IsPlayerInAnyVehicle(playerid))
					return SendClientMessage(playerid, COLOR_LIGHTRED, "Jármûben hogy akarod?");
				if(GetVehicleModel(kocsi) != 578)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "Ezzel a jármûvel nem lehet szállítani fát!");

				if(FaAdatok[fa][faplayerid] == playerid)
				{
					if(VehicleAdatok[kocsi][_TREE_NUM_] != 5)
						VehicleAdatok[kocsi][_TREE_NUM_]++;
					else
						return SendClientMessage(playerid, COLOR_LIGHTRED, "Ez a jármû már nem tud több fát cipelni!");

					switch(VehicleAdatok[kocsi][_TREE_NUM_])
					{
						case 1:
						{
							VehicleAdatok[kocsi][_OBJECT_TREE_1_] = CreateDynamicObject(684, -0.84, -1.74, 0.08,   0.00, 0.00, 0.00);
							AttachDynamicObjectToVehicle(VehicleAdatok[kocsi][_OBJECT_TREE_1_], kocsi, -0.84, -1.74, 0.08,   0.00, 0.00, 0.00);
						}
						case 2:
						{
							VehicleAdatok[kocsi][_OBJECT_TREE_2_] = CreateDynamicObject(684, -0.01, -1.74, 0.08,   0.00, 0.00, 0.00);
							AttachDynamicObjectToVehicle(VehicleAdatok[kocsi][_OBJECT_TREE_2_], kocsi, -0.01, -1.74, 0.08,   0.00, 0.00, 0.00);
						}
						case 3:
						{
							VehicleAdatok[kocsi][_OBJECT_TREE_3_] = CreateDynamicObject(684, 0.89, -1.74, 0.08,   0.00, 0.00, 0.00);
							AttachDynamicObjectToVehicle(VehicleAdatok[kocsi][_OBJECT_TREE_3_], kocsi, 0.89, -1.74, 0.08,   0.00, 0.00, 0.00);
						}
						case 4:
						{
							VehicleAdatok[kocsi][_OBJECT_TREE_4_] = CreateDynamicObject(684, -0.44, -1.74, 0.70,   0.00, 0.00, 0.00);
							AttachDynamicObjectToVehicle(VehicleAdatok[kocsi][_OBJECT_TREE_4_], kocsi, -0.44, -1.74, 0.70,   0.00, 0.00, 0.00);
						}
						case 5:
						{
							VehicleAdatok[kocsi][_OBJECT_TREE_5_] = CreateDynamicObject(684, 0.44, -1.74, 0.70,   0.00, 0.00, 0.00);
							AttachDynamicObjectToVehicle(VehicleAdatok[kocsi][_OBJECT_TREE_5_], kocsi, 0.44, -1.74, 0.70,   0.00, 0.00, 0.00);
                            SendClientMessage(playerid, COLOR_ORANGE, "============= [ Információ ] =============");
							SendClientMessage(playerid, COLOR_LIGHTGREEN, "A jármû megtelt fával! Vidd el a lerakodó helyre! Majd ha oda értél írd be: /favágás lead");
							SetPlayerCheckpoint(playerid, -534.2233, -189.4880, 77.9697, 2.0);
							//PlayerInfo[playerid][pFavagoMunkaCP] = CreateDynamicCP(-534.2233, -189.4880, 77.9697, 8.0, .playerid = playerid, .streamdistance = 3000.0);
						}
					}
					Streamer_Update(playerid);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Fa sikeresen felkapolva!");
					FaTorol(fa);
				} else
					return SendClientMessage(playerid, COLOR_LIGHTRED, "Ez a fa nem a te tulajdonodban áll!");
			}
			else if(egyezik(param[1], "szállít") && PlayerInfo[playerid][pFavagozik])
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "** Nem vagy jármûben!");

				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 578)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Ezzel a jármûvel nem lehet fát szállítani!");

				if(VehicleAdatok[GetPlayerVehicleID(playerid)][_TREE_NUM_] != 5)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "** Csak öt darab fa után lehet szállítani! Ez áll a szerzõdésben!");

				//DestroyDynamicCP(PlayerInfo[playerid][pFavagoMunkaCP]);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "** A felettesek mindent rendben találtak! Vidd el a lerakodó helyre és ha oda értél: /favágás lead");
                SetPlayerCheckpoint(playerid, -534.2233, -189.4880, 77.9697, 8.0);
				//PlayerInfo[playerid][pFavagoMunkaCP] = CreateDynamicCP(-534.2233, -189.4880, 77.9697, 8.0, .playerid = playerid, .streamdistance = 3000.0);
			    return true;
			}
        }
	}
	if(egyezik(cmd, "/szefzar") || egyezik(cmd, "/széfzár"))
	{
		if(!IsACop(playerid)) return Msg(playerid, "Nem vagy a rendvédelem tagja");
		if(!PlayerToPoint(3, playerid, 1931.41849229, -2434.82077467, 14.1916142578)) return Msg(playerid, "Nem vagy LS bankban széf elõtt");
		if(GetPlayerVirtualWorld(playerid)!=1555) return Msg(playerid, "Azt hiszed erre nem gondoltam?");
		MoveDynamicObject(LsBankKapu, 1931.56549229, -2435.53287467, 14.6419142578,3);
		LSSzefKod=random(8000)+1000;
	}
	if(egyezik(cmd, "/széfkód") || egyezik(cmd, "/szefkod"))
	{
		if(params < 1) return Msg(playerid, "/széfkód [Jelszó]");
		if(FloodCheck(playerid)) return 1;
		if(GetPlayerVirtualWorld(playerid)!=1555) return Msg(playerid, "Azt hiszed erre nem gontoltam?");
		if(!PlayerToPoint(3, playerid, 1931.41849229, -2434.82077467, 14.1916142578)) return Msg(playerid, "Nem vagy LS bankban széf elõtt");
		if(Rob > 1) return Msg(playerid, "A bankot nem rég rabolták!");
		if(ZsarukOnline() < 4) return SendFormatMessage(playerid,COLOR_LIGHTRED,"Nem rabolhatsz, mert nincs elég online rendõr! %d < 4",ZsarukOnline());
		new nyitokod=strval(param[1]);

		if(nyitokod == LSSzefKod)
		{
			MoveDynamicObject(LsBankKapu, 1930.14799229, -2435.01617467, 14.6419142578,3);
		}
		else
		{
			Msg(playerid, "Hibás jelszó");
			CopMsg(TEAM_BLUE_COLOR, "** RIADÓ: Los Santos-ban megpróbálták kinyitni a bank széfet! **");
		}
	}
	
	if(egyezik(cmd, "/rablás") || egyezik(cmd,"/rablas"))
	{
		new result[128];

		if(PlayerToPoint(3, playerid, 1913.67269229, -2415.88067467, 13.9656142578))
		{
			if(GetPlayerVirtualWorld(playerid)!=1555) return Msg(playerid, "Azt hiszed erre nem gontoltam?");
			if(Admin(playerid,1) && Rob > 0) return SendFormatMessage(playerid,COLOR_RED,"A bankot nem rég rabolták! %d sec",Rob);
			if(Rob > 0) return Msg(playerid, "A bankot nem rég rabolták!");
			if(ZsarukOnline() < 4) return SendFormatMessage(playerid,COLOR_LIGHTRED,"Nem rabolhatsz, mert nincs elég online rendõr! %d < 4",ZsarukOnline());
			if(WeaponArmed(playerid) == 0) return Msg(playerid, "Fegyver nélkül? Senki nem fogja neked elhinni, hogy rabolni akarsz :D");
			if(LSSzefKod<1000)
				LSSzefKod = random(8000)+1000;
			format(string, sizeof(string), "Rabló ordítja: Ez egy bankrablás!! Add ide azonnal a széf kódját!! Vagy meghalsz!!!");
			ProxDetector(B_Tavol, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2, false, result);

			format(result, 128, "Pénztáros: Kérem ne bántson inkább oda adom a jelszót!. A nyitási kód: %d",LSSzefKod);
			ProxDetector(B_Tavol, BankNPC, result, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE);
			SetPlayerChatBubble(BankNPC, result, COLOR_WHITE, B_Normal, 5000);
			RabloID = playerid;
			foreach(Jatekosok,x)
			{
				if(GetPlayerVirtualWorld(playerid)==1555)
					LSBankRablok++;
			}
		}
		else if(PlayerToPoint(25, playerid, -25.884498,-185.868988,1003.546875) || PlayerToPoint(25, playerid, 6.091179,-29.271898,1003.549438) || PlayerToPoint(25, playerid, -30.946699,-89.609596,1003.546875) || PlayerToPoint(25, playerid, -25.132598,-139.066986,1003.546875) || PlayerToPoint(25, playerid, -27.312299,-29.277599,1003.557250) || PlayerToPoint(25, playerid, -26.691598,-55.714897,1003.546875))
		{
			if(FloodCheck(playerid)) return 1;
			if(LegalisSzervezetTagja(playerid)) return 1;
			if(!PlayerToPoint(1.5, playerid, -26.9514,-91.6195,1003.5469) && !PlayerToPoint(1.5, playerid, -27.9929,-186.8362,1003.5469) && !PlayerToPoint(1.5, playerid, 3.2422,-30.7006,1003.5494) && !PlayerToPoint(1.5, playerid, -27.0281,-91.6208,1003.5469) && !PlayerToPoint(1.5, playerid, -29.6898,-30.6235,1003.5573) && !PlayerToPoint(1.5, playerid, -22.5768,-57.3683,1003.5469) && !PlayerToPoint(1.5, playerid, -20.9862,-140.3356,1003.5469)) return Msg(playerid, "Menj a pénztárhoz!");
			if(Szint(playerid) < 8) return Msg(playerid, "8as szinttõl!");
			
			if(Boltrabolhato > 0) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Nem rég rabolták! (%d perc múlva lehet)",Boltrabolhato/60);
			if(ZsarukOnline() < 1) return Msg(playerid, "Nem rabolhatsz, mert nincs online rendõr!");
			if(WeaponArmed(playerid) == 0) return Msg(playerid, "Fegyver nélkül? Senki nem fogja neked elhinni, hogy rabolni akarsz :D");
			
			new Float:PPos[3], Float:legkozelebb = 5000.0, Float:tav, ajto, VW, Interior;
			Interior = GetPlayerInterior(playerid);
			VW = GetPlayerVirtualWorld(playerid);
			if(BoltRablasVW == VW) return Msg(playerid, "Ezt most rabolták üres a kassza.");
			GetPlayerPos(playerid, PPos[0], PPos[1], PPos[2]);
			for(new a = 0; a < sizeof(Ajtok); a++)
			{
				if(Ajtok[a][Van] != 1 || VW != Ajtok[a][KiVW] || Interior != Ajtok[a][KiInt]) continue;
				tav = GetDistanceBetweenPoints(PPos[0], PPos[1], PPos[2], Ajtok[a][KiX], Ajtok[a][KiY], Ajtok[a][KiZ]);
				if(tav < legkozelebb)
				{
					legkozelebb = tav;
					ajto = a;
				}
			}

			if(legkozelebb == 5000.0) return Msg(playerid, "Ez milyen bolt? O_o");
			//CopMsg(COLOR_ALLDEPT, "Riadó! Egy TT Bolt-ban megszólalt a riasztó! Minden egységnek jeleztük a GPSen a bolt bejáratát!");
			foreach(Jatekosok, b)
			{
				if(IsACop(b) && OnDuty[b])
					SetPlayerCheckpoint(b, Ajtok[ajto][BeX], Ajtok[ajto][BeY], Ajtok[ajto][BeZ], 1), SendClientMessage(b,COLOR_ALLDEPT,"Riadó! Egy TT Bolt-ban megszólalt a riasztó! Minden egységnek jeleztük a GPSen a bolt bejáratát!");
			}
			format(string, sizeof(string), "Rabló ordítja: Ez egy rablás! Azonnal ide az összes pénzt, vagy mindenki meghal!");
			ProxDetector(B_Tavol, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2, false, string);
			SetPlayerChatBubble(playerid, result, COLOR_WHITE, B_Normal, 5000);
			Cselekves(playerid, "elkezdi bepakolni a táskájába a pénzt a pénztárgépbõl.", 1);
			SendClientMessage(playerid, COLOR_DARKYELLOW, "Elkezdted kirabolni a boltot.");
			Freeze(playerid);
			ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
			
			new db;
			foreach(Jatekosok, r)
			{
				if(WeaponArmed(r) == 0 || NemMozoghat(r) || GetPlayerVirtualWorld(r) != GetPlayerVirtualWorld(playerid) || GetPlayerInterior(r) != GetPlayerInterior(playerid) || Szint(r) < 5 || PlayerInfo[r][pMegad]) continue;
				db++;
			}
			new Float:distance = GetDistanceBetweenPoints(1543.981079, -1675.703491, 13.557516, Ajtok[ajto][BeX], Ajtok[ajto][BeY], Ajtok[ajto][BeZ]); // LSPDtõl a bolt bejáratáigû
			new ido;
			if(distance < 2000)
				ido = 60;
			else if(distance < 4000)
				ido = 120;
			else
				ido = 300;
			
			SetTimerEx("Munkavege", ido*1000, false, "ddd", playerid, M_BOLTRABLAS, db);
			Boltrabolhato = 300 + ido;
			BoltRablasVW = VW;
			MunkaFolyamatban[playerid] = 1;
			format(string, 128, "[BOLTRABLÁS] %s boltot rabol, összesen %d-n vannak",PlayerName(playerid), db);
			EgyebLog(string);
		}
		else return Msg(playerid, "Nem vagy a Los Santosi Bankban vagy egy boltban!");
		return 1;
	}
	if(egyezik(cmd, "/hatarok") || egyezik(cmd,"/határok"))
	{
		if(!Admin(playerid, 1) && !IsACop(playerid) && !IsScripter(playerid)) return Msg(playerid, "A-A nem vagy rendõr!");
		
		if(params < 1) return Msg(playerid, "/határok [1-2] 1 nyit 2 zár");
		
		new nyitas=strval(param[1]);
		
		if(nyitas == 1)
		{
			Msg(playerid, "Minden határ felnyitva!");
			CopMsgFormat(TEAM_BLUE_COLOR, "[Határõr] Figyelmeztetés: %s felnyitotta az összes határt!", ICPlayerName(playerid));
			for(new k = 0; k < MAX_KAPU; k++)
			{
				if(Kapu[k][nyit] ==1)
				{
					if(Kapu[k][kMozgo])
						MoveDynamicObject(Kapu[k][kOID], ArrExt(Kapu[k][kNPos]), Kapu[k][kSpeed]);
					else
					{
						SetDynamicObjectPos(Kapu[k][kOID], ArrExt(Kapu[k][kNPos]));
						SetDynamicObjectRot(Kapu[k][kOID], ArrExt(Kapu[k][kNRPos]));
					}
				}
			}
		}
		else
		{
			Msg(playerid, "Minden határ lezárva!");
			CopMsgFormat(TEAM_BLUE_COLOR, "[Határõr] Figyelmeztetés: %s lezárta az összes határt!", ICPlayerName(playerid));
			for(new k = 0; k < MAX_KAPU; k++)
			{
				if(Kapu[k][nyit] == 1)
				{
					if(Kapu[k][kMozgo])
						MoveDynamicObject(Kapu[k][kOID], ArrExt(Kapu[k][kZPos]), Kapu[k][kSpeed]);
					else
					{
						SetDynamicObjectPos(Kapu[k][kOID], ArrExt(Kapu[k][kZPos]));
						SetDynamicObjectRot(Kapu[k][kOID], ArrExt(Kapu[k][kZRPos]));
					}
				}
			}
		}
	}
	if(egyezik(cmd, "/cross"))
	{
		if(params < 1) return Msg(playerid, "/cross [kezd / felad]");

		if(egyezik(param[1], "kezd"))
		{
			if(PlayerInfo[playerid][pCrossido]>0)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED,"Még nem lehet legközelebb %d másodperc múlva",PlayerInfo[playerid][pCrossido]);
				return 1;
			}
			if(Crosscp[playerid]>0) Msg(playerid,"Már elkezdted a pályát. Ha nem bírod add fel!!");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 468) return Msg(playerid, "Csak Sanchez-el lehet!");

			if(!PlayerToPoint(15, playerid, -1483.7454,1615.8981,1052.5313))
			{
				Msg(playerid, "Csak a Trükk pályán a megjelölt helyen lehet elkezdeni!");
				SetPlayerCheckpoint(playerid,-1483.7454,1615.8981,1052.5313, 15);
				return 1;
			}
			if(!BankkartyaFizet(playerid, 25000)) return Msg(playerid, "25 000 Ft -ba kerül elindulni rajta");
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Ülj rá az egyik motorra!");
			SendClientMessage(playerid,COLOR_YELLOW, "Menj át minnél több ponton! Ha már nem tudod folytatni /cross felad");
			SendClientMessage(playerid, COLOR_YELLOW, "Ha úgy érzed add fel /cross felad");
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 3,-1481.8949,1624.0153,1052.1832, -1484.7881,1596.6680,1061.2115,3) ;
			Crosscp[playerid]=1;
			PlayerInfo[playerid][pCrossido]=400;
		}
		if(egyezik(param[1], "felad"))
		{
			if(Crosscp[playerid]==0) return Msg(playerid,"Nem is kezdted el");
			new fizet;
			if(Crosscp[playerid]>0 && Crosscp[playerid] <= 8)
			{
				fizet= (Crosscp[playerid]-1)*100;
				PlayerInfo[playerid][pCrossido]=400;
			}
			else if(Crosscp[playerid]>8 && Crosscp[playerid] <= 15)
			{
				fizet= (Crosscp[playerid]-1)*1000;
				PlayerInfo[playerid][pCrossido]=800;
			}
			else
			{
				fizet= (Crosscp[playerid]-1)*5000;
				PlayerInfo[playerid][pCrossido]=1700;
			}
			DisablePlayerRaceCheckpoint(playerid);
			SendFormatMessage(playerid, COLOR_YELLOW, "Befejezted a trüközéseket. A mutatványaidért %d Ft-ot kaptál",fizet);
			Crosscp[playerid]=0;
			GiveMoney(playerid, fizet);
		}
	}
	if(!strcmp(cmdtext, "/flymode", true))
	{
		if(PlayerInfo[playerid][pAdmin] < 4 && !IsScripter(playerid) && (PlayerInfo[playerid][pAdmin] < 2 || AdminDuty[playerid] != 1 && !IsScripter(playerid))) return 1;
		if(Tevezik[playerid] != NINCS) return SendClientMessage(playerid, COLOR_LIGHTRED, "(( TV-zés közben nem használhatod a FlyMode-ot! ))");

		if(GetPVarType(playerid, "FlyMode"))
		{
			CancelFlyMode(playerid);
			format(string, sizeof(string), "<< Admin %s kilépett a FlyMode-ból! >>", AdminName(playerid));
			FlyModeBa[playerid] = false;
			if(PlayerInfo[playerid][pGPS])
			Radar(playerid, true);

		}
		else
		{
		    FlyModeBa[playerid] = true;
			FlyMode(playerid);
			format(string, sizeof(string), "<< Admin %s belépett a FlyMode-ba! >>", AdminName(playerid));
		}
		if(PlayerInfo[playerid][pAdmin] < 5555 && !IsScripter(playerid)) ABroadCast(COLOR_LIGHTRED, string, 1);
		return 1;
	}
	if(egyezik(cmd, "/élesít"))
	{
		if(TavoliBomba[playerid] <1) return Msg(playerid,"Nem raktál le bombát");

		new Float:x, Float:y, Float:z;
		GetVehiclePos(TavoliBomba[playerid], x, y, z);
		CreateExplosion(x, y, z, 2, 500.0);
		for(new jatekos = 0; jatekos < MAX_PLAYERS; jatekos++)
		{
			if(!IsPlayerInVehicle(jatekos, TavoliBomba[playerid])) continue;
			SetHealth(jatekos, 0);
			if(PlayerInfo[jatekos][pHeadValue] > 0)
			{
				//new string[128];
				SendFormatMessageToAll(COLOR_YELLOW, " <<< A bérgyilkos teljesítette a megbízó kérését - %s kinyírva >>> ", PlayerName(jatekos));
				format(string,128,"<< %s teljesítette a megbízást >>", PlayerInfo[playerid][pHitmanNev]);
				SendMessage(SEND_MESSAGE_HITMAN, string, COLOR_YELLOW);
				SendFormatMessage(jatekos, COLOR_LIGHTBLUE, "A megbízást teljesítetted. A cég átutalta a pénzt a számládra. (%dFt)", PlayerInfo[playerid][pHeadValue]);

				PlayerInfo[playerid][pAccount] += PlayerInfo[jatekos][pHeadValue];
				PlayerInfo[jatekos][pHeadValue] = 0;
				format(string, sizeof(string), "%s felrobbantotta %s-t", PlayerInfo[playerid][pHitmanNev],  PlayerName(jatekos));
				ABroadCast(COLOR_GREY, string, 1);
			}
		}
		TavoliBomba[playerid]=0;

	}
	if(egyezik(cmd, "/snevek"))
	{
		if(PlayerInfo[playerid][pSwattag] == 0) return Msg(playerid, "Nem használhatod ezt a parancsot.");
		if(Admin(playerid, 1) || IsScripter(playerid)) return Msg(playerid, "A-A neked ott a /nevek");
		if(Snevek[playerid])
		{
			Snevek[playerid] = false;
			foreach(Jatekosok, idx2)
					ShowPlayerNameTagForPlayer(playerid, idx2, false);
			Msg(playerid, "Nevek kikapcsolva!");
		}
		else
		{
			Snevek[playerid] = true;
			foreach(Jatekosok, idx2)
				if((PlayerInfo[idx2][pMember] != PlayerInfo[playerid][pMember]) && PlayerInfo[idx2][pSwattag] == 1)
					ShowPlayerNameTagForPlayer(playerid, idx2, true);
			Msg(playerid, "Nevek bekapcsolva!");
		}

		return 1;
	}
	if(egyezik(cmd, "/virágszedés") || egyezik(cmd, "/viragszedes"))
	{
		if(Szint(playerid) < 5) return Msg(playerid, "5ös szinttõl!");
		if(PlayerInfo[playerid][pFegyverTiltIdo] > 0) return Msg(playerid, "El vagy tiltva a fegyver használattól!");
		
		if(PlayerToPoint(5.0, playerid, 1544.4380,-1748.5099,14.0469) || PlayerToPoint(5.0, playerid, 1410.7509,-1748.0688,14.0469) || PlayerToPoint(5.0, playerid, 1931.6949,-1225.1355,20.1621) || PlayerToPoint(5.0, playerid, 1928.0077,-1174.2952,21.4147) || PlayerToPoint(5.0, playerid, 2019.2859,-1211.0620,21.4894) || PlayerToPoint(5.0, playerid, 2020.0667,-1211.4288,21.5931))
		{
			SetTimerEx("virágszedés", 24000, false, "ii", playerid);
			Msg(playerid, "Elkezdtél virágot szedni");
			Cselekves(playerid, "elkezdett virágot szedni...", 1);
			Freeze(playerid, 24000);
			ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
			
			WeaponGiveWeapon(playerid, WEAPON_FLOWER, _, 0);
		}
		else Msg(playerid, "Közeledben nincs virág!");
		
	}
	if(egyezik(cmd, "/akku") || egyezik(cmd,"/akkumulator") || egyezik(cmd, "/akkufeltöltés") || egyezik(cmd, "/akkufeltoltes"))
	{
		if(params < 1) return Msg(playerid, "/akku [Feltöltés / Megnéz]");
		if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem értelek, jármûben mégis hogy? oO");
		new jarmu = GetClosestVehicle(playerid);
		if(GetPlayerDistanceFromVehicle(playerid, jarmu) > 3.0) return Msg(playerid, "Nincs a közeledben jármû!");
		if(IsABicikli(jarmu)) return Msg(playerid, "Ebbe nincs akkumulátor!");
		if(egyezik(param[1], "feltöltés") || egyezik(param[1], "feltoltes"))
		{
		    if(PlayerInfo[playerid][pAkkuTolto] == 0) return Msg(playerid, "Nincs akkumulátor töltõd. Vehetsz az autósboltban!");
		    Msg(playerid, "Elkezdted feltölteni az akkumulátort kérlek várj.");
			Cselekves(playerid, "elkezdte feltölteni az akkumulátort...", 1);
			PlayerInfo[playerid][pAkkuTolto] = 0;
			Freeze(playerid, 60000);
			ApplyAnimation(playerid, "SCRATCHING", "scmid_l", 4.0, 1, 1, 1, 1, -1);
			SetTimerEx("Munkavege", 60000, false, "ddd", playerid, M_FELTOLT, jarmu);
		}
		if(egyezik(param[1], "megnéz") || egyezik(param[1], "megnez"))
		{
		    new Float:level = CarPart[jarmu][cAkkumulator];
			if(level >= 0.0 && level <= 10.9) 
			{ 
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "===========================================");  
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "A közeledben lévõ jármû akkumulátorának töltöttsége:"); 
				SendClientMessage(playerid, COLOR_RED, "Nagyon gyenge"); 
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "===========================================");  
			}
			else if(level >= 11.0 && level <= 40.9) 
			{ 
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "===========================================");  
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "A közeledben lévõ jármû akkumulátorának töltöttsége:"); 
				SendClientMessage(playerid, COLOR_YELLOW, "Gyenge"); 
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "===========================================");  
			}
			else if(level >= 41.0 && level <= 70.9) 
			{ 
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "===========================================");  
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "A közeledben lévõ jármû akkumulátorának töltöttsége:");  
				SendClientMessage(playerid, COLOR_GREEN, "Közepes"); 
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "===========================================");  
			}
			else if(level >= 71.0 && level <= 100.0) 
			{ 
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "===========================================");  
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "A közeledben lévõ jármû akkumulátorának töltöttsége:"); 
				SendClientMessage(playerid, COLOR_BLUE, "Magas"); 
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "===========================================");  
			}
		}
 	}
	if(egyezik(cmd, "/laptopom"))
	{
		if(PlayerInfo[playerid][pLaptop] == 0) return Msg(playerid, "Nincs laptopod!");
		if(Bortonben(playerid)) return Msg(playerid, "Börtönben nem használhatod!");
		if(params < 1)
		{
			if(AMT(playerid, MUNKA_DETEKTIV))
				Msg(playerid, "/laptopom [Netbank / Chat / find]");
			else
				Msg(playerid, "/laptopom [Netbank / Chat]");
			return 1;
		}
		if(egyezik(param[1],"power"))
		{
			if(MunkaFolyamatban[playerid] == 1) return Msg(playerid,"A-a");
			if(PlayerInfo[playerid][pLaptopBe])
			{	
				MunkaFolyamatban[playerid]=1;
				Cselekves(playerid, "kikapcsolja a gépét...");
				SetTimerEx("Munkavege", 10000, false, "ddd", playerid, M_LAPTOP_KIBE, 0);
				Msg(playerid,"A géped nekiállt kikapcsolni. Amíg nincs kikapcsolva lenyomozható!");
				return 1;
			}
			else
			{
				MunkaFolyamatban[playerid]=1;
				Cselekves(playerid, "bekapcsolja a gépét...");
				SetTimerEx("Munkavege", 10000, false, "ddd", playerid, M_LAPTOP_KIBE, 0);
				Msg(playerid,"A géped nekiállt bekapcsolni. Amíg nem indul el NEM lenyomozható!");
				return 1;
			}
		
		
		}
		if(!PlayerInfo[playerid][pLaptopBe]) return Msg(playerid, "Elõbb kapcsold be a gépedet! ((/laptopom power)");
		if(PlayerInfo[playerid][pMobilnet] == NINCS && !LaptopConnected[playerid]) return Msg(playerid, "Nincs internetelérésed!");
		Cselekves(playerid, "gépel a laptopján...");
		if(egyezik(param[1], "find") || egyezik(param[1],"lenyomoz"))
		{
			if(FloodCheck(playerid)) return 1;
			if(!AMT(playerid, MUNKA_DETEKTIV)) return Msg(playerid, "Nem vagy detektív.");
			if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 201) return Msg(playerid, "Már kerestél az elmúlt 2 percben, várnod kell.");
			if(params < 2) return Msg(playerid, "/laptopom find [ Neve / ID]");			
			giveplayerid = ReturnUser(param[2]);
			Cselekves(playerid, "keres a laptopjával...");
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(IsRyanAndFranklin(giveplayerid))
					{
						format(string,128,"[Figyelem] [%d]%s lenyomozott",playerid,PlayerName(playerid));
						SendMessage(SEND_MESSAGE_PLAYER, string, COLOR_LIGHTRED, 234);
						//Ezzel kívánom kicsit szûrni az idegesítõ nonos lenyomozásokat
					}
					if(giveplayerid == playerid) return Msg(playerid, "Mivan eltévedtél?");
					if(PlayerInfo[giveplayerid][pPnumber] == 0 && !PlayerInfo[giveplayerid][pLaptopBe] || PlayerInfo[giveplayerid][pLaptop] && !PlayerInfo[giveplayerid][pLaptop]) return Msg(playerid, "Nincs telefonja vagy laptopja!");

					if(PhoneOnline[giveplayerid]) return Msg(playerid, "Nincs találat!");
					if(Harcol[playerid]) return Msg(playerid, "A-A!");
					if(Harcol[giveplayerid]) return Msg(playerid, "Nincs találat");
					new points;
					new level = PlayerInfo[playerid][pDetSkill];
					if(level >= 0 && level <= 50)
						points = 5;
					else if(level >= 51 && level <= 100)
						points = 8;
					else if(level >= 101 && level <= 200)
						points = 10;
					else if(level >= 201 && level <= 400)
						points = 12;
					else if(level >= 401)
						points = 15;

					switch(points)
					{
						case 5:
						{
							if(random(10) > 4) return Msg(playerid,"Nem sikerült megtalálnod, próbáld újra!");
						}
						case 8:
						{
							if(random(10) > 5) return Msg(playerid,"Nem sikerült megtalálnod, próbáld újra!");
						}
						case 10:
						{
							if(random(10) > 6) return Msg(playerid,"Nem sikerült megtalálnod, próbáld újra!");
						}
						case 12:
						{
							if(random(10) > 7) return Msg(playerid,"Nem sikerült megtalálnod, próbáld újra!");
						}
						case 15:
						{
							if(random(10) > 8) return Msg(playerid,"Nem sikerült megtalálnod, próbáld újra!");
						}
					}
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(giveplayerid, X,Y,Z);
					if(IsTerno(giveplayerid))
					{
						
						new veletlen=random(15);
						SetPlayerCheckpoint(playerid, GotoPosLS[veletlen][0] ,GotoPosLS[veletlen][1] ,GotoPosLS[veletlen][2] , 6);
					}
					else
						SetPlayerCheckpoint(playerid, X,Y,Z, 6);					
					FindTime[playerid] = 1;
					FindTimePoints[playerid] = points;
					PlayerInfo[playerid][pDetSkill] ++;
					UsedFind[playerid] = 1;
					if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
						PlayerInfo[playerid][pMobilnet] += random(50);
					if(PlayerInfo[playerid][pDetSkill] == 50)
						SendClientMessage(playerid, COLOR_YELLOW, "* A detektív skilled elérte a 2es szintet!");
					else if(PlayerInfo[playerid][pDetSkill] == 100)
						SendClientMessage(playerid, COLOR_YELLOW, "* A detektív skilled elérte a 3as szintet!");
					else if(PlayerInfo[playerid][pDetSkill] == 200)
						SendClientMessage(playerid, COLOR_YELLOW, "* A detektív skilled elérte a 4es szintet!");
					else if(PlayerInfo[playerid][pDetSkill] == 400)
						SendClientMessage(playerid, COLOR_YELLOW, "* A detektív skilled elérte a 5ös szintet!");
				}
			}
			else
			{
				Msg(playerid, "A játékos nem online.");
			}
			return 1;
		}
		else if(egyezik(param[1], "netbank"))
		{
			if(params < 2) return Msg(playerid, "/laptopom netbank [ Utalás]");
   		
			if(egyezik(param[2], "utalas") || egyezik(param[2],"utalás"))
			{
				if(params < 4) return Msg(playerid, "/laptopom Netbank Utalás [Bankszámlaszám] [Összeg]");
				new Szamla = strval(param[3]), osszeg = strval(param[4]);
				if(osszeg < 10000) return Msg(playerid, "Minimum 10,000Ft");

				if(osszeg < 1 || osszeg > 100000000) return Msg(playerid, "Összeg nem lehet 1Ft-nál kissebb, és 100,000,000Ft-nál nagyobb...");

				//if(!IsNumeric(Szamla)) return Msg(playerid, "számla SZÁÁÁÁM!!!");
				
				new player = BankSzamla(Szamla), sajatszamla =playerid;
				if(player == NINCS)
					return Msg(playerid, "Nincs ilyen számla!");

				if(PlayerInfo[sajatszamla][pAccount] < osszeg) return Msg(playerid, "Ez kicsit sok lenne...");

				new koltseg = floatround(float(osszeg) * 0.01);
				if(koltseg < 500) koltseg = 500;
				BankSzef += floatround(float(koltseg) * KAMATSZORZO);

				PlayerInfo[player][pAccount] += osszeg;
				PlayerInfo[sajatszamla][pAccount] -= osszeg;
				PlayerInfo[sajatszamla][pAccount] -= koltseg;
				if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
					PlayerInfo[playerid][pMobilnet] += random(75);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Utaltál %sFt-ot neki: %s, kezelési költség %dFt (1%%)", FormatNumber( osszeg , 0, ',' ), ICPlayerName(player), koltseg);
				SendFormatMessage(player, COLOR_LIGHTRED, "ClassRPG: %s utalt %sFt-t", ICPlayerName(playerid), FormatNumber( osszeg , 0, ',' ));
				if(osszeg > 5000000)
				{
					if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
						PlayerInfo[playerid][pMobilnet] += random(200);
					Format(string, "Figyelem: %s utalt neki: %s, %sFt-t!", PlayerName(playerid), PlayerName(player), FormatNumber( osszeg , 0, ',' ));
					ABroadCast(COLOR_LIGHTRED, string, 1);
					PayLog(string);
				}
				return 1;
			}
		}
		else if(egyezik(param[1], "chat"))
		{
			if(params < 2) return Msg(playerid, "/laptopom chat [Bejelentkezés / Kijelentkezés]");

			else if(egyezik(param[2], "bejelentkezés"))
			{
				PlayerInfo[playerid][pLaptopChat] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "[Laptop Chat] Bejelentkezés.... [Laptop Chat]");
				Msg(playerid, "Bejelentkeztél a Chat programba, így látod amit írnak és te is üzenhetsz a (/lchat) parancsal!");
				Msg(playerid, "kérlek válassz egy becenevet a chatrendszerhez....(/chatnév)");

				format(string, sizeof(string), "*[Laptop Chat]%s bejelentkezett [Laptop Chat]", PlayerInfo[playerid][pChatNev]);
				SendLaptopMessage(COLOR_LIGHTBLUE, string);
				
				if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
					PlayerInfo[playerid][pMobilnet] += random(20);

			}
			else if(egyezik(param[2], "kijelentkezés"))
			{
				PlayerInfo[playerid][pLaptopChat] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "[Laptop Chat] Kijelentkezés.... [Laptop Chat]");
				Msg(playerid, "Kijelentkeztél a Chat programból, így nem látod amit írnak és te sem üzenhetsz!");
				format(string, sizeof(string), "*[Laptop Chat]%s kijelentkezett [Laptop Chat]", PlayerInfo[playerid][pChatNev]);
				SendLaptopMessage(COLOR_LIGHTBLUE, string);
				
				if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
					PlayerInfo[playerid][pMobilnet] += random(20);
			}

		}
	}
	if(egyezik(cmd, "/chatnév") || egyezik(cmd, "/chatnev"))
	{
		if(PlayerInfo[playerid][pLaptop] == 0) return Msg(playerid, "Nincs laptopod!");
		if(IsPlayerConnected(playerid))
		{
			if(params < 1) return Msg(playerid, "/chatnév [becenév]");

            new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /chatnév [Nick neved]");

			if(strlen(result) < 3)
			{
				Msg(playerid, "Minimum 3 betû");
				return 1;
			}

			strmid(PlayerInfo[playerid][pChatNev], result, 0, strlen(result), 25);
			format(string, sizeof(string), "A chatneved mostantól %s!", result);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			
			if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
				PlayerInfo[playerid][pMobilnet] += random(14);
		}
		return 1;
	}
	if(egyezik(cmd, "/lchat"))
	{
		if(PlayerInfo[playerid][pLaptop] == 0) return Msg(playerid, "Nincs laptopod!");
		if(PlayerInfo[playerid][pLaptopChat] == 0)  return Msg(playerid, "Nem vagy bejelentkezve!");
		if(IsPlayerConnected(playerid))
	    {

			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /lchat [Chat üzeneted]");

			format(string, sizeof(string), "*[Laptop Chat]%s üzenete: %s", PlayerInfo[playerid][pChatNev], result);
			
			if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
				PlayerInfo[playerid][pMobilnet] += random(10);

			SendLaptopMessage(COLOR_LIGHTBLUE, string);
		}
		return 1;
	}
	if(egyezik(cmd, "/bizutalas") || egyezik(cmd,"/bizutalás"))
	{
	    if(IsPlayerConnected(playerid))
		{
			if(params < 1) return Msg(playerid,"Használata: / bizutalás [Tulaj / Másodtulaj] [Összeg]");
			if(egyezik(param[1],"Tulaj"))
			{
				new bouse = PlayerInfo[playerid][pPbiskey];
				if (bouse == NINCS)
				{
					Msg(playerid, "Nincs bizniszed");
					return 1;
				}
				if(!PlayerToPoint(2, playerid,BizzInfo[bouse][bEntranceX],BizzInfo[bouse][bEntranceY],BizzInfo[bouse][bEntranceZ]))
				{
					Msg(playerid,"Messze vagy a bizniszedtõl");
					return 1;
				}
				if(CsatlakozottSzamla[playerid] == NINCS) return Msg(playerid, "Elöször bekell lépned egy számlára!");
				if(params < 1) return Msg(playerid, "Használata:/bizutalas tulaj [Összeg]");
				new BefizetendoOsszeg;
				BefizetendoOsszeg = strval(param[2]);
				if(BefizetendoOsszeg < 10000) return Msg(playerid, "Minimum 10,000Ft");
				new player = BankSzamla(CsatlakozottSzamla[playerid]);
				if(BankSzamla(CsatlakozottSzamla[playerid]) == NINCS) return Msg(playerid, "Hiba Történt!");


				if (BefizetendoOsszeg > BizzInfo[bouse][bTill] || BefizetendoOsszeg < 1)
				{
					Msg(playerid,"Nincs ennyi pénz a bizniszedben");
					return 1;
				}


				new UjOsszeg, RegiOsszeg, koltseg;
				koltseg = floatround(float(BefizetendoOsszeg) * 0.01);
				if(koltseg < 500) koltseg = 500;
				BankSzef += floatround(float(koltseg) * KAMATSZORZO);

				PlayerInfo[player][pAccount]+= (BefizetendoOsszeg - koltseg);
				UjOsszeg = PlayerInfo[player][pAccount];
				RegiOsszeg = PlayerInfo[player][pAccount] - BefizetendoOsszeg;
				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: A pénzt átküldted a bizniszedbõl! Bankszámla: Régi Összeg: %dFt, Új Összeg: %dFt, Kezelési költség: %dFt (1%%)", RegiOsszeg, UjOsszeg, koltseg);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: A bizniszedben maradt %dFt!", BizzInfo[bouse][bTill]);
				BizzInfo[bouse][bTill] -= BefizetendoOsszeg;
				
				BizUpdate(bouse, BIZ_Till);

				return 1;
			}
			if(egyezik(param[1],"másodtulaj") || egyezik(param[1],"masodtulaj"))
			{
				new bouse = PlayerInfo[playerid][pBizniszKulcs];
				if (bouse == NINCS)
				{
					Msg(playerid, "Nem vagy biznisz másodtulaj");
					return 1;
				}
				if(!PlayerToPoint(2, playerid,BizzInfo[bouse][bEntranceX],BizzInfo[bouse][bEntranceY],BizzInfo[bouse][bEntranceZ]))
				{
					Msg(playerid,"Messze vagy a biznisz");
					return 1;
				}
				if(CsatlakozottSzamla[playerid] == NINCS) return Msg(playerid, "Elöször bekell lépned egy számlára!");
				if(params < 1) return Msg(playerid, "Használata:/bizutalas másodtulaj [Összeg]");
				new BefizetendoOsszeg;
				BefizetendoOsszeg = strval(param[2]);
				if(BefizetendoOsszeg < 10000) return Msg(playerid, "Minimum 10,000Ft");
				new player = BankSzamla(CsatlakozottSzamla[playerid]);
				if(BankSzamla(CsatlakozottSzamla[playerid]) == NINCS) return Msg(playerid, "Hiba Történt!");


				if (BefizetendoOsszeg > BizzInfo[bouse][bTill2] || BefizetendoOsszeg < 1)
				{
					Msg(playerid,"Nincs ennyi pénz a biznisz széfedbe");
					return 1;
				}


				new UjOsszeg, RegiOsszeg, koltseg;
				koltseg = floatround(float(BefizetendoOsszeg) * 0.01);
				if(koltseg < 500) koltseg = 500;
				BankSzef += floatround(float(koltseg) * KAMATSZORZO);

				PlayerInfo[player][pAccount]+= (BefizetendoOsszeg - koltseg);
				UjOsszeg = PlayerInfo[player][pAccount];
				RegiOsszeg = PlayerInfo[player][pAccount] - BefizetendoOsszeg;
				BizzInfo[bouse][bTill2] -= BefizetendoOsszeg;
				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: A pénzt átküldted a bizniszedbõl! Bankszámla: Régi Összeg: %dFt, Új Összeg: %dFt, Kezelési költség: %dFt (1%%)", RegiOsszeg, UjOsszeg, koltseg);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: A bizniszedben maradt %dFt!", BizzInfo[bouse][bTill2]);
				BizUpdate(bouse, BIZ_Till2);

				return 1;	
			}	
		}

	}
	if(egyezik(cmd, "/maszk"))//maszk
	{
		if(params < 1)
		{
			Msg(playerid, "Használata: /maszk [felvesz/levesz/megvesz]");

			return 1;
		}
		if(egyezik(param[1], "felvesz"))
		{
			if(PlayerInfo[playerid][pMaszk] < 1) return Msg(playerid, "Nincs maszkod.");

			if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_SLOT_KENDO_MASZK))
			{
				RemovePlayerAttachedObject(playerid, ATTACH_SLOT_KENDO_MASZK);
			}

			switch(PlayerInfo[playerid][pMaszk])
			{
				case 1:
				{
					switch(GetPlayerSkin(playerid))
					{
						#define SPAO6{%0,%1,%2,%3,%4,%5} SetPlayerAttachedObject(playerid, ATTACH_SLOT_KENDO_MASZK, 19038, 2, (%0), (%1), (%2), (%3), (%4), (%5));
						case 0, 65, 74, 149, 208, 273:  SPAO6{0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}
						case 1..6, 8, 14, 16, 22, 27, 29, 33, 41..49, 82..84, 86, 87, 119, 289: SPAO6{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}
						case 7, 10: SPAO6{0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
						case 9: SPAO6{0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
						case 11..13: SPAO6{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
						case 15: SPAO6{0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
						case 17..21: SPAO6{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 23..26, 28, 30..32, 34..39, 57, 58, 98, 99, 104..118, 120..131: SPAO6{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 40: SPAO6{0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 50, 100..103, 148, 150..189, 222: SPAO6{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 51..54: SPAO6{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 55, 56, 63, 64, 66..73, 75, 76, 78..81, 133..143, 147, 190..207, 209..219, 221, 247..272, 274..288, 290..293: SPAO6{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 59..62: SPAO6{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 77: SPAO6{0.059999, 0.019999, 0.000000, 87.000000, 82.000000, 0.000000}
						case 85, 88, 89: SPAO6{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 90..97: SPAO6{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 132: SPAO6{0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 144..146: SPAO6{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
						case 220: SPAO6{0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 223, 246: SPAO6{0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}
						case 224..245: SPAO6{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 294: SPAO6{0.070000, 0.019999, 0.000000, 91.000000, 84.000000, 0.000000}
						case 295: SPAO6{0.050000, 0.019998, 0.000000, 86.000000, 82.000000, 0.000000}
						case 296..298: SPAO6{0.064999, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 299: SPAO6{0.064998, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
					}
					Msg(playerid,"Fevetted a maszkodat");
					Maszk[playerid] = 1;
				}
				case 2:
				{
					switch(GetPlayerSkin(playerid))
					{
						#define SPAO7{%0,%1,%2,%3,%4,%5} SetPlayerAttachedObject(playerid, ATTACH_SLOT_KENDO_MASZK, 19037, 2, (%0), (%1), (%2), (%3), (%4), (%5));
						case 0, 65, 74, 149, 208, 273:  SPAO7{0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}
						case 1..6, 8, 14, 16, 22, 27, 29, 33, 41..49, 82..84, 86, 87, 119, 289: SPAO7{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}
						case 7, 10: SPAO7{0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
						case 9: SPAO7{0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
						case 11..13: SPAO7{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
						case 15: SPAO7{0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
						case 17..21: SPAO7{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 23..26, 28, 30..32, 34..39, 57, 58, 98, 99, 104..118, 120..131: SPAO7{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 40: SPAO7{0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 50, 100..103, 148, 150..189, 222: SPAO7{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 51..54: SPAO7{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 55, 56, 63, 64, 66..73, 75, 76, 78..81, 133..143, 147, 190..207, 209..219, 221, 247..272, 274..288, 290..293: SPAO7{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 59..62: SPAO7{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 77: SPAO7{0.059999, 0.019999, 0.000000, 87.000000, 82.000000, 0.000000}
						case 85, 88, 89: SPAO7{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 90..97: SPAO7{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 132: SPAO7{0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 144..146: SPAO7{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
						case 220: SPAO7{0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 223, 246: SPAO7{0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}
						case 224..245: SPAO7{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 294: SPAO7{0.070000, 0.019999, 0.000000, 91.000000, 84.000000, 0.000000}
						case 295: SPAO7{0.050000, 0.019998, 0.000000, 86.000000, 82.000000, 0.000000}
						case 296..298: SPAO7{0.064999, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 299: SPAO7{0.064998, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
					}
					Msg(playerid,"Fevetted a maszkodat");
					Maszk[playerid] = 1;
				}
				case 3:
				{
					switch(GetPlayerSkin(playerid))
					{
						#define SPAO8{%0,%1,%2,%3,%4,%5} SetPlayerAttachedObject(playerid, ATTACH_SLOT_KENDO_MASZK, 19036, 2, (%0), (%1), (%2), (%3), (%4), (%5));
						case 0, 65, 74, 149, 208, 273:  SPAO8{0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}
						case 1..6, 8, 14, 16, 22, 27, 29, 33, 41..49, 82..84, 86, 87, 119, 289: SPAO8{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}
						case 7, 10: SPAO8{0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
						case 9: SPAO8{0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
						case 11..13: SPAO8{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
						case 15: SPAO8{0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
						case 17..21: SPAO8{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 23..26, 28, 30..32, 34..39, 57, 58, 98, 99, 104..118, 120..131: SPAO8{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 40: SPAO8{0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 50, 100..103, 148, 150..189, 222: SPAO8{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 51..54: SPAO8{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 55, 56, 63, 64, 66..73, 75, 76, 78..81, 133..143, 147, 190..207, 209..219, 221, 247..272, 274..288, 290..293: SPAO8{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 59..62: SPAO8{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 77: SPAO8{0.059999, 0.019999, 0.000000, 87.000000, 82.000000, 0.000000}
						case 85, 88, 89: SPAO8{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 90..97: SPAO8{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 132: SPAO8{0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 144..146: SPAO8{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
						case 220: SPAO8{0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 223, 246: SPAO8{0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}
						case 224..245: SPAO8{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 294: SPAO8{0.070000, 0.019999, 0.000000, 91.000000, 84.000000, 0.000000}
						case 295: SPAO8{0.050000, 0.019998, 0.000000, 86.000000, 82.000000, 0.000000}
						case 296..298: SPAO8{0.064999, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
						case 299: SPAO8{0.064998, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
					}
					Msg(playerid,"Fevetted a maszkodat");
					Maszk[playerid] = 1;
				}
				default: Msg(playerid,"Nincs maszkod!");
			}
		}
		if(egyezik(param[1], "levesz"))
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_SLOT_KENDO_MASZK))
        	{
        		RemovePlayerAttachedObject(playerid, ATTACH_SLOT_KENDO_MASZK);
        		Msg(playerid,"Maszk leszedve!");
				Maszk[playerid] = 0;
        	}
        	else Msg(playerid,"Nincs rajtad maszk!");
		}
		if(egyezik(param[1], "megvesz"))
		{
			if(IsAtClothShop(playerid))
			{

				if(params < 2) return Msg(playerid,"/maszk megvesz [zöld piros fehér]");
				if(!BankkartyaFizet(playerid, 5000,false)){ Msg(playerid, "Egy maszk ára 5.000Ft!"); return 1; }
				if(egyezik(param[2], "zöld"))
				{
				PlayerInfo[playerid][pMaszk] = 1;
				Msg(playerid,"Vettél egy zöld maszkot!");
				BizPenz(BIZ_RUHA, 5000);
				BankkartyaFizet(playerid, 5000);
				}
				else if(egyezik(param[2], "piros"))
				{
				PlayerInfo[playerid][pMaszk] = 2;
				Msg(playerid,"Vettél egy piros maszkot!");
				BizPenz(BIZ_RUHA, 5000);
				BankkartyaFizet(playerid, 5000);
				}
				else if(egyezik(param[2], "fehér"))
				{
				PlayerInfo[playerid][pMaszk] = 3;
				Msg(playerid,"Vettél egy fehér maszkot!");
				BizPenz(BIZ_RUHA, 5000);
				BankkartyaFizet(playerid, 5000);
				}
				else return Msg(playerid, "Nem kapható ilyen színben");

			}
			else Msg(playerid,"Nem vagy ruhaboltban");
		}
	}
	if(egyezik(cmd, "/mentõsök") || egyezik(cmd, "/mentosok"))
	{
		if(!LMT(playerid, FRAKCIO_MENTO) &&  PlayerInfo[playerid][pAdmin] < 1) return Msg(playerid, "Nem használhatod. Csak mentõsök!");
		new mentosok;

		Msg(playerid, "======================== Szolgálatban lévõ Mentõsök ======================== ", false, COLOR_LIGHTBLUE);

		foreach(Jatekosok, x)
		{
			if(PlayerInfo[x][pMember] != FRAKCIO_MENTO || OnDuty[x] == 0) continue;
			mentosok++;
			
		    
			if(MentoSegit[x] == 0) { SendFormatMessage(playerid, COLOR_GREEN, "{FFFFFF}%s {F81414}(Elérhetõ)", ICPlayerName(x)); }
			else if(MentoSegit[x] == 1) { SendFormatMessage(playerid, COLOR_PIROS, "{FFFFFF}%s {F81414}(Nem elérhetõ)", ICPlayerName(x)); }
		
		}
		if(mentosok < 1) Msg(playerid, "Jelenleg nincs szolgálatban egy mentõs sem sem!");
		Msg(playerid, "======================== Szolgálatban lévõ Mentõsök ========================  ", false, COLOR_LIGHTBLUE);
		
		return 1;
	}
	if(egyezik(cmd, "/mk") || egyezik(cmd, "/mentõskártya") || egyezik(cmd, "/mentoskartya"))
	{
		if(!LMT(playerid, FRAKCIO_MENTO)) return Msg(playerid, "Te nem vagy Mentõs!");
		if(params < 1) return Msg(playerid, "Használata: /(m)entõs(k)ártya [játékos]");
		new player = ReturnUser(param[1]);
		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
		if(GetDistanceBetweenPlayers(playerid, player) > 8.0) return Msg(playerid, "Ez a játékos nincs a közeledben!");
		new rang = PlayerInfo[playerid][pRank], munka, rangja[32];
		if(PlayerInfo[playerid][pLeader] >= 1 && PlayerInfo[playerid][pLeader] < MAX_FRAKCIO)
			munka = PlayerInfo[playerid][pLeader] - 1;
		else
			munka = PlayerInfo[playerid][pMember] - 1;

		if(rang <= 0) rangja = Rangok[munka][0];
		else if(rang >= 0 && rang <= 9) rangja = Rangok[munka][rang];
		else rangja = Rangok[munka][9];

		SendClientMessage(player, COLOR_WHITE, "=====[ OMSZ Igazolvány ]=====");
		SendClientMessage(player, COLOR_ORANGE, "Országos Mentõszolgálat");
		SendFormatMessage(player, COLOR_LIGHTGREEN, "Nev: %s", ICPlayerName(playerid));
		SendFormatMessage(player, COLOR_LIGHTGREEN, "Beosztás: %s (Rang: %d)", rangja, PlayerInfo[playerid][pRank]);
		SendClientMessage(player, COLOR_LIGHTGREEN, "Praktizál: Class City");
		if(player == playerid)
			Cselekves(playerid, "megnézte az OMSZ igazolványát");
		else
			Cselekves(playerid, "felmutatta az OMSZ igazolványát valakinek");
	}
	if(egyezik(cmd, "/sjelvény") || egyezik(cmd, "/sjelveny"))
	{
		if(PlayerInfo[playerid][pSwattag] == 0) return Msg(playerid, "Te nem vagy a SWAT egység tagja!");
		if(params < 1) return Msg(playerid, "Használata: /sjelvény [játékos]");
		new player = ReturnUser(param[1]);
		if(GetDistanceBetweenPlayers(playerid, player) > 8.0) return Msg(playerid, "Ez a játékos nincs a közeledben!");
		if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
		new rangja = PlayerInfo[playerid][pSwatRang];
		new kituntetese = PlayerInfo[playerid][pSwatKituntetes];
		SendClientMessage(player, COLOR_WHITE, "=====[ S.W.A.T. Jelvény ]=====");
		SendClientMessage(player, COLOR_ORANGE, "Special Weapons And Tactics");
		SendFormatMessage(player, COLOR_LIGHTGREEN, "Nev: %s", ICPlayerName(playerid));
		SendFormatMessage(player, COLOR_LIGHTGREEN, "Beosztás: %s (Rang: %d)", SwatRangok[rangja], PlayerInfo[playerid][pSwatRang]);
		SendFormatMessage(player, COLOR_LIGHTGREEN, "Kitüntetés: %s", SwatKituntetes[kituntetese]);
		if(player == playerid)
			Cselekves(playerid, "megnézte a SWAT jelvényét");
		else
			Cselekves(playerid, "felmutatta a SWAT jelvényét valakinek");
	}
	if(strcmp(cmd, "/skituntetes", true) == 0 || strcmp(cmd, "/skitüntetés", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		if(PlayerInfo[playerid][pSwatRang] >= 9)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /skitüntetés [playerid/PartOfName] [1-5]");
				SendClientMessage(playerid, COLOR_GRAD2, "Kitüntetések: 1. Bronz Medál | 2. Ezüst Medál | 3. Arany Medál | 4. Bíbor szív | 5. Becsület érdemrend");
				return 1;
			}
			new player;
			new level;
			player = ReturnUser(tmp);

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /skitüntetés [playerid/PartOfName] [1-5]");
				SendClientMessage(playerid, COLOR_GRAD2, "Kitüntetések: 1. Bronz Medál | 2. Ezüst Medál | 3. Arany Medál | 4. Bíbor szív | 5. Becsület érdemrend");
				return true;
			}
			level = strval(tmp);
			if(level > 5 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "1-6-ig legyen a kitüntetés száma!"); return true; }
			if(player == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos.");
			if(player == playerid) return Msg(playerid, "Persze! Majd biztos kitünteted magad... -.-");
			if(PlayerInfo[player][pSwattag] == 0) return Msg(playerid, "Neki nem adhatsz SWAT Kitüntetést, mert nem tag!");

			format(string, sizeof(string), "** SWAT: %s kitüntette %s -t | Kitüntetése: %s **", ICPlayerName(playerid), ICPlayerName(player), SwatKituntetes[level]);
			SendMessage(SEND_MESSAGE_RADIO_SWAT, string, TEAM_ORANGE_COLOR);
			SendFormatMessage(player, COLOR_LIGHTBLUE, "SWAT Kitünetést kaptál tõle: %s", ICPlayerName(playerid));
			SendFormatMessage(player, COLOR_LIGHTBLUE, "Kitüntetésed: %s", SwatKituntetes[level]);
			PlayerInfo[player][pSwatKituntetes] = level;
		}
		return true;
	}
	if(egyezik(cmd, "/shq"))
	{
		if(PlayerInfo[playerid][pSwatRang] < 8)
			return Msg(playerid, "Minimum 8-as rang!!");

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /shq [Üzeneted]");

		format(string, sizeof(string), "SWAT HQ: %s, vége", result);
		SendMessage(SEND_MESSAGE_RADIO_SWAT, string, TEAM_ORANGE_COLOR);

		return true;
	}
	if(egyezik(cmd, "/kocsi") || egyezik(cmd, "/kcs"))
	{
		if(params < 1)
		{
			Msg(playerid,"/kocsi [elakad | lámpa | riasztó | ablak | motorháztetõ | csomagtartó | neon | weapon | bepakol | kipakol]");
			Msg(playerid,"Rövídítések: /kcs [ed | lp | rt | ak | mh | cst | nn]");
			return 1;
		}
		if(egyezik(param[1], "neon") || egyezik(param[1], "nn"))//neon
		{
			if(params < 2) return Msg(playerid, "/kocsi neon [Be / Ki]");
			new kocsi, vs;
			kocsi = GetClosestVehicle(playerid);
			vs = IsAVsKocsi(kocsi);

			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			if(IsABicikli(kocsi)) return Msg(playerid, "Biciklin?");
			
			if(egyezik(param[2], "be"))
			{
				if(IsABoat(kocsi) || IsAPlane(kocsi) || IsAMotor(kocsi)) return Msg(playerid, "Szerintem nem kéne!");
				
				if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return Msg(playerid, "Csak sofõr!");
				if(!KocsibanVan[playerid]) return Msg(playerid, "Nem vagy jármûben!");
				if(Neon[kocsi] == 1) return Msg(playerid,"Már be van kapcsolva a neon!");
				if(CarInfo[vs][cNeon] < 1)	
				{
					Msg(playerid,"Nincs neon ezen a kocsin!");
					return 1;
				}
				if(CarPart[kocsi][cElektronika] >= 100.0) return Msg(playerid, "Az elektronika tönkrement, így nem tudod bekapcsolni!");

				new kocsiid =GetPlayerVehicleID(playerid);
				if(CarInfo[vs][cNeon] == 1)
				{
					NeonCar[kocsiid][0]=CreateDynamicObject(18648,0,0,0,0,0,0);//kék
					NeonCar[kocsiid][1]=CreateDynamicObject(18648,0,0,0,0,0,0);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][0], kocsiid, -0.70, 0.06, -0.58,   0.00, 0.00, 0.00);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][1], kocsiid, 0.72, 0.05, -0.60,   0.00, 0.00, 0.00);
					Cselekves(playerid,"bekapcsolta a neon-t...",1);
					Neon[kocsiid] = 1;
					CarPart[kocsiid][cElektronika] += 0.01;
				}
				else if(CarInfo[vs][cNeon] == 2)
				{
					NeonCar[kocsiid][0]=CreateDynamicObject(18647,0,0,0,0,0,0);
					NeonCar[kocsiid][1]=CreateDynamicObject(18647,0,0,0,0,0,0);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][0], kocsiid, -0.70, 0.06, -0.58,   0.00, 0.00, 0.00);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][1], kocsiid, 0.72, 0.05, -0.60,   0.00, 0.00, 0.00);
					Cselekves(playerid,"bekapcsolta a neon-t...",1);
					Neon[kocsiid] = 1;
					CarPart[kocsiid][cElektronika] += 0.01;
				}
				else if(CarInfo[vs][cNeon] == 3)
				{
					NeonCar[kocsiid][0]=CreateDynamicObject(18651,0,0,0,0,0,0);//rózsaszín
					NeonCar[kocsiid][1]=CreateDynamicObject(18651,0,0,0,0,0,0);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][0], kocsiid, -0.70, 0.06, -0.58,   0.00, 0.00, 0.00);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][1], kocsiid, 0.72, 0.05, -0.60,   0.00, 0.00, 0.00);
					Cselekves(playerid,"bekapcsolta a neon-t...",1);
					Neon[kocsiid] = 1;
					CarPart[kocsiid][cElektronika] += 0.01;
				}
				else if(CarInfo[vs][cNeon] == 4)
				{
					NeonCar[kocsiid][0]=CreateDynamicObject(18652,0,0,0,0,0,0);//fehér
					NeonCar[kocsiid][1]=CreateDynamicObject(18652,0,0,0,0,0,0);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][0], kocsiid, -0.70, 0.06, -0.58,   0.00, 0.00, 0.00);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][1], kocsiid, 0.72, 0.05, -0.60,   0.00, 0.00, 0.00);
					Cselekves(playerid,"bekapcsolta a neon-t...",1);
					Neon[kocsiid] = 1;
					CarPart[kocsiid][cElektronika] += 0.01;
				}
				else if(CarInfo[vs][cNeon] == 5)
				{
					NeonCar[kocsiid][0]=CreateDynamicObject(18649,0,0,0,0,0,0);//zöld
					NeonCar[kocsiid][1]=CreateDynamicObject(18649,0,0,0,0,0,0);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][0], kocsiid, -0.70, 0.06, -0.58,   0.00, 0.00, 0.00);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][1], kocsiid, 0.72, 0.05, -0.60,   0.00, 0.00, 0.00);
					Cselekves(playerid,"bekapcsolta a neon-t...",1);
					Neon[kocsiid] = 1;
					CarPart[kocsiid][cElektronika] += 0.01;
				}
				else if(CarInfo[vs][cNeon] == 6)
				{
					NeonCar[kocsiid][0]=CreateDynamicObject(18650,0,0,0,0,0,0);//sárga
					NeonCar[kocsiid][1]=CreateDynamicObject(18650,0,0,0,0,0,0);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][0], kocsiid, -0.70, 0.06, -0.58,   0.00, 0.00, 0.00);
					AttachDynamicObjectToVehicle(NeonCar[kocsiid][1], kocsiid, 0.72, 0.05, -0.60,   0.00, 0.00, 0.00);
					Cselekves(playerid,"bekapcsolta a neon-t...",1);
					Neon[kocsiid] = 1;
					CarPart[kocsiid][cElektronika] += 0.01;
				}
				else return SendFormatMessage(playerid, COLOR_RED,"Hiba: %d",CarInfo[vs][cNeon]);

				Streamer_Update(playerid);
				return 1;
			}
			if(egyezik(param[2], "ki"))
			{
				if(IsABoat(kocsi) || IsAPlane(kocsi) || IsAMotor(kocsi)) return Msg(playerid, "Szerintem nem kéne!");
				
				if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return Msg(playerid, "Csak sofõr!");
				if(!KocsibanVan[playerid]) return Msg(playerid, "Nem vagy jármûben!");
				if(Neon[kocsi] == 0) return Msg(playerid,"Már ki van kapcsolva a neon!");
				if(CarInfo[vs][cNeon] < 1) return Msg(playerid,"Nincs neon ezen a kocsin!");
				
				if(IsValidDynamicObject(NeonCar[kocsi][0])) DestroyDynamicObject(NeonCar[kocsi][0]), NeonCar[kocsi][0]=INVALID_OBJECT_ID;
				if(IsValidDynamicObject(NeonCar[kocsi][1])) DestroyDynamicObject(NeonCar[kocsi][1]), NeonCar[kocsi][1]=INVALID_OBJECT_ID;
				Neon[kocsi] = 0;
				Msg(playerid, "Kikapcsolva");
				Streamer_Update(playerid);
				return 1;
			}
			
			return 1;
		}
		if(egyezik(param[1],"elakad") || egyezik(param[1], "ed"))
		{
			new kocsi = GetPlayerVehicleID(playerid);
			if(!KocsibanVan[playerid]) return Msg(playerid, "Nem vagy jármûben!");
			if(CarPart[kocsi][cElektronika] >= 100.0) return Msg(playerid, "Az elektronika tönkrement, így nem tudod bekapcsolni!");
			if(IsABicikli(kocsi)) return Msg(playerid, "Biciklin index? Ez modern bicikli lehet... :)");
			if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return Msg(playerid, "Csak sofõr!");
			if(!VehicleInfo[kocsi][Kozos])
			{
				SetVehicleIndex(playerid, kocsi, true, true, true);
				VehicleInfo[kocsi][Kozos] = 1;
				CarPart[kocsi][cElektronika] += 0.01;
			}
		    else
			{
				SetVehicleIndex(playerid, kocsi, false, false, false);
				VehicleInfo[kocsi][Kozos] = 0;
			}

			//SetVehicleIndex(playerid, GetPlayerVehicleID(playerid), false, false, true);
			return 1;
		}
		if(egyezik(param[1],"lámpa") || egyezik(param[1],"lampa") || egyezik(param[1], "lp"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy jármûben!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Msg(playerid, "Nem vagy sofõr!");
			if(IsABoat(veh) || IsABicikli(veh)) return Msg(playerid, "Ebben a jármûben nem használhatod!");

			if(GetJarmu(veh, KOCSI_LAMPA) == 1)
			{
				SetJarmu(veh, KOCSI_LAMPA, 0);
				Cselekves(playerid, "kikapcsolta a lámpát");
				
				TrailerHatsoLampa(veh, false);
			}
			else
			{
				if(CarPart[veh][cAkkumulator] < 1)//akku
					return Msg(playerid, "Lemerült az akkumulátor!");//akku
				if(CarPart[veh][cElektronika] >= 100.0) return Msg(playerid, "Az elektronika tönkrement, így nem tudod bekapcsolni!");
				SetJarmu(veh, KOCSI_LAMPA, 1);
				Cselekves(playerid, "bekapcsolta a lámpát");
				CarPart[veh][cElektronika] += 0.01;
				
				TrailerHatsoLampa(veh, true);
			}
			return 1;
		}
		if(egyezik(param[1],"riasztó") || egyezik(param[1],"riaszto") || egyezik(param[1], "rt"))
		{
			if(params < 2) return Msg(playerid, "/kocsi riaszto [ Megnéz]");
			new kocsi, vs;
			kocsi = GetClosestVehicle(playerid);
			vs = IsAVsKocsi(kocsi);

			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			if(IsABicikli(kocsi)) return Msg(playerid, "Biciklin?");
			
			if(egyezik(param[2], "megnéz"))
			{
				new kozelbenlevojarmu = GetClosestVehicle(playerid);
				if(GetPlayerDistanceFromVehicle(playerid, kozelbenlevojarmu) > 3.0) return Msg(playerid, "Nagyon közel kell lenned a jármûhöz.");
				if(CarInfo[vs][cRiaszto] > 0)
				{
					if(CarInfo[vs][cRiaszto] == 1)
					{
						Msg(playerid, "Információ: 1.Szintû:Csak sípol");
					}
					else if(CarInfo[vs][cRiaszto] == 2)
					{
						Msg(playerid, "Információ: 2.Szintû:Sípol és jelez a tulajnak");
					}
					else if(CarInfo[vs][cRiaszto] == 3)
					{
						Msg(playerid, "Információ: 3.Szintû:Sípol, jelez a tulajnak és a rendõrségnek");
					}
					else if(CarInfo[vs][cRiaszto] == 4)
					{
						Msg(playerid, "Információ: 4.Szintû:Gátolja a kocsi indítását nehezen feltörhetõ!");
					}
				}
				else
				{
					Msg(playerid,"Ebben a kocsiban nincs riaszto");
				}	
			}
		}
		if(egyezik(param[1],"ablak") || egyezik(param[1], "ak"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy jármûben.");
			if(!IsABicikli(GetPlayerVehicleID(playerid)) && !Bikes(GetPlayerVehicleID(playerid)) && !IsAMotor(GetPlayerVehicleID(playerid)))
			{
				if(!AblakLent[GetPlayerVehicleID(playerid)])
				{
					Msg(playerid, "Ablak lehúzva.");
					AblakLent[GetPlayerVehicleID(playerid)] = true;
					Cselekves(playerid, "lehúzta a jármû ablakát.");
					return 1;
				}
				Msg(playerid, "Ablak felhúzva.");
				AblakLent[GetPlayerVehicleID(playerid)] = false;
				Cselekves(playerid, "felhúzta a jármû ablakát.");
				return 1;
			}
			else return Msg(playerid, "Ennek a jármûnek nincs ablaka.");

		}
		if(egyezik(param[1], "csomagtartó") || egyezik(param[1], "csomagtarto") || egyezik(param[1], "cst"))
		{
			veh = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, veh) > 5.5) return Msg(playerid, "A közeledben nincs jármû!");
			if(IsABoat(veh) || IsABicikli(veh) || IsAPlane(veh)) return Msg(playerid, "Ebben a jármûben nem használhatod!");

			if(Locked(veh)) return Msg(playerid, "A jármû zárva van");

			if(GetJarmu(veh, KOCSI_CSOMAGTARTO) == 1)
			{
				SetJarmu(veh, KOCSI_CSOMAGTARTO, 0);
				Cselekves(playerid, "bezárta a csomagtartót");
			}
			else
			{
				SetJarmu(veh, KOCSI_CSOMAGTARTO, 1);
				Cselekves(playerid, "kinyitotta a csomagtartót");
			}
			return 1;
		}
		if(egyezik(param[1], "motorhazteto") || egyezik(param[1], "motorháztetõ") || egyezik(param[1], "mh"))
		{
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy jármûben!");
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Msg(playerid, "Nem vagy sofõr!");
			if(IsABoat(veh) || IsABicikli(veh) || IsAPlane(veh)) return Msg(playerid, "Ebben a jármûben nem használhatod!");

			if(Locked(veh)) return Msg(playerid, "A jármû zárva van");

			if(GetJarmu(veh, KOCSI_MOTORHAZTETO) == 1)
			{
				SetJarmu(veh, KOCSI_MOTORHAZTETO, 0);
				Cselekves(playerid, "bezárta a motorháztetõt");
			}
			else
			{
				SetJarmu(veh, KOCSI_MOTORHAZTETO, 1);
				Cselekves(playerid, "kinyitotta a motorháztetõt");
			}
			return 1;
		}
		if(egyezik(param[1], "bepakol"))
		{
			if(params < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használata: /kocsi bepakol [cucc] [mennyit]");
				SendClientMessage(playerid, COLOR_GRAD2, "Cuccok: Cserje, Mák, Cannabis, Mûanyag, Material, Kokain, Heroin, Marihuana, Felszerelés, Alma, Töltõ, Kaja, Motorolaj");
				return 1;
			}

			if(FloodCheck(playerid)) return 1;

			new dbx = strval(param[3]);
			if(params > 2 && dbx < 1)
				return Msg(playerid, "Minimum 1db!");
			veh = GetClosestVehicle(playerid);
			new model = GetVehicleModel(veh)-400;
			if(IsABicikli(veh)) return Msg(playerid, "Na ne viccelj már -.- Biciklibe?");
			new Float:tav = GetPlayerDistanceFromVehicle(playerid, veh);
			if(tav >= 3) return SendClientMessage(playerid, COLOR_LIGHTRED, "A közeledben nincs jármû!");
			if(GetJarmu(veh, KOCSI_CSOMAGTARTO) == 0) return Msg(playerid, "Nyisd ki a csomagtartót!");
			if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Jármûben nem...");
			if(Locked(veh)) return SendClientMessage(playerid, COLOR_YELLOW, "Ez a jármû zárva van!");
			
			if(egyezik(param[2], "kaja") || egyezik(param[2], "szendvics"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				if(PlayerInfo[playerid][pKaja] < 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs nálad szendvics!");
				new darab = dbx;
				if(darab > PlayerInfo[playerid][pKaja]) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi szendvicsed!");
				if((CarTrunk[veh][cKaja] + darab) > CarTrunkSize[model][cKaja]) return SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér be a kocsiba!");
				CarTrunk[veh][cKaja] += darab;
				PlayerInfo[playerid][pKaja] -= darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %ddb szendvicset a jármûbe!", darab);
				Cselekves(playerid, "berakott pár szendvicset a jármûbe...");
			}
			if(egyezik(param[2], "cserje"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				if(PlayerInfo[playerid][pCserje] < 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs nálad Kokacserje!");
				new darab = dbx;
				if(darab > PlayerInfo[playerid][pCserje]) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Kokacserjéd!");
				if((CarTrunk[veh][cCserje] + darab) > CarTrunkSize[model][cCserje]) return SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér be a kocsiba!");
				CarTrunk[veh][cCserje] += darab;
				PlayerInfo[playerid][pCserje] -= darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d Kokacserjét a jármûbe!", darab);
				Cselekves(playerid, "berakott valamit a jármûbe...");
				
			}
			if(egyezik(param[2], "mak") || egyezik(param[2], "mák"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				if(PlayerInfo[playerid][pMak] < 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs nálad Máklevél!");
				new darab = dbx;
				if(darab > PlayerInfo[playerid][pMak]) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Mákleveled!");
				if((CarTrunk[veh][cMak] + darab) > CarTrunkSize[model][cMak]) return SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér be a kocsiba!");
				CarTrunk[veh][cMak] += darab;
				PlayerInfo[playerid][pMak] -= darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d Máklevelet a jármûbe!", darab);
				Cselekves(playerid, "berakott valamit a jármûbe...");
				
			}
			if(egyezik(param[2], "material") || egyezik(param[2], "mati"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				if(PlayerInfo[playerid][pMats] < 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs nálad Material!");
				new darab = dbx;
				if(darab > PlayerInfo[playerid][pMats]) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Materialod!");
				if((CarTrunk[veh][cMaterial] + darab) > CarTrunkSize[model][cMati]) return SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér be a kocsiba!");
				CarTrunk[veh][cMaterial] += darab;
				PlayerInfo[playerid][pMats] -= darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d materialt a jármûbe!", darab);
				Cselekves(playerid, "berakott valamit a jármûbe...");
				

				format(string, 256, "[Bepakol] [%d]%s bepakolt a %d. jármûbe %db materialt", playerid, Nev(playerid), veh, darab); Log("Szef", string);
			}
			if(egyezik(param[2], "cannabis"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				if(PlayerInfo[playerid][pCannabis] < 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs nálad Cannabis!");
				new darab = dbx;
				if(darab > PlayerInfo[playerid][pCannabis]) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Cannabisod!");
				if((CarTrunk[veh][cCannabis] + darab) > CarTrunkSize[model][cCannabis]) return SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér be a kocsiba!");
				CarTrunk[veh][cCannabis] += darab;
				PlayerInfo[playerid][pCannabis] -= darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d Cannabist a jármûbe!", darab);
				Cselekves(playerid, "berakott valamit a jármûbe...");
				
			}
			if(egyezik(param[2], "mûanyag") || egyezik(param[2], "muanyag"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				if(PlayerInfo[playerid][pMuanyag] < 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs nálad Mûanyag!");
				new darab = dbx;
				if(darab > PlayerInfo[playerid][pMuanyag]) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Mûanyagod!");
				if((CarTrunk[veh][cMuanyag] + darab) > CarTrunkSize[model][cMuanyag]) return SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér be a kocsiba!");
				CarTrunk[veh][cMuanyag] += darab;
				PlayerInfo[playerid][pMuanyag] -= darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d Mûanyagot a jármûbe!", darab);
				Cselekves(playerid, "berakott valamit a jármûbe...");
				
			}
			if(egyezik(param[2], "heroin"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				if(PlayerInfo[playerid][pHeroin] < 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs nálad Heroin!");
				new darab = dbx;
				if(darab > PlayerInfo[playerid][pHeroin]) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Heroinod!");
				if((CarTrunk[veh][cHeroin] + darab) > CarTrunkSize[model][cHeroin]) return SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér be a kocsiba!");
				CarTrunk[veh][cHeroin] += darab;
				PlayerInfo[playerid][pHeroin] -= darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d Heroint a jármûbe!", darab);
				Cselekves(playerid, "berakott valamit a jármûbe...");
				

				format(string, 256, "[Bepakol] [%d]%s bepakolt a %d. jármûbe %g heroint", playerid, Nev(playerid), veh, darab); Log("Szef", string);
			}
			if(egyezik(param[2], "kokain"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				new darab = dbx;
				if(darab > PlayerInfo[playerid][pKokain]) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Kokainod!");
				if((CarTrunk[veh][cKokain] + darab) > CarTrunkSize[model][cKokain]) return SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér be a kocsiba!");
				CarTrunk[veh][cKokain] += darab;
				PlayerInfo[playerid][pKokain] -= darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d Kokaint a jármûbe!", darab);
				Cselekves(playerid, "berakott valamit a jármûbe...");
				

				format(string, 256, "[Bepakol] [%d]%s bepakolt a %d. jármûbe %g kokaint", playerid, Nev(playerid), veh, darab); Log("Szef", string);
			}
			if(egyezik(param[2], "marihuana"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				if(PlayerInfo[playerid][pMarihuana] < 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs nálad Marihuana!");
				new darab = dbx;
				if(darab > PlayerInfo[playerid][pMarihuana]) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Marihuanád!");
				if((CarTrunk[veh][cMarihuana] + darab) > CarTrunkSize[model][cMarihuana]) return SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér be a kocsiba!");
				CarTrunk[veh][cMarihuana] += darab;
				PlayerInfo[playerid][pMarihuana] -= darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d Marihuanát a jármûbe!", darab);
				Cselekves(playerid, "berakott valamit a jármûbe...");
				

				format(string, 256, "[Bepakol] [%d]%s bepakolt a %d. jármûbe %g marihuanat", playerid, Nev(playerid), veh, darab); Log("Szef", string);
			}
			if(egyezik(param[2], "felszerelés") || egyezik(param[2], "felszereles"))
			{
				if(veh == 0 || IsFrakcioKocsi(veh) != 2) return Msg(playerid, "Ez nem FBI-os kocsi!");
				if(!LMT(playerid, FRAKCIO_FBI)) return Msg(playerid, "Nem vagy FBI ügynök!");
				if(CarTrunk[veh][cFegyverCsomag] >= CarTrunkSize[model][cFelszereles]) return Msg(playerid, "Ebbe a kocsiba már nem fér el több felszerelés!");
				new fegyo, loszer, Float:armor;
				GetPlayerArmour(playerid, armor);
				if(armor < 100) return Msg(playerid, "Ez a felszerelés már nem teljes!");
				GetPlayerWeaponData(playerid, aWeaponSlotok[3], fegyo, loszer);
				if(fegyo != 3) return Msg(playerid, "Ez a felszerelés már nem teljes!");
				GetPlayerWeaponData(playerid, aWeaponSlotok[17], fegyo, loszer);
				if(fegyo != 17 || loszer < 15) return Msg(playerid, "Ez a felszerelés már nem teljes!");
				GetPlayerWeaponData(playerid, aWeaponSlotok[24], fegyo, loszer);
				if(fegyo != 24 || loszer < 70) return Msg(playerid, "Ez a felszerelés már nem teljes!");
				GetPlayerWeaponData(playerid, aWeaponSlotok[29], fegyo, loszer);
				if(fegyo != 29 || loszer < 300) return Msg(playerid, "Ez a felszerelés már nem teljes!");
				GetPlayerWeaponData(playerid, aWeaponSlotok[31], fegyo, loszer);
				if(fegyo != 31 || loszer < 200) return Msg(playerid, "Ez a felszerelés már nem teljes!");
				GetPlayerWeaponData(playerid, aWeaponSlotok[41], fegyo, loszer);
				if(fegyo != 41 || loszer < 2000) return Msg(playerid, "Ez a felszerelés már nem teljes!");
				GetPlayerWeaponData(playerid, aWeaponSlotok[34], fegyo, loszer);
				if(fegyo != 34 || loszer < 150) return Msg(playerid, "Ez a felszerelés már nem teljes!");
				GetPlayerWeaponData(playerid, aWeaponSlotok[27], fegyo, loszer);
				if(fegyo != 27 || loszer < 150) return Msg(playerid, "Ez a felszerelés már nem teljes!");
				CarTrunk[veh][cFegyverCsomag]++;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktad a felszerelést a kocsiba, most összesen %d darab van benne!", CarTrunk[veh][cFegyverCsomag]);
				SetPlayerArmour(playerid, 0);
				//ResetWeapon(playerid);
				WeaponResetAll(playerid);
				Cselekves(playerid, "berakta a felszerelését a jármûbe", 0);
				
			}
			if(egyezik(param[2], "alma"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				if(PlayerInfo[playerid][pAlma] < 1) return Msg(playerid,"Nincs nálad Alma!");
				new darab = dbx;
				if(darab > PlayerInfo[playerid][pAlma]) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Almád!");
				if((CarTrunk[veh][cAlma] + darab) > CarTrunkSize[model][cAlma]) return Msg(playerid,"Ennyi nem fér be a kocsiba!");
				CarTrunk[veh][cAlma] += darab;
				PlayerInfo[playerid][pAlma] -= darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Beraktál %d Almát a jármûbe!", darab);
				Cselekves(playerid, "berakott valamit a jármûbe...");
				
			}
			if(egyezik(param[2], "töltõ") || egyezik(param[2],"tolto"))
			{
				if(PlayerInfo[playerid][pAkkuTolto] < 1) return Msg(playerid,"Nincs Akkumulátor töltõd!");
				if(CarTrunk[veh][cTolto] >= CarTrunkSize[model][cTolto]) return Msg(playerid, "Nem fér bele ennyi!");
				CarTrunk[veh][cTolto] ++;
				PlayerInfo[playerid][pAkkuTolto] --;
				Msg(playerid,"Beraktál egy akkumulátor töltõt a kocsiba!");
				Cselekves(playerid, "berakott valamit a jármûbe...");
				
			}
			if(egyezik(param[2], "motorolaj") || egyezik(param[2], "olaj"))
			{
				if(PlayerInfo[playerid][pMotorolaj] < 1) return Msg(playerid,"Nincs Motorolajad!");
				if(CarTrunk[veh][cOlaj] >= CarTrunkSize[model][cOlaj]) return Msg(playerid, "Nem fér bele ennyi!");
				CarTrunk[veh][cOlaj] ++;
				PlayerInfo[playerid][pMotorolaj] --;
				Msg(playerid,"Beraktál egy motorolajat a kocsiba!");
				Cselekves(playerid, "berakott valamit a jármûbe...");
			}
			
			SaveCarTrunk(veh);
			return 1;
		}
		if(egyezik(param[1], "kipakol"))
		{
			if(params < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használata: /kipakol [cucc] ");
				SendClientMessage(playerid, COLOR_GRAD2, "Cuccok: Cserje, Mák, Cannabis, Mûanyag, Material, Heroin, Kokain, Marihuana, Felszerelés, Alma, Töltõ, Kaja, Motorolaj");
				return 1;
			}

			if(FloodCheck(playerid)) return 1;

			new dbx = strval(param[3]);
			if(params > 2 && dbx < 1)
				return Msg(playerid, "Minimum 1db!");

			veh = GetClosestVehicle(playerid);
			if(IsABicikli(veh)) return Msg(playerid, "Na ne viccelj már -.- Biciklibe?");
			new Float:tav = GetPlayerDistanceFromVehicle(playerid, veh);
			if(tav >= 3) return SendClientMessage(playerid, COLOR_LIGHTRED, "A közeledben nincs jármû!");
			if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Jármûben nem...");
			if(GetJarmu(veh, KOCSI_CSOMAGTARTO) == 0) return Msg(playerid, "Nyisd ki a csomagtartót!");
			if(Locked(veh)) return SendClientMessage(playerid, COLOR_YELLOW, "Ez a kocsi zárva van!");
			if(Almaszedeskozbe[veh] == 1) return Msg(playerid, "A kocsiba éppen almát szednek....");
			
			if(egyezik(param[2], "kaja") || egyezik(param[2], "szendvics"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				new darab = dbx;
				if(CarTrunk[veh][cKaja] <= 0) return SendClientMessage(playerid, COLOR_YELLOW, "A kocsiban nincs szendvics!");
				if(PlayerInfo[playerid][pKaja] >= MAXKAJA) return SendClientMessage(playerid, COLOR_LIGHTRED, "Tele vagy!");
				if(CarTrunk[veh][cKaja] < darab) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi szendvics a kocsiban!");
				if((PlayerInfo[playerid][pKaja]+darab) > MAXKAJA) return Msg(playerid, "Ennyi nem fér el nálad!");
				CarTrunk[veh][cKaja] -= darab;
				PlayerInfo[playerid][pKaja] += darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél %ddb szendvicset a jármûbõl!", darab);
				Cselekves(playerid, "kivett néhány szendvicset a jármûbõl...");
			}
			if(egyezik(param[2], "cserje"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				new darab = dbx;
				if(CarTrunk[veh][cCserje] <= 0) return SendClientMessage(playerid, COLOR_YELLOW, "A kocsiban nincs Kokacserje!");
				if(PlayerInfo[playerid][pCserje] >= MAXCSERJE) return SendClientMessage(playerid, COLOR_LIGHTRED, "Tele vagy!");
				if(CarTrunk[veh][cCserje] < darab) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Kokacserje a kocsiban!");
				if((PlayerInfo[playerid][pCserje]+darab) > MAXCSERJE) return Msg(playerid, "Ennyi nem fér el nálad!");
				CarTrunk[veh][cCserje] -= darab;
				PlayerInfo[playerid][pCserje] += darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél %d Kokacserjét a jármûbõl!", darab);
				Cselekves(playerid, "kivett valamit a jármûbõl...");
				
			}
			if(egyezik(param[2], "mak") || egyezik(param[2], "mák"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				new darab = dbx;
				if(CarTrunk[veh][cMak] <= 0) return SendClientMessage(playerid, COLOR_YELLOW, "A kocsiban nincs Máklevél!");
				if(PlayerInfo[playerid][pMak] >= MAXMAK) return SendClientMessage(playerid, COLOR_LIGHTRED, "Tele vagy!");
				if(CarTrunk[veh][cMak] < darab) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Máklevél a kocsiban!");
				if((PlayerInfo[playerid][pMak]+darab) > MAXMAK) return Msg(playerid, "Ennyi nem fér el nálad!");
				CarTrunk[veh][cMak] -= darab;
				PlayerInfo[playerid][pMak] += darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél %d Máklevelet a jármûbõl!", darab);
				Cselekves(playerid, "kivett valamit a jármûbõl...");
				
			}
			if(egyezik(param[2], "cannabis"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				new darab = dbx;
				if(CarTrunk[veh][cCannabis] <= 0) return SendClientMessage(playerid, COLOR_YELLOW, "A kocsiban nincs Cannabis!");
				if(PlayerInfo[playerid][pCannabis] >= MAXCANNABIS) return SendClientMessage(playerid, COLOR_LIGHTRED, "Tele vagy!");
				if(CarTrunk[veh][cCannabis] < darab) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Cannabis a kocsiban!");
				if((PlayerInfo[playerid][pCannabis]+darab) > MAXCANNABIS) return Msg(playerid, "Ennyi nem fér el nálad!");
				CarTrunk[veh][cCannabis] -= darab;
				PlayerInfo[playerid][pCannabis] += darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél %d Cannabist a jármûbõl!", darab);
				Cselekves(playerid, "kivett valamit a jármûbõl...");
				
			}
			if(egyezik(param[2], "mûanyag") || egyezik(param[2], "muanyag"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				new darab = dbx;
				if(CarTrunk[veh][cMuanyag] <= 0) return SendClientMessage(playerid, COLOR_YELLOW, "A kocsiban nincs Mûanyag!");
				if(PlayerInfo[playerid][pMuanyag] >= MAXMUANYAG) return SendClientMessage(playerid, COLOR_LIGHTRED, "Tele vagy!");
				if(CarTrunk[veh][cMuanyag] < darab) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Mûanyag a kocsiban!");
				if((PlayerInfo[playerid][pMuanyag]+darab) > MAXMUANYAG) return Msg(playerid, "Ennyi nem fér el nálad!");
				CarTrunk[veh][cMuanyag] -= darab;
				PlayerInfo[playerid][pMuanyag] += darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél %d Mûanyagot a jármûbõl!", darab);
				Cselekves(playerid, "kivett valamit a jármûbõl...");
				
			}
			if(egyezik(param[2], "Material") || egyezik(param[2], "Mati"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				new darab = dbx;
				if(CarTrunk[veh][cMaterial] <= 0) return SendClientMessage(playerid, COLOR_YELLOW, "A kocsiban nincs Material!");
				if(PlayerInfo[playerid][pMats] >= MAXMATI) return SendClientMessage(playerid, COLOR_LIGHTRED, "Tele vagy!");
				if(CarTrunk[veh][cMaterial] < darab) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Material a kocsiban!");
				if((PlayerInfo[playerid][pMats]+darab) > MAXMATI) return Msg(playerid, "Ennyi nem fér el nálad!");
				CarTrunk[veh][cMaterial] -= darab;
				PlayerInfo[playerid][pMats] += darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél %d Materialt a jármûbõl!", darab);
				Cselekves(playerid, "kivett valamit a jármûbõl...");
				

				format(string, 256, "[Kipakol] [%d]%s kipakolt a %d. jármûbõl %db materialt", playerid, Nev(playerid), veh, darab); Log("Szef", string);
			}
			if(egyezik(param[2], "Heroin"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				new darab = dbx;
				if(CarTrunk[veh][cHeroin] <= 0) return SendClientMessage(playerid, COLOR_YELLOW, "A kocsiban nincs Heroin!");
				if(PlayerInfo[playerid][pHeroin] >= MAXHEROIN) return SendClientMessage(playerid, COLOR_LIGHTRED, "Tele vagy!");
				if(CarTrunk[veh][cHeroin] < darab) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Heroin a kocsiban!");
				if((PlayerInfo[playerid][pHeroin]+darab) > MAXHEROIN) return Msg(playerid, "Ennyi nem fér el nálad!");
				CarTrunk[veh][cHeroin] -= darab;
				PlayerInfo[playerid][pHeroin] += darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél %d Heroint a jármûbõl!", darab);
				Cselekves(playerid, "kivett valamit a jármûbõl...");
				

				format(string, 256, "[Kipakol] [%d]%s kipakolt a %d. jármûbõl %g heroint", playerid, Nev(playerid), veh, darab); Log("Szef", string);
			}

			if(egyezik(param[2], "Kokain"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				new darab = dbx;
				if(CarTrunk[veh][cKokain] <= 0) return SendClientMessage(playerid, COLOR_YELLOW, "A kocsiban nincs Kokain!");
				if(PlayerInfo[playerid][pKokain] >= MAXKOKAIN) return SendClientMessage(playerid, COLOR_LIGHTRED, "Tele vagy!");
				if(CarTrunk[veh][cKokain] < darab) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Kokain a kocsiban!");
				if((PlayerInfo[playerid][pKokain]+darab) > MAXKOKAIN) return Msg(playerid, "Ennyi nem fér el nálad!");
				CarTrunk[veh][cKokain] -= darab;
				PlayerInfo[playerid][pKokain] += darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél %d Kokaint a jármûbõl!", darab);
				Cselekves(playerid, "kivett valamit a jármûbõl...");
				

				format(string, 256, "[Kipakol] [%d]%s kipakolt a %d. jármûbõl %g kokaint", playerid, Nev(playerid), veh, darab); Log("Szef", string);
			}

			if(egyezik(param[2], "Marihuana"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				new darab = dbx;
				if(CarTrunk[veh][cMarihuana] <= 0) return SendClientMessage(playerid, COLOR_YELLOW, "A kocsiban nincs Marihuana!");
				if(PlayerInfo[playerid][pMarihuana] >= MAXMARIHUANA) return SendClientMessage(playerid, COLOR_LIGHTRED, "Tele vagy!");
				if(CarTrunk[veh][cMarihuana] < darab) return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi Marihuana a kocsiban!");
				if((PlayerInfo[playerid][pMarihuana]+darab) > MAXMARIHUANA) return Msg(playerid, "Ennyi nem fér el nálad!");
				CarTrunk[veh][cMarihuana] -= darab;
				PlayerInfo[playerid][pMarihuana] += darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél %d Marihuanat a jármûbõl!", darab);
				Cselekves(playerid, "kivett valamit a jármûbõl...");
				

				format(string, 256, "[Kipakol] [%d]%s kipakolt a %d. jármûbõl %g marihuanat", playerid, Nev(playerid), veh, darab); Log("Szef", string);
			}
			if(egyezik(param[2], "felszerelés") || egyezik(param[2], "felszereles"))
			{
				if(veh == 0 || IsFrakcioKocsi(veh) != 2) return Msg(playerid, "Ez nem FBI-os kocsi!");
				if(CarTrunk[veh][cFegyverCsomag] < 1) return Msg(playerid, "Nincs felszerelés a kocsiban!");
				

				SetPlayerArmour(playerid, 100);
				WeaponGiveWeapon(playerid, WEAPON_NITESTICK);
				WeaponGiveWeapon(playerid, WEAPON_TEARGAS, 15);
				WeaponGiveWeapon(playerid, WEAPON_DEAGLE, 70);
				WeaponGiveWeapon(playerid, WEAPON_COMBAT, 150);
				WeaponGiveWeapon(playerid, WEAPON_MP5, 300);
				WeaponGiveWeapon(playerid, WEAPON_M4, 200);
				WeaponGiveWeapon(playerid, WEAPON_SNIPER, 150);
				WeaponGiveWeapon(playerid, WEAPON_SPRAYCAN, 2000);
				CarTrunk[veh][cFegyverCsomag]--;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél egy felszerelést a kocsiból, még %d darab van benne!", CarTrunk[veh][cFegyverCsomag]);
				Cselekves(playerid, "kivett valamit a jármûbõl...");
				
			}
			if(egyezik(param[2], "Alma"))
			{
				if(params < 3) return Msg(playerid, "És mennyit?");
				new darab = dbx;
				if(CarTrunk[veh][cAlma] <= 0) return Msg(playerid, "A kocsiban nincs Alma!");
				if(PlayerInfo[playerid][pAlma] >= MAXALMA) return Msg(playerid, "Tele vagy!");
				if(CarTrunk[veh][cAlma] < darab) return Msg(playerid, "Nincs ennyi Alma a kocsiban!");
				if((PlayerInfo[playerid][pAlma]+darab) > MAXALMA) return Msg(playerid, "Ennyi nem fér el nálad!");
				CarTrunk[veh][cAlma] -= darab;
				PlayerInfo[playerid][pAlma] += darab;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Kivettél %d Almát a jármûbõl!", darab);
				Cselekves(playerid, "kivett valamit a jármûbõl...");
				
			}
			if(egyezik(param[2], "töltõ") || egyezik(param[2], "tolto"))
			{
				if(CarTrunk[veh][cTolto] <= 0) return Msg(playerid,"A kocsiban nincs akkutöltõ!");
				if(PlayerInfo[playerid][pAkkuTolto] >= 1) return Msg(playerid, "Már van nálad egy Akkumulátor töltõ!");
				CarTrunk[veh][cTolto] --;
				PlayerInfo[playerid][pAkkuTolto] ++;
				Msg(playerid,"Kivettél egy Akkumulátor töltõt a kocsiból");
				Cselekves(playerid, "kivett valamit a jármûbõl...");
				
			}
			if(egyezik(param[2], "motorolaj") || egyezik(param[2], "olaj"))
			{
				if(CarTrunk[veh][cOlaj] <= 0) return Msg(playerid,"A kocsiban nincs motorolaj!");
				if(PlayerInfo[playerid][pMotorolaj] >= 1) return Msg(playerid, "Már van nálad egy Motorolaj!");
				CarTrunk[veh][cOlaj] --;
				PlayerInfo[playerid][pMotorolaj] ++;
				Msg(playerid,"Kivettél egy motorolajat a kocsiból!");
				Cselekves(playerid, "kivett valamit a jármûbõl...");
			}
			
			SaveCarTrunk(veh);
			return 1;
		}
		
		new kocsiWeapon;
		if((kocsiWeapon = egyezik(param[1],"weapon")) || egyezik(param[1], "ammo"))
		{
			if(IsPlayerInAnyVehicle(playerid))
				return Msg(playerid, "Kocsiban nem :)");

			if(Szint(playerid) < WEAPON_MIN_LEVEL)
				return Msg(playerid, "Túl kicsi a szinted a fegyverhasználathoz");
				
			if(PlayerInfo[playerid][pFegyverTiltIdo] > 0)
				return Msg(playerid, "El vagy tiltva a fegyver használattól!");
			
			if(FloodCheck(playerid))
				return 1;
				
			if(params < 2)
				return Msg(playerid, "/kocsi [weapon / ammo] [berak / kivesz / megnéz] [fegyvernév / ID]");
			
			if(Paintballozik[playerid])
				return Msg(playerid, "A-a");
			
			new kocsi = GetClosestVehicle(playerid);
			
			new Float:tav = GetPlayerDistanceFromVehicle(playerid, kocsi);
			if(tav >= 5)
				return Msg(playerid, "Nincs a közeledbe jármû...");
			
			if(Locked(kocsi))
				return Msg(playerid, "A jármû zárva");
			
			if(IsABicikli(kocsi))
				return Msg(playerid, "Bicikli?");
			
			if(egyezik(param[2], "berak"))
			{
				if(kocsiWeapon && params < 2 || !kocsiWeapon && params < 3)
					return Msg(playerid, "Használat: /kocsi [weapon / ammo] berak [fegyvernév / ID] [lõszer]");

				new weapon = GetGunFromString(param[3]);
				if(weapon < 1 || weapon > MAX_WEAPONS)
					return Msg(playerid, "Ilyen fegyver nem létezik");
				
				if(weapon == WEAPON_CHAINSAW || weapon == WEAPON_FIREEXTINGUISHER)
					return Msg(playerid, "Láncfûrész és poroltó nem rakható el");
				
				new ammo;
				if(!kocsiWeapon)
				{
					ammo = strval(param[4]);
					if(ammo < 1)
						return Msg(playerid, "Hibás lõszer mennyiség");
				}
				
				if(!kocsiWeapon && WeaponType(weapon) == WEAPON_TYPE_HAND)
					return Msg(playerid, "Ez nem lõfegyver");
				
				if(kocsiWeapon && WeaponHaveWeapon(playerid, weapon) == NINCS)
					return Msg(playerid, "Nincs ilyen fegyvered");
				else if(!kocsiWeapon && WeaponAmmo(playerid, weapon) < 1)
					return Msg(playerid, "Ehhez a fegyverhez nincs lõszered");

				if(kocsiWeapon)
				{
					new slot = NINCS;
					for(new s = 0; s < MAX_JARMU_WEAPON_SLOT; s++)
					{
						if(!CarTrunk[kocsi][cFegyver][s])
							{ slot = s; break; }
					}
					
					if(slot == NINCS)
						return Msg(playerid, "A jármû tele van");
					
					WeaponTakeWeapon(playerid, weapon);
					CarTrunk[kocsi][cFegyver][slot] = weapon;
					
					Msg(playerid, "Beraktál egy fegyvert a jármûbe");
					Cselekves(playerid, "elrejtett egy fegyvert a jármûbe...");
					
					if(!PlayerInfo[playerid][pMember])
					{
						format(_tmpString, sizeof(_tmpString), "[Weapon-Berak][Civil]%s berakott egy fegyvert a %d rendszámú jármû %d slotjába: %s-t", PlayerName(playerid), kocsi, slot, GetGunName(weapon)), Log("Fegyver", _tmpString);
						printf("Elso: %s",_tmpString);
					}
					else
					{
						format(_tmpString, sizeof(_tmpString), "[Weapon-Berak][%s]%s berakott egy fegyvert a %d rendszámú jármû %d slotjába: %s-t", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][1], PlayerName(playerid), kocsi, slot, GetGunName(weapon)), Log("Fegyver", _tmpString);
						printf("Masodik: %s",_tmpString);
					}
				}
				else
				{
					new berakva, berakni = max(0, min(ammo, WeaponAmmo(playerid, weapon))), t;
					
					for(new s = 0; s < MAX_JARMU_WEAPON_SLOT; s++)
					{
						if((CarTrunk[kocsi][cLoszerTipus][s] == 0 || CarTrunk[kocsi][cLoszerTipus][s] == weapon) && CarTrunk[kocsi][cLoszerMennyiseg][s] < WeaponMaxAmmo(weapon))
						{
							t = max(0, min(berakni, WeaponMaxAmmo(weapon) - CarTrunk[kocsi][cLoszerMennyiseg][s]));
							
							berakva += t;
							berakni -= t;
							
							WeaponGiveAmmo(playerid, weapon, -t);
							CarTrunk[kocsi][cLoszerMennyiseg][s] += t;
							CarTrunk[kocsi][cLoszerTipus][s] = weapon;
							
							if(!berakni)
								break;
						}
					}
					
					if(!berakva)
						return Msg(playerid, "A jármû tele van");
					
					SendFormatMessage(playerid, COLOR_LIGHTRED, "Beraktál %ddb %s lõszert a jármûbe", berakva, GunName(weapon));
					Cselekves(playerid, "berakott némi lõszert a jármûbe");
					
					if(!PlayerInfo[playerid][pMember])
						format(_tmpString, 256, "[Weapon-Berak][Civil]%s berakott %ddb %s lõszert a %d. rendszámú jármûbe", PlayerName(playerid), berakva, GunName(weapon), kocsi), Log("Fegyver", _tmpString);
					else
						format(_tmpString, 256, "[Weapon-Berak][%s]%s berakott %ddb %s lõszert a %d. rendszámú jármûbe", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][1], PlayerName(playerid), berakva, GunName(weapon), kocsi), Log("Fegyver", _tmpString);
				}

				SaveCarTrunk(kocsi);
				return 1;
			}
			else if(egyezik(param[2], "kivesz"))
			{
				if(kocsiWeapon && params < 2 || !kocsiWeapon && params < 3)
					return Msg(playerid, "Használat: /kocsi [weapon / ammo] kivesz [fegyvernév / ID] [lõszer]");

				new weapon = GetGunFromString(param[3]);
				if(weapon < 1 || weapon > MAX_WEAPONS)
					return Msg(playerid, "Ilyen fegyver nem létezik");
				
				new ammo;
				if(!kocsiWeapon)
				{
					ammo = strval(param[4]);
					if(ammo < 1)
						return Msg(playerid, "Hibás lõszer mennyiség");
				}
					
				if(kocsiWeapon && WeaponCanHoldWeapon(playerid, weapon, 0) < 0)
					return Msg(playerid, "Ilyen fegyver nem lehet nálad");
				else if(!kocsiWeapon && WeaponAmmo(playerid, weapon) >= WeaponMaxAmmo(weapon))
					return Msg(playerid, "Ilyen lõszerbõl már nem fér el több nálad");
				
				if(kocsiWeapon)
				{
					new slot = NINCS;
					for(new s = 0; s < MAX_JARMU_WEAPON_SLOT; s++)
					{
						if(CarTrunk[kocsi][cFegyver][s] == weapon)
							{ slot = s; break; }
					}
					
					if(slot == NINCS)
						return Msg(playerid, "Ilyen fegyver nincs a jármûben");
					
					WeaponGiveWeapon(playerid, weapon, .maxweapon = 0);
					CarTrunk[kocsi][cFegyver][slot] = 0;
					Msg(playerid, "Kivettél egy fegyvert a jármûbõl");
					Cselekves(playerid, "kivett egy fegyvert a jármûbõl...");

					if(!PlayerInfo[playerid][pMember])
						format(_tmpString, 256, "[Weapon-Kivesz][Civil]%s kivett egy fegyvert a %d. rendszámú jármû %d. slotjából: %s-t", PlayerName(playerid), kocsi, slot, GetGunName(weapon)), Log("Fegyver", _tmpString);
					else
						format(_tmpString, 256, "[Weapon-Kivesz][%s]%s kivett egy fegyvert a %d. rendszámú jármû %d. slotjából: %s-t", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][1], PlayerName(playerid), kocsi, slot, GetGunName(weapon)), Log("Fegyver", _tmpString);
				}
				else
				{
					new kiveve, kivenni = max(0, min(ammo, WeaponMaxAmmo(weapon) - WeaponAmmo(playerid, weapon))), t;
					
					for(new s = 0; s < MAX_JARMU_WEAPON_SLOT; s++)
					{
						if(CarTrunk[kocsi][cLoszerTipus][s] == weapon && CarTrunk[kocsi][cLoszerMennyiseg][s] > 0)
						{
							t = max(0, min(kivenni, CarTrunk[kocsi][cLoszerMennyiseg][s]));
							
							kiveve += t;
							kivenni -= t;
							
							CarTrunk[kocsi][cLoszerMennyiseg][s] -= t;
							WeaponGiveAmmo(playerid, weapon, t);
							
							if(CarTrunk[kocsi][cLoszerMennyiseg][s] < 1)
								CarTrunk[kocsi][cLoszerTipus][s] = 0;
							
							if(!kivenni)
								break;
						}
					}
					
					if(!kiveve)
						return Msg(playerid, "A jármûben nincs ilyen lõszer");
					
					SendFormatMessage(playerid, COLOR_LIGHTRED, "Kivettél %ddb %s lõszert a jármûbõl", kiveve, GunName(weapon));
					Cselekves(playerid, "kivett némi lõszert a jármûbõl");
					
					if(!PlayerInfo[playerid][pMember])
						format(_tmpString, 256, "[Weapon-Kivesz][Civil]%s kivett %ddb %s lõszert a %d. rendszámú jármûbõl", PlayerName(playerid), kiveve, GunName(weapon), kocsi), Log("Fegyver", _tmpString);
					else
						format(_tmpString, 256, "[Weapon-Kivesz][%s]%s kivett %ddb %s lõszert a %d. rendszámú jármûbõl", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][1], PlayerName(playerid), kiveve, GunName(weapon), kocsi), Log("Fegyver", _tmpString);
				}
				
				SaveCarTrunk(kocsi);
			}
			else if(egyezik(param[2], "megnéz") || egyezik(param[2], "megnez"))
			{
				if(kocsiWeapon)
				{
					SendClientMessage(playerid, COLOR_WHITE, "==[ Fegyver rekeszek ]==");
					for(new s = 0; s < MAX_JARMU_WEAPON_SLOT; s++)
					{
						if(CarTrunk[kocsi][cFegyver][s])
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "- %s", CarTrunk[kocsi][cFegyver][s]);
						else
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "- Üres");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "==[ Lõszer rekeszek ]==");
					for(new s = 0; s < 5; s++)
					{
						if(CarTrunk[kocsi][cLoszerTipus][s])
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "- %s: %ddb", CarTrunk[kocsi][cLoszerTipus], CarTrunk[kocsi][cLoszerMennyiseg]);
						else
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "- Üres");
					}
				}
			}
			return 1;
		}
		
		return 1;
	}
	if(egyezik(cmd, "/iratok"))
	{
		if(params < 1) return Msg(playerid, "Használat: /iratok [Név/ID]");
		giveplayerid = ReturnUser(param[1]);
		if(!IsPlayerConnected(giveplayerid)) return Msg(playerid, " A játékos nem online!");
		if(GetDistanceBetweenPlayers(playerid, giveplayerid) > 4.0) return Msg(playerid, "A játékos nincs a közelben!");
		if(KozelsegEllenoriz(giveplayerid)) return Msg(playerid, "A játékos nincs a közelben!");
		new neme[32];
		new Szervenyes = PlayerInfo[playerid][pSzemelyi];
		new Utervenyes = PlayerInfo[playerid][pUtlevel];
		if(PlayerInfo[playerid][pSex] == 1)
			neme = "Férfi";
		else if(PlayerInfo[playerid][pSex] == 2)
			neme = "Nõ";
		else
			neme = "Semleges ((??))";
		SendClientMessage(giveplayerid, COLOR_RED, "=== Személyi igazolvány ===");
		if(PlayerInfo[playerid][pHamisNev] == 0)
			SendFormatMessage(giveplayerid, COLOR_GRAD2,"Neve: %s", ICPlayerName(playerid));
		else
			SendFormatMessage(giveplayerid, COLOR_GRAD2, "Neve: %s", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
		SendFormatMessage(giveplayerid, COLOR_GRAD2, "%d éves", PlayerInfo[playerid][pAge]);
		if(Szervenyes > 0)
		{
			format(string, sizeof(string), "Érvényes: %d Hónapig((Óráig))", Szervenyes);
			SendClientMessage(giveplayerid, COLOR_GRAD2, string);
		}
		else
		{
			format(string, sizeof(string), "Érvénytelen.");
			SendClientMessage(giveplayerid, COLOR_GRAD2, string);
		}
	
		SendClientMessage(giveplayerid, COLOR_RED, "=== Útlevél ===");

		//new Ervenyes = PlayerInfo[playerid][pUtlevel];
		if(PlayerInfo[playerid][pHamisNev] == 0)
			SendFormatMessage(giveplayerid, COLOR_GRAD2,"Neve: %s", ICPlayerName(playerid));
		else
			SendFormatMessage(giveplayerid, COLOR_GRAD2, "Neve: %s", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
		if(Utervenyes > 0)
		{
			format(string, sizeof(string), "Útlevele: Érvényes %d Hónapig((Óráig))", Utervenyes);
			SendClientMessage(giveplayerid, COLOR_GRAD2, string);
		}
		else
		{
			format(string, sizeof(string), "Útlevele: Érvénytelen.");
			SendClientMessage(giveplayerid, COLOR_GRAD2, string);
		}
		SendClientMessage(giveplayerid, COLOR_RED, "=== Engedélyek ===");
		new text1[6];
		new text2[6];
		new text3[6];
		new text4[6];
		new text5[6];
		new text6[6];
		new text7[6];
		new text8[6];
		new text9[6];
		new text10[6];
		if(PlayerInfo[playerid][pCarLic] > 0) { text1 = "Van"; } else { text1 = "Nincs"; }
		if(PlayerInfo[playerid][pFlyLic] > 0) { text4 = "Van"; } else { text4 = "Nincs"; }
		if(PlayerInfo[playerid][pBoatLic] > 0) { text2 = "Van"; } else { text2 = "Nincs"; }
		if(PlayerInfo[playerid][pFishLic] > 0) { text3 = "Van"; } else { text3 = "Nincs"; }
		if(PlayerInfo[playerid][pGunLic] > 0) { text5 = "Van"; } else { text5 = "Nincs"; }
		if(PlayerInfo[playerid][pMotorJogsi] > 0) { text6 = "Van"; } else { text6 = "Nincs"; }
		if(PlayerInfo[playerid][pKamionJogsi] > 0) { text7 = "Van"; } else { text7 = "Nincs"; }
		if(PlayerInfo[playerid][pAdrJogsi] > 0) { text8 = "Van"; } else { text8 = "Nincs"; }
		if(PlayerInfo[playerid][pKreszJogsi] > 0) { text9 = "Van"; } else { text9 = "Nincs"; }
		if(PlayerInfo[playerid][pHeliLic] > 0) { text10 = "Van"; } else { text10 = "Nincs"; }
		
		if(PlayerInfo[playerid][pKreszJogsi] > 0)
			format(string, sizeof(string), "** KRESZ jogsi: %s - Lejár: %d hónap((óra)) múlva.", text9, PlayerInfo[playerid][pKreszJogsi]);
		else
			format(string, sizeof(string), "** KRESZ jogsi: %s - Lejár: lejárt.", text9);
		SendClientMessage(giveplayerid, COLOR_GREY, string);							
		if(PlayerInfo[playerid][pCarLic] > 0)
			format(string, sizeof(string), "** Autó jogsi: %s - Lejár: %d hónap((óra)) múlva.", text1, PlayerInfo[playerid][pCarLic]);
		else
			format(string, sizeof(string), "** Autó jogsi: %s - Lejár: lejárt.", text1);
		SendClientMessage(giveplayerid, COLOR_GREY, string);
		if(PlayerInfo[playerid][pMotorJogsi] > 0)
			format(string, sizeof(string), "** Motor jogsi: %s - Lejár: %d hónap((óra)) múlva.", text6, PlayerInfo[playerid][pMotorJogsi]);
		else
			format(string, sizeof(string), "** Motor jogsi: %s - Lejár: lejárt.", text6);
		SendClientMessage(giveplayerid, COLOR_GREY, string);
		if(PlayerInfo[playerid][pKamionJogsi] > 0)
			format(string, sizeof(string), "** Kamion jogsi: %s - Lejár: %d hónap((óra)) múlva.", text7, PlayerInfo[playerid][pKamionJogsi]);
		else
			format(string, sizeof(string), "** Kamion jogsi: %s - Lejár: lejárt.", text7);
		SendClientMessage(giveplayerid, COLOR_GREY, string);
		if(PlayerInfo[playerid][pAdrJogsi] > 0)
			format(string, sizeof(string), "** ADR jogsi: %s - Lejár: %d hónap((óra)) múlva.", text8, PlayerInfo[playerid][pAdrJogsi]);
		else
			format(string, sizeof(string), "** ADR jogsi: %s - Lejár: lejárt.", text8);
		SendClientMessage(giveplayerid, COLOR_GREY, string);
		
		if(PlayerInfo[playerid][pFlyLic] > 0)
			format(string, sizeof(string), "** Repülõ engedély: %s - Lejár: %d hónap((óra)) múlva.", text4, PlayerInfo[playerid][pFlyLic]);
		else
			format(string, sizeof(string), "** Repülõ engedély: %s - Lejár: lejárt.", text4);
		SendClientMessage(giveplayerid, COLOR_GREY, string);

		if(PlayerInfo[playerid][pHeliLic] > 0)
			format(string, sizeof(string), "** Helikopter engedély: %s - Lejár: %d hónap((óra)) múlva.", text10, PlayerInfo[playerid][pHeliLic]);
		else
			format(string, sizeof(string), "** Helikopter engedély: %s - Lejár: lejárt.", text10);
		SendClientMessage(giveplayerid, COLOR_GREY, string);
		
		if(PlayerInfo[playerid][pBoatLic] > 0)
			format(string, sizeof(string), "** Hajó engedély: %s - Lejár: %d hónap((óra)) múlva.", text2, PlayerInfo[playerid][pBoatLic]);
		else
			format(string, sizeof(string), "** Hajó engedély: %s - Lejár: lejárt.", text2);
		SendClientMessage(giveplayerid, COLOR_GREY, string);
		if(PlayerInfo[playerid][pFishLic] > 0)
			format(string, sizeof(string), "** Horgász engedély: %s - Lejár: %d hónap((óra)) múlva.", text3, PlayerInfo[playerid][pFishLic]);
		else
			format(string, sizeof(string), "** Horgász engedély: %s - Lejár: lejárt.", text3);
		SendClientMessage(giveplayerid, COLOR_GREY, string);
		if(PlayerInfo[playerid][pGunLic] > 0)
			format(string, sizeof(string), "** Fegyver engedély: %s - Lejár: %d hónap((óra)) múlva.", text5, PlayerInfo[playerid][pGunLic]);
		else
			format(string, sizeof(string), "** Fegyver engedély: %s - Lejár: lejárt.", text5);
		SendClientMessage(giveplayerid, COLOR_GREY, string);
		
		if(PlayerInfo[playerid][pSpecialJogsiKm] > 0.0)
			format(string, sizeof(string), "** [SPECIÁLIS JOGOSÍTVÁNY] Megnevezés: %s, KM: %.3f",PlayerInfo[playerid][pSpecialJogsiNev],PlayerInfo[playerid][pSpecialJogsiKm]/1000.0);
		else
			format(string, sizeof(string), "** [SPECIÁLIS JOGOSÍTVÁNY] Megnevezés: NINCS KM: %.3f",PlayerInfo[playerid][pSpecialJogsiKm]/1000.0);
		SendClientMessage(giveplayerid, COLOR_GREY, string);
		
		if(giveplayerid == playerid)
			Cselekves(playerid, "elõvette az iratait, és megnézte...", 0);
		else
			Cselekves(playerid, "elõvette az iratait és felmutatta...", 0);
	}

	if(egyezik(cmd, "/bikazas") || egyezik(cmd,"/bikázás"))
	{	
		if(PlayerInfo[playerid][pBikazoKabel] == 0) return Msg(playerid,"Neked nincs bikázókábeled! Autósboltban vehetsz.");
		new kocsim = GetPlayerVehicleID(playerid);
		new kocsi = GetClosestVehicle(playerid, false);
		if(CarPart[kocsim][cAkkumulator] >= 5) return Msg(playerid,"Ennek a kocsinak nem kell bikázás!");
		if(bikazott[kocsim] == 1) return Msg(playerid,"Ezen már rajta van a kábel, indísd a kocsit(/motor)!");
		if(Nincsbelepve(playerid)) return 1;
		if(PlayerState[playerid] != PLAYER_STATE_DRIVER) return Msg(playerid,"Ülj be abba a kocsiba amit bikázni szeretnél");
		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5) return Msg(playerid, "A közelben nincs másik jármû!");
		if(GetJarmu(kocsi, KOCSI_MOTORHAZTETO) != 1 ||GetJarmu(kocsim, KOCSI_MOTORHAZTETO) != 1) return Msg(playerid, "Nyisd ki a motorháztetõt mind a két kocsin!");
		if(engineOn[kocsi] == 0) return Msg(playerid, "A bikázó autó motorjának járnia kell!");
		bikazott[kocsim] = 1;
		CarPart[kocsim][cAkkumulator] = 10;
		Msg(playerid,"A bikázókábel rendben, indíthatod a kocsit(/motor)");		
	}
	if(egyezik(cmd, "/index"))
	{
		
		if(params < 1) return Msg(playerid, "/index [qe | szam]");
		if(egyezik(param[1],"qe"))
		{
			if(PlayerInfo[playerid][pIndexQE])
				PlayerInfo[playerid][pIndexQE]= false, Msg(playerid, "qe kikapcsolva");
			else
				PlayerInfo[playerid][pIndexQE] = true, Msg(playerid, "qe bekapcsolva");
			
			return 1;
		
		}
		if(egyezik(param[1],"szam"))
		{
			if(PlayerInfo[playerid][pIndexSzam])
				PlayerInfo[playerid][pIndexSzam] = false, Msg(playerid, "SZAM kikapcsolva");
			else
				PlayerInfo[playerid][pIndexSzam] = true, Msg(playerid, "SZAM bekapcsolva");
		
			return 1;
		}
	
	}
	if(egyezik(cmd, "/aktivitásom"))
	{
		SendFormatMessage(playerid, COLOR_YELLOW, "Aktivitásom az elmúlt 7 napban %d óra, az elmúlt 1 hónapban %d óra.",PlayerInfo[playerid][pHetiAktivitas], PlayerInfo[playerid][pHaviAktivitas]);
		Msg(playerid,"Az aktuális napot nem számolja bele.");
		
		
		//format(string,sizeof(string),"[/AKTIVITAS] Név: %s Heti: %d Havi: %d",PlayerName(playerid),PlayerInfo[playerid][pHetiAktivitas],PlayerInfo[playerid][pHaviAktivitas]);
		//Log("Scripter",string);
		return 1;
	}

	
	if(egyezik(cmd, "/utasszállítás") || egyezik(cmd, "/utasszallitas"))
	{
		new repulo = GetPlayerVehicleID(playerid);
		new pilotamunkarandom[9][PilotaMunkaInfo];
		new Float:PilotaStartX[MAX_PLAYERS],Float:PilotaStartY[MAX_PLAYERS],Float:PilotaStartZ[MAX_PLAYERS];
		if(params < 1) return Msg(playerid, "Használata: /utasszállítás [kezdés/befejezés/lemondás/repterek]");
		//=========================
		if(egyezik(param[1], "kezdés") || egyezik(param[1], "kezdes"))
		{
			if(!AMT(playerid, MUNKA_PILOTA)) return Msg(playerid, "Nem vagy pilóta!");
			if(!Repteren(playerid)) return Msg(playerid, "Menj valamelyik reptérre!");
			if(!IsAPRepulo(repulo)) return Msg(playerid, "Repülõgépben kell lenned!");
			if(Repul[playerid] == 1) return Msg(playerid , "Fejezd be a jelenlegi szállításodat!");
			if(PlayerInfo[playerid][pFlyLic] == 0) return Msg(playerid, "Nincs repülõengedélyed. Így nem dolgozhatsz!");
			if(TakingLesson[playerid] == 1) return Msg(playerid, "Épp vizsgázol, ezért nem indíthatsz fuvart!");
			if(Felleszallas[playerid] == 1) return Msg(playerid, "Várj, amíg az utasok felszállnak/leszállnak!");
			
			//=========================
			if(PlayerToPoint(12.5, playerid, 1740.960,-2434.134,14.751)) //LS REPTÉR
			{
				format(PilotaMunkaPos[playerid][PilotaKezd],200,"Los Santos Reptér");
				//=========================
				strmid(pilotamunkarandom[0][munkaneve], "San Fierro", 0, strlen("San Fierro"), 50);
				pilotamunkarandom[0][munkax] = -1472.4352;
				pilotamunkarandom[0][munkay] = -194.1006;
				pilotamunkarandom[0][munkaz] = 15.3445;
				pilotamunkarandom[0][munkaertek] = 6.3;
				//=========================
				strmid(pilotamunkarandom[1][munkaneve], "Las Venturas", 0, strlen("Las Venturas"), 50);
				pilotamunkarandom[1][munkax] = 1578.1694;
				pilotamunkarandom[1][munkay] = 1539.2313;
				pilotamunkarandom[1][munkaz] = 12.0204;
				pilotamunkarandom[1][munkaertek] = 6.8;
				//=========================
				strmid(pilotamunkarandom[2][munkaneve], "Las Venturas Géptemetõ", 0, strlen("Las Venturas Géptemetõ"), 50);
				pilotamunkarandom[2][munkax] = 365.3524;
				pilotamunkarandom[2][munkay] = 2537.1438;
				pilotamunkarandom[2][munkaz] = 16.6648;
				pilotamunkarandom[2][munkaertek] = 7.1;
				//=========================
				strmid(pilotamunkarandom[3][munkaneve], "San Fierro", 0, strlen("San Fierro"), 50);
				pilotamunkarandom[3][munkax] = -1472.4352;
				pilotamunkarandom[3][munkay] = -194.1006;
				pilotamunkarandom[3][munkaz] = 15.3445;
				pilotamunkarandom[3][munkaertek] = 6.6;
				//=========================
				strmid(pilotamunkarandom[4][munkaneve], "Las Venturas", 0, strlen("Las Venturas"), 50);
				pilotamunkarandom[4][munkax] = 1578.1694;
				pilotamunkarandom[4][munkay] = 1539.2313;
				pilotamunkarandom[4][munkaz] = 12.0204;
				pilotamunkarandom[4][munkaertek] = 7.2;
				//=========================
				strmid(pilotamunkarandom[5][munkaneve], "Las Venturas Géptemetõ", 0, strlen("Las Venturas Géptemetõ"), 50);
				pilotamunkarandom[5][munkax] = 365.3524;
				pilotamunkarandom[5][munkay] = 2537.1438;
				pilotamunkarandom[5][munkaz] = 16.6648;
				pilotamunkarandom[5][munkaertek] = 6.8;
				//=========================
				strmid(pilotamunkarandom[6][munkaneve], "San Fierro", 0, strlen("San Fierro"), 50);
				pilotamunkarandom[6][munkax] = -1472.4352;
				pilotamunkarandom[6][munkay] = -194.1006;
				pilotamunkarandom[6][munkaz] = 15.3445;
				pilotamunkarandom[6][munkaertek] = 6.7;
				//=========================
				strmid(pilotamunkarandom[7][munkaneve], "Las Venturas", 0, strlen("Las Venturas"), 50);
				pilotamunkarandom[7][munkax] = 1578.1694;
				pilotamunkarandom[7][munkay] = 1539.2313;
				pilotamunkarandom[7][munkaz] = 12.0204;
				pilotamunkarandom[7][munkaertek] = 6.9;
				//=========================
				strmid(pilotamunkarandom[8][munkaneve], "Las Venturas Géptemetõ", 0, strlen("Las Venturas Géptemetõ"), 50);
				pilotamunkarandom[8][munkax] = 365.3524;
				pilotamunkarandom[8][munkay] = 2537.1438;
				pilotamunkarandom[8][munkaz] = 16.6648;
				pilotamunkarandom[8][munkaertek] = 7.0;
			}
			elseif(PlayerToPoint(12.5, playerid, -1472.4352,-194.1006,15.3445)) //SF REPTÉR
			{
				format(PilotaMunkaPos[playerid][PilotaKezd],200,"San Fierro Reptér");
				//=========================
				strmid(pilotamunkarandom[0][munkaneve], "Los Santos", 0, strlen("Los Santos"), 50);
				pilotamunkarandom[0][munkax] = 1740.960;
				pilotamunkarandom[0][munkay] = -2434.134;
				pilotamunkarandom[0][munkaz] = 14.751;
				pilotamunkarandom[0][munkaertek] = 6.4;
				//=========================
				strmid(pilotamunkarandom[1][munkaneve], "Las Venturas", 0, strlen("Las Venturas"), 50);
				pilotamunkarandom[1][munkax] = 1578.1694;
				pilotamunkarandom[1][munkay] = 1539.2313;
				pilotamunkarandom[1][munkaz] = 12.0204;
				pilotamunkarandom[1][munkaertek] = 6.2;
				//=========================
				strmid(pilotamunkarandom[2][munkaneve], "Las Venturas Géptemetõ", 0, strlen("Las Venturas Géptemetõ"), 50);
				pilotamunkarandom[2][munkax] = 365.3524;
				pilotamunkarandom[2][munkay] = 2537.1438;
				pilotamunkarandom[2][munkaz] = 16.6648;
				pilotamunkarandom[2][munkaertek] = 5.9;
				//=========================
				strmid(pilotamunkarandom[3][munkaneve], "Los Santos", 0, strlen("Los Santos"), 50);
				pilotamunkarandom[3][munkax] = 1740.960;
				pilotamunkarandom[3][munkay] = -2434.134;
				pilotamunkarandom[3][munkaz] = 14.751;
				pilotamunkarandom[3][munkaertek] = 6.1;
				//=========================
				strmid(pilotamunkarandom[4][munkaneve], "Las Venturas", 0, strlen("Las Venturas"), 50);
				pilotamunkarandom[4][munkax] = 1578.1694;
				pilotamunkarandom[4][munkay] = 1539.2313;
				pilotamunkarandom[4][munkaz] = 12.0204;
				pilotamunkarandom[4][munkaertek] = 6.5;
				//=========================
				strmid(pilotamunkarandom[5][munkaneve], "Las Venturas Géptemetõ", 0, strlen("Las Venturas Géptemetõ"), 50);
				pilotamunkarandom[5][munkax] = 365.3524;
				pilotamunkarandom[5][munkay] = 2537.1438;
				pilotamunkarandom[5][munkaz] = 16.6648;
				pilotamunkarandom[5][munkaertek] = 6.0;
				//=========================
				strmid(pilotamunkarandom[6][munkaneve], "Los Santos", 0, strlen("Los Santos"), 50);
				pilotamunkarandom[6][munkax] = 1740.960;
				pilotamunkarandom[6][munkay] = -2434.134;
				pilotamunkarandom[6][munkaz] = 14.751;
				pilotamunkarandom[6][munkaertek] = 6.9;
				//=========================
				strmid(pilotamunkarandom[7][munkaneve], "Las Venturas", 0, strlen("Las Venturas"), 50);
				pilotamunkarandom[7][munkax] = 1578.1694;
				pilotamunkarandom[7][munkay] = 1539.2313;
				pilotamunkarandom[7][munkaz] = 12.0204;
				pilotamunkarandom[7][munkaertek] = 6.3;
				//=========================
				strmid(pilotamunkarandom[8][munkaneve], "Las Venturas Géptemetõ", 0, strlen("Las Venturas Géptemetõ"), 50);
				pilotamunkarandom[8][munkax] = 365.3524;
				pilotamunkarandom[8][munkay] = 2537.1438;
				pilotamunkarandom[8][munkaz] = 16.6648;
				pilotamunkarandom[8][munkaertek] = 5.1;
			}
			elseif(PlayerToPoint(12.5, playerid, 1578.1694,1539.2313,12.0204)) //LV REPTÉR
			{
				format(PilotaMunkaPos[playerid][PilotaKezd],200,"Las Venturas Reptér");
				//=========================				
				strmid(pilotamunkarandom[0][munkaneve], "Los Santos", 0, strlen("Los Santos"), 50);
				pilotamunkarandom[0][munkax] = 1740.960;
				pilotamunkarandom[0][munkay] = -2434.134;
				pilotamunkarandom[0][munkaz] = 14.751;
				pilotamunkarandom[0][munkaertek] = 6.6;
				//=========================
				strmid(pilotamunkarandom[1][munkaneve], "San Fierro", 0, strlen("San Fierro"), 50);
				pilotamunkarandom[1][munkax] = -1472.4352;
				pilotamunkarandom[1][munkay] = -194.1006;
				pilotamunkarandom[1][munkaz] = 15.3445;
				pilotamunkarandom[1][munkaertek] = 5.8;
				//=========================
				strmid(pilotamunkarandom[2][munkaneve], "Las Venturas Géptemetõ", 0, strlen("Las Venturas Géptemetõ"), 50);
				pilotamunkarandom[2][munkax] = 365.3524;
				pilotamunkarandom[2][munkay] = 2537.1438;
				pilotamunkarandom[2][munkaz] = 16.6648;
				pilotamunkarandom[2][munkaertek] = 4.4;
				//=========================
				strmid(pilotamunkarandom[3][munkaneve], "Los Santos", 0, strlen("Los Santos"), 50);
				pilotamunkarandom[3][munkax] = 1740.960;
				pilotamunkarandom[3][munkay] = -2434.134;
				pilotamunkarandom[3][munkaz] = 14.751;
				pilotamunkarandom[3][munkaertek] = 6.58;
				//=========================
				strmid(pilotamunkarandom[4][munkaneve], "San Fierro", 0, strlen("San Fierro"), 50);
				pilotamunkarandom[4][munkax] = -1472.4352;
				pilotamunkarandom[4][munkay] = -194.1006;
				pilotamunkarandom[4][munkaz] = 15.3445;
				pilotamunkarandom[4][munkaertek] = 5.7;
				//=========================
				strmid(pilotamunkarandom[5][munkaneve], "Las Venturas Géptemetõ", 0, strlen("Las Venturas Géptemetõ"), 50);
				pilotamunkarandom[5][munkax] = 365.3524;
				pilotamunkarandom[5][munkay] = 2537.1438;
				pilotamunkarandom[5][munkaz] = 16.6648;
				pilotamunkarandom[5][munkaertek] = 4.75;
				//=========================
				strmid(pilotamunkarandom[6][munkaneve], "Los Santos", 0, strlen("Los Santos"), 50);
				pilotamunkarandom[6][munkax] = 1740.960;
				pilotamunkarandom[6][munkay] = -2434.134;
				pilotamunkarandom[6][munkaz] = 14.751;
				pilotamunkarandom[6][munkaertek] = 6.2;
				//=========================
				strmid(pilotamunkarandom[7][munkaneve], "San Fierro", 0, strlen("San Fierro"), 50);
				pilotamunkarandom[7][munkax] = -1472.4352;
				pilotamunkarandom[7][munkay] = -194.1006;
				pilotamunkarandom[7][munkaz] = 15.3445;
				pilotamunkarandom[7][munkaertek] = 5.8;
				//=========================
				strmid(pilotamunkarandom[8][munkaneve], "Las Venturas Géptemetõ", 0, strlen("Las Venturas Géptemetõ"), 50);
				pilotamunkarandom[8][munkax] = 365.3524;
				pilotamunkarandom[8][munkay] = 2537.1438;
				pilotamunkarandom[8][munkaz] = 16.6648;
				pilotamunkarandom[8][munkaertek] = 4.1;
			}
			elseif(PlayerToPoint(12.5, playerid, 365.3524,2537.1438,16.6648)) //LV GÉPTEMETÕ
			{
				format(PilotaMunkaPos[playerid][PilotaKezd],200,"Las Venturas Géptemetõ");
				//=========================
				strmid(pilotamunkarandom[0][munkaneve], "Los Santos", 0, strlen("Los Santos"), 50);
				pilotamunkarandom[0][munkax] = 1740.960;
				pilotamunkarandom[0][munkay] = -2434.134;
				pilotamunkarandom[0][munkaz] = 14.751;
				pilotamunkarandom[0][munkaertek] = 6.6;
				//=========================
				strmid(pilotamunkarandom[1][munkaneve], "San Fierro", 0, strlen("San Fierro"), 50);
				pilotamunkarandom[1][munkax] = -1472.4352;
				pilotamunkarandom[1][munkay] = -194.1006;
				pilotamunkarandom[1][munkaz] = 15.3445;
				pilotamunkarandom[1][munkaertek] = 5.8;
				//=========================
				strmid(pilotamunkarandom[2][munkaneve], "Las Venturas", 0, strlen("Las Venturas"), 50);
				pilotamunkarandom[2][munkax] = 1578.1694;
				pilotamunkarandom[2][munkay] = 1539.2313;
				pilotamunkarandom[2][munkaz] = 12.0204;
				pilotamunkarandom[2][munkaertek] = 4.9;
				//=========================
				strmid(pilotamunkarandom[3][munkaneve], "Los Santos", 0, strlen("Los Santos"), 50);
				pilotamunkarandom[3][munkax] = 1740.960;
				pilotamunkarandom[3][munkay] = -2434.134;
				pilotamunkarandom[3][munkaz] = 14.751;
				pilotamunkarandom[3][munkaertek] = 6.2;
				//=========================
				strmid(pilotamunkarandom[4][munkaneve], "San Fierro", 0, strlen("San Fierro"), 50);
				pilotamunkarandom[4][munkax] = -1472.4352;
				pilotamunkarandom[4][munkay] = -194.1006;
				pilotamunkarandom[4][munkaz] = 15.3445;
				pilotamunkarandom[4][munkaertek] = 5.5;
				//=========================
				strmid(pilotamunkarandom[5][munkaneve], "Las Venturas", 0, strlen("Las Venturas"), 50);
				pilotamunkarandom[5][munkax] = 1578.1694;
				pilotamunkarandom[5][munkay] = 1539.2313;
				pilotamunkarandom[5][munkaz] = 12.0204;
				pilotamunkarandom[5][munkaertek] = 5.1;
				//=========================
				strmid(pilotamunkarandom[6][munkaneve], "Los Santos", 0, strlen("Los Santos"), 50);
				pilotamunkarandom[6][munkax] = 1740.960;
				pilotamunkarandom[6][munkay] = -2434.134;
				pilotamunkarandom[6][munkaz] = 14.751;
				pilotamunkarandom[6][munkaertek] = 6.9;
				//=========================
				strmid(pilotamunkarandom[7][munkaneve], "San Fierro", 0, strlen("San Fierro"), 50);
				pilotamunkarandom[7][munkax] = -1472.4352;
				pilotamunkarandom[7][munkay] = -194.1006;
				pilotamunkarandom[7][munkaz] = 15.3445;
				pilotamunkarandom[7][munkaertek] = 5.2;
				//=========================
				strmid(pilotamunkarandom[8][munkaneve], "Las Venturas", 0, strlen("Las Venturas"), 50);
				pilotamunkarandom[8][munkax] = 1578.1694;
				pilotamunkarandom[8][munkay] = 1539.2313;
				pilotamunkarandom[8][munkaz] = 12.0204;
				pilotamunkarandom[8][munkaertek] = 5.0;
			}
			else return Msg(playerid, "Hiba történt, ezt fotózd le, és írd meg a bugok topikba");
			new vehicleid = GetPlayerVehicleID(playerid);
			GetVehicleHealth(vehicleid, PilotaMunkaPos[playerid][PilotaHP]);
			PilotaUtvonal[playerid] = random(sizeof(pilotamunkarandom));
			
			PilotaMunkaPos[playerid][PilotaX]=pilotamunkarandom[PilotaUtvonal[playerid]][munkax];
			PilotaMunkaPos[playerid][PilotaY]=pilotamunkarandom[PilotaUtvonal[playerid]][munkay];
			PilotaMunkaPos[playerid][PilotaZ]=pilotamunkarandom[PilotaUtvonal[playerid]][munkaz];
			PilotaMunkaPos[playerid][PilotaSzorzo]=pilotamunkarandom[PilotaUtvonal[playerid]][munkaertek];
			PilotaMunkaPos[playerid][PilotaRepulo] = repulo;
			GetPlayerPos(playerid,PilotaStartX[playerid],PilotaStartY[playerid],PilotaStartZ[playerid]);
			PilotaMunkaPos[playerid][PilotaTavolsag] = GetDistanceBetweenPoints(PilotaStartX[playerid],PilotaStartY[playerid],PilotaStartZ[playerid],PilotaMunkaPos[playerid][PilotaX],PilotaMunkaPos[playerid][PilotaY],PilotaMunkaPos[playerid][PilotaZ]);
			PilotaMunkaPos[playerid][PilotaFizetes] = floatround(PilotaMunkaPos[playerid][PilotaTavolsag] * 5 * PilotaMunkaPos[playerid][PilotaSzorzo]);
			format(PilotaMunkaPos[playerid][PilotaCel],200,"%s",pilotamunkarandom[PilotaUtvonal[playerid]][munkaneve]);
			SendFormatMessage(playerid, COLOR_GREEN, "[Class Légitársaság] Cél: %s",PilotaMunkaPos[playerid][PilotaCel]);
			SendFormatMessage(playerid, COLOR_GREEN, "[Class Légitársaság] Távolság: %.3f kilométer || Várható fizetés: %d Ft", PilotaMunkaPos[playerid][PilotaTavolsag],PilotaMunkaPos[playerid][PilotaFizetes]);
			SetPlayerCheckpoint(playerid, PilotaMunkaPos[playerid][PilotaX],PilotaMunkaPos[playerid][PilotaY],PilotaMunkaPos[playerid][PilotaZ], 12.5);
			SetTimerEx("Munkavege", 25000, false, "ddd", playerid, M_PILOTAKEZD, 0);
			SendClientMessage(playerid, COLOR_YELLOW, "Az utasok megkezdték a felszállást, várj, míg beszállnak!");
			Freeze(playerid);
			Felleszallas[playerid] = 1;
			Repul[playerid] = 1;
		}
		else if(egyezik(param[1], "befejezés") || egyezik(param[1], "befejezes"))
		{
			if(!AMT(playerid, MUNKA_PILOTA)) return Msg(playerid, "Nem vagy pilóta!");
			if(!PlayerToPoint(12.5, playerid, PilotaMunkaPos[playerid][PilotaX],PilotaMunkaPos[playerid][PilotaY],PilotaMunkaPos[playerid][PilotaZ])) return Msg(playerid, "Nem ide kell hozni az utasokat!");
			if(!IsAPRepulo(repulo)) return Msg(playerid, "Repülõgépben kell lenned!");
			if(Repul[playerid] == 0) return Msg(playerid, "Mégis milyen fuvart akarsz befejezni?");
			if(Felleszallas[playerid] == 1) return Msg(playerid, "Várj, amíg az utasok felszállnak/leszállnak!");
			if(repulo != PilotaMunkaPos[playerid][PilotaRepulo]) return Msg(playerid, "Nem is ezzel hoztad az utasokat..");
			
			new Float:RepuloElet;
			new vehicleid = GetPlayerVehicleID(playerid);
			if(vehicleid != 0)
				GetVehicleHealth(vehicleid, RepuloElet);
			
			if(PilotaMunkaPos[playerid][PilotaHP] < RepuloElet)
			PilotaMunkaPos[playerid][PilotaHP] = RepuloElet;

			new Float:serules = RepuloElet/PilotaMunkaPos[playerid][PilotaHP];
			Felleszallas[playerid] = 1;
			SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_PILOTAVEGE, 0);
			SendClientMessage(playerid, COLOR_GREEN, "Az utasok megkezdték a leszállást!");
			new fizetes = floatround(PilotaMunkaPos[playerid][PilotaFizetes] * serules);
			new levonas = PilotaMunkaPos[playerid][PilotaFizetes] - fizetes;
			levonas = floatround(PilotaMunkaPos[playerid][PilotaSzorzo] * levonas);
			fizetes = PilotaMunkaPos[playerid][PilotaFizetes];
			fizetes -= levonas;
			serules=(1.0-serules) * 100;
			new berles;
			if(IsKocsi(repulo, "Pilota"))
			{
				berles = floatround(PilotaMunkaPos[playerid][PilotaFizetes]*0.35);
				fizetes -=berles;
				SendFormatMessage(playerid, COLOR_YELLOW, "A légitársaság felszámol %d Ft-t a fizetésbõl a tõlük bérelt repülõért.",berles);
			}
			else berles = 0;
			format(string, sizeof(string), "[Class Légitársaság] Repülõ sérülése: %.3f százalék || Fuvardíj: %d Ft || Sérülés miatt levonás: %d Ft || Tényleges fizetés: %d Ft", serules, PilotaMunkaPos[playerid][PilotaFizetes], levonas, fizetes);
			SendClientMessage(playerid, COLOR_GREEN, string);
			Freeze(playerid);
			PlayerInfo[playerid][pPayCheck] += fizetes;
		}
		else if(egyezik(param[1], "lemondás") || egyezik(param[1], "lemondas"))
		{
			if(!AMT(playerid, MUNKA_PILOTA)) return Msg(playerid, "Nem vagy pilóta!");
			if(!Repteren(playerid)) return Msg(playerid, "Menj valamelyik reptérre!");
			if(!IsAPRepulo(repulo)) return Msg(playerid, "Repülõgépben kell lenned!");
			if(Repul[playerid] == 0) return Msg(playerid, "Mit akarsz lemondani?");
			if(Felleszallas[playerid] == 1) return Msg(playerid, "Várj, amíg az utasok felszállnak/leszállnak!");
			
			SendClientMessage(playerid, COLOR_GREEN, "Lemondtad a fuvart, így a légitársaság felszámolt 25000 Ft-ot az utasok panaszai miatt!");
			PlayerInfo[playerid][pPayCheck] -= 25000;
			Repul[playerid] = 0;
			Felleszallas[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			UnFreeze(playerid);
			KillTimer(SetTimerEx("Munkavege", 30000, false, "ddd", playerid, M_PILOTAVEGE, 0));
		}
		else if(egyezik(param[1], "repterek"))
		{
			if(params < 2)
			{
			SendClientMessage(playerid, COLOR_YELLOW, "/utasszállítás repterek [helyszín]");
			SendClientMessage(playerid, COLOR_YELLOW, "[LS/SF/LV/Géptemetõ/Jelenlegi]");
			}
			else if(egyezik(param[2], "LS") || egyezik(param[2], "Los Santos"))
			{
				SetPlayerCheckpoint(playerid, 1740.960,-2434.134,14.751, 12.5);
				SendClientMessage(playerid, COLOR_DARKYELLOW, "Beállítva célnak: Los Santos Reptér");
			}
			else if(egyezik(param[2], "SF") || egyezik(param[2], "San Fierro"))
			{
				SetPlayerCheckpoint(playerid, -1472.4352,-194.1006,15.3445, 12.5);
				SendClientMessage(playerid, COLOR_DARKYELLOW, "Beállítva célnak: San Fierro Reptér");
			}
			else if(egyezik(param[2], "LV") || egyezik(param[2], "Las Venturas"))
			{
				SetPlayerCheckpoint(playerid, 1578.1694,1539.2313,12.0204, 12.5);
				SendClientMessage(playerid, COLOR_DARKYELLOW, "Beállítva célnak: Las Venturas Reptér");
			}
			else if(egyezik(param[2], "Géptemetõ") || egyezik(param[2], "Geptemeto"))
			{
				SetPlayerCheckpoint(playerid, 365.3524,2537.1438,16.6648, 12.5);
				SendClientMessage(playerid, COLOR_DARKYELLOW, "Beállítva célnak: Las Venturas Géptemetõ");
			}
			else if(egyezik(param[2], "Jelenlegi"))
			{
				if(Repul[playerid] == 0) return Msg(playerid, "Nem szállítasz jelenleg!");
				SetPlayerCheckpoint(playerid, PilotaMunkaPos[playerid][PilotaX],PilotaMunkaPos[playerid][PilotaY],PilotaMunkaPos[playerid][PilotaZ], 12.5);
				SendFormatMessage(playerid, COLOR_DARKYELLOW, "Beállítva célnak: %s",KamionStartPoz[playerid][KamCel]);
			}
		}
		return 1;
	}
	/*if(egyezik(cmd, "/lekér"))
	{
		SendFormatMessage(playerid,COLOR_YELLOW,"%d",GetPlayerAnimationIndex(playerid));
	
	}*/
	
    if(egyezik(cmd, "/kamion"))
	{
		if(OnDuty[playerid]) return Msg(playerid, "Döntsd elõbb el mit dolgozol! ((frakció dutyba nem!))");
		new vehicleid , Float:KamionStartx[MAX_PLAYERS],Float:KamionStarty[MAX_PLAYERS],Float:KamionStartz[MAX_PLAYERS];

		new kamionpozrandom[6][Kamionmunkainfo];
		new depo;
		if(params < 1)
				return Msg(playerid, "Használata: /kamion [szállít/lerak/ menetlevél / töröl/depó]");
		
		if(egyezik(param[1],"menetlevél") || egyezik(param[1],"/menetlevel"))
		{
			if(params < 2) return Msg(playerid, "/kamion menetlevél [id]");
			new player = ReturnUser(param[2]);
			if(player == INVALID_PLAYER_ID || IsPlayerNPC(player)) return Msg(playerid, "Nincs ilyen játékos!");
			if(GetDistanceBetweenPlayers(playerid, player) > 8.0) return SendClientMessage(playerid, COLOR_GREY, "   Ez a játékos nincs a közelben!");
			
			if(Szallit[playerid] == 1)
			{
				SendClientMessage(player, COLOR_LIGHTBLUE, "=== Menetlevél ===");
				SendFormatMessage(player,COLOR_YELLOW,"[SZállítás]: %s => %s ",KamionStartPoz[playerid][KamKezd],KamionStartPoz[playerid][KamCel]);
				SendFormatMessage(player,COLOR_YELLOW,"[Szállítás]: Becsült távolsága: %.3f Km",KamionStartPoz[playerid][KamTavolsag]);
				SendFormatMessage(player,COLOR_YELLOW,"[Szállítás]: Szorzó értéke: %.3f",KamionStartPoz[playerid][KamSzorzo]);
				SendFormatMessage(player,COLOR_YELLOW,"[Jármû]: Rendszám %d ",KamionStartPoz[playerid][KamRendszam]);
				SendFormatMessage(player,COLOR_YELLOW,"[Jármû]: Típusa: %s ",GetVehicleModelName(GetVehicleModel(KamionStartPoz[playerid][KamRendszam])-400));
				if(IsKocsi(KamionStartPoz[playerid][KamRendszam], "Kamion"))
					SendClientMessage(player, COLOR_YELLOW, "[Jármû]: Céges bérelt autó");
				SendFormatMessage(player,COLOR_YELLOW,"[Pót]: Rendszám %d ",KamionStartPoz[playerid][KamPotRendszam]);
				SendFormatMessage(player,COLOR_YELLOW,"[Pót]: Típusa: %s ",GetVehicleModelName(GetVehicleModel(KamionStartPoz[playerid][KamPotRendszam])-400));
				SendClientMessage(player, COLOR_LIGHTBLUE, "=== Menetlevél ===");	
				Cselekves(playerid, "elõvette a menetlevelet és felmutatta...", 0);
				return 1;
			}
			else return SendClientMessage(player, COLOR_YELLOW, "Nincs menetlevél!");

		
		}
		else if(egyezik(param[1], "szállít") || egyezik(param[1], "szallit"))
		{
            if(AMT(playerid, MUNKA_KAMIONOS))
			{
				if(!KamionDepoban(playerid))
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Egy Kamion deppóba kell lenned, menj az egyikbe.!");
					SendClientMessage(playerid, COLOR_YELLOW, "/kamion depó [helyszín]!");
					return 1;
				}
				new tmpcar = GetPlayerVehicleID(playerid);
				if(!IsATruck(tmpcar))
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Szálj bele egy kamionba!");
					return 1;
				}
				if(PlayerInfo[playerid][pKamionJogsi] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nincs kamion jogosítványod. Így nem dolgozhatsz!");
				if (PlayerToPoint(60, playerid, 261.4588,1380.6322,10.2935) && PlayerInfo[playerid][pAdrJogsi] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nincs ADR jogosítványod. Így nem szállíthatsz benzint!");
				if (TakingLesson[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Épp vizsgázól, ezért nem indíthatsz szállítást!");
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetVehicleTrailer(veh) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs felkapcsolva pótkocsi!");
					return 1;
				}
				veh = GetVehicleTrailer(veh);
				if(IsAPlato(veh))
				{
					if(Szallit[playerid] == 1)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Már elfogadtál egy szállítást, vidd le az árút, vagy köbbér ellenében töröld a szállítást. /kamion töröl");
					}
					else
					{

						if (PlayerToPoint(60, playerid, 1415.5291,1052.7705,10.8130)) //chuckup depó felõl LV
						{
							format(KamionStartPoz[playerid][KamKezd],200,"chuckup depó");
							depo=0;
							strmid(kamionpozrandom[0][MissionName], "LS kamion Fõdepó, Ruhák", 0, strlen("LS kamion Fõdepó, Ruhák"), 50);
							kamionpozrandom[0][loadx] =906.5687;
							kamionpozrandom[0][loady] =-1255.5697;
							kamionpozrandom[0][loadz] =15.0013;
							kamionpozrandom[0][Ertek] =1.5;

							strmid(kamionpozrandom[1][MissionName], "LS kikötõ, üveg [törékeny]", 0, strlen("LS kikötõ, üveg [törékeny]"), 50);
							kamionpozrandom[1][loadx] =2240.1658;
							kamionpozrandom[1][loady] =-2471.4060;
							kamionpozrandom[1][loadz] =14.1522;
							kamionpozrandom[1][Ertek] =3;


							strmid(kamionpozrandom[2][MissionName], "Golden kikötõ, nyersanyagok", 0, strlen("Golden kikötõ, nyersanyagok"), 50);
							kamionpozrandom[2][loadx] =-2255.7869;
							kamionpozrandom[2][loady] =2381.8726;
							kamionpozrandom[2][loadz] =4.3230;
							kamionpozrandom[2][Ertek] =2.5;

							strmid(kamionpozrandom[3][MissionName], "Farm depó, Alkatrészek", 0, strlen("Farm depó, Alkatrészek"), 50);
							kamionpozrandom[3][loadx] =-166.4501;
							kamionpozrandom[3][loady] =-254.1376;
							kamionpozrandom[3][loadz] =2.5917;
							kamionpozrandom[3][Ertek] =2.4;

							strmid(kamionpozrandom[4][MissionName], "SF kikötõ, nyersanyagok", 0, strlen("SF kikötõ, nyersanyagok"), 50);
							kamionpozrandom[4][loadx] =-1734.2504;
							kamionpozrandom[4][loady] =183.0582;
							kamionpozrandom[4][loadz] =3.1465;
							kamionpozrandom[4][Ertek] =2.5;
							
							strmid(kamionpozrandom[5][MissionName], "Erõmû telep, Eszközök", 0, strlen("Erõmû telep, Eszközök"), 50);
							kamionpozrandom[5][loadx] =-2396.3308;
							kamionpozrandom[5][loady] =-610.1276;
							kamionpozrandom[5][loadz] =132.6484;
							kamionpozrandom[5][Ertek] =3.2;


						}
						if (PlayerToPoint(60, playerid, 2295.0344,-2346.5205,13.5469))  //LS kikötõ felõl
						{
							depo=1;
							format(KamionStartPoz[playerid][KamKezd],200,"LS kikötõ depó");
							
							strmid(kamionpozrandom[0][MissionName], "Fa telep, Eszközök", 0, strlen("Fa telep, Eszközök"), 50);
							kamionpozrandom[0][loadx] =-444.0576;
							kamionpozrandom[0][loady] =-57.4825;
							kamionpozrandom[0][loadz] =59.8108;
							kamionpozrandom[0][Ertek] =3.2;

							strmid(kamionpozrandom[1][MissionName], "Golden kikötõ, nyersanyagok", 0, strlen("Golden kikötõ, nyersanyagok"), 50);
							kamionpozrandom[1][loadx] =-2255.7869;
							kamionpozrandom[1][loady] =2381.8726;
							kamionpozrandom[1][loadz] =4.3230;
							kamionpozrandom[1][Ertek] =2.5;

							strmid(kamionpozrandom[2][MissionName], "LV gyár depó, Étel", 0, strlen("LV gyár depó, Étel"), 50);
							kamionpozrandom[2][loadx] =253.0824;
							kamionpozrandom[2][loady] =1420.7471;
							kamionpozrandom[2][loadz] =10.2647;
							kamionpozrandom[2][Ertek] =2.3;

							strmid(kamionpozrandom[3][MissionName], "Erõmû telep, Eszközök", 0, strlen("Erõmû telep, Eszközök"), 50);
							kamionpozrandom[3][loadx] =-2396.3308;
							kamionpozrandom[3][loady] =-610.1276;
							kamionpozrandom[3][loadz] =132.6484;
							kamionpozrandom[3][Ertek] =3.2;


							strmid(kamionpozrandom[4][MissionName], "Golden kikötõ, nyersanyagok", 0, strlen("Golden kikötõ, nyersanyagok"), 50);
							kamionpozrandom[4][loadx] =-2255.7869;
							kamionpozrandom[4][loady] =2381.8726;
							kamionpozrandom[4][loadz] =4.3230;
							kamionpozrandom[4][Ertek] =2.5;
							
							strmid(kamionpozrandom[5][MissionName], "Fa telep, Eszközök", 0, strlen("Fa telep, Eszközök"), 50);
							kamionpozrandom[5][loadx] =-444.0576;
							kamionpozrandom[5][loady] =-57.4825;
							kamionpozrandom[5][loadz] =59.8108;
							kamionpozrandom[5][Ertek] =3.2;

						}
						if (PlayerToPoint(60, playerid, 912.3523,-1231.9344,15.0013))  //LS Kamion depó
						{
							depo=2;
							format(KamionStartPoz[playerid][KamKezd],200,"LS kamion depó");
							strmid(kamionpozrandom[0][MissionName], "Golden kikötõ, nyersanyagok", 0, strlen("Golden kikötõ, nyersanyagok"), 50);
							kamionpozrandom[0][loadx] =-2255.7869;
							kamionpozrandom[0][loady] =2381.8726;
							kamionpozrandom[0][loadz] =4.3230;
							kamionpozrandom[0][Ertek] =2.5;

							strmid(kamionpozrandom[1][MissionName], "SF FÕdepó, ruházati cikkek", 0, strlen("SF FÕdepó, ruházati cikkek"), 50);
							kamionpozrandom[1][loadx] =-2071.7722;
							kamionpozrandom[1][loady] =-254.9538;
							kamionpozrandom[1][loadz] =36.0990;
							kamionpozrandom[1][Ertek] =2.5;

							strmid(kamionpozrandom[2][MissionName], "LV Bánya, Alkatrészek.[törékeny]", 0, strlen("LV Bánya, Alkatrészek.[törékeny]"), 50);
							kamionpozrandom[2][loadx] =586.9639;
							kamionpozrandom[2][loady] =844.9031;
							kamionpozrandom[2][loadz] =-42.8207;
							kamionpozrandom[2][Ertek] =2.6;

							strmid(kamionpozrandom[3][MissionName], "Farm depó, Alkatrészek", 0, strlen("Farm depó, Alkatrészek"), 50);
							kamionpozrandom[3][loadx] =-166.4501;
							kamionpozrandom[3][loady] =-254.1376;
							kamionpozrandom[3][loadz] =2.5917;
							kamionpozrandom[3][Ertek] =2.4;

							strmid(kamionpozrandom[4][MissionName], "SF FÕdepó, ruházati cikkek", 0, strlen("SF FÕdepó, ruházati cikkek"), 50);
							kamionpozrandom[4][loadx] =-2071.7722;
							kamionpozrandom[4][loady] =-254.9538;
							kamionpozrandom[4][loadz] =36.0990;
							kamionpozrandom[4][Ertek] =2.5;
							
							strmid(kamionpozrandom[5][MissionName], "Erõmû telep, Eszközök", 0, strlen("Erõmû telep, Eszközök"), 50);
							kamionpozrandom[5][loadx] =-2396.3308;
							kamionpozrandom[5][loady] =-610.1276;
							kamionpozrandom[5][loadz] =132.6484;
							kamionpozrandom[5][Ertek] =3.2;

						}
						if (PlayerToPoint(60, playerid, 693.6850,883.3599,-38.9472))  //LV bánya felõl indulók
						{
							depo=3;
							format(KamionStartPoz[playerid][KamKezd],200,"LV bánya depó");
							strmid(kamionpozrandom[0][MissionName], "Chiliad bánya depó, nyersanyagok", 0, strlen("Chiliad bánya depó, nyersanyagok"), 50);
							kamionpozrandom[0][loadx] =-1863.2732;
							kamionpozrandom[0][loady] =-1717.8804;
							kamionpozrandom[0][loadz] =22.7687;
							kamionpozrandom[0][Ertek] =2.9;


							strmid(kamionpozrandom[1][MissionName], "LS kamion Fõdepó, nyersanyagok", 0, strlen("LS kamion Fõdepó, nyersanyagok"), 50);
							kamionpozrandom[1][loadx] =906.5687;
							kamionpozrandom[1][loady] =-1255.5697;
							kamionpozrandom[1][loadz] =15.0013;
							kamionpozrandom[1][Ertek] =2.4;

							strmid(kamionpozrandom[2][MissionName], "SF FÕdepó, ruházati cikkek", 0, strlen("SF FÕdepó, ruházati cikkek"), 50);
							kamionpozrandom[2][loadx] =-2071.7722;
							kamionpozrandom[2][loady] =-254.9538;
							kamionpozrandom[2][loadz] =36.0990;
							kamionpozrandom[2][Ertek] =2.5;

							strmid(kamionpozrandom[3][MissionName], "LS kikötõ, nyersanyagok", 0, strlen("LS kikötõ, nyersanyagok"), 50);
							kamionpozrandom[3][loadx] =2240.1658;
							kamionpozrandom[3][loady] =-2471.4060;
							kamionpozrandom[3][loadz] =14.1522;
							kamionpozrandom[3][Ertek] =2.5;

							strmid(kamionpozrandom[4][MissionName], "Golden kikötõ, nyersanyagok", 0, strlen("Golden kikötõ, nyersanyagok"), 50);
							kamionpozrandom[4][loadx] =-2255.7869;
							kamionpozrandom[4][loady] =2381.8726;
							kamionpozrandom[4][loadz] =4.3230;
							kamionpozrandom[4][Ertek] =2.5;
							
							strmid(kamionpozrandom[5][MissionName], "Golden kikötõ, nyersanyagok", 0, strlen("Golden kikötõ, nyersanyagok"), 50);
							kamionpozrandom[5][loadx] =-2255.7869;
							kamionpozrandom[5][loady] =2381.8726;
							kamionpozrandom[5][loadz] =4.3230;
							kamionpozrandom[5][Ertek] =2.7;


						}
						if (PlayerToPoint(60, playerid, -1863.2732,-1717.8804,22.7687))  //Chiliad bánya felõl induló
						{
							depo=4;
							format(KamionStartPoz[playerid][KamKezd],200,"Chiliad bánya depó");
							strmid(kamionpozrandom[0][MissionName], "Golden kikötõ, nyersanyagok", 0, strlen("Golden kikötõ, nyersanyagok"), 50);
							kamionpozrandom[0][loadx] =-2255.7869;
							kamionpozrandom[0][loady] =2381.8726;
							kamionpozrandom[0][loadz] =4.3230;
							kamionpozrandom[0][Ertek] =2.5;

							strmid(kamionpozrandom[1][MissionName], "LS kamion Fõdepó, nyersanyagok", 0, strlen("LS kamion Fõdepó, nyersanyagok"), 50);
							kamionpozrandom[1][loadx] =906.5687;
							kamionpozrandom[1][loady] =-1255.5697;
							kamionpozrandom[1][loadz] =15.0013;
							kamionpozrandom[1][Ertek] =2.6;

							strmid(kamionpozrandom[2][MissionName], "LV Bánya, anyagok.", 0, strlen("LV Bánya, anyagok."), 50);
							kamionpozrandom[2][loadx] =586.9639;
							kamionpozrandom[2][loady] =844.9031;
							kamionpozrandom[2][loadz] =-42.8207;
							kamionpozrandom[2][Ertek] =2.9;

							strmid(kamionpozrandom[3][MissionName], "LS kikötõ, nyersanyagok", 0, strlen("LS kikötõ, nyersanyagok"), 50);
							kamionpozrandom[3][loadx] =2240.1658;
							kamionpozrandom[3][loady] =-2471.4060;
							kamionpozrandom[3][loadz] =14.1522;
							kamionpozrandom[3][Ertek] =2.5;

							strmid(kamionpozrandom[4][MissionName], "SF kikötõ, nyersanyagok", 0, strlen("SF kikötõ, nyersanyagok"), 50);
							kamionpozrandom[4][loadx] =-1734.2504;
							kamionpozrandom[4][loady] =183.0582;
							kamionpozrandom[4][loadz] =3.1465;
							kamionpozrandom[4][Ertek] =2.5;
							
							strmid(kamionpozrandom[5][MissionName], "LV Bánya, anyagok.", 0, strlen("LV Bánya, anyagok."), 50);
							kamionpozrandom[5][loadx] =586.9639;
							kamionpozrandom[5][loady] =844.9031;
							kamionpozrandom[5][loadz] =-42.8207;
							kamionpozrandom[5][Ertek] =2.9;

						}
						if(PlayerToPoint(60, playerid, 261.4588,1380.6322,10.2935))  //LV gyárból induló
						{
							depo=5;
							format(KamionStartPoz[playerid][KamKezd],200,"LV gyár depó");
							strmid(kamionpozrandom[0][MissionName], "LS benzin depó, benzin.", 0, strlen("LS benzin depó, benzin."), 50);
							kamionpozrandom[0][loadx] =2680.2637;
							kamionpozrandom[0][loady] =-2123.2629;
							kamionpozrandom[0][loadz] =13.2539;
							kamionpozrandom[0][Ertek] =2.9;

							strmid(kamionpozrandom[1][MissionName], "LS benzin depó, benzin.", 0, strlen("LS benzin depó, benzin."), 50);
							kamionpozrandom[1][loadx] =2680.2637;
							kamionpozrandom[1][loady] =-2123.2629;
							kamionpozrandom[1][loadz] =13.2539;
							kamionpozrandom[1][Ertek] =2.9;

							strmid(kamionpozrandom[2][MissionName], "Chiliad bánya depó, benzin", 0, strlen("Chiliad bánya depó, benzin"), 50);
							kamionpozrandom[2][loadx] =-1863.2732;
							kamionpozrandom[2][loady] =-1717.8804;
							kamionpozrandom[2][loadz] =22.7687;
							kamionpozrandom[2][Ertek] =2.9;

							strmid(kamionpozrandom[3][MissionName], "Farm depó, Alkatrészek", 0, strlen("Farm depó, Alkatrészek"), 50);
							kamionpozrandom[3][loadx] =-166.4501;
							kamionpozrandom[3][loady] =-254.1376;
							kamionpozrandom[3][loadz] =2.5917;
							kamionpozrandom[3][Ertek] =2.6;

							strmid(kamionpozrandom[4][MissionName], "Golden kikötõ, benzin", 0, strlen("Golden kikötõ, benzin"), 50);
							kamionpozrandom[4][loadx] =-2255.7869;
							kamionpozrandom[4][loady] =2381.8726;
							kamionpozrandom[4][loadz] =4.3230;
							kamionpozrandom[4][Ertek] =2.9;
							
							strmid(kamionpozrandom[5][MissionName], "Erõmû telep, Eszközök", 0, strlen("Erõmû telep, Eszközök"), 50);
							kamionpozrandom[5][loadx] =-2396.3308;
							kamionpozrandom[5][loady] =-610.1276;
							kamionpozrandom[5][loadz] =132.6484;
							kamionpozrandom[5][Ertek] =3.2;

						}
						if(PlayerToPoint(60, playerid, -1732.6672, 110.6683, 3.1465)) //SF kikötõbõl
						{
							depo=6;
							format(KamionStartPoz[playerid][KamKezd],200,"SF kikötõ depó");
							strmid(kamionpozrandom[0][MissionName], "LS kamion Fõdepó, nyersanyagok", 0, strlen("LS kamion Fõdepó, nyersanyagok"), 50);
							kamionpozrandom[0][loadx] =906.5687;
							kamionpozrandom[0][loady] =-1255.5697;
							kamionpozrandom[0][loadz] =15.0013;
							kamionpozrandom[0][Ertek] =2.4;

							strmid(kamionpozrandom[1][MissionName], "LS kamion Fõdepó, nyersanyagok", 0, strlen("LS kamion Fõdepó, nyersanyagok"), 50);
							kamionpozrandom[1][loadx] =906.5687;
							kamionpozrandom[1][loady] =-1255.5697;
							kamionpozrandom[1][loadz] =15.0013;
							kamionpozrandom[1][Ertek] =2.4;

							strmid(kamionpozrandom[2][MissionName], "Chiliad bánya depó, nyersanyagok", 0, strlen("Chiliad bánya depó, nyersanyagok"), 50);
							kamionpozrandom[2][loadx] =-1863.2732;
							kamionpozrandom[2][loady] =-1717.8804;
							kamionpozrandom[2][loadz] =22.7687;
							kamionpozrandom[2][Ertek] =2.9;

							strmid(kamionpozrandom[3][MissionName], "Farm depó, Alkatrészek", 0, strlen("Farm depó, Alkatrészek"), 50);
							kamionpozrandom[3][loadx] =-166.4501;
							kamionpozrandom[3][loady] =-254.1376;
							kamionpozrandom[3][loadz] =2.5917;
							kamionpozrandom[3][Ertek] =2.9;

							strmid(kamionpozrandom[4][MissionName], "Golden kikötõ, hal", 0, strlen("Golden kikötõ, hal"), 50);
							kamionpozrandom[4][loadx] =-2255.7869;
							kamionpozrandom[4][loady] =2381.8726;
							kamionpozrandom[4][loadz] =4.3230;
							kamionpozrandom[4][Ertek] =2.9;
							
							strmid(kamionpozrandom[5][MissionName], "Golden kikötõ, hal", 0, strlen("Golden kikötõ, hal"), 50);
							kamionpozrandom[5][loadx] =-2255.7869;
							kamionpozrandom[5][loady] =2381.8726;
							kamionpozrandom[5][loadz] =4.3230;
							kamionpozrandom[5][Ertek] =3.1;
						}
						if(PlayerToPoint(60, playerid, -2027.1521, -204.5435, 36.0990))//SF volt oktató
						{
							depo=7;
							format(KamionStartPoz[playerid][KamKezd],200,"SF fõdepó");
							strmid(kamionpozrandom[0][MissionName], "LV gyár depó, Alkatrészek[törékeny]", 0, strlen("LV gyár depó, Alkatrészek[törékeny]"), 50);
							kamionpozrandom[0][loadx] =253.0824;
							kamionpozrandom[0][loady] =1420.7471;
							kamionpozrandom[0][loadz] =10.2647;
							kamionpozrandom[0][Ertek] =2.5;

							strmid(kamionpozrandom[1][MissionName], "LS kamion Fõdepó, nyersanyagok", 0, strlen("LS kamion Fõdepó, nyersanyagok"), 50);
							kamionpozrandom[1][loadx] =906.5687;
							kamionpozrandom[1][loady] =-1255.5697;
							kamionpozrandom[1][loadz] =15.0013;
							kamionpozrandom[1][Ertek] =2.6;

							strmid(kamionpozrandom[2][MissionName], "LV Bánya, anyagok.", 0, strlen("LV Bánya, anyagok."), 50);
							kamionpozrandom[2][loadx] =586.9639;
							kamionpozrandom[2][loady] =844.9031;
							kamionpozrandom[2][loadz] =-42.8207;
							kamionpozrandom[2][Ertek] =2.9;

							strmid(kamionpozrandom[3][MissionName], "LS kikötõ, nyersanyagok", 0, strlen("LS kikötõ, nyersanyagok"), 50);
							kamionpozrandom[3][loadx] =2240.1658;
							kamionpozrandom[3][loady] =-2471.4060;
							kamionpozrandom[3][loadz] =14.1522;
							kamionpozrandom[3][Ertek] =2.5;

							strmid(kamionpozrandom[4][MissionName], "Golden kikötõ, nyersanyagok", 0, strlen("Golden kikötõ, nyersanyagok"), 50);
							kamionpozrandom[4][loadx] =-2255.7869;
							kamionpozrandom[4][loady] =2381.8726;
							kamionpozrandom[4][loadz] =4.3230;
							kamionpozrandom[4][Ertek] =2.9;
							
							strmid(kamionpozrandom[5][MissionName], "Erõmû telep, Eszközök", 0, strlen("Erõmû telep, Eszközök"), 50);
							kamionpozrandom[5][loadx] =-2396.3308;
							kamionpozrandom[5][loady] =-610.1276;
							kamionpozrandom[5][loadz] =132.6484;
							kamionpozrandom[5][Ertek] =3.2;
						}
						if(PlayerToPoint(60, playerid, -2277.9685, 2408.8477, 4.3230))//LVkisváros
						{
							depo=8;
							format(KamionStartPoz[playerid][KamKezd],200,"LV Golden depó");
							strmid(kamionpozrandom[0][MissionName], "LV Chuckup, csomagoló anyagok.", 0, strlen("LV Chuckup, csomagoló anyagok"), 50);
							kamionpozrandom[0][loadx] =1384.1245,
							kamionpozrandom[0][loady] =1044.4105,
							kamionpozrandom[0][loadz] =11.4239,
							kamionpozrandom[0][Ertek] =2.2;

							strmid(kamionpozrandom[1][MissionName], "LS kamion Fõdepó, nyersanyagok", 0, strlen("LS kamion Fõdepó, nyersanyagok"), 50);
							kamionpozrandom[1][loadx] =906.5687;
							kamionpozrandom[1][loady] =-1255.5697;
							kamionpozrandom[1][loadz] =15.0013;
							kamionpozrandom[1][Ertek] =2.6;

							strmid(kamionpozrandom[2][MissionName], "Farm depó, Alkatrészek", 0, strlen("Farm depó, Alkatrészek"), 50);
							kamionpozrandom[2][loadx] =-166.4501;
							kamionpozrandom[2][loady] =-254.1376;
							kamionpozrandom[2][loadz] =2.5917;
							kamionpozrandom[2][Ertek] =2.9;

							strmid(kamionpozrandom[3][MissionName], "LS kikötõ, nyersanyagok", 0, strlen("LS kikötõ, nyersanyagok"), 50);
							kamionpozrandom[3][loadx] =2240.1658;
							kamionpozrandom[3][loady] =-2471.4060;
							kamionpozrandom[3][loadz] =14.1522;
							kamionpozrandom[3][Ertek] =2.5;

							strmid(kamionpozrandom[4][MissionName], "SF FÕdepó, nyersanyagok", 0, strlen("SF FÕdepó, nyersanyagok"), 50);
							kamionpozrandom[4][loadx] =-2071.7722;
							kamionpozrandom[4][loady] =-254.9538;
							kamionpozrandom[4][loadz] =36.0990;
							kamionpozrandom[4][Ertek] =2.5;
							
							strmid(kamionpozrandom[5][MissionName], "Fa telep, Eszközök", 0, strlen("Fa telep, Eszközök"), 50);
							kamionpozrandom[5][loadx] =-444.0576;
							kamionpozrandom[5][loady] =-57.4825;
							kamionpozrandom[5][loadz] =59.8108;
							kamionpozrandom[5][Ertek] =3.2;
						}
						if(PlayerToPoint(60, playerid, 65.6033,-249.1413,2.6100)) //Farm depó felõl
						{
							
							depo=9;
							format(KamionStartPoz[playerid][KamKezd],200,"Farm depó");
							strmid(kamionpozrandom[0][MissionName], "LS kamion Fõdepó, Gabona", 0, strlen("LS kamion Fõdepó, Gabona"), 50);
							kamionpozrandom[0][loadx] =906.5687;
							kamionpozrandom[0][loady] =-1255.5697;
							kamionpozrandom[0][loadz] =15.0013;
							kamionpozrandom[0][Ertek] =2.5;

							strmid(kamionpozrandom[1][MissionName], "LS kikötõ, Gabona", 0, strlen("LS kikötõ, Gabona"), 50);
							kamionpozrandom[1][loadx] =2240.1658;
							kamionpozrandom[1][loady] =-2471.4060;
							kamionpozrandom[1][loadz] =14.1522;
							kamionpozrandom[1][Ertek] =3;


							strmid(kamionpozrandom[2][MissionName], "Golden kikötõ, Gabona", 0, strlen("Golden kikötõ, Gabona"), 50);
							kamionpozrandom[2][loadx] =-2255.7869;
							kamionpozrandom[2][loady] =2381.8726;
							kamionpozrandom[2][loadz] =4.3230;
							kamionpozrandom[2][Ertek] =2.9;

							strmid(kamionpozrandom[3][MissionName], "Chiliad bánya depó, Gabona", 0, strlen("Chiliad bánya depó, Gabona"), 50);
							kamionpozrandom[3][loadx] =-1863.2732;
							kamionpozrandom[3][loady] =-1717.8804;
							kamionpozrandom[3][loadz] =22.7687;
							kamionpozrandom[3][Ertek] =2.3;

							strmid(kamionpozrandom[4][MissionName], "SF kikötõ, Gabona", 0, strlen("SF kikötõ, Gabona"), 50);
							kamionpozrandom[4][loadx] =-1734.2504;
							kamionpozrandom[4][loady] =183.0582;
							kamionpozrandom[4][loadz] =3.1465;
							kamionpozrandom[4][Ertek] =2.5;
							
							strmid(kamionpozrandom[5][MissionName], "Erõmû telep, Eszközök", 0, strlen("Erõmû telep, Eszközök"), 50);
							kamionpozrandom[5][loadx] =-2396.3308;
							kamionpozrandom[5][loady] =-610.1276;
							kamionpozrandom[5][loadz] =132.6484;
							kamionpozrandom[5][Ertek] =3.2;
						}
						if(PlayerToPoint(60, playerid, -463.9242,-81.2976,60.5539)) //Fatelep depó felõl
						{
							
							depo=10;
							format(KamionStartPoz[playerid][KamKezd],200,"Fatelep depó");
							strmid(kamionpozrandom[0][MissionName], "LS kamion Fõdepó, fa áruk", 0, strlen("LS kamion Fõdepó, fa áruk"), 50);
							kamionpozrandom[0][loadx] =906.5687;
							kamionpozrandom[0][loady] =-1255.5697;
							kamionpozrandom[0][loadz] =15.0013;
							kamionpozrandom[0][Ertek] =2.5;

							strmid(kamionpozrandom[1][MissionName], "LS kikötõ, fa áruk", 0, strlen("LS kikötõ, fa áruk"), 50);
							kamionpozrandom[1][loadx] =2240.1658;
							kamionpozrandom[1][loady] =-2471.4060;
							kamionpozrandom[1][loadz] =14.1522;
							kamionpozrandom[1][Ertek] =3;


							strmid(kamionpozrandom[2][MissionName], "Golden kikötõ, fa áruk", 0, strlen("Golden kikötõ, fa áruk"), 50);
							kamionpozrandom[2][loadx] =-2255.7869;
							kamionpozrandom[2][loady] =2381.8726;
							kamionpozrandom[2][loadz] =4.3230;
							kamionpozrandom[2][Ertek] =2.9;

							strmid(kamionpozrandom[3][MissionName], "Chiliad bánya depó, fa áruk", 0, strlen("Chiliad bánya depó, fa áruk"), 50);
							kamionpozrandom[3][loadx] =-1863.2732;
							kamionpozrandom[3][loady] =-1717.8804;
							kamionpozrandom[3][loadz] =22.7687;
							kamionpozrandom[3][Ertek] =2.3;

							strmid(kamionpozrandom[4][MissionName], "SF kikötõ, bútor", 0, strlen("SF kikötõ, bútor"), 50);
							kamionpozrandom[4][loadx] =-1734.2504;
							kamionpozrandom[4][loady] =183.0582;
							kamionpozrandom[4][loadz] =3.1465;
							kamionpozrandom[4][Ertek] =2.5;
							
							strmid(kamionpozrandom[5][MissionName], "LS kikötõ, bútor", 0, strlen("LS kikötõ, bútor"), 50);
							kamionpozrandom[5][loadx] =2240.1658;
							kamionpozrandom[5][loady] =-2471.4060;
							kamionpozrandom[5][loadz] =14.1522;
							kamionpozrandom[5][Ertek] =3;
						}
						if(PlayerToPoint(60, playerid, -2396.3308,-610.1276,132.6484)) //Erõmû depó felõl
						{
							
							depo=11;
							format(KamionStartPoz[playerid][KamKezd],200,"Erõmû depó");
							strmid(kamionpozrandom[0][MissionName], "LS kamion Fõdepó, alkatrészek", 0, strlen("LS kamion Fõdepó, alkatrészek"), 50);
							kamionpozrandom[0][loadx] =906.5687;
							kamionpozrandom[0][loady] =-1255.5697;
							kamionpozrandom[0][loadz] =15.0013;
							kamionpozrandom[0][Ertek] =2.5;

							strmid(kamionpozrandom[1][MissionName], "LS kikötõ, alkatrészek", 0, strlen("LS kikötõ, alkatrészek"), 50);
							kamionpozrandom[1][loadx] =2240.1658;
							kamionpozrandom[1][loady] =-2471.4060;
							kamionpozrandom[1][loadz] =14.1522;
							kamionpozrandom[1][Ertek] =3;


							strmid(kamionpozrandom[2][MissionName], "Golden kikötõ, alkatrészek", 0, strlen("Golden kikötõ, alkatrészek"), 50);
							kamionpozrandom[2][loadx] =-2255.7869;
							kamionpozrandom[2][loady] =2381.8726;
							kamionpozrandom[2][loadz] =4.3230;
							kamionpozrandom[2][Ertek] =2.9;

							strmid(kamionpozrandom[3][MissionName], "Chiliad bánya depó, alkatrészek", 0, strlen("Chiliad bánya depó, alkatrészek"), 50);
							kamionpozrandom[3][loadx] =-1863.2732;
							kamionpozrandom[3][loady] =-1717.8804;
							kamionpozrandom[3][loadz] =22.7687;
							kamionpozrandom[3][Ertek] =2.3;

							strmid(kamionpozrandom[4][MissionName], "SF kikötõ, alkatrészek", 0, strlen("SF kikötõ, alkatrészek"), 50);
							kamionpozrandom[4][loadx] =-1734.2504;
							kamionpozrandom[4][loady] =183.0582;
							kamionpozrandom[4][loadz] =3.1465;
							kamionpozrandom[4][Ertek] =2.5;
							
							strmid(kamionpozrandom[5][MissionName], "Golden kikötõ, alkatrészek", 0, strlen("Golden kikötõ, alkatrészek"), 50);
							kamionpozrandom[5][loadx] =-2255.7869;
							kamionpozrandom[5][loady] =2381.8726;
							kamionpozrandom[5][loadz] =4.3230;
							kamionpozrandom[5][Ertek] =2.9;
						}
						vehicleid = GetPlayerVehicleID(playerid);
						if(vehicleid != 0)
							{
								GetVehicleHealth(vehicleid, KamionStartPoz[playerid][KamElet]);
							}
						//
						if(KamionUtvaltas[depo] > 2 && KamionUtvaltasTime[depo] < UnixTime)
						{
							KamionUtvonal[playerid] = random(sizeof(kamionpozrandom));
							KamionRandom[depo] = KamionUtvonal[playerid];
							KamionUtvaltas[depo]=1;
						}
						else
						{
							KamionUtvaltas[depo]++;
							KamionUtvaltasTime[depo] = UnixTime+120;
							KamionUtvonal[playerid] = KamionRandom[depo];
						}
						//
						KamionStartPoz[playerid][KamX]=kamionpozrandom[KamionUtvonal[playerid] ][loadx];
						KamionStartPoz[playerid][KamY]=kamionpozrandom[KamionUtvonal[playerid] ][loady];
						KamionStartPoz[playerid][KamZ]=kamionpozrandom[KamionUtvonal[playerid] ][loadz];
						KamionStartPoz[playerid][KamSzorzo]=kamionpozrandom[KamionUtvonal[playerid] ][Ertek];
						//KamionStartPoz[playerid][kamSzallit] = kamionpozrandom[KamionUtvonal[playerid] ][MissionName]
						format(KamionStartPoz[playerid][KamCel],200,"%s",kamionpozrandom[KamionUtvonal[playerid] ][MissionName]);
						format(string, sizeof(string), "[KAMIONOS FUVAR]: %s",KamionStartPoz[playerid][KamCel]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						SetPlayerCheckpoint(playerid, KamionStartPoz[playerid][KamX],KamionStartPoz[playerid][KamY],KamionStartPoz[playerid][KamZ], 4);
						Szallit[playerid] = 1;
						GetPlayerPos(playerid,KamionStartx[playerid],KamionStarty[playerid],KamionStartz[playerid]);
						KamionStartPoz[playerid][KamTavolsag] = GetDistanceBetweenPoints(KamionStartx[playerid],KamionStarty[playerid],KamionStartz[playerid],KamionStartPoz[playerid][KamX],KamionStartPoz[playerid][KamY],KamionStartPoz[playerid][KamZ]);
						KamionStartPoz[playerid][KamFizetes] = floatround(KamionStartPoz[playerid][KamTavolsag]  * 8.5 * KamionStartPoz[playerid][KamSzorzo]);
						format(string, sizeof(string), "[Kamion fuvar]: Távolság]:%.3f | Várható bevétel: %d Ft|", KamionStartPoz[playerid][KamTavolsag],KamionStartPoz[playerid][KamFizetes]);
						KamionStartPoz[playerid][KamRendszam] = tmpcar;
						KamionStartPoz[playerid][KamPotRendszam] = veh;
						SendClientMessage(playerid, COLOR_RED, string);
						
						if(GetJarmu(vehicleid, KOCSI_LAMPA) == 1)
						{
							if(CarPart[vehicleid][cAkkumulator] < 1)//akku
								return Msg(playerid, "Lemerült az akkumulátor!");//akku
	
							TrailerHatsoLampa(vehicleid, true);
						}
						
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Nem vagy kamion sofõr!");
				return 1;
			}
		}
		else if(egyezik(param[1], "depó"))
		{
			if (params <2)
			{
			SendClientMessage(playerid, COLOR_YELLOW, "/kamion depó [helyszín]");
			SendClientMessage(playerid, COLOR_YELLOW, "[LSkikötõ / LVChuckup / LSdepó / LVgyár /  LVBánya / ChiliadBánya / GoldKikötõ / SFkikötõ / SFfõdepó / farm / töröl / szállítás]");
			}
			else if(egyezik(param[2], "farm"))
			{
				SetPlayerCheckpoint(playerid, 65.6033,-249.1413,2.6100, 3);
				SendClientMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Beállítva célnak: Farm depó");
			}
			else if(egyezik(param[2], "GoldKikötõ"))
			{
			SetPlayerCheckpoint(playerid, -2255.7869, 2381.8726, 4.3230, 3);
			SendClientMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Beállítva célnak: Gold kikötõ depó");
			}
			else if(egyezik(param[2], "SFkikötõ"))
			{
			SetPlayerCheckpoint(playerid, -1734.2504, 183.0582, 3.1465, 3);
			SendClientMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Beállítva célnak: SF kikötõ depó");
			}
			else if(egyezik(param[2], "SFfõdepó"))
			{
			SetPlayerCheckpoint(playerid, -2071.7722, -254.9538, 36.0990, 3);
			SendClientMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Beállítva célnak: SF fõ depó");
			}
			else if(egyezik(param[2], "LSdepó"))
			{
			SetPlayerCheckpoint(playerid, 906.5687,-1255.5697,15.0013, 3);
			SendClientMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Beállítva célnak: LS depó");
			}
			else if(egyezik(param[2], "LSkikötõ"))
			{
			SetPlayerCheckpoint(playerid, 2293.8008,-2329.5698,14.5572, 3);
			SendClientMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Beállítva célnak: LSkikötõ");
			}
			else if(egyezik(param[2],"LVchuckup"))
			{
			SetPlayerCheckpoint(playerid, 1415.0502,1055.7168,11.4100, 3);
			SendClientMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Beállítva célnak: LVchuckup");
			}
			else if(egyezik(param[2],"ChiliadBánya"))
			{
			SetPlayerCheckpoint(playerid, -1863.2732,-1717.8804,22.7687, 3);
			SendClientMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Beállítva célnak:ChiliadBánya");
			}
			else if(egyezik(param[2],"LVBánya"))
			{
			SetPlayerCheckpoint(playerid, 693.6850,883.3599,-38.9472, 3);
			SendClientMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Beállítva célnak: LVBánya");
			}
			else if(egyezik(param[2],"LVGyár"))
			{
			SetPlayerCheckpoint(playerid, 261.4588,1380.6322,10.2935, 3);
			SendClientMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Beállítva célnak: LVGyár");
			}
			else if(egyezik(param[2],"töröl"))
			{
			DisablePlayerCheckpoint(playerid);
		    SendClientMessage(playerid, COLOR_YELLOW2, "[Kamion GPS]: jelek törölve!");
			}
			else if(egyezik(param[2],"szállítás"))
			{
				if (Szallit[playerid] == 1)
				{
					SetPlayerCheckpoint(playerid, KamionStartPoz[playerid][KamX],KamionStartPoz[playerid][KamY],KamionStartPoz[playerid][KamZ], 4);
					SendFormatMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Beállítva célnak: %s",KamionStartPoz[playerid][KamCel]);
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "[Kamion GPS] Nem szállítász jelenleg");
				}
			}
			else
			{
			SendClientMessage(playerid, COLOR_YELLOW, "/kamion depó [helyszín]");
			SendClientMessage(playerid, COLOR_YELLOW, "[LSkikötõ / LVChuckup / LSdepó / LVgyár /  LVBánya / ChiliadBánya / töröl / szállítás]");
			}

		}
		else if(egyezik(param[1], "töröl"))
		{
			if (Szallit[playerid] == 1)
			{
				if(KamionDepoban(playerid))
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Törölted az aktuális szállítást, ezért köbbért kellet fizetned, 10000 Ft-ot!");
					GiveMoney(playerid, -10000);
					Szallit[playerid] = 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Csak Kamion depó-ba mondhatod le!!!");
				}
			}
			else
			{
			SendClientMessage(playerid, COLOR_YELLOW, "Nem kezdtél el szállítást!");
			}
		}
		else if(egyezik(param[1], "lerak"))
		{
            if(AMT(playerid, MUNKA_KAMIONOS))
			{
				if(Szallit[playerid] == 1)
				{
					if(PlayerToPoint(10, playerid, KamionStartPoz[playerid][KamX],KamionStartPoz[playerid][KamY],KamionStartPoz[playerid][KamZ]))
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						if(!IsATruck(tmpcar))
						{
							SendClientMessage(playerid, COLOR_YELLOW, "Nem vagy kamionba!");
							return 1;
						}
						if(KamionStartPoz[playerid][KamRendszam] != tmpcar)
						{
							Msg(playerid, "Ezzel a kamionnal nincs bejegyzet szállítás, hibás menetlevél. Ezért nem veszünk át árut");
							SendFormatMessage(playerid, COLOR_RED,"[MENTELEVÉL]: Rendszám: %d, AMivel jöttél %d",KamionStartPoz[playerid][KamRendszam],tmpcar);
							return 1;
						}
						
						if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetVehicleTrailer(veh) == 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTRED, "Szerintem nem vedted fel az árút vagy elhagytad!");
							return 1;
						}
						
						veh = GetVehicleTrailer(veh);
						if(veh != KamionStartPoz[playerid][KamPotRendszam])
						{
							SendClientMessage(playerid, COLOR_LIGHTRED, "Nem megfelelõ vontatmány!");
							SendFormatMessage(playerid, COLOR_RED,"[MENTELEVÉL]: Rendszám: %d, AMivel jöttél %d",KamionStartPoz[playerid][KamPotRendszam],veh);
							return 1;
						}
						if(IsAPlato(veh))
						{
							new Float:KamionElet;
							vehicleid = GetPlayerVehicleID(playerid);
							if(vehicleid != 0)
								GetVehicleHealth(vehicleid, KamionElet);

							if(KamionStartPoz[playerid][KamElet] < KamionElet)
								KamionStartPoz[playerid][KamElet] = KamionElet;

							new Float:serules= KamionElet/KamionStartPoz[playerid][KamElet];
							Szallit[playerid] = 0;
							TrailerHatsoLampa(vehicleid, false);
							SetTimerEx("Munkavege", 5000, false, "ddd", playerid, M_KAMION, 0);
							KocsiRespawn(veh);
							
							
							new fizet=floatround(KamionStartPoz[playerid][KamFizetes] * serules);
							new levon=KamionStartPoz[playerid][KamFizetes] - fizet;
							levon=floatround(KamionStartPoz[playerid][KamSzorzo]*levon);
							fizet = KamionStartPoz[playerid][KamFizetes];
							fizet -= levon;
							format(string, sizeof(string), "~g~~h~+%d Ft",fizet);
							GameTextForPlayer(playerid, string, 5000, 1);
							serules=(1.0-serules)*100;
							new berles;
							if(IsKocsi(tmpcar, "Kamion"))
							{
								berles = floatround(KamionStartPoz[playerid][KamFizetes]*0.2);
								fizet -=berles;
								SendFormatMessage(playerid, COLOR_RED, "Céges kamion díj: %d Ft",berles);
							}
							else berles = 0;
							format(string, sizeof(string), "[Kamion fuvar]: Sérülése: %.3f | Szállítási díj: %d Ft | Sérülés miatt levontak: %d Ft | Kapott fizetés: %d Ft |", serules, KamionStartPoz[playerid][KamFizetes], levon, fizet);
							SendClientMessage(playerid, COLOR_RED, string);
							
							PlayerInfo[playerid][pPayCheck] += fizet;
							Freeze(playerid);
						}

					}
					else
					{
						format(string, sizeof(string), "[Kamion GPS] Beállítva célnak: Aktuális szállítási cél: %s",KamionStartPoz[playerid][KamCel]);
						SendClientMessage(playerid, COLOR_YELLOW, string);
						SetPlayerCheckpoint(playerid, KamionStartPoz[playerid][KamX],KamionStartPoz[playerid][KamY],KamionStartPoz[playerid][KamZ], 3);
						
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "Nem is kezdtél el szállítani...");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Nem vagy kamion sofõr!");
				return 1;
			}
		}
		else
			Msg(playerid, "Használata: /kamion [szállít/lerak/töröl/depó]");

		return 1;
	}
// pilóta
	if(egyezik(cmd, "/objectek"))
	{
	    if(!IsScripter(playerid)) return 1;
		if(params < 1) return Msg(playerid, "Használata: /objectek [loadfs/unloadfs]");

		if(egyezik(param[1], "loadfs"))
		{
			SendRconCommand("loadfs Objectek");
			Msg(playerid, "Objectek betöltve");
		}
		if(egyezik(param[1], "unloadfs"))
		{
			SendRconCommand("unloadfs Objectek");
			Msg(playerid, "Objectek törölve.");
		}
		return 1;
	}
	if(strcmp(cmd, "/pilotaradio", true) == 0 || strcmp(cmd, "/pr", true) == 0)
	{
		new result[128];
   		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /pr [IC Üzeneted]");
		
		new tmpcar = GetPlayerVehicleID(playerid);
		if(LMT(playerid, FRAKCIO_KATONASAG) && !PlayerToPoint(10, playerid, 213.6858,1822.7659,6.4141) && !IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy jármûben, vagy az irányítópultnál!");
		elseif(!AdminDuty[playerid] && !PlayerToPoint(10, playerid, -340.553, 1985.268, 131.489)) return Msg(playerid, "Nem vagy az AHEGY2-ön Admin Szolgálatban.");
		elseif(!LMT(playerid, FRAKCIO_KATONASAG) && !IsARepulo(tmpcar)) return SendClientMessage(playerid, COLOR_YELLOW, "Nem vagy repülõben, ezért nem használhatod a rádiót!");
		
		if(IsAKatonaCar(tmpcar) || PlayerToPoint(10, playerid, 213.6858,1822.7659,6.4141))
			format(string, sizeof(string), "**Légiirányítás: %s: %s, vége**", ICPlayerName(playerid), result);
		else if(IsACopCar(tmpcar))
			format(string, sizeof(string), "** Rendõrség: %s: %s, vége**", ICPlayerName(playerid), result);
		else if(IsHydraOrHunter(tmpcar) && IsAKatonaCar(tmpcar))
			format(string, sizeof(string), "** Légierõ: %s: %s, vége**", ICPlayerName(playerid), result);
		else if(IsARepulo(tmpcar))
			format(string, sizeof(string), "** Pilóta: %s: %s, vége**", ICPlayerName(playerid), result);
		else if(IsAdmin(playerid) || PlayerToPoint(10, playerid, -340.553, 1985.268, 131.489))
			format(string, sizeof(string), "** [OOC]Admin: %s: %s **", AdminName(playerid), result);

			
		SendMessage(SEND_MESSAGE_RADIO_REPULO, string, TEAM_BLUE_COLOR);
		return 1;
	}
	if(strcmp(cmd, "/pilotaradiob", true) == 0 || strcmp(cmd, "/prb", true) == 0)
	{
		new result[128];
   		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /prb [OOC Üzeneted] {F81414}KIZÁRÓLAG ELÍRÁS JAVÍTÁSÁRA HASZNÁLHATÓ!");
		
		new tmpcar = GetPlayerVehicleID(playerid);
		if(LMT(playerid, FRAKCIO_KATONASAG) && !PlayerToPoint(10, playerid, 213.6858,1822.7659,6.4141) && !IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy jármûben, vagy az irányítópultnál!");
		//elseif(!AdminDuty[playerid] && !PlayerToPoint(10, playerid, -340.553, 1985.268, 131.489)) return Msg(playerid, "Nem vagy az AHEGY2-ön.");
		elseif(!LMT(playerid, FRAKCIO_KATONASAG) && !IsARepulo(tmpcar)) return SendClientMessage(playerid, COLOR_YELLOW, "Nem vagy repülõben, ezért nem használhatod a rádiót!");
		
		if(IsAKatonaCar(tmpcar) || PlayerToPoint(10, playerid, 213.6858,1822.7659,6.4141))
			format(string, sizeof(string), "** [OOC]Légiirányítás: %s: %s **", ICPlayerName(playerid), result);
		else if(IsACopCar(tmpcar))
			format(string, sizeof(string), "** [OOC]Rendõrség: %s: %s **", ICPlayerName(playerid), result);
		else if(IsHydraOrHunter(tmpcar) && IsAKatonaCar(tmpcar))
			format(string, sizeof(string), "** [OOC]Légierõ: %s: %s **", ICPlayerName(playerid), result);
		else if(IsARepulo(tmpcar))
			format(string, sizeof(string), "** [OOC]Pilóta: %s: %s **", ICPlayerName(playerid), result);
		else if(IsAdmin(playerid) || PlayerToPoint(10, playerid, -340.553, 1985.268, 131.489))
			format(string, sizeof(string), "** [OOC]Admin: %s: %s **", AdminName(playerid), result);

			
		SendMessage(SEND_MESSAGE_RADIO_REPULO, string, TEAM_BLUE_COLOR);
		return 1;
	}
    if(strcmp(cmd, "/kamionradio", true) == 0 || strcmp(cmd, "/kr", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /(K)amion(R)adio [IC Üzeneted]");

			new tmpcar = GetPlayerVehicleID(playerid);
			if(!IsATruck(tmpcar))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Nem vagy kamionba, ezért nem használhatod a rádiót!");
				return 1;
			}

			if(AMT(playerid, MUNKA_KAMIONOS))
			{
	      		format(string, sizeof(string), "** Kamionos %s: %s vége**", ICPlayerName(playerid), result);
				SendMessage(SEND_MESSAGE_TRUCK, string, TEAM_BLUE_COLOR);
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ezt csak kamion sofõrök használhatják!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/kamionradiob", true) == 0 || strcmp(cmd, "/krb", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new result[128];
   			if(sscanf(pms, "s[128]", result)) return Msg(playerid,"Használat: /krb [OOC Üzeneted]");

			new tmpcar = GetPlayerVehicleID(playerid);
			if(!IsATruck(tmpcar)) return Msg(playerid,"Nem vagy kamionba, ezért nem használhatod a rádiót!");


			if(AMT(playerid, MUNKA_KAMIONOS))
			{
	      		format(string, sizeof(string), "** Kamionos %s[OOC]:((%s))", PlayerName(playerid), result);
				SendMessage(SEND_MESSAGE_TRUCK, string, TEAM_BLUE_COLOR);
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ezt csak kamion sofõrök használhatják!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/munka", true) == 0)
	{
	    if(PlayerToPoint(1, playerid, 362.639312, 169.937469, 1025.789062) && GetPlayerInterior(playerid) == 3)
	    {
	        new tipus;

			if(PlayerToPoint(1, playerid, 2525.047119, -1289.786499, 1048.289062) && GetPlayerInterior(playerid) == 2)
			    tipus = 0; // Illegális
			else
			    tipus = 1; // Legális

	        new munka, p = playerid;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			    munka = 1;
			else
			    munka = strval(tmp);

			if(munka < 1 || munka > 2)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "Használata: /munka 1 vagy /munka 2 | Ha nem irsz számot 1es lesz!");

	        if(munka == 1)
	        {
		        if(PlayerInfo[playerid][pJob1] > 0)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "Már van munkád!");
			}
			else
			{
		        if(PlayerInfo[playerid][pJob2] > 0)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "Már van másodmunkád!");
				if(PlayerInfo[playerid][pMember] == 0 && PlayerInfo[playerid][pLeader] == 0)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "A civileknek csak egy munkája lehet!");
				if(LegalisSzervezetTagja(p))
				{
				    if(tipus == 0)
				        return SendClientMessage(playerid, COLOR_LIGHTRED, "Illegális másodmunkát csak Illegális szervezet tagja vehet fel!");
				}
				else
				{
				    if(tipus == 1)
				        return SendClientMessage(playerid, COLOR_LIGHTRED, "Legális másodmunkát csak Legális szervezet tagja vehet fel!");
				}
			}

			new munkak[400];
			for(new mm = 0; mm < sizeof(LegalisMunkak); mm++)
			{
				if(LegalisMunkak[mm][2][0] > 1)
					Format(munkak, "%s%s (Szint: %d)\n", munkak, LegalisMunkak[mm][1], LegalisMunkak[mm][2][0]);
				else
					Format(munkak, "%s%s\n", munkak, LegalisMunkak[mm][1]);
			}

			ShowPlayerDialog(playerid, DIALOG_MUNKA_LEGALIS, DIALOG_STYLE_LIST, "Munkafelvétel", munkak, "Felvesz", "Mégse");
			

            MunkaFelvetel[playerid] = munka;

			TogglePlayerControllable(playerid, false);
	    	return 1;
	    }
	    else
			return SendClientMessage(playerid, COLOR_YELLOW, "Nem vagy egyik munkafelvevõ helyen sem!");
	}

	if(strcmp(cmd, "/átad", true) == 0 || strcmp(cmd, "/atad", true) == 0)
	{
	    if(FloodCheck(playerid)) return 1;
		
		

	    new neki, mit[256], db;

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid,COLOR_LIGHTRED,"Használata: /átad [Név(részlet)/Id] [mit]");
			SendClientMessage(playerid,COLOR_LIGHTRED,"Amit átadhatsz: Kaja, Cserje, Mák, Mûanyag, Cannabis, Kokain, Heroin, Marihuana, Mati, Cigi, Kötszer, Fegyver, Lõszer, Mellény, Zsák");
			SendClientMessage(playerid,COLOR_LIGHTRED,"Amit átadhatsz: Alma, Ajándék, Aspirin, Cataflan, Öngyújtó");
			return 1;
		}

		neki = ReturnUser(tmp);
		if(neki == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
		    SendClientMessage(playerid, COLOR_YELLOW, "Ahha... és mit akarsz átadni?");
		    return 1;
		}
		if(GetDistanceBetweenPlayers(playerid,neki) > 5)
		{
			SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
			return 1;
		}
		if(KozelsegEllenoriz(neki)) return Msg(playerid, " Õ nincs a közeledben!");
		if (GetPlayerInterior(playerid) != GetPlayerInterior(neki) || GetPlayerVirtualWorld(playerid) !=GetPlayerVirtualWorld(neki))
		{
			if(Harcol[neki])
			{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Biztos bugot akarsz kihasználni? :) Csak nehogy pórul járj!");
			SendFormatMessage(neki, COLOR_LIGHTRED, "%s megpróbált neked átadni valamit, miközben õ másik VWben volt. Amennyiben nem frakció társad, tedd fel PK-ra!", PlayerName(playerid));
			}
			else
			{
			SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Akinek akarod adni másik VW ben vagy INTERIORBAN van. Nem adhatod át így!");
			SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Szólj adminnak állítsa át a vw-d vagy /poz és f8-al mentsd el küld be fórumon!");
			SendClientMessage(neki, COLOR_LIGHTRED, "ClassRPG: Aki át akar addni neked másik VW ben vagy INTERIORBAN van. Nem adhatod át így!");
			SendClientMessage(neki, COLOR_LIGHTRED, "ClassRPG: Szólj adminnak állítsa át a vw-d vagy /poz és f8-al mentsd el küld be fórumon!");
			}
			return 1;
		}
		mit = tmp;

		new kuldo[MAX_PLAYER_NAME], kinek[MAX_PLAYER_NAME];

		GetPlayerName(neki, playername, sizeof(playername));
		GetPlayerName(playerid, sendername, sizeof(sendername));

		GetPlayerName(neki, kinek, sizeof(kinek));
		GetPlayerName(playerid, kuldo, sizeof(kuldo));
		if(strcmp(mit, "c4", true) == 0 || strcmp(mit, "bomba", true) == 0 || strcmp(mit, "robbanótöltet", true) == 0)
		{
			if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
			if(PlayerInfo[playerid][pC4] == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs C4-ed!");
				return 1;
			}
			if(PlayerInfo[neki][pC4] == 1)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Neki már van C4-e!");
				return 1;
			}
			PlayerInfo[neki][pC4] = 1;
			PlayerInfo[playerid][pC4] = 0;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál egy C4-t neki: %s", kinek);
			SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked 1 C4-t!", kuldo);
		}
		if(egyezik(mit, "öngyújtó") || egyezik(mit, "gyújtó") || egyezik(mit, "gyujto") || egyezik(mit, "ongyujto"))
		{
			if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
			if(PlayerInfo[playerid][pGyujto] == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs öngyújtód!");
				return 1;
			}
			if(PlayerInfo[neki][pGyujto] == 1)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Neki már van öngyújtója!");
				return 1;
			}
			PlayerInfo[neki][pGyujto] = 1;
			PlayerInfo[playerid][pGyujto] = 0;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Átadtál egy öngyújtót neki: %s", kinek);
			SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked egy öngyújtót!", kuldo);
		}
		if(egyezik(mit, "ajándék") || egyezik(mit, "ajandek"))
		{
		
			if(PlayerInfo[playerid][pAjandek] == NINCS) return Msg(playerid,"Nincs ajándék kupponod!");
			if(PlayerInfo[neki][pAjandek] != NINCS) return Msg(playerid, "Neki már van ajánd kupponja nem adhatsz neki!");
		
			PlayerInfo[neki][pAjandek] = PlayerInfo[playerid][pAjandek];
			PlayerInfo[playerid][pAjandek] = NINCS;
		}
		if(egyezik(mit, "aspirin") || egyezik(mit, "aszpirin"))
		{
			db = strval(param[3]);
			if(db < 1)
				return Msg(playerid, "/átad [név/id] aspirin [mennyiség (<1)]");
				
			if(PlayerInfo[playerid][pAspirin] < db)
				return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi aspirin nálad!");
		    if((PlayerInfo[neki][pAspirin] + db) > 20)
				return SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
				return SendClientMessage(playerid, COLOR_GREY, "Õ nincs a közeledben!");
		    PlayerInfo[playerid][pAspirin] -= db;
		    PlayerInfo[neki][pAspirin] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %ddb aspirint neki: %s", db, playername);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %ddb aspirint", sendername, db);
		}
		if(egyezik(mit, "cataflan"))
		{
			db = strval(param[3]);
			if(db < 1)
				return Msg(playerid, "/átad [név/id] cataflan [mennyiség (<1)]");
				
			if(PlayerInfo[playerid][pCataflan] < db)
				return SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi cataflan nálad!");
		    if((PlayerInfo[neki][pCataflan] + db) > 20)
				return SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
				return SendClientMessage(playerid, COLOR_GREY, "Õ nincs a közeledben!");
		    PlayerInfo[playerid][pCataflan] -= db;
		    PlayerInfo[neki][pCataflan] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %ddb cataflant neki: %s", db, playername);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %ddb cataflant", sendername, db);
		}
		if(egyezik(mit, "fegyver"))
		{
			if(Paintballozik[playerid] && GetPlayerVirtualWorld(playerid) == 98765 || Loterben[playerid] && GetPlayerVirtualWorld(playerid) == 5995)
			{	
				format(PlayerInfo[playerid][pFegyverTiltOk], 128, "átad fegyver paintball vagy lõtéren");
				PlayerInfo[playerid][pFegyverTiltIdo] = PlayerInfo[playerid][pHaviAktivitas]*2;
				
				Msg(playerid, "Na most megvagy! Élvezd a fegyver eltiltásodat!");
				return 1;
			}
			
			if(Szint(playerid) < WEAPON_MIN_LEVEL || Szint(neki) < WEAPON_MIN_LEVEL)
				return SendFormatMessage(playerid, COLOR_LIGHTRED, "Hiba: Fegyverhasználat nem engedélyezett a %d. szintig", WEAPON_MIN_LEVEL);
			
			if(PlayerInfo[playerid][pFegyverTiltIdo] > 1 || PlayerInfo[neki][pFegyverTiltIdo] > 1)
				return Msg(playerid, "Fegyver eltiltás miatt nem adható át");
				
			new weapon = GetGunFromString(param[3]);
			if(weapon < 1 || weapon > MAX_WEAPONS)
				return Msg(playerid, "Ilyen fegyver nem létezik");
			
			if(WeaponHaveWeapon(playerid, weapon) < 0)
				return Msg(playerid, "Nincs ilyen fegyvered");
			
			if(WeaponCanHoldWeapon(neki, weapon, 0) < 0)
				return Msg(playerid, "Neki nem adhatsz ilyen fegyvert");
			
			WeaponTakeWeapon(playerid, weapon);
			WeaponGiveWeapon(neki, weapon, _, 0);
			
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Átadtál egy %s-t neki: %s", GunName(weapon), Nev(neki));
			SendFormatMessage(neki, COLOR_LIGHTBLUE, "Kaptál egy %s-t tõle: %s", GunName(weapon), Nev(playerid));
			
			OnePlayAnim(playerid, "GANGS", "shake_cara", 4.0, 0, 0, 0, 0, 0);
			OnePlayAnim(neki, "GANGS", "shake_cara", 4.0, 0, 0, 0, 0, 0);
			
			if(PlayerInfo[playerid][pMember])
			{
				if(PlayerInfo[neki][pMember])
					format(_tmpString, 256, "[Átad][%s]%s átadott neki: [%s]%s, egy %s-t", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][1], Nev(playerid), Szervezetneve[ PlayerInfo[neki][pMember] - 1 ][1], PlayerName(neki), GunName(weapon)), Log("Fegyver", _tmpString);
				else
					format(_tmpString, 256, "[Átad][%s]%s átadott neki: [Civil]%s, egy %s-t", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][1], Nev(playerid), Nev(neki), GunName(weapon)), Log("Fegyver", _tmpString);
			}
			else
			{
				if(PlayerInfo[neki][pMember])
					format(_tmpString, 256, "[Átad][Civil]%s átadott neki: [%s]%s, egy %s-t", Nev(playerid), Szervezetneve[ PlayerInfo[neki][pMember] - 1 ][1], Nev(neki), GunName(weapon)), Log("Fegyver", _tmpString);
				else
					format(_tmpString, 256, "[Átad][Civil]%s átadott neki: [Civil]%s, egy %s-t", Nev(playerid), Nev(neki), GunName(weapon)), Log("Fegyver", _tmpString);
			}
			
			return 1;
		}
		
		if(egyezik(mit, "loszer") || egyezik(mit, "lõszer"))
		{
			if(Szint(playerid) < WEAPON_MIN_LEVEL || Szint(neki) < WEAPON_MIN_LEVEL)
				return SendFormatMessage(playerid, COLOR_LIGHTRED, "Hiba: Fegyverhasználat nem engedélyezett a %d. szintig", WEAPON_MIN_LEVEL);
			
			if(PlayerInfo[playerid][pFegyverTiltIdo] > 1 || PlayerInfo[neki][pFegyverTiltIdo] > 1)
				return Msg(playerid, "Fegyver eltiltás miatt nem adható át");
				
			new weapon = GetGunFromString(param[3]);
			if(weapon < 1 || weapon > MAX_WEAPONS)
				return Msg(playerid, "Ilyen fegyver nem létezik");
			
			if(WeaponType(weapon) == WEAPON_TYPE_HAND)
				return Msg(playerid, "Ez a fegyver nem lõszer alapú");
			
			new ammo = strval(param[4]);
			if(ammo < 1)
				return Msg(playerid, "Hibás lõszer mennyiség");
			
			ammo = max(0, min(ammo, min(WeaponAmmo(playerid, weapon), WeaponMaxAmmo(weapon) - WeaponAmmo(neki, weapon))));
			if(!ammo)
				return Msg(playerid, "Nincs ilyen lõszered, vagy nála nincs hely");
			
			WeaponGiveAmmo(playerid, weapon, -ammo);
			WeaponGiveAmmo(neki, weapon, ammo);
			
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Átadtál %ddb %s lõszert neki: %s", ammo, GunName(weapon), Nev(neki));
			SendFormatMessage(neki, COLOR_LIGHTBLUE, "Kaptál %ddb %s lõszert tõle: %s", ammo, GunName(weapon), Nev(playerid));
			
			OnePlayAnim(playerid, "GANGS", "shake_cara", 4.0, 0, 0, 0, 0, 0);
			OnePlayAnim(neki, "GANGS", "shake_cara", 4.0, 0, 0, 0, 0, 0);
			
			if(PlayerInfo[playerid][pMember])
			{
				if(PlayerInfo[neki][pMember])
					format(_tmpString, 256, "[Átad][%s]%s átadott %ddb %s lõszert neki: [%s]%s", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][1], Nev(playerid), ammo, GunName(weapon), Szervezetneve[ PlayerInfo[neki][pMember] - 1 ][1], Nev(neki)), Log("Fegyver", _tmpString);
				else
					format(_tmpString, 256, "[Átad][%s]%s átadott %ddb %s lõszert neki: [Civil]%s", Szervezetneve[ PlayerInfo[playerid][pMember] - 1 ][1], Nev(playerid), ammo, GunName(weapon), Nev(neki)), Log("Fegyver", _tmpString);
			}
			else
			{
				if(PlayerInfo[neki][pMember])
					format(_tmpString, 256, "[Átad][Civil]%s átadott %ddb %s lõszert neki: [%s]%s", Nev(playerid), ammo, GunName(weapon), Szervezetneve[ PlayerInfo[neki][pMember] - 1 ][1], PlayerName(neki)), Log("Fegyver", _tmpString);
				else
					format(_tmpString, 256, "[Átad][Civil]%s átadott %ddb %s lõszert neki: [Civil]%s", Nev(playerid), ammo, GunName(weapon), Nev(neki)), Log("Fegyver", _tmpString);
			}
			
			return 1;
		}

		if(egyezik(mit, "zsák") || egyezik(mit, "zsak"))
		{
			if(JatekosZsak[playerid] == NINCS)
				return Msg(playerid, "Nincs zsákod");

			if(JatekosZsak[neki] >= 0)
				return Msg(playerid, "Neki már van zsákja!");

			if(GetDistanceBetweenPlayers(playerid,neki) > 5)
			   {
				SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
				return 1;
			   }
			JatekosZsak[neki] = JatekosZsak[playerid];
			JatekosZsak[playerid] = NINCS;

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál neki egy zsákot.Benne volt: %dFt", JatekosZsak[neki]);
			SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked egy zsákot.Benne volt: %dFt", kuldo, JatekosZsak[neki]);
			SetPlayerAttachedObject(neki, ATTACH_SLOT_ZSAK_PAJZS_BILINCS, 1550, 1, 0.1, -0.3, 0, 0, 40, 0, 1, 1, 1);
			return 1;
		}
		if(strcmp(mit, "fém", true) == 0 || strcmp(mit, "fem", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pFem] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi fémed!");
		        return 1;
		    }
		    if((PlayerInfo[neki][pCserje] + db) > MAXFEM)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pFem] -= db;
		    PlayerInfo[neki][pFem] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál neki %ddb fémet neki: %s", db, kinek);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %ddb fémet", kuldo, db);
		    return 1;
		}
		if(strcmp(mit, "cserje", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pCserje] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi kokacserjéd!");
		        return 1;
		    }
		    if((PlayerInfo[neki][pCserje] + db) > MAXCSERJE)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pCserje] -= db;
		    PlayerInfo[neki][pCserje] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál neki %ddb kokacserjét neki: %s", db, kinek);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %ddb kokacserjét", kuldo, db);
		    return 1;
		}
		if(strcmp(mit, "kevlar", true) == 0 || strcmp(mit, "mellény", true) == 0 || strcmp(mit, "melleny", true) == 0)
		{
			if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
			new Float:armor;
			new Float:armor2;
			GetPlayerArmour(playerid, armor);
			GetPlayerArmour(neki, armor2);
			if(armor == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs mellényed!");
				return 1;
			}
			if(armor2 != 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Neki már van mellénye!");
				return 1;
			}
			SetPlayerArmour(neki, armor);
			SetPlayerArmour(playerid, 0);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál egy golyóállót neki: %s", kinek);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked 1 golyóállót!", kuldo);
		}
		if(strcmp(mit, "cigi", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pCigi] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi cigid!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pCigi] -= db;
		    PlayerInfo[neki][pCigi] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál neki %ddb cigit neki: %s", db, kinek);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %ddb cigit", kuldo, db);
		    return 1;
		}
		if(strcmp(mit, "kötszer", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pKotszer] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi kötszered!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pKotszer] -= db;
		    PlayerInfo[neki][pKotszer] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %d kötszert neki: %s", db, kinek);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %d kötszert.", kuldo, db);
		    return 1;
		}

		if(strcmp(mit, "mák", true) == 0 || strcmp(mit, "mak", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pMak] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi mákleveled!");
		        return 1;
		    }
		    if((PlayerInfo[neki][pMak] + db) > MAXMAK)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pMak] -= db;
		    PlayerInfo[neki][pMak] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %ddb máklevelet neki: %s", db, playername);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %ddb máklevelet", sendername, db);
		    return 1;
		}

		if(strcmp(mit, "cannabis", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pCannabis] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi cannabisod!");
		        return 1;
		    }
		    if((PlayerInfo[neki][pCannabis] + db) > MAXCANNABIS)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pCannabis] -= db;
		    PlayerInfo[neki][pCannabis] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %ddb cannabist neki: %s", db, playername);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %ddb cannabist", sendername, db);
		    return 1;
		}

		if(strcmp(mit, "mûanyag", true) == 0 || strcmp(mit, "muanyag", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pMuanyag] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi mûanyagod!");
		        return 1;
		    }
		    if((PlayerInfo[neki][pMuanyag] + db) > MAXMUANYAG)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pMuanyag] -= db;
		    PlayerInfo[neki][pMuanyag] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %ddb mûanyagot neki: %s", db, playername);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %ddb mûanyagot", sendername, db);
		    return 1;
		}

		if(strcmp(mit, "kokain", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pKokain] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi kokainod!");
		        return 1;
		    }
		    if((PlayerInfo[neki][pKokain] + db) > MAXKOKAIN)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pKokain] -= db;
		    PlayerInfo[neki][pKokain] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %dg kokaint neki: %s", db, playername);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %dg kokaint", sendername, db);
		    return 1;
		}

		if(strcmp(mit, "heroin", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pHeroin] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi heroinod!");
		        return 1;
		    }
		    if((PlayerInfo[neki][pHeroin] + db) > MAXHEROIN)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pHeroin] -= db;
		    PlayerInfo[neki][pHeroin] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %dg heroint neki: %s", db, playername);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %dg heroint", sendername, db);
		    return 1;
		}

		if(strcmp(mit, "marihuana", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pMarihuana] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi marihuánád!");
		        return 1;
		    }
		    if((PlayerInfo[neki][pMarihuana] + db) > MAXMARIHUANA)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pMarihuana] -= db;
		    PlayerInfo[neki][pMarihuana] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %dg marihuánát neki: %s", db, playername);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %dg marihuánát", sendername, db);
		    return 1;
		}

		if(strcmp(mit, "mati", true) == 0 || strcmp(mit, "materials", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pMats] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi materialod!");
		        return 1;
		    }
		    if((PlayerInfo[neki][pMats] + db) > MAXMATI)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pMats] -= db;
		    PlayerInfo[neki][pMats] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %ddb materialt neki: %s", db, playername);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %ddb materialt", sendername, db);
		    return 1;
		}

		if(strcmp(mit, "kaja", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pKaja] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi kajád!");
		        return 1;
		    }
		    if((PlayerInfo[neki][pKaja] + db) > MAXKAJA)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pKaja] -= db;
		    PlayerInfo[neki][pKaja] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %ddb kaját neki: %s", db, playername);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %ddb kaját", sendername, db);
		    return 1;
		}
		if(strcmp(mit, "alma", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "És mennyit?");
		        return 1;
		    }
		    db = strval(tmp);
			if(db < 0) return Msg(playerid, "Szerinted...");
		    if(PlayerInfo[playerid][pAlma] < db)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Nincs ennyi almád!");
		        return 1;
		    }
		    if((PlayerInfo[neki][pAlma] + db) > MAXALMA)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "Ennyi nem fér el nála!");
		        return 1;
		    }
		    if(GetDistanceBetweenPlayers(playerid,neki) > 5)
	        {
		        SendClientMessage(playerid, COLOR_GREY, " Õ nincs a közeledben!");
		        return 1;
	        }
		    PlayerInfo[playerid][pAlma] -= db;
		    PlayerInfo[neki][pAlma] += db;
		    SendFormatMessage(playerid, COLOR_LIGHTBLUE, " Átadtál %ddb almát neki: %s", db, playername);
		    SendFormatMessage(neki, COLOR_LIGHTBLUE, "%s átadott neked %ddb almát", sendername, db);
		    return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/walk", true) == 0)
	{
		tmp = strtok(cmdtext,idx);

		if (!strlen(tmp))
			return SendClientMessage(playerid,COLOR_LIGHTRED,"Használat: /walk [id(0-13)]");

		new stilus = strval(tmp);

		SetPlayerWalkingStyle(playerid, stilus);
		SendFormatMessage(playerid, COLOR_WHITE, "Sétálási stílusod: %d", strval(tmp));
		return 1;
	}

	if(strcmp(cmd, "/készít", true) == 0 ||strcmp(cmd, "/keszit", true) == 0)
	{
		if(!IsBanda(playerid)) return Msg(playerid, "Csak a Bandák készíthetnek drogot!");

	    if(IsPlayerConnected(playerid))
	    {
			new leveldrog = SkillLevel(PInfo(playerid,DrugsSkill));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				
			    SendClientMessage(playerid, COLOR_GRAD2, "Használata: /készít [amit akarsz] [hány darabból]");
				if(leveldrog == 1) SendClientMessage(playerid, COLOR_GRAD2, "Cuccok: Kokain,");
				if(leveldrog == 2) SendClientMessage(playerid, COLOR_GRAD2, "Cuccok: Kokain, Heroin,");
				if(leveldrog == 3) SendClientMessage(playerid, COLOR_GRAD2, "Cuccok: Kokain, Heroin, Marihuana");
				SendClientMessage(playerid, COLOR_GRAD2, "Cuccok: Mati(vagy Materials), Kevlar");
			
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Fontos! Az idõ arányos azzal, hogy hány darabból csinálod és mekkora a skill-ed!");
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Szükséges idõk, és mennyit kapsz:");
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Kokain: 2500*db másodperc - Kapsz: 1 és 10*db között");
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Heroin: 4000*db másodperc - Kapsz: 1 és 7*db között");
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Marihuana: 4000*db másodperc - Kapsz: 1 és 7*db között");
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Mati: 5000*db másodperc - Kapsz: 1 és 500*db között");

			    return 1;
			}

			if(FloodCheck(playerid)) return 1;

			if(strcmp(tmp, "kokain", true) == 0)
			{
				if(Szint(playerid) < IllegalisMunkak[2]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[2]);
			    if(IsACop(playerid))
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "Rendõrként?");
				if(PlayerInfo[playerid][pKokain] >= MAXKOKAIN)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "Több nem fér el nálad!");

				if(MunkaFolyamatban[playerid] == 1)
					return Msg(playerid, "Nyugi már...");

			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
			    {
				    SendClientMessage(playerid, COLOR_GRAD2, "Használata: /készít [amit akarsz] [hány darabból]");
				    SendClientMessage(playerid, COLOR_GRAD2, "Cuccok: Kokain, Heroin, Marihuana, Mati(vagy Materials)");
				    return 1;
			    }
			    new db = strval(tmp);
			    if(!IsAt(playerid, IsAt_Drogkeszitohely))
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "Nem vagy a drog készítõ helyénél, a gyárban");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pCserje] < 1)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Nincs nálad Kokacserje!");
					return 1;
			    }
			    if(PlayerInfo[playerid][pCserje] < db)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Nincs ennyi Kokacserjéd!");
					return 1;
			    }
			    if(db < 1)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "minimum 1!");
					return 1;
			    }
			    MunkaFolyamatban[playerid] = 1;
			    PlayerInfo[playerid][pCserje] -= db;
			    GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Keszited a kokaint... varj...", 3000, 3);
				TogglePlayerControllable(playerid, false);
				ApplyAnimation(playerid, "SCRATCHING", "scmid_l", 4.0, 1, 1, 1, 1, -1);
				MunkaTimerID[playerid]=SetTimerEx("Munkavege", (MunkaIdo[3]*db), false, "ddd", playerid, M_KOKAIN, db);
			}
			if(egyezik(tmp, "katana"))
			{

				if(Szint(playerid) < IllegalisMunkak[0]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[0]);
				if(!PlayerToPoint(3, playerid, 2543.111328, -1295.866333, 1044.125000)) return Msg(playerid, "Nem vagy az elhagyatott gyár 3. emeletén!");

				if(!LMT(playerid, FRAKCIO_YAKUZA)) return Msg(playerid, "Nem vagy a Yakuza tagja!");
				if(PlayerInfo[playerid][pFem] < MAXFEM)
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "%d fém kell hozzá!", MAXFEM);
					return 1;
				}
				MunkaFolyamatban[playerid]  = 1;
				PlayerInfo[playerid][pFem] = 0;
				GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Keszited a kardot... varj...", 3000, 3);
				TogglePlayerControllable(playerid, false);
				ApplyAnimation(playerid, "SCRATCHING", "scmid_l", 4.0, 1, 1, 1, 1, -1);
				MunkaTimerID[playerid]=SetTimerEx("Munkavege", MunkaIdo[8], false, "ddd", playerid, M_KATANA, 1);
			}
			if(strcmp(tmp, "heroin", true) == 0)
			{
				if(Szint(playerid) < IllegalisMunkak[2]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[2]);
				if(leveldrog < 2) return Msg(playerid, "Kicsi a skilled ehhez!");
			    if(IsACop(playerid))
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "Rendõrként?");

				if(PlayerInfo[playerid][pHeroin] >= MAXHEROIN)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "Több nem fér el nálad!");

				if(MunkaFolyamatban[playerid] == 1)
					return Msg(playerid, "Nyugi már...");

			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
			    {
				    SendClientMessage(playerid, COLOR_GRAD2, "Használata: /készít [amit akarsz] [hány darabból]");
				    SendClientMessage(playerid, COLOR_GRAD2, "Cuccok: Kokain, Heroin, Marihuana, Mati(vagy Materials)");
				    return 1;
			    }
			    new db = strval(tmp);
			    if(!IsAt(playerid, IsAt_Drogkeszitohely))
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "Nem vagy a drog készítõ helyénél, a gyárban");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pMak] < 1)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Nincs nálad Máklevél!");
					return 1;
			    }
			    if(PlayerInfo[playerid][pMak] < db)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Nincs ennyi Mákleveled!");
					return 1;
			    }
			    if(db < 1)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "minimum 1!");
					return 1;
			    }
			    MunkaFolyamatban[playerid] = 1;
			    PlayerInfo[playerid][pMak] -= db;
			    GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Keszited a heroint... varj...", 3000, 3);
				TogglePlayerControllable(playerid, false);
				ApplyAnimation(playerid, "SCRATCHING", "scmid_l", 4.0, 1, 1, 1, 1, -1);
				MunkaTimerID[playerid]=SetTimerEx("Munkavege", (MunkaIdo[4]*db), false, "ddd", playerid, M_HEROIN, db);
			}

			if(strcmp(tmp, "marihuana", true) == 0)
			{
				if(Szint(playerid) < IllegalisMunkak[2]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[2]);
				if(leveldrog < 3) return Msg(playerid, "Kicsi a szinted ehhez!");
				if(IsACop(playerid))
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "Rendõrként?");

				if(PlayerInfo[playerid][pMarihuana] >= MAXMARIHUANA)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "Több nem fér el nálad!");

				if(MunkaFolyamatban[playerid] == 1)
					return Msg(playerid, "Nyugi már...");

			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
			    {
				    SendClientMessage(playerid, COLOR_GRAD2, "Használata: /készít [amit akarsz] [hány darabból]");
				    SendClientMessage(playerid, COLOR_GRAD2, "Cuccok: Kokain, Heroin, Marihuana, Mati(vagy Materials)");
				    return 1;
			    }
			    new db = strval(tmp);
			    if(!IsAt(playerid, IsAt_Drogkeszitohely))
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "Nem vagy a drog készítõ helyénél, a gyárban");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pCannabis] < 1)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Nincs nálad Cannabis!");
					return 1;
			    }
			    if(PlayerInfo[playerid][pCannabis] < db)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Nincs ennyi Cannabisod!");
					return 1;
			    }
			    if(db < 1)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "minimum 1!");
					return 1;
			    }
			    MunkaFolyamatban[playerid] = 1;
			    PlayerInfo[playerid][pCannabis] -= db;
			    GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Keszited a marihuanat... varj...", 3000, 3);
				TogglePlayerControllable(playerid, false);
				ApplyAnimation(playerid, "SCRATCHING", "scmid_l", 4.0, 1, 1, 1, 1, -1);
				MunkaTimerID[playerid]=SetTimerEx("Munkavege", (MunkaIdo[5]*db), false, "ddd", playerid, M_MARIHUANA, db);
			}

			if(strcmp(tmp, "mati", true) == 0 || strcmp(tmp, "materials", true) == 0)
			{
				if(Szint(playerid) < IllegalisMunkak[0]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[0]);
				if(IsACop(playerid))
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "Rendõrként?!");

				if(PlayerInfo[playerid][pMats] >= MAXMATI)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "Több nem fér el nálad!");

				if(MunkaFolyamatban[playerid] == 1)
					return Msg(playerid, "Nyugi már...");

			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
			    {
				    SendClientMessage(playerid, COLOR_GRAD2, "Használata: /készít [amit akarsz] [hány darabból]");
				    SendClientMessage(playerid, COLOR_GRAD2, "Cuccok: Kokain, Heroin, Marihuana, Mati(vagy Materials)");
				    return 1;
			    }
			    new db = strval(tmp);
			    if(!IsAt(playerid, IsAt_Fegyverkeszitohely))
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "Nem vagy a mati készítõ helyénél, a gyárban");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pMuanyag] < 1)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Nincs nálad Mûanyag!");
					return 1;
			    }
			    if(PlayerInfo[playerid][pMuanyag] < db)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Nincs ennyi Mûanyagod!");
					return 1;
			    }
                if(db < 1)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "minimum 1!");
					return 1;
			    }
			    MunkaFolyamatban[playerid] = 1;
			    PlayerInfo[playerid][pMuanyag] -= db;
			    GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Keszited a Materialt... varj...", 3000, 3);
				TogglePlayerControllable(playerid, false);
				ApplyAnimation(playerid, "SCRATCHING", "scmid_l", 4.0, 1, 1, 1, 1, -1);
				MunkaTimerID[playerid]=SetTimerEx("Munkavege", (MunkaIdo[6]*db/2), false, "ddd", playerid, M_MATERIAL, db);
			}
			if(strcmp(tmp, "kevlar", true) == 0 || strcmp(tmp, "mellény", true) == 0 || strcmp(tmp, "melleny", true) == 0)
			{
				if(!IsAt(playerid, IsAt_Fegyverkeszitohely))

				if(Szint(playerid) < IllegalisMunkak[5]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[5]);
				if(!PlayerToPoint(1, playerid, 2543.111328, -1295.866333, 1044.125000) || GetPlayerInterior(playerid) != 2)

			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "Nem vagy a mellény készítõ helyénél, a gyárban");
			        return 1;
			    }
				if(IsACop(playerid))
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "PFFF ne mááár!");

				new Float:armor;
				GetPlayerArmour(playerid, armor);
				if(armor > 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Már van mellényed!");
					return 1;
				}
				if(PlayerInfo[playerid][pMuanyag] < 10)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs elég mûanyagod! (10)");
					return 1;
				}
				if(MunkaFolyamatban[playerid] != 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Nyugi!");
					return 1;
				}
				MunkaFolyamatban[playerid] = 1;
			    PlayerInfo[playerid][pMuanyag] -= 10;
				TogglePlayerControllable(playerid, false);
				ApplyAnimation(playerid, "SCRATCHING", "scmid_l", 4.0, 1, 1, 1, 1, -1);
				GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Keszited a Mellenyt... varj...", 3000, 3);
				MunkaTimerID[playerid]=SetTimerEx("Munkavege", 60000, false, "ddd", playerid, M_MELLENY, 1);
			}
        }
		return 1;
	}
	if(egyezik(cmd, "/ház"))
	{
        if(!LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA) && PlayerInfo[playerid][pSwattag] == 0 && PlayerInfo[playerid][pAdmin] < 1337)
			return Msg(playerid, "Csak FBI, CIA és SWAT");

		if(LMT(playerid, FRAKCIO_FBI) && PlayerInfo[playerid][pRank] < 3 && !LMT(playerid, FRAKCIO_CIA) && PlayerInfo[playerid][pSwatRang] < 3 && PlayerInfo[playerid][pAdmin] < 1337)
			return Msg(playerid, "Nem foglalhatsz le");
		
		new house = IsAt(playerid, IsAt_Haz);
		if(house == NINCS) return Msg(playerid, "Nem vagy házban.");
		//if(!Online(HouseInfo[house][hOwner])) return Msg(playerid, "Nincs fennt a ház tulaja!");
		if(params < 1) return Msg(playerid, "/ház [átnéz / lefoglal]");
				
		if(egyezik(param[1], "lefoglal"))
		{
		    new logolas[128];
			if(params < 3) return Msg(playerid, "/ház lefoglal [mit] [mennyit]");
				
			if(egyezik(param[2], "fegyver"))
			{
				if(params < 3)
					return Msg(playerid, "Használat: /ház lefoglal fegyver [fegyvernév / ID]");
				
				new weapon = GetGunFromString(param[3]);
				if(weapon < 1 || weapon > MAX_WEAPONS)
					return Msg(playerid, "Ilyen fegyver nem létezik");
				
				if(WeaponCanHoldWeapon(playerid, weapon, 0) < 0)
					return Msg(playerid, "Ilyen fegyver nem lehet nálad");
				
				new slot = NINCS;
				for(new x = 0; x < 10; x++)
				{
					if(HouseInfo[house][hFegyver][x] == weapon)
						{ slot = x; break; }
				}
				
				if(slot == NINCS)
					return Msg(playerid, "Ilyen fegyver nincs a házszéfben");
				
				Format(logolas,"[Ház][Frakcio:%d]%s lefoglalt egy %s-t a %d. ház széfjébõl", PlayerInfo[playerid][pMember], PlayerName(playerid), GetGunName(HouseInfo[house][hFegyver][slot]), house);
				Log("Szef", logolas);
				
				HouseInfo[house][hFegyver][slot] = 0;
				WeaponGiveWeapon(playerid, weapon, 0);
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél egy fegyvert a házszéfbõl: %s", GunName(weapon));
				HazUpdate(house, HAZ_Fegyver);
				
				return 1;
			}
			
			new mennyit = strval(param[3]);
			if(mennyit < 1) return 1;
			if(egyezik(param[2],"mellény") || egyezik(param[2],"melleny"))
			{
				new Float:armor;
				GetPlayerArmour(playerid, armor);
				if(armor > 0) return Msg(playerid, "Már van mellényed!");
				new maxcucc = 5, fslot = mennyit - 1;
				if(mennyit >= 1 && mennyit <= maxcucc)
				{
					if(HouseInfo[house][hMellenyek][fslot] != 0)
					{
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél egy mellényt a házszéfbõl, a mellény állapota: %d", HouseInfo[house][hMellenyek][fslot]);
						SetPlayerArmour(playerid, HouseInfo[house][hMellenyek][fslot]);
						HouseInfo[house][hMellenyek][fslot] = 0;
					}
					else return Msg(playerid, "Itt nincs mellény!");
				}
			}
			if(strcmp(param[2], "pénz", true) == 0 || strcmp(param[2], "penz", true) == 0)
			{
				    new penz = HouseInfo[house][hTakings];

				    if(HouseInfo[house][hTakings] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házszéfben nincs pénz!");

					if(HouseInfo[house][hTakings] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %dFT van! Többet nem tudsz kivenni...", penz);
					    return 1;
	    			}

				    ConsumingMoney[playerid] = 1;
					GiveMoney(playerid, mennyit);
					HouseInfo[house][hTakings] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a széfbõl %dFT-t", mennyit);

					//HazUpdate(house, "Penz='%d'", HouseInfo[house][hTakings]);
					HazUpdate(house, HAZ_Takings);

	    			Format(logolas,"[Ház][Frakcio:%d]%s lefoglalt %dFt pénzt a %d. ház széfjébõl", PlayerInfo[playerid][pMember], PlayerName(playerid), mennyit, house);
                    Log("Szef", logolas);
					return 1;
			}
			else if(egyezik(param[2], "alma"))
			{
				new alma = HouseInfo[house][hAlma];
				if(alma < 1) return Msg(playerid, "Nincs alma a házban!");
				if(alma < mennyit) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Csak %d alma van a házban! Többet nem tudsz kivenni...", alma);
				if((PlayerInfo[playerid][pAlma] + mennyit) > MAXALMA) return SendFormatMessage(playerid, COLOR_LIGHTRED, "Maximum %d alma fér el a zsebedben!", MAXALMA);
				PlayerInfo[playerid][pAlma] += mennyit;
				HouseInfo[house][hAlma] -= mennyit;
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél %d almát a házból!", mennyit);
				HazUpdate(house, HAZ_Alma);
				
				Format(logolas,"[Ház][Frakcio:%d]%s lefoglalt %ddb almát a %d. ház széfjébõl", PlayerInfo[playerid][pMember], PlayerName(playerid), mennyit, house);
				Log("Szef", logolas);
				return 1;
			}
			else if(strcmp(param[2], "kaja", true) == 0)
			{

				    if(HouseInfo[house][hKaja] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs kaja!");

					if(HouseInfo[house][hKaja] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %d van! Többet nem tudsz kivenni...", HouseInfo[house][hKaja]);
					    return 1;
	    			}

					if((PlayerInfo[playerid][pKaja] + mennyit) > MAXKAJA)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %d kaja lehet nálad!", MAXKAJA);
					    return 1;
	    			}

                    PlayerInfo[playerid][pKaja] += mennyit;
					HouseInfo[house][hKaja] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %d kaját", mennyit);

					//HazUpdate(house, "Kaja='%d'", HouseInfo[house][hKaja]);
					HazUpdate(house, HAZ_Kaja);

					Format(logolas,"[Ház][Frakcio:%d]%s lefoglalt %ddb kaját a %d. ház széfjébõl", PlayerInfo[playerid][pMember], PlayerName(playerid), mennyit, house);
                    Log("Szef", logolas);
					return 1;
			}

			else if(strcmp(param[2], "cigi", true) == 0)
			{

				    if(HouseInfo[house][hCigi] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs cigi!");

					if(HouseInfo[house][hCigi] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %d van! Többet nem tudsz kivenni...", HouseInfo[house][hCigi]);
					    return 1;
	    			}

                    PlayerInfo[playerid][pCigi] += mennyit;
					HouseInfo[house][hCigi] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %d szál cigit", mennyit);

					//HazUpdate(house, "Cigi='%d'", HouseInfo[house][hCigi]);
					HazUpdate(house, HAZ_Cigi);

					Format(logolas,"[Ház][Frakcio:%d]%s lefoglalt %ddb cigit a %d. ház széfjébõl", PlayerInfo[playerid][pMember], PlayerName(playerid), mennyit, house);
                    Log("Szef", logolas);
					return 1;
			}

			else if(strcmp(param[2], "kokain", true) == 0)
			{

				    if(HouseInfo[house][hKokain] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs kokain!");

					if(HouseInfo[house][hKokain] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %dg van! Többet nem tudsz kivenni...", HouseInfo[house][hKokain]);
					    return 1;
	    			}

					if((PlayerInfo[playerid][pKokain] + mennyit) > MAXKOKAIN)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %d kokaint birsz el!", MAXKOKAIN);
					    return 1;
	    			}

                    PlayerInfo[playerid][pKokain] += mennyit;
					HouseInfo[house][hKokain] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %dg kokaint", mennyit);

					//HazUpdate(house, "Kokain='%d'", HouseInfo[house][hKokain]);
					HazUpdate(house, HAZ_Kokain);

					Format(logolas,"[Ház][Frakcio:%d]%s lefoglalt %dg kokaint a %d. ház széfjébõl", PlayerInfo[playerid][pMember], PlayerName(playerid), mennyit, house);
                    Log("Szef", logolas);
					return 1;
			}

			else if(strcmp(param[2], "heroin", true) == 0)
			{

				    if(HouseInfo[house][hHeroin] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs heroin!");

					if(HouseInfo[house][hHeroin] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %dg van! Többet nem tudsz kivenni...", HouseInfo[house][hHeroin]);
					    return 1;
	    			}

					if((PlayerInfo[playerid][pHeroin] + mennyit) > MAXHEROIN)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %d heroint birsz el!", MAXHEROIN);
					    return 1;
	    			}

                    PlayerInfo[playerid][pHeroin] += mennyit;
					HouseInfo[house][hHeroin] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %dg heroint", mennyit);

					//HazUpdate(house, "Heroin='%d'", HouseInfo[house][hHeroin]);
					HazUpdate(house, HAZ_Heroin);

					Format(logolas,"[Ház][Frakcio:%d]%s lefoglalt %dg heroint a %d. ház széfjébõl", PlayerInfo[playerid][pMember], PlayerName(playerid), mennyit, house);
                    Log("Szef", logolas);
					return 1;
			}

			else if(strcmp(param[2], "marihuana", true) == 0)
			{

				    if(HouseInfo[house][hMarihuana] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs marihuana!");

					if(HouseInfo[house][hMarihuana] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %dg van! Többet nem tudsz kivenni...", HouseInfo[house][hHeroin]);
					    return 1;
	    			}

					if((PlayerInfo[playerid][pMarihuana] + mennyit) > MAXMARIHUANA)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %d heroint birsz el!", MAXMARIHUANA);
					    return 1;
	    			}

                    PlayerInfo[playerid][pMarihuana] += mennyit;
					HouseInfo[house][hMarihuana] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %dg marihuánát", mennyit);

					//HazUpdate(house, "Marihuana='%d'", HouseInfo[house][hMarihuana]);
					HazUpdate(house, HAZ_Marihuana);

					Format(logolas,"[Ház][Frakcio:%d]%s lefoglalt %dg marihuana a %d. ház széfjébõl", PlayerInfo[playerid][pMember], PlayerName(playerid), mennyit, house);
                    Log("Szef", logolas);
					return 1;
			}

			else if(strcmp(param[2], "mati", true) == 0 || strcmp(param[2], "material", true) == 0)
			{

				    if(HouseInfo[house][hMati] < 1)
						return SendClientMessage(playerid, COLOR_LIGHTRED, "A házban nincs mati!");

					if(HouseInfo[house][hMati] < mennyit)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTRED, "A házszéfben csak %ddb van! Többet nem tudsz kivenni...", HouseInfo[house][hMati]);
					    return 1;
					}

					if((PlayerInfo[playerid][pMats] + mennyit) > MAXMATI)
					{
					    SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Maximum %d materialt birsz el!", MAXMATI);
					    return 1;
	    			}

                    PlayerInfo[playerid][pMats] += mennyit;
					HouseInfo[house][hMati] -= mennyit;
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél a házból %ddb materialt", mennyit);

					//HazUpdate(house, "Material='%d'", HouseInfo[house][hMati]);
					HazUpdate(house, HAZ_Mati);

					Format(logolas,"[Ház][Frakcio:%d]%s lefoglalt %ddb matit a %d. ház széfjébõl", PlayerInfo[playerid][pMember], PlayerName(playerid), mennyit, house);
                    Log("Szef", logolas);
					return 1;
			}
			else if(egyezik(param[2], "lõszer") || egyezik(param[2], "loszer"))
			{
				if(params < 4)
					return Msg(playerid, "Használat: /ház lefoglal lõszer [fegyvernév / ID] [Mennyiség]");
				new weapon = GetGunFromString(param[3]);
				if(weapon < 1 || weapon > MAX_WEAPONS)
					return Msg(playerid, "Ilyen fegyver nem létezik");
					
				if(WeaponType(weapon) == WEAPON_TYPE_HAND)
					return Msg(playerid, "Ez a fegyver nem lõszer alapú");
					
				new ammo = strval(param[4]);
				if(ammo < 1)
					return Msg(playerid, "Hibás lõszer mennyiség");
					
				new kiveve, kivenni = max(0, min(ammo, WeaponMaxAmmo(weapon) - WeaponAmmo(playerid, weapon))), t;
				if(!kivenni)
					return Msg(playerid, "Nincs hely lõszernek");
				
				for(new s = 0; s < 10; s++)
				{
					if(HouseInfo[house][hLoszerTipus][s] == weapon)
					{
						t = max(0, min(kivenni, HouseInfo[house][hLoszerMennyiseg][s]));
						
						kiveve += t;
						kivenni -= t;
						
						HouseInfo[house][hLoszerMennyiseg][s] -= t;
						WeaponGiveAmmo(playerid, weapon, t);
						
						if(HouseInfo[house][hLoszerMennyiseg][s] < 1)
							HouseInfo[house][hLoszerTipus][s] = 0;
							
						if(!kivenni)
							break;
					}
				}
					
				if(!kiveve)
					return Msg(playerid, "A házszéfben nincs ilyen lõszer");
					
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kivettél %ddb %s lõszert a házszéfbõl", kiveve, GunName(weapon));
				HazUpdate(house, HAZ_Loszer);
				
				Format(logolas,"[Ház][Frakcio:%d]%s lefoglalt %ddb lõszert a %d. ház széfjébõl", PlayerInfo[playerid][pMember], PlayerName(playerid), kiveve, GunName(weapon), house);
				Log("Szef", logolas);
				return 1;
			}
		}
		if(egyezik(param[1], "átnéz") || egyezik(param[1], "atnez"))
		{
			new penz, kaja, cigis, kokain, heroin, marihuana, material, alma;
			penz = HouseInfo[house][hTakings];
			cigis = HouseInfo[house][hCigi];
			kaja = HouseInfo[house][hKaja];
			kokain = HouseInfo[house][hKokain];
			heroin = HouseInfo[house][hHeroin];
			marihuana = HouseInfo[house][hMarihuana];
			material = HouseInfo[house][hMati];
			alma = HouseInfo[house][hAlma];
			SendFormatMessage(playerid, COLOR_YELLOW, "===== Class utca %d =====", house);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Pénz: %dFT | Kaja: %ddb/%ddb | Cigi: %ddb/%ddb | Material: %ddb/%ddb", penz, MAXHAZKAJA, kaja, MAXHAZCIGI, cigis, MAXHAZMATI, material);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kokain: %dg/%dg | Heroin: %dg/%dg | Marihuana: %dg/%dg | Alma: %ddb/%ddb", MAXHAZKOKAIN, kokain, MAXHAZHEROIN, heroin, MAXHAZMARIHUANA, marihuana, MAXHAZALMA, alma);
			SendClientMessage(playerid, COLOR_YELLOW, "=================================");
			Cselekves(playerid, "átnézte a házat", 1);
		}
	}
    if(egyezik(cmd, "/átnéz") || egyezik(cmd, "/atnez"))
	{
		if(params < 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Használat: /átnéz [ Jármû / Ház ]");
			return 1;
		}
		if(egyezik(param[1], "ház") || egyezik(param[1], "haz"))
		{
		    if(!LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA) && PlayerInfo[playerid][pSwattag] == 0 && PlayerInfo[playerid][pAdmin] < 1337)
			return Msg(playerid, "Csak FBI, CIA és SWAT");

			if(LMT(playerid, FRAKCIO_FBI) && PlayerInfo[playerid][pRank] < 3 && !LMT(playerid, FRAKCIO_CIA) && PlayerInfo[playerid][pSwatRang] < 3 && PlayerInfo[playerid][pAdmin] < 1337)
				return Msg(playerid, "Nem foglalhatsz le");

		    new house = IsAt(playerid, IsAt_Haz);
			if(house == NINCS) return Msg(playerid, "Nem vagy házban.");
			if(params != 2) return Msg(playerid, "Használata: /átnéz Ház [Széf / Fegyverek / Mellények / Lõszerek]");
			if(egyezik(param[2], "lõszerek") || egyezik(param[2], "loszerek"))
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "===========[ Lõszerek ]===========");
				for(new x = 0; x < 10; x++)
				{
					if(!HouseInfo[house][hLoszerTipus][x] || !HouseInfo[house][hLoszerMennyiseg][x])
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Rekesz #%d: Üres", x+1);
					else
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Rekesz #%d: Lõszer: %s (%ddb)", x+1, GetGunName(HouseInfo[house][hLoszerTipus][x]), HouseInfo[house][hLoszerMennyiseg][x]);
				}
			}
			if(egyezik(param[2], "fegyverek"))
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "===========[ Fegyverek ]===========");
				for(new x = 0; x < 10; x++)
				{
					if(HouseInfo[house][hFegyver][x] < 1)
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "Rekesz: Üres");
					else
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Rekesz: %s", GunName(HouseInfo[house][hFegyver][x]));
				}
			}
			if(egyezik(param[2], "mellények") || egyezik(param[2], "mellenyek"))
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "===========[ Mellények ]===========");
			    for(new x = 0; x < 10; x++)
				{
					if(x < 5)
					{
						new pancel = HouseInfo[house][hMellenyek][x];
						if(pancel == 0)
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Slot %d: Üres", x+1);
						else
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Slot %d: Mellény állapota: %d százalék",x+1, pancel);
					}
				}
			}
			if(egyezik(param[2], "szef") || egyezik(param[2], "széf"))
			{
				new penz, kaja, cigis, kokain, heroin, marihuana, material, alma;
				penz = HouseInfo[house][hTakings];
				cigis = HouseInfo[house][hCigi];
				kaja = HouseInfo[house][hKaja];
				kokain = HouseInfo[house][hKokain];
				heroin = HouseInfo[house][hHeroin];
				marihuana = HouseInfo[house][hMarihuana];
				material = HouseInfo[house][hMati];
				alma = HouseInfo[house][hAlma];
				SendFormatMessage(playerid, COLOR_YELLOW, "===== Class utca %d =====", house);
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Pénz: %dFT | Kaja: %ddb/%ddb | Cigi: %ddb/%ddb | Material: %ddb/%ddb", penz, MAXHAZKAJA, kaja, MAXHAZCIGI, cigis, MAXHAZMATI, material);
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kokain: %dg/%dg | Heroin: %dg/%dg | Marihuana: %dg/%dg | Alma: %ddb/%ddb", MAXHAZKOKAIN, kokain, MAXHAZHEROIN, heroin, MAXHAZMARIHUANA, marihuana, MAXHAZALMA, alma);
				SendClientMessage(playerid, COLOR_YELLOW, "=================================");
			}
			Cselekves(playerid, "átnézte a házat", 1);
		}
		
		
		if(egyezik(param[1],"jarmu") || egyezik(param[1],"jármû"))
		{
            veh = GetClosestVehicle(playerid);
			new model = GetVehicleModel(veh)-400;
			new Float:tav = GetPlayerDistanceFromVehicle(playerid, veh);
			if(tav >= 5.0) return Msg(playerid, "Nincs a közeledben jármû.");
	   		if(Locked(veh)) return Msg(playerid, "A jármû zárva.");
			
			SendFormatMessage(playerid, COLOR_LIGHTRED, "========================================[CLS-%d]Csomagtartó Tartalma========================================", veh);
			format(_tmpString, 256, "Mati: %d/%d | Kokain: %d/%d | Heroin: %d/%d | Marihuana: %d/%d | Fegyvercsomag: %d/%d",
				CarTrunk[veh][cMaterial], CarTrunkSize[model][cMati], CarTrunk[veh][cKokain], CarTrunkSize[model][cKokain], CarTrunk[veh][cHeroin], CarTrunkSize[model][cHeroin],
				CarTrunk[veh][cMarihuana], CarTrunkSize[model][cMarihuana], CarTrunk[veh][cFegyverCsomag], CarTrunkSize[model][cFelszereles]
			);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, _tmpString);
			
			format(_tmpString, 256, "Mûanyag: %d/%d | Cserje: %d/%d | Mák: %d/%d | Cannabis: %d/%d | Alma: %d/%d | Töltõ: %d/%d | Kaja: %d/%d | Motorolaj: %d/%d",
				CarTrunk[veh][cMuanyag], CarTrunkSize[model][cMuanyag], CarTrunk[veh][cCserje], CarTrunkSize[model][cCserje], CarTrunk[veh][cMak],CarTrunkSize[model][cMak],
				CarTrunk[veh][cCannabis],CarTrunkSize[model][cCannabis], CarTrunk[veh][cAlma],CarTrunkSize[model][cAlma], CarTrunk[veh][cTolto],CarTrunkSize[model][cTolto],
				CarTrunk[veh][cKaja],CarTrunkSize[model][cKaja], CarTrunk[veh][cOlaj],CarTrunkSize[model][cOlaj]
			);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, _tmpString);
			
			_tmpString = "";
			for(new x = 0; x < MAX_JARMU_WEAPON_SLOT; x++)
			{
				if(CarTrunk[veh][cFegyver][x])
				{
					if(!strlen(_tmpString))
						format(_tmpString, 128, "Fegyver: %s", GunName(CarTrunk[veh][cFegyver][x]));
					else
						format(_tmpString, 128, "%s, %s", _tmpString, GunName(CarTrunk[veh][cFegyver][x]));
				}
			}
			
			if(strlen(_tmpString))
				SendClientMessage(playerid, COLOR_LIGHTBLUE, _tmpString);
			else
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Fegyver: nincs");
			
			_tmpString = "";
			for(new x = 0; x < MAX_JARMU_WEAPON_SLOT; x++)
			{
				if(CarTrunk[veh][cLoszerTipus][x] && CarTrunk[veh][cLoszerMennyiseg][x])
				{
					if(!strlen(_tmpString))
						format(_tmpString, 128, "Lõszer: %s[%ddb]", GunName(CarTrunk[veh][cLoszerTipus][x]), CarTrunk[veh][cLoszerMennyiseg][x]);
					else
						format(_tmpString, 128, "%s, %s[%ddb]", _tmpString, GunName(CarTrunk[veh][cLoszerTipus][x]), CarTrunk[veh][cLoszerMennyiseg][x]);
				}
			}
			
			if(strlen(_tmpString))
				SendClientMessage(playerid, COLOR_LIGHTBLUE, _tmpString);
			else
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Lõszer: nincs");

			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			Format(string,"Mellények:",string);
			for(new a; a < MAX_JARMU_MELLENY_SLOT; a++)
			{
				if(CarTrunk[veh][cMelleny][a] == 0)
					Format(string, "%s Slot%d: ÜRES |", string, a+1);
				else
					Format(string, "%s Slot%d: Állapota: %.2f százalék |",string, a+1, CarTrunk[veh][cMelleny][a]);
			}
			
				
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			SendFormatMessage(playerid, COLOR_LIGHTRED, "========================================[CLS-%d]Csomagtartó Tartalma========================================", veh);
			Cselekves(playerid, "átnézett egy jármûvet.", 0);
			return 1;
		}
		return 1;
	}
	if(egyezik(cmd,"/bepakol"))
	{
		return Msg(playerid, "/kocsi bepakol");
	 }
	if(egyezik(cmd,"/kipakol"))
	{
		return Msg(playerid, "/kocsi kipakol");
	}
 	if(strcmp(cmd, "/szed", true) == 0)
	{
		
		if(Szint(playerid) < IllegalisMunkak[2]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[2]);
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Használata: /szed [növény]");
			    SendClientMessage(playerid, COLOR_GRAD2, "Növények: Cserje, Mák, Cannabis");
			    return 1;
			}

			if(MunkaFolyamatban[playerid] == 1)
			{
			    SendClientMessage(playerid, COLOR_LIGHTGREEN, "Már dolgozol, ne siess annyira...");
			    return 1;
			}

			if(strcmp(tmp, "cserje", true) == 0)
			{
			    if(!PlayerToPoint(3, playerid, 2588.215820, -641.467102, 135.409866) && !PlayerToPoint(3, playerid, -1704.4165,597.0209,24.8906))
			    {
           		SendClientMessage(playerid, COLOR_LIGHTRED, "A közeledben nincs Kokacserje");
       			return 1;
       		}
			    if(PlayerInfo[playerid][pCserje] >= MAXCSERJE)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Tele vagy kokacserjével, a végén még elájulsz tõle...");
					return 1;
			    }
			    MunkaFolyamatban[playerid] = 1;
			    GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Elkezdted szedni...", 3000, 3);
				TogglePlayerControllable(playerid, false);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				SetTimerEx("Munkavege", MunkaIdo[0], false, "ddd", playerid, M_CSERJE, 0);
			}

			if(strcmp(tmp, "mák", true) == 0 || strcmp(tmp, "mak", true) == 0)
			{
			    if(!PlayerToPoint(3, playerid, 2575.530273, -647.375915, 136.372055) && !PlayerToPoint(3, playerid, -1686.1675,603.4606,24.8906))
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "Nem vagy Mákbokor közelében");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pMak] >= MAXMAK)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Tele vagy máklevéllel, elõbb ezeket használd fel!");
					return 1;
			    }
			    MunkaFolyamatban[playerid] = 1;
			    GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Elkezdted szedni, kerlek varj!", 3000, 3);
				TogglePlayerControllable(playerid, false);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				SetTimerEx("Munkavege", MunkaIdo[1], false, "ddd", playerid, M_MAK, 0);
			}

			if(strcmp(tmp, "cannabis", true) == 0)
			{
			    if(!PlayerToPoint(3, playerid, 2575.528564, -634.857604, 135.663269) && !PlayerToPoint(3, playerid, -1713.2587,577.2521,26.1177))
			    {
			        SendClientMessage(playerid, COLOR_LIGHTRED, "Nem vagy Cannabisbokor közelében");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pCannabis] >= MAXCANNABIS)
			    {
					SendClientMessage(playerid, COLOR_LIGHTGREEN, "Tele vagy Cannabissal, elõbb ezeket használd fel!");
					return 1;
			    }
			    MunkaFolyamatban[playerid] = 1;
			    GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Elkezdted szedni, kerlek varj!", 3000, 3);
				TogglePlayerControllable(playerid, false);
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
				SetTimerEx("Munkavege", MunkaIdo[2], false, "ddd", playerid, M_CANNABIS, 0);
			}

        }
		return 1;
	}
	if(egyezik(cmd, "/ajto") || egyezik(cmd, "/ajtó"))
	{
		if((PlayerInfo[playerid][pAdmin] > 1337 || IsScripter(playerid)) && params == 0)
		{
			Msg(playerid, "Használata: /ajto [Funkció] [Ajtó ID] [Paraméter]");
			Msg(playerid, "Funkciók: kbe, kki, hbe, hki, tbe, tki, be, ki, zár, freeze, kocsi, név, törlés");
			return 1;
		}
		else if((PlayerInfo[playerid][pAdmin] < 1338 && !IsScripter(playerid)) && (params == 0 || !egyezik(param[1], "kbe") && !egyezik(param[1], "kki")))
		{
			Msg(playerid, "Használata: /ajto [Funkció]");
			Msg(playerid, "Funkciók: kbe, kki");
			return 1;
		}
		new ajtoszama = NINCS;
		if(params >= 2)
		{
			ajtoszama = strval(param[2]);
			if(ajtoszama < 0 || ajtoszama >= sizeof(Ajtok) || Ajtok[ajtoszama][Van] != 1)
				return Msg(playerid, "Nincs ilyen ajtó!");
		}

		new Float:x, Float:y, Float:z,Float:angle, Interior, VW;
		GetPlayerPos(playerid, x, y, z);
		Interior = GetPlayerInterior(playerid);
		VW = GetPlayerVirtualWorld(playerid);
		GetPlayerFacingAngle(playerid, angle);

		if(egyezik(param[1], "kbe"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "====[ Legközelebbi ajtó bejárat szerint ]=====");
			new Float:PPos[3], Float:legkozelebb = 5000.0, Float:tav, ajto;
			GetPlayerPos(playerid, PPos[0], PPos[1], PPos[2]);
			for(new a = 0; a < sizeof(Ajtok); a++)
			{
				if(Ajtok[a][Van] != 1 || VW != Ajtok[a][BeVW] || Interior != Ajtok[a][BeInt]) continue;
				tav = GetDistanceBetweenPoints(PPos[0], PPos[1], PPos[2], Ajtok[a][BeX], Ajtok[a][BeY], Ajtok[a][BeZ]);
				if(tav < legkozelebb)
				{
					legkozelebb = tav;
					ajto = a;
				}
			}

			if(legkozelebb == 5000.0) return Msg(playerid, "Nincs találat");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "ID: %d | Táv: %.2f | Zárva: %d | Kocsi: %d | Freeze: %d | Angle: %.2f", ajto, legkozelebb, Ajtok[ajto][Zarva], Ajtok[ajto][Kocsi], Ajtok[ajto][Freezel],Ajtok[ajto][BeAngle]);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Név: %s", Ajtok[ajto][Nev]);
			SetPlayerCheckpoint(playerid, Ajtok[ajto][BeX], Ajtok[ajto][BeY], Ajtok[ajto][BeZ], 1);
			return 1;
		}
		else if(egyezik(param[1], "kki"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "====[ Legközelebbi ajtó kijárat szerint ]=====");
			new Float:PPos[3], Float:legkozelebb = 5000.0, Float:tav, ajto;
			GetPlayerPos(playerid, PPos[0], PPos[1], PPos[2]);
			for(new a = 0; a < sizeof(Ajtok); a++)
			{
				if(Ajtok[a][Van] != 1 || VW != Ajtok[a][KiVW] || Interior != Ajtok[a][KiInt]) continue;
				tav = GetDistanceBetweenPoints(PPos[0], PPos[1], PPos[2], Ajtok[a][KiX], Ajtok[a][KiY], Ajtok[a][KiZ]);
				if(tav < legkozelebb)
				{
					legkozelebb = tav;
					ajto = a;
				}
			}

			if(legkozelebb == 5000.0) return Msg(playerid, "Nincs találat");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "ID: %d | Táv: %.2f | Zárva: %d | Kocsi: %d | Freeze: %d | Angle: %.2f", ajto, legkozelebb, Ajtok[ajto][Zarva], Ajtok[ajto][Kocsi], Ajtok[ajto][Freezel],Ajtok[ajto][KiAngle]);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Név: %s", Ajtok[ajto][Nev]);
			SetPlayerCheckpoint(playerid, Ajtok[ajto][KiX], Ajtok[ajto][KiY], Ajtok[ajto][KiZ], 1);
			return 1;
		}
		else if(egyezik(param[1], "hbe"))
		{
		    if(params != 2) return SendClientMessage(playerid,COLOR_WHITE, "Használata: /ajtó hbe [ID] | Ajtó bejárata CheckPoint-al jelezve.");
			SetPlayerCheckpoint(playerid, Ajtok[ajtoszama][BeX], Ajtok[ajtoszama][BeY], Ajtok[ajtoszama][BeZ], 1);
		}
		else if(egyezik(param[1], "hki"))
		{
		    if(params != 2) return SendClientMessage(playerid,COLOR_WHITE, "Használata: /ajtó hki [ID] | Ajtó kijárata CheckPoint-al jelezve.");
			SetPlayerCheckpoint(playerid, Ajtok[ajtoszama][KiX], Ajtok[ajtoszama][KiY], Ajtok[ajtoszama][KiZ], 1);
		}
		else if(egyezik(param[1], "tbe"))
		{
		    if(params != 2) return SendClientMessage(playerid,COLOR_WHITE, "Használata: /ajtó tbe [ID] | Ajtó bejáratához teleportálás.");
			Tele(playerid, Ajtok[ajtoszama][BeX], Ajtok[ajtoszama][BeY], Ajtok[ajtoszama][BeZ], false, Ajtok[ajtoszama][BeVW], Ajtok[ajtoszama][BeInt],Ajtok[ajtoszama][BeAngle]);
			SendFormatMessage(playerid, COLOR_GREY, "Teleportálva a %d. számú ajtó bejáratához!", ajtoszama);
		}
		else if(egyezik(param[1], "tki"))
		{
		    if(params != 2) return SendClientMessage(playerid,COLOR_WHITE, "Használata: /ajtó tki [ID] | Ajtó kijáratához teleportálás.");
			Tele(playerid, Ajtok[ajtoszama][KiX], Ajtok[ajtoszama][KiY], Ajtok[ajtoszama][KiZ], false, Ajtok[ajtoszama][KiVW], Ajtok[ajtoszama][KiInt],Ajtok[ajtoszama][KiAngle]);
			SendFormatMessage(playerid, COLOR_GREY, "Teleportálva a %d. számú ajtó kijáratához!", ajtoszama);
		}
		else if(egyezik(param[1], "be"))
		{
		    if(params != 2) return SendClientMessage(playerid,COLOR_WHITE, "Használata: /ajtó be [ID] | Ajtó bejáratának lerakása.");
			Ajtok[ajtoszama][BeX] = x;
			Ajtok[ajtoszama][BeY] = y;
			Ajtok[ajtoszama][BeZ] = z;
			Ajtok[ajtoszama][BeInt] = Interior;
			Ajtok[ajtoszama][BeVW] = VW;
			Ajtok[ajtoszama][BeAngle] = angle;

			#if defined KELLAJTOEXTRA
				DestroyDynamicPickup(Ajtok[ajtoszama][PickupBe]);
				Ajtok[ajtoszama][PickupBe] = UjPickup(1007, 1, Ajtok[ajtoszama][BeX], Ajtok[ajtoszama][BeY], Ajtok[ajtoszama][BeZ], Ajtok[ajtoszama][BeVW], Ajtok[ajtoszama][BeInt]);

				if(Ajtok[ajtoszama][Kocsi])
				{
					DestroyDynamicPickup(Ajtok[ajtoszama][PickupKocsiBe]);
					Ajtok[ajtoszama][PickupKocsiBe] = UjPickup(1007, 14, Ajtok[ajtoszama][BeX], Ajtok[ajtoszama][BeY], Ajtok[ajtoszama][BeZ], Ajtok[ajtoszama][BeVW], Ajtok[ajtoszama][BeInt]);
				}
				if(IsValidDynamic3DTextLabel(Ajtok[ajtoszama][TextBe]))
					DestroyDynamic3DTextLabel(Ajtok[ajtoszama][TextBe]),Ajtok[ajtoszama][TextBe]=INVALID_3D_TEXT_ID;
				new felirat[128]; format(felirat, 128, "[Bejárat]\n{FFFF00}%s", Ajtok[ajtoszama][Nev]);
				Ajtok[ajtoszama][TextBe] = CreateDynamic3DTextLabel(felirat, 0x22AAFFFF, Ajtok[ajtoszama][BeX], Ajtok[ajtoszama][BeY], Ajtok[ajtoszama][BeZ]+0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Ajtok[ajtoszama][BeVW], Ajtok[ajtoszama][BeInt], NINCS, 25.0);

				Streamer_Update(playerid);
			#endif

			SendFormatMessage(playerid, COLOR_GREEN, "Ajtó %d bejárata átrakva! Angle: %.2f", ajtoszama,Ajtok[ajtoszama][BeAngle]);
		}
		else if(egyezik(param[1], "ki"))
		{
		    if(params != 2) return SendClientMessage(playerid,COLOR_WHITE, "Használata: /ajtó ki [ID] | Ajtó kijáratának lerakása.");
			Ajtok[ajtoszama][KiX] = x;
			Ajtok[ajtoszama][KiY] = y;
			Ajtok[ajtoszama][KiZ] = z;
			Ajtok[ajtoszama][KiInt] = Interior;
			Ajtok[ajtoszama][KiVW] = VW;
			Ajtok[ajtoszama][KiAngle] = angle;

			#if defined KELLAJTOEXTRA
				DestroyDynamicPickup(Ajtok[ajtoszama][PickupKi]);
				Ajtok[ajtoszama][PickupKi] = UjPickup(1007, 1, Ajtok[ajtoszama][KiX], Ajtok[ajtoszama][KiY], Ajtok[ajtoszama][KiZ], Ajtok[ajtoszama][KiVW], Ajtok[ajtoszama][KiInt]);

				if(Ajtok[ajtoszama][Kocsi])
				{
					DestroyDynamicPickup(Ajtok[ajtoszama][PickupKocsiKi]);
					Ajtok[ajtoszama][PickupKocsiKi] = UjPickup(1007, 14, Ajtok[ajtoszama][KiX], Ajtok[ajtoszama][KiY], Ajtok[ajtoszama][KiZ], Ajtok[ajtoszama][KiVW], Ajtok[ajtoszama][KiInt]);
				}

				if(IsValidDynamic3DTextLabel(Ajtok[ajtoszama][TextKi])) DestroyDynamic3DTextLabel(Ajtok[ajtoszama][TextKi]),Ajtok[ajtoszama][TextKi]=INVALID_3D_TEXT_ID;
				new felirat[128]; format(felirat, 128, "[Kijárat]\n{FFFF00}%s", Ajtok[ajtoszama][Nev]);
				Ajtok[ajtoszama][TextKi] = CreateDynamic3DTextLabel(felirat, 0x22AAFFFF, Ajtok[ajtoszama][KiX], Ajtok[ajtoszama][KiY], Ajtok[ajtoszama][KiZ]+0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Ajtok[ajtoszama][KiVW], Ajtok[ajtoszama][KiInt], NINCS, 25.0);

				Streamer_Update(playerid);
			#endif

			SendFormatMessage(playerid, COLOR_GREEN, "Ajtó %d kijárata átrakva! Angle: %.2f", ajtoszama,Ajtok[ajtoszama][KiAngle]);
		}
		else if(egyezik(param[1], "zár") || egyezik(param[1], "zar"))
		{
		    if(params != 2) return SendClientMessage(playerid,COLOR_WHITE, "Használata: /ajtó zár [ID] | Ajtó bezárása.");
			if(Ajtok[ajtoszama][Zarva] != 1)
			{
				Ajtok[ajtoszama][Zarva] = 1;
				SendFormatMessage(playerid, COLOR_GREEN, "Ajtó %d zárva!", ajtoszama);
			}
			else
			{
				Ajtok[ajtoszama][Zarva] = 0;
				SendFormatMessage(playerid, COLOR_GREEN, "Ajtó %d nyitva!", ajtoszama);
			}
		}
		else if(egyezik(param[1], "freeze"))
		{
		    if(params != 3) return SendClientMessage(playerid,COLOR_WHITE, "Használata: /ajtó freeze [ID] [Idõ] | Ajtó fagyasztási ideje ezredmásodpercben megadva.");
			new szam = strval(param[3]);
			Ajtok[ajtoszama][Freezel] = szam;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Ajtó %d-n a freeze idõ átírva %d ezredmásodpercre!", ajtoszama, szam);
		}
		else if(egyezik(param[1], "kocsi"))
		{
			if(params != 3)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Használat: /ajtó kocsi [ID] [0/1] | 1 = Jármûvet is teleportál");

			new szam = strval(param[3]);
			if(szam != 0 && szam != 1) return Msg(playerid, "0 vagy 1!");

			#if defined KELLAJTOEXTRA
				if(szam == 0 && Ajtok[ajtoszama][Kocsi])
				{
					DestroyDynamicPickup(Ajtok[ajtoszama][PickupKocsiBe]);
					DestroyDynamicPickup(Ajtok[ajtoszama][PickupKocsiKi]);
				}
				else if(szam == 1 && !Ajtok[ajtoszama][Kocsi])
				{
					Ajtok[ajtoszama][PickupKocsiBe] = UjPickup(1007, 14, Ajtok[ajtoszama][BeX], Ajtok[ajtoszama][BeY], Ajtok[ajtoszama][BeZ], Ajtok[ajtoszama][BeVW], Ajtok[ajtoszama][BeInt]);
					Ajtok[ajtoszama][PickupKocsiKi] = UjPickup(1007, 14, Ajtok[ajtoszama][KiX], Ajtok[ajtoszama][KiY], Ajtok[ajtoszama][KiZ], Ajtok[ajtoszama][KiVW], Ajtok[ajtoszama][KiInt]);
				}

				Streamer_Update(playerid);
			#endif

			Ajtok[ajtoszama][Kocsi] = szam;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Ajtó %d-n a kocsi átírva erre: %d", ajtoszama, szam);
		}
		else if(egyezik(param[1], "név") || egyezik(param[1], "nev"))
		{
		    new result[64];
			if(sscanf(pms, "{s[32]}ds[64]",ajtoszama, result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használata: /ajtó név [ID] [Neve]");
				
			Ajtok[ajtoszama][Nev] = result;
			SendFormatMessage(playerid, COLOR_GREEN, "Az  %d. számú ajtó új neve: \"%s\"", ajtoszama, result);

			#if defined KELLAJTOEXTRA
				DestroyDynamic3DTextLabel(Ajtok[ajtoszama][TextBe]);
				Ajtok[ajtoszama][TextBe]=INVALID_3D_TEXT_ID;
				DestroyDynamic3DTextLabel(Ajtok[ajtoszama][TextKi]);
				Ajtok[ajtoszama][TextKi]=INVALID_3D_TEXT_ID;
				new felirat[128]; format(felirat, 128, "[Bejárat]\n{FFFF00}%s", Ajtok[ajtoszama][Nev]);
				Ajtok[ajtoszama][TextBe] = CreateDynamic3DTextLabel(felirat, 0x22AAFFFF, Ajtok[ajtoszama][BeX], Ajtok[ajtoszama][BeY], Ajtok[ajtoszama][BeZ]+0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Ajtok[ajtoszama][BeVW], Ajtok[ajtoszama][BeInt], NINCS, 25.0);
				format(felirat, 128, "[Kijárat]\n{FFFF00}%s", Ajtok[ajtoszama][Nev]);
				Ajtok[ajtoszama][TextKi] = CreateDynamic3DTextLabel(felirat, 0x22AAFFFF, Ajtok[ajtoszama][KiX], Ajtok[ajtoszama][KiY], Ajtok[ajtoszama][KiZ]+0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Ajtok[ajtoszama][KiVW], Ajtok[ajtoszama][KiInt], NINCS, 25.0);

				Streamer_Update(playerid);
			#endif
		}
		else if(egyezik(param[1], "törlés") || egyezik(param[1], "torles"))
		{
		    if(params != 2) return SendClientMessage(playerid, COLOR_WHITE, "Használata: /ajtó törlés [ID]");

			Ajtok[ajtoszama][Van] = false;
			Ajtok[ajtoszama][BeX] = 0.0;
			Ajtok[ajtoszama][BeY] = 0.0;
			Ajtok[ajtoszama][BeZ] = 0.0;
			Ajtok[ajtoszama][KiX] = 0.0;
			Ajtok[ajtoszama][KiY] = 0.0;
			Ajtok[ajtoszama][KiZ] = 0.0;
			SendFormatMessage(playerid, COLOR_GREEN, "Az  %d. számú ajtó törölve", ajtoszama);

			#if defined KELLAJTOEXTRA
				DestroyDynamic3DTextLabel(Ajtok[ajtoszama][TextBe]);
				Ajtok[ajtoszama][TextBe]=INVALID_3D_TEXT_ID;
				DestroyDynamic3DTextLabel(Ajtok[ajtoszama][TextKi]);
				Ajtok[ajtoszama][TextKi]=INVALID_3D_TEXT_ID;
				Streamer_Update(playerid);
			#endif
		}
		else
			Msg(playerid, "Hibás funkció!");

		OnAjtoUpdate();
		return 1;
	}
	if(strcmp(cmd, "/ujajto", true) == 0)
	{
		if(!Admin(playerid, 1338) && !IsScripter(playerid)) return 1;

		for(new p = 0; p < MAXAJTO; p++)
		{
			if(Ajtok[p][Van] == 1 && PlayerToPoint(5, playerid, Ajtok[p][BeX],Ajtok[p][BeY],Ajtok[p][BeZ])){
				SendClientMessage(playerid, COLOR_RED, "Itt már van egy ajtó!");
				return 1;
			}
		}

		new ajtoszama = -1;
		for(new o = 0; o < MAXAJTO; o++)
		{
			if(ajtoszama == -1 && Ajtok[o][Van] == 0)
				ajtoszama = o;
		}

		if(ajtoszama == -1){
			SendClientMessage(playerid, COLOR_RED, "Az ajtók száma elérte a maximumot!");
			return 1;
		}
		new result[64];
		sscanf(pms, "s[64]",result);
		
		new nev[64];
		nev = "Névtelen";
		if(!strlen(result))
			result = nev;

		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);

		Ajtok[ajtoszama][Van] = true;
		Ajtok[ajtoszama][Nev] = result;
		Ajtok[ajtoszama][BeX] = x;
		Ajtok[ajtoszama][BeY] = y;
		Ajtok[ajtoszama][BeZ] = z;
		Ajtok[ajtoszama][BeInt] = GetPlayerInterior(playerid);
		Ajtok[ajtoszama][BeVW] = GetPlayerVirtualWorld(playerid);
		Ajtok[ajtoszama][KiX] = 0.000000;
		Ajtok[ajtoszama][KiY] = 0.000000;
		Ajtok[ajtoszama][KiZ] = 0.000000;
		Ajtok[ajtoszama][KiInt] = 0;
		Ajtok[ajtoszama][KiVW] = 0;
		Ajtok[ajtoszama][Zarva] = 0;
		Ajtok[ajtoszama][Kocsi] = 0;
		Ajtok[ajtoszama][Freezel] = 0;

		#if defined KELLAJTOEXTRA
			Ajtok[ajtoszama][PickupBe] = UjPickup(1007, 1, Ajtok[ajtoszama][BeX], Ajtok[ajtoszama][BeY], Ajtok[ajtoszama][BeZ], Ajtok[ajtoszama][BeVW], Ajtok[ajtoszama][BeInt]);
			Ajtok[ajtoszama][PickupKi] = UjPickup(1007, 1, Ajtok[ajtoszama][KiX], Ajtok[ajtoszama][KiY], Ajtok[ajtoszama][KiZ], Ajtok[ajtoszama][KiVW], Ajtok[ajtoszama][KiInt]);

			new felirat[128];
			format(felirat, 128, "[Bejárat]\n{FFFF00}%s", Ajtok[ajtoszama][Nev]);
			Ajtok[ajtoszama][TextBe] = CreateDynamic3DTextLabel(felirat, 0x22AAFFFF, Ajtok[ajtoszama][BeX], Ajtok[ajtoszama][BeY], Ajtok[ajtoszama][BeZ]+0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Ajtok[ajtoszama][BeVW], Ajtok[ajtoszama][BeInt], NINCS, 25.0);

			format(felirat, 128, "[Kijárat]\n{FFFF00}%s", Ajtok[ajtoszama][Nev]);
			Ajtok[ajtoszama][TextKi] = CreateDynamic3DTextLabel(felirat, 0x22AAFFFF, Ajtok[ajtoszama][KiX], Ajtok[ajtoszama][KiY], Ajtok[ajtoszama][KiZ]+0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, Ajtok[ajtoszama][KiVW], Ajtok[ajtoszama][KiInt], NINCS, 25.0);

			Streamer_Update(playerid);
		#endif

		format(string, sizeof(string), "Sikeresen leraktál egy ajtót (#%d)! A másik felét is add meg! /ajto [Be/Ki] [ID (%d)]", ajtoszama, ajtoszama);
		SendClientMessage(playerid, COLOR_GREEN, string);
		OnAjtoUpdate();
		return 1;
	}

	if(strcmp(cmd, "/pickdel", true) == 0)
	{
	    if(IsScripter(playerid))
	    {
   			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "Te mit csinálsz?");
			new pickid;
			pickid = strval(tmp);
		 	format(string, sizeof(string), "Pickup %d törölve!", pickid);
		 	SendClientMessage(playerid, COLOR_GREEN, string);
		    DestroyDynamicPickup(pickid);
	    }
	    return 1;
    }

	if(strcmp(cmd, "/ujpick", true) == 0)
	{
	    if(IsScripter(playerid))
	    {
   			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "Te mit csinálsz?");
			new pickup, pickid, Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			pickup = strval(tmp);
		 	pickid = UjPickup(pickup, 23, x, y, z);
		 	format(string, sizeof(string), "Pickup kész! Pickup: %d, ID:%d", pickup, pickid);
		 	SendClientMessage(playerid, COLOR_GREEN, string);
	    }
	    return 1;
    }

	if(egyezik(cmd, "/abiz"))
	{
		if(!Admin(playerid, 5)) return 1;
		if(params < 1)
		{
			if(!Admin(playerid, 1337))
			{
				Msg(playerid, "/abiz [Funkció] [BizID] [Paraméter]");
				Msg(playerid, "Funkciók: Open, Go, Lista, OpenAll");
				return 1;
			}
			Msg(playerid, "/abiz [Funkció] [BizID] [Paraméter]");
			Msg(playerid, "Funkciók: Open, OpenAll, Go, Enter, Exit, Név, Lista, BNév, Info");
			return 1;
		}
		if(egyezik(param[1], "openall"))
		{
		    new x = NINCS;
		    for(;++x < MAXBIZ;)
		    {
		        if(BizzInfo[x][bVan])
					BizzInfo[x][bLocked] = 0;
			}
			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s kinyitotta az összes bizniszt! >>", AdminName(playerid));
		}
		if(egyezik(param[1], "lista"))
		{
		    SendClientMessage(playerid, COLOR_ORANGE, "================= [ Bizniszek ] =================");
		    new x = NINCS;
		    for(;++x < MAXBIZ;)
		    {
		        if(BizzInfo[x][bVan])
		            SendFormatMessage(playerid, COLOR_GREEN, "ID: %d | Zárva: %s | Tulaj: %s | Név: %s", x,(BizzInfo[x][bLocked] == 0 ? ("Nem"):("Igen")), BizzInfo[x][bOwner], BizzInfo[x][bBNev]);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Több infomációért használd a /biz info parancsot!");
		}
		if(egyezik(param[1], "open"))
		{
		    if(params != 2) return SendClientMessage(playerid, COLOR_WHITE, "Használata: /abiz open [BizID]");
		    new bizszam = strval(param[2]);
			if(BizzInfo[bizszam][bLocked])
			{
				BizzInfo[bizszam][bLocked] = 0;
				Msg(playerid, "Nyitva");
				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s kinyitotta a %d számú bizniszt. >>", AdminName(playerid), bizszam);
			}
			else
			{
				BizzInfo[bizszam][bLocked] = 1;
				Msg(playerid, "Zárva");
				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s bezárta a %d számú bizniszt. >>", AdminName(playerid), bizszam);
			}
		}
		if(egyezik(param[1], "go"))
		{
		    if(params != 2) return SendClientMessage(playerid, COLOR_WHITE, "Használata: /abiz go [BizID]");
		    new bizszam = strval(param[2]);
			if(bizszam > MAXBIZ) return Msg(playerid, "Nincs ilyen biz");
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,BizzInfo[bizszam][bEntranceX],BizzInfo[bizszam][bEntranceY],BizzInfo[bizszam][bEntranceZ]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Teleportálva a biznisz bejáratához(%d - %s).", bizszam, BizzInfo[bizszam][bMessage]);
			ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s teleportált a %d számú bizniszhez. >>", AdminName(playerid), bizszam);
		}
		if(egyezik(param[1], "enter"))
		{
			if(!Admin(playerid, 1337))
				return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a paramétert nem használhatod!");
				
			if(params != 2) return SendClientMessage(playerid, COLOR_WHITE, "Használata: /abiz enter [BizID] | Bejárat áthelyezése.");
		    new bizszam = strval(param[2]);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid,x,y,z);
			BizzInfo[bizszam][bEntranceX] = x;
			BizzInfo[bizszam][bEntranceY] = y;
			BizzInfo[bizszam][bEntranceZ] = z;
			DestroyDynamicPickup(BizPickup[bizszam]);

			if(BizzInfo[bizszam][bOwned] == 0)
				BizPickup[bizszam] = UjPickup(1272, 23, BizzInfo[bizszam][bEntranceX], BizzInfo[bizszam][bEntranceY], BizzInfo[bizszam][bEntranceZ]);
			if(BizzInfo[bizszam][bOwned] == 1)
				BizPickup[bizszam] = UjPickup(1239, 23, BizzInfo[bizszam][bEntranceX], BizzInfo[bizszam][bEntranceY], BizzInfo[bizszam][bEntranceZ]);

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "A biznisz(%d - %s) bejárata átrakva.",bizszam, BizzInfo[bizszam][bBNev]);
			ABroadCastFormat(COLOR_LIGHTRED,PlayerInfo[playerid][pAdmin], "<< %s áthelyezte a %d számú biznisz bejáratát. >>", AdminName(playerid), bizszam);
			BizUpdate(bizszam, BIZ_X, BIZ_Y, BIZ_Z);
		}
		if(egyezik(param[1], "exit"))
		{
			if(!Admin(playerid, 1337))
				return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a paramétert nem használhatod!");
				
			if(params != 2) return SendClientMessage(playerid, COLOR_WHITE, "Használata: /abiz exit [BizID] | Kijárat áthelyezése.");
		    new bizszam = strval(param[2]);
			new Float:x, Float:y, Float:z, inti = GetPlayerInterior(playerid);
			GetPlayerPos(playerid,x,y,z);
			BizzInfo[bizszam][bExitX] = x;
			BizzInfo[bizszam][bExitY] = y;
			BizzInfo[bizszam][bExitZ] = z;

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "A biznisz(%d - %s) kijárata átrakva.",bizszam, BizzInfo[bizszam][bBNev]);
			ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s áthelyezte a %d számú biznisz kijáratát. >>", AdminName(playerid), bizszam);
			if(inti > 0)
			{
				BizzInfo[bizszam][bInterior] = inti;
				BizUpdate(bizszam, BIZ_ExitX, BIZ_ExitY, BIZ_ExitZ, BIZ_Interior);
			}
			else
				BizUpdate(bizszam, BIZ_ExitX, BIZ_ExitY, BIZ_ExitZ);
		}
		if(egyezik(param[1], "info"))
		{
		    if(!Admin(playerid, 1337))
				return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a paramétert nem használhatod!");
				
		    if(params != 2) return SendClientMessage(playerid, COLOR_WHITE, "Használata: /abiz info [BizID] | Bõvebb információ.");
		    new x = strval(param[2]);
		    SendClientMessage(playerid, COLOR_ORANGE, "============== [ Biznisz adatok ] ==============");
		    SendFormatMessage(playerid, COLOR_GREEN, "Neve: %s | GPS Neve: %s", BizzInfo[x][bMessage], BizzInfo[x][bBNev]);
		    SendFormatMessage(playerid, COLOR_GREEN, "Tulaj: %s | Másodtulaj: %s | Zárva: %s",BizzInfo[x][bOwner],BizzInfo[x][bExtortion],(BizzInfo[x][bLocked] == 0 ? ("Nem"):("Igen")));
		    SendFormatMessage(playerid, COLOR_GREEN, "Széf: %sFt | Belépõ: %dFt | Prod ára: %dFt | Prod: %d/%d", FormatNumber(BizzInfo[x][bTill], 0, ','),BizzInfo[x][bEntranceCost],BizzInfo[x][bPriceProd],BizzInfo[x][bProducts],BizzInfo[x][bMaxProducts]);
		}
		if(egyezik(param[1], "név") || egyezik(param[1], "nev"))
		{
		    if(!Admin(playerid, 1337))
				return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a paramétert nem használhatod!");
				
		    new neve[128], bizszam;
		    if(sscanf(pms, "{s[32]}ds[128]",bizszam, neve))
    			return SendClientMessage(playerid, COLOR_WHITE, "Használata: /abiz Név [BizID] [Új neve]");
		    SendFormatMessage(playerid, COLOR_GREEN,"BizID: %d | Régi neve: %s | Új neve: %s",bizszam, BizzInfo[bizszam][bMessage],neve);
			BizzInfo[bizszam][bMessage] = neve;
			BizUpdate(bizszam, BIZ_Message);
		}
		if(egyezik(param[1], "bnév") || egyezik(param[1], "bnev"))
		{
		    if(!Admin(playerid, 1337))
				return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a paramétert nem használhatod!");

		    new neve[128], bizszam;
		    if(sscanf(pms, "{s[32]}ds[128]",bizszam, neve))
    			return SendClientMessage(playerid, COLOR_WHITE, "Használata: /abiz BNév [BizID] [Új neve] | Biznisz GPS-ben listázott nevét írja át!");
		    SendFormatMessage(playerid, COLOR_GREEN,"BizID: %d | Régi neve: %s | Új neve: %s",bizszam, BizzInfo[bizszam][bBNev],neve);
			BizzInfo[bizszam][bBNev] = neve;
			BizUpdate(bizszam, BIZ_BNEV);
		}
	}
	if(strcmp(cmd, "/ujbizhely", true) == 0)
	{
	    if(IsScripter(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "Te mit csinálsz?");

			new bizszam = strval(tmp);

			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid,x,y,z);
			BizzInfo[bizszam][bEntranceX] = x;
			BizzInfo[bizszam][bEntranceY] = y;
			BizzInfo[bizszam][bEntranceZ] = z;
			DestroyDynamicPickup(BizPickup[bizszam]);

			if(BizzInfo[bizszam][bOwned] == 0)
				BizPickup[bizszam] = UjPickup(1272, 23, BizzInfo[bizszam][bEntranceX], BizzInfo[bizszam][bEntranceY], BizzInfo[bizszam][bEntranceZ]);
			if(BizzInfo[bizszam][bOwned] == 1)
				BizPickup[bizszam] = UjPickup(1239, 23, BizzInfo[bizszam][bEntranceX], BizzInfo[bizszam][bEntranceY], BizzInfo[bizszam][bEntranceZ]);

			format(string, sizeof(string), "Biz %d átrakva! [%s]",bizszam, BizzInfo[bizszam][bMessage]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			//BizUpdate(bizszam, "BeX='%f', BeY='%f', BeZ='%f'", x, y, z);
			BizUpdate(bizszam, BIZ_X, BIZ_Y, BIZ_Z);
	    }
	    return 1;
   }

	if(strcmp(cmd, "/goigénylés", true) == 0 || strcmp(cmd, "/goigenyles", true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 1337)
	    {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "/goigénylés [id]");

			new szam = strval(tmp);
			if(szam >= MAXIGENYLES || szam < 0 || HazIgenylesek[szam][Van] != 1){
			    SendClientMessage(playerid, COLOR_RED, "Nics ilyen igénylés");
			    return 1;
			}

			SetPlayerPos(playerid,HazIgenylesek[szam][iX],HazIgenylesek[szam][iY],HazIgenylesek[szam][iZ]);

			format(string,sizeof(string), "Odateleportáltál az igényléshez [%d] (Igénylõ:%s | Belsõ:%d)",szam,HazIgenylesek[szam][Nev],HazIgenylesek[szam][Belso]);
			SendClientMessage(playerid, COLOR_GREEN, string);
	    }
	    return 1;
  	}

	if(strcmp(cmd, "/házigényléstörlése", true) == 0 || strcmp(cmd, "/hazigenylestorlese", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1337)
	    {
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "/házigényléstörlése [id]");

			new szam = strval(tmp);
			if(HazIgenylesek[szam][Van] != 1){
			    SendClientMessage(playerid, COLOR_RED, "Nics ilyen igénylés");
			    return 1;
			}

			new nev[MAX_PLAYER_NAME] = "Senki";
			HazIgenylesek[szam][Van] = 0;
			HazIgenylesek[szam][Belso] = 0;
			HazIgenylesek[szam][Nev] = nev;
			HazIgenylesek[szam][iX] = 0.000000;
			HazIgenylesek[szam][iY] = 0.000000;
			HazIgenylesek[szam][iZ] = 0.000000;

			OnIgenyUpdate();
			format(string,sizeof(string), "%d. igény törölve",szam);
			SendClientMessage(playerid, COLOR_GREEN, string);
	    }
	    return 1;
  	}

	if(strcmp(cmd, "/házigénylések", true) == 0 || strcmp(cmd, "/hazigenylesek", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
            SendClientMessage(playerid, COLOR_GRAD2, "=====HÁZIGÉNYLÉSEK=====");
			for(new o = 0; o < MAXIGENYLES; o++)
			{
				if(HazIgenylesek[o][Van] == 1)
					format(string, sizeof(string), "[%d]Név: %s | Belsõ: %d", o, HazIgenylesek[o][Nev], HazIgenylesek[o][Belso]);
				else
                    format(string, sizeof(string), "[%d]Szabad", o);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			SendClientMessage(playerid, COLOR_GRAD2, "========================");
			SendClientMessage(playerid, COLOR_GRAD2, "Igénylés: /házigénylés");
		}
		return 1;
	}

	if(strcmp(cmd, "/házigényléside", true) == 0 || strcmp(cmd, "/hazigenyleside", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Nincsbelepve(playerid)) return 1;

			if(IgenylesEngedelyezve == 0)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "A Házmesterek Zrt jelenleg nem kíván több házat építeni!");

   			GetPlayerName(playerid, playername, sizeof(playername));
	        new house = PlayerInfo[playerid][pPhousekey];
	        if (house != NINCS){
	            SendClientMessage(playerid, COLOR_RED, "Már van házad, vagy bérben laksz!");
	            return 1;
	        }

	        for(new p = 0; p < MAXIGENYLES; p++)
	        {
	            if(strcmp(playername, HazIgenylesek[p][Nev], true) == 0){
	                SendClientMessage(playerid, COLOR_RED, "Már igényeltél bazd+ mi a fasznak neked 200 ház?? Többieknek is kéne!");
	                return 1;
             	}
	        }

	        new igenyszama = -1;
	        for(new o = 0; o < MAXIGENYLES; o++)
	        {
	            if(igenyszama == -1 && HazIgenylesek[o][Van] == 0)
	                igenyszama = o;
	        }

	        if(igenyszama == -1){
	            SendClientMessage(playerid, COLOR_RED, "A házigénylés betelt! Igényelj, ha lesz szabad hely!");
	            return 1;
	        }

	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használata: /házigényléside [belso(1-37)]");
				return 1;
			}
			new belso = strval(tmp);

			if(belso < 1 || belso > 37)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "A belsõ száma 1 és 37 között lehet");
				return 1;
			}

	        HazIgenylesek[igenyszama][Van] = 1;
	        HazIgenylesek[igenyszama][Belso] = belso;
	        HazIgenylesek[igenyszama][Nev] = playername;
			GetPlayerPos(playerid, HazIgenylesek[igenyszama][iX], HazIgenylesek[igenyszama][iY], HazIgenylesek[igenyszama][iZ]);

	        SendClientMessage(playerid, COLOR_GREEN, "Sikeresen igényelted ezt a házat! Várd meg míg egy Ház Mester megcsinálja!");
			format(string, sizeof(string), "* Valaki igényelt egy házat.");
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			printf("%s\n", string);
			OnIgenyUpdate();
		}
		return 1;
	}

	if(strcmp(cmd, "/házigénylés", true) == 0 || strcmp(cmd, "/hazigenyles", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Nincsbelepve(playerid)) return 1;

			if(IgenylesEngedelyezve == 0)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "A Házmesterek Zrt jelenleg nem kíván több házat építeni!");

	        GetPlayerName(playerid, playername, sizeof(playername));
		    new house = PlayerInfo[playerid][pPhousekey];
	        if (house != NINCS){
	            SendClientMessage(playerid, COLOR_RED, "Már van házad, vagy bérben laksz!");
	            return 1;
	        }

	        for(new p = 0; p < MAXIGENYLES; p++)
	        {
	            if(strcmp(playername, HazIgenylesek[p][Nev], true) == 0){
	                SendClientMessage(playerid, COLOR_RED, "Már igényeltél! Mi a ráknak neked 200 ház?? Többieknek is kéne, nem?!");
	                return 1;
             	}
	        }

			SendClientMessage(playerid, COLOR_YELLOW,   "====================================================================");
			SendClientMessage(playerid, COLOR_YELLOW,   "Üdv! Szóval házat akarsz igényelni.");
			SendClientMessage(playerid, COLOR_YELLOW,   "A házigényléshez állj oda az ajtóhoz, ha lehet közel a bejárathoz.");
			SendClientMessage(playerid, COLOR_YELLOW,   "Ha ez megvan, akkor ird be azt, hogy /hazigenyleside");
			SendClientMessage(playerid, COLOR_YELLOW,   "DE CSAK AKKOR HA TÉLLEG IDE AKAROD A HÁZAD!");
			SendClientMessage(playerid, COLOR_YELLOW,   "HA 2X-ER IGÉNYELSZ, 1 NAP BAN!");
			SendClientMessage(playerid, COLOR_YELLOW,   "====================================================================");
		}
		return 1;
	}

	if(egyezik(cmd,"/rendel")) 
	{
		if(params<1) 
		{
			Msg(playerid, "/rendel [ Újgarázs | Object | Tábla | Lista]");
			if(Admin(playerid))
				Msg(playerid,"Ha törlést kérsz -1 -et írj objectnek az object elõtt!");
			if(IsScripter(playerid))
				Msg(playerid, "/rendel [Go / Töröl / lerak]");
			return 1;
		}
		if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid) != 0)
			return Msg(playerid, "Szerintem nem lehet ezeket kérni intibe...");
		
		if(egyezik(param[1], "lerak"))
		{
			new Float:PPos[3], Float:legkozelebb = 5000.0, Float:tav;
			GetPlayerPos(playerid, PPos[0], PPos[1], PPos[2]);
			new o;
			for(new a = 0; a < MAXRENDELES; a++)
			{
				tav = GetDistanceBetweenPoints(PPos[0], PPos[1], PPos[2], Rendeles[a][iX], Rendeles[a][iY], Rendeles[a][iZ]);
				if(tav < legkozelebb)
				{
					legkozelebb = tav;
					o = a;
				}
			}
			SendFormatMessage(playerid, COLOR_YELLOW,"[RENDELÉS LERAKÁS] Rendelés %d",o);
			if(o >= MAXRENDELES || o < 0 || Rendeles[o][Van] != 1)
			{
				SendClientMessage(playerid, COLOR_RED, "Nics ilyen rendelés");
				return 1;
			}
			
			if(egyezik(Rendeles[o][Mit],"Garázs")||egyezik(Rendeles[o][Mit],"Garázs "))
			{
				if(!IsScripter(playerid)) return 1;
				new uresgarazs = UresGarazsKereses();
				if(uresgarazs == -1)
				{
					format(string, sizeof(string), "Max %d a megengedett garázs!", sizeof(HouseInfo));
					SendClientMessage(playerid, COLOR_RED, string);
					return 1;
				}
				new cost;

				new belso=Rendeles[o][Belso];
				if(belso>3 || belso<1) return Msg(playerid, "belsõ 1 - 3 ");
				new hazhoz=Rendeles[o][Cim];
				
				if(belso == 1)
					cost=15000000;
				if(belso == 2)
					cost=20000000;
				if(belso == 3)
					cost=25000000;

				new Float:x, Float:y, Float:z, Float:angle;
				GetPlayerPos(playerid, x, y, z);
				GetPlayerFacingAngle(playerid, angle);
				//printf("ID:%d Parancs:/ujhaz %d %d",playerid,interior,cost);
				//printf("Uj haz berakasa folyamatban...");
				new nev[MAX_PLAYER_NAME] = "Nincs_Tulaj";

				if(hazhoz > 0)
					GarazsInfo[uresgarazs][hHaz] = hazhoz;
				else
					GarazsInfo[uresgarazs][hHaz] = NINCS;


				GarazsInfo[uresgarazs][hOwner] = nev;
				GarazsInfo[uresgarazs][hTulajid] = NINCS;
				GarazsInfo[uresgarazs][Van] = 1;
				GarazsInfo[uresgarazs][Uj] = 1;
				GarazsInfo[uresgarazs][hEladva] = 0;
				GarazsInfo[uresgarazs][hEntrancex] = x;
				GarazsInfo[uresgarazs][hEntrancey] = y;
				GarazsInfo[uresgarazs][hEntrancez] = z;
				GarazsInfo[uresgarazs][hBelso] = belso;
				GarazsInfo[uresgarazs][hAra] = cost;
				GarazsInfo[uresgarazs][hLock] = 0;
				GarazsInfo[uresgarazs][hRent] = 500;
				GarazsInfo[uresgarazs][hRentabil] = 0;
				GarazsInfo[uresgarazs][hDate] = 0;
				GarazsInfo[uresgarazs][hAngle] = angle;

				format(string, sizeof(string), "Az új Garázs elkészült! Száma %d! (Ára %iFT)", uresgarazs,cost);
				SendClientMessage(playerid, COLOR_GREEN, string);

				GarazsPickup[uresgarazs] = UjPickup(1272, 23, x,y,z);

				new nevek[128], adatok[256];

				nevek = "ID, Eladva, Tulaj, X, Y, Z, Ara, Angle, Haz, Belso";
				Format(adatok, "'%d', '0', 'Nincs_Tulaj', '%f', '%f', '%f', '%d', '%f', '%d', '%d'", uresgarazs, x, y, z, cost,angle,GarazsInfo[uresgarazs][hHaz],belso);
				Mysql_Insert(SQL_DB_Garazs, nevek, adatok);
			
			
			}
			else if(egyezik(Rendeles[o][Mit],"atm"))
			{
				if(!IsScripter(playerid)) return 1;
				new atmid;
				if(params < 2)
				{
					atmid=UresATM();
					if(atmid == NINCS) return Msg(playerid, "Nincs szabad hely!");
				}
				//if(ATM[atmid][aPosX] != 0 && PlayerInfo[playerid][pAdmin] >= 1338) return Msg(playerid, "Ezt már lerakták. Ha tényleg ezt akarod elõbb töröld ki!");
				new Float:X, Float:Y, Float:Z, Float:A;
				GetPlayerPos(playerid, X, Y, Z);
				GetPlayerFacingAngle(playerid, A);
			
				ATM[atmid][aInt] =GetPlayerInterior(playerid);
				ATM[atmid][aVw]=GetPlayerVirtualWorld(playerid);

				ATM[atmid][aPosX] = X;
				ATM[atmid][aPosY] = Y;
				ATM[atmid][aPosZ] = Z;
				ATM[atmid][aPosA] = A;
				if(ATM[atmid][aObjectID] > 0)
					if(IsValidDynamicObject(ATM[atmid][aObjectID])) DestroyDynamicObject(ATM[atmid][aObjectID]), ATM[atmid][aObjectID]=INVALID_OBJECT_ID;
				ATM[atmid][aObjectID] = CreateDynamicObject(2942, X, Y, Z-0.3, 0.0, 0.0, ATM[atmid][aPosA],ATM[atmid][aVw],ATM[atmid][aInt]);

				SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "* ATM lerakva. (ID: %d - Koordínáta: X: %.2f | Y: %.2f | Z: %.2f | A: %.2f | VW: %d | INT: %d) ", atmid, ATM[atmid][aPosX], ATM[atmid][aPosY], ATM[atmid][aPosZ], ATM[atmid][aPosA],ATM[atmid][aVw],ATM[atmid][aInt]);
				Streamer_Update(playerid);
				SetPlayerPos(playerid, X, Y, Z+2.0);
				SaveATM();
			
			}
			/*elseif(egyezik(Rendeles[o][Mit],"hotspot"))
			{
				if(!IsScripter(playerid)) return 1;
				new nev[32], Float:q[3];
				nev = param[2];
				if(params < 2) return Msg(playerid, "/rendel lerak név - Wifi hotspot neve");
				GetPlayerPos(playerid, ArrExt(q));
				CreateWifi(ArrExt(q), GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), nev);
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "* Wifi Hotspot lerakva. Neve: ClassHotSpot_%s", nev);
				new ujnev[MAX_PLAYER_NAME] = "Senki";
				Rendeles[o][Van] = 0;
				Rendeles[o][Belso] = 0;
				Rendeles[o][Neve] = ujnev;
				Rendeles[o][iX] = 0.000000;
				Rendeles[o][iY] = 0.000000;
				Rendeles[o][iZ] = 0.000000;
				Rendeles[o][Cim] = 0;
				SendFormatMessage(playerid, COLOR_LIGHTGREEN, "%d. rendelés törölve",o);
				SaveRendeles();
			}*/
			else 
			{
				if(!IsScripter(playerid) && PlayerInfo[playerid][pID] != 8172362) return 1;
				new id;
			
				new tipus = Rendeles[o][Cim];
				new vvv=NINCS;
				
				
				new Float:X, Float:Y, Float:Z, Float:A;
				GetPlayerPos(playerid, X, Y, Z);
				GetPlayerFacingAngle(playerid, A);
				
				if(params < 4)
				{
					id=UresObject();
					if(id == NINCS) return Msg(playerid, "Nincs üres hely");
				}	
				if(vvv > 0)
				{
					OBJECT[id][sInt] =GetPlayerInterior(playerid);
					OBJECT[id][sVw]=GetPlayerVirtualWorld(playerid);
				}
				else
				{
					OBJECT[id][sVw]=NINCS;
					OBJECT[id][sInt]=NINCS;
				}
				//töröl
				if(tipus == NINCS)
				{
				
					if(OBJECT[id][sObjectID] > 0)
							if(IsValidDynamicObject(OBJECT[id][sObjectID]))DestroyDynamicObject(OBJECT[id][sObjectID]),OBJECT[id][sObjectID]=INVALID_OBJECT_ID;

					OBJECT[id][sTipus] = 0;
					OBJECT[id][sPosX] = 0.0;
					OBJECT[id][sPosY] = 0.0;
					OBJECT[id][sPosZ] = 0.0;
					OBJECT[id][sPosA] = 0.0;
					OBJECT[id][sVw] = 0;
					OBJECT[id][sInt] = 0;
					OBJECT[id][sObjectID] =0;
					SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "Törölve Object: %d",id);
					
					INI_Save(INI_TYPE_OBJECT, id);
				
					new nev[MAX_PLAYER_NAME] = "Senki";
					Rendeles[o][Van] = 0;
					Rendeles[o][Belso] = 0;
					Rendeles[o][Neve] = nev;
					Rendeles[o][iX] = 0.000000;
					Rendeles[o][iY] = 0.000000;
					Rendeles[o][iZ] = 0.000000;
					Rendeles[o][Cim] = 0;
					format(string,sizeof(string), "%d. rendelés törölve",o);
					SendClientMessage(playerid, COLOR_GREEN, string);
					SaveRendeles();
					return 1;
				}
				else if(tipus == 1340)
				{
					Z+=0.12;
					A-=90.0;
				}
				else if(tipus == 1775)
					Z+=0.1;
				else if(tipus == 1776)
					Z+=0.08;
				else if(tipus == 1216)
					Z-=0.32;
				else if(tipus == 2754)
				{
					Z+=0.08;
					A+=90.0;
				}
				else if(!IsScripter(playerid) && PlayerInfo[playerid][pID] != 8172362) return Msg(playerid, "Szerintem rossz object, vagy neked nem lehet ezt!");
				
				if(19808 <= tipus <= 19999)
					Z-=1.0;
					
				OBJECT[id][sTipus] = tipus;
				OBJECT[id][sPosX] = X;
				OBJECT[id][sPosY] = Y;
				OBJECT[id][sPosZ] = Z;
				OBJECT[id][sPosA] = A;

				if(OBJECT[id][sObjectID] > 0)
					if(IsValidDynamicObject(OBJECT[id][sObjectID])) DestroyDynamicObject(OBJECT[id][sObjectID]),OBJECT[id][sObjectID]=INVALID_OBJECT_ID;
				
				OBJECT[id][sObjectID] = CreateDynamicObject (tipus, X, Y, Z, 0.0, 0.0, OBJECT[id][sPosA], OBJECT[id][sVw], OBJECT[id][sInt]);

				SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "* OBJECT lerakva. (ID: %d - Típus: %d Koordínáta: X: %.2f | Y: %.2f | Z: %.2f | A: %.2f | VW: %d | INT: %d) ", id, tipus, OBJECT[id][sPosX], OBJECT[id][sPosY], OBJECT[id][sPosZ], OBJECT[id][sPosA], OBJECT[id][sVw],OBJECT[id][sInt]);
				Streamer_Update(playerid);
				SetPlayerPos(playerid, X, Y, Z+3.0);
				
				INI_Save(INI_TYPE_OBJECT, id);
				//SaveOBJECT();
			
			}
			
			//rendelés törlése

			
			
			new nev[MAX_PLAYER_NAME] = "Senki";
			Rendeles[o][Van] = 0;
			Rendeles[o][Belso] = 0;
			Rendeles[o][Neve] = nev;
			Rendeles[o][iX] = 0.000000;
			Rendeles[o][iY] = 0.000000;
			Rendeles[o][iZ] = 0.000000;
			Rendeles[o][Cim] = 0;
			format(string,sizeof(string), "%d. rendelés törölve",o);
			SendClientMessage(playerid, COLOR_GREEN, string);
			SaveRendeles();
			
		
		
		}
		if(egyezik(param[1], "újgarázs") ||egyezik(param[1], "ujgarazs"))
		{
			if(params < 2)
			{
				Msg(playerid, "/rendel újgarázs [Belsõ száma] [Házszám]");
				Msg(playerid, "Árak belsõ alapján: 1: 15 millió, 2: 20 millió 3: 25 millió");
				Msg(playerid, "Házszám: ház szám amihez lehet kötni. Ha nem a házközelében van ne kérj!!!");
				Msg(playerid,"Ahol álsz oda fogja kérni a garázst. Ha hülyéskedsz a rendeléssel büntetést kapsz");
				return 1;
			}
			GetPlayerName(playerid, playername, sizeof(playername));

			new rendelszam = -1;
	        for(new o = 0; o < MAXRENDELES; o++)
	        {
	            if(rendelszam == -1 && Rendeles[o][Van] == 0)
	                rendelszam = o;
	        }
	        if(rendelszam == -1)
			{
	            SendClientMessage(playerid, COLOR_RED, "A rendelés betelt! Rendelj, ha lesz szabad hely!");
	            return 1;
	        }
			new cim=strval(param[3]);
			if(PlayerInfo[playerid][pPhousekey] != cim && PlayerInfo[playerid][pPhousekey2] != cim)
				return Msg(playerid, "Csak saját házadhoz szabad");


			Rendeles[rendelszam][Van] = 1;
	        Rendeles[rendelszam][Belso] = strval(param[2]);
	        Rendeles[rendelszam][Neve] = playername;
			Rendeles[rendelszam][Cim] = cim;
			format(Rendeles[rendelszam][Mit],10,"Garázs");
			GetPlayerPos(playerid, Rendeles[rendelszam][iX], Rendeles[rendelszam][iY], Rendeles[rendelszam][iZ]);
			
			SaveRendeles();
			
	        SendClientMessage(playerid, COLOR_GREEN, "Sikeresen rendeltél egy garázst, hamarosan egy FõAdmin elkészíti neked!");

		}
		if(egyezik(param[1],"lista"))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "===== Rendelések =====");
			new szamol=0;
			for(new o = 0; o < MAXRENDELES; o++)
			{
				if(szamol == 15) break;
				if(Rendeles[o][Van] == 1)
				{
					szamol++;
					if(egyezik(Rendeles[o][Mit],"Garázs")||egyezik(Rendeles[o][Mit],"Garázs "))
						format(string, sizeof(string), "[%d]Név: %s |Mit: %s | Belsõ: %d | Cim: %d", o, Rendeles[o][Neve], Rendeles[o][Mit], Rendeles[o][Belso],Rendeles[o][Cim]);
					else
						format(string, sizeof(string), "[%d]Név: %s |Mit: %s | id: %s", o, Rendeles[o][Neve], Rendeles[o][Mit], FormatInt(Rendeles[o][Cim]));
						
					SendClientMessage(playerid, COLOR_GREEN, string);
				}
				
				
			}
			SendClientMessage(playerid, COLOR_GRAD2, "========================");
			SendClientMessage(playerid, COLOR_GRAD2, "Rendelés: /rendel");
			return 1;
		}
		if(egyezik(param[1], "go"))
		{	
			if(Admin(playerid, 1340) || IsScripter(playerid))
			{
				//if(params < 2) return Msg(playerid,"/rendelés Go [Rendelés ID]");

				
				new szam;
				if(params == 1)
				{
				
					for(new a = 0; a < MAXRENDELES; a++)
					{
						if(Rendeles[a][Van])
						{
							szam=a;
							break;
						}
					}
				
				
				}
				if(params == 2)
					szam = strval(param[2]);
					
				if(szam >= MAXRENDELES || szam < 0 || Rendeles[szam][Van] != 1)
				{
					SendClientMessage(playerid, COLOR_RED, "Nics ilyen rendelés");
					return 1;
				}
			
				SetPlayerPos(playerid,Rendeles[szam][iX],Rendeles[szam][iY],Rendeles[szam][iZ]);
				SetPlayerFacingAngle(playerid,Rendeles[szam][iAngle]);
					
				if(egyezik(Rendeles[szam][Mit],"Garázs") ||egyezik(Rendeles[szam][Mit],"Garázs "))
					format(string,sizeof(string), "Odateleportáltál egy Garázs rendeléshez [%d] (Igénylõ:%s | Belsõ:%d | Cím: %d)",szam,Rendeles[szam][Neve],Rendeles[szam][Belso], Rendeles[szam][Cim]);
				else if(egyezik(Rendeles[szam][Mit],"TÁBLA"))
					format(string, sizeof(string), "[%d]Név: %s |id: %s |Mit: %s", szam, Rendeles[szam][Neve], FormatInt(Rendeles[szam][Cim]),Rendeles[szam][Mit]);
				else	
					format(string, sizeof(string), "[%d]Név: %s |Mit: %s |", szam, Rendeles[szam][Neve], Rendeles[szam][Mit]);	
				
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
			return 1;
		}
		if(egyezik(param[1], "töröl"))
		{
			if(Admin(playerid, 1340) || IsScripter(playerid))
			{
				if(params < 2) return Msg(playerid, "/rendel Töröl [Rendelés ID]");

				new szam = strval(param[2]);
				if(szam >= MAXRENDELES || szam < 0 || Rendeles[szam][Van] != 1)
				{
					SendClientMessage(playerid, COLOR_RED, "Nics ilyen rendelés");
					return 1;
				}
				new nev[MAX_PLAYER_NAME] = "Senki";
				Rendeles[szam][Van] = 0;
				Rendeles[szam][Belso] = 0;
				Rendeles[szam][Neve] = nev;
				Rendeles[szam][iX] = 0.000000;
				Rendeles[szam][iY] = 0.000000;
				Rendeles[szam][iZ] = 0.000000;
				Rendeles[szam][Cim] = 0;
				format(string,sizeof(string), "%d. rendelés törölve",szam);
				SendClientMessage(playerid, COLOR_GREEN, string);
				SaveRendeles();
			}
			return 1;
		}
		if(egyezik(param[1], "tábla"))
		{
			if(!Admin(playerid,2))
				ShowPlayerDialog(playerid,DIALOG_NINCS, DIALOG_STYLE_MSGBOX, "Figyelmeztetés!", "Az object ID-k fórumon a mapper vagy Terno topicba megtalálhatóak! \nMinden olyan object ami nem megfelelõ helyre lett kérve törlésre kerül és nem téritjük vissza az árát. \n Ha csak szórakozásból kérsz BÜNTETÉS FOGSZ KAPNI! \n A gomb megnyomásával elfogadtad ezen feltételekket és tisztába vagy vele, hogy akár büntetést is von maga után." , "Rendben elfogadom","kilép");	
			
			if(params < 2)
			{
				Msg(playerid,"/rendel tábla [objectid]");
				Msg(playerid,"[Ára: 50.000 Ft / kérés");
				
				return 1;
			}
			if(UresObject() == NINCS) return Msg(playerid, "Nincs üres hely, nem kérhetõ!");
			new rendelszam = -1;
			for(new o = 0; o < MAXRENDELES; o++)
			{
				if(rendelszam == -1 && Rendeles[o][Van] == 0)
					rendelszam = o;
			}
			if(rendelszam == -1)
			{
				SendClientMessage(playerid, COLOR_RED, "A rendelés betelt! Rendelj, ha lesz szabad hely!");
				return 1;
			} 

			if(!Admin(playerid,1))
			{
				if(!BankkartyaFizet(playerid,50000)) return SendFormatMessage(playerid,COLOR_LIGHTRED,"Nincs elég pénzed. %s Ft kell",FormatNumber(50000, 0, ',' ));
			}
			GetPlayerName(playerid, playername, sizeof(playername));
			new id =strval(param[2]);
			
			if(Admin(playerid,1) && (19808 > id || id > 19999 && id != NINCS))
				return Msg(playerid, "A-A nem megfelelõ object id!!!");
			else if(19808 > id || id > 19999)
				return Msg(playerid, "A-A nem megfelelõ object id!!!");
			
			//new Float:angle;
			
			Rendeles[rendelszam][Van] = 1;
			Rendeles[rendelszam][Belso] = NINCS;
			Rendeles[rendelszam][Neve] = playername;
			Rendeles[rendelszam][Cim] = id;
			format(Rendeles[rendelszam][Mit],6,"TÁBLA");
			GetPlayerFacingAngle(playerid,Rendeles[rendelszam][iAngle]);
			
			GetPlayerPos(playerid, Rendeles[rendelszam][iX], Rendeles[rendelszam][iY], Rendeles[rendelszam][iZ]);
			
			SaveRendeles();
			
			SendFormatMessage(playerid, COLOR_GREEN, "Sikeresen rendeltél egy Táblát id:%d -t, hamarosan egy Scripter elkészíti neked!",id);
		}
		/*if(egyezik(param[1],"hotspot"))
		{
			if(Biztos[playerid] != 1) 
			{
				ShowPlayerDialog(playerid,DIALOG_NINCS, DIALOG_STYLE_MSGBOX, "Figyelmeztetés!", "A Wifi közöségi területre való!\nMinden olyan rendelés, ami nem megfelelõ helyre lett kérve, törlésre kerül, és nem térítjük vissza az árát.\nFrakció központba nem kérhetõ!\n A gomb megnyomásával elfogadtad ezen feltételekket és tisztába vagy vele, hogy akár büntetést is von maga után.", "Elfogadom","Mégse");
				Msg(playerid, "FIGYELEM! EZ CSAK KÖZTPONTI HELYEKRE KÉRHETÕ. MINDEN HÁZ ELÉ NEM RAKUNK LE!!!");
				Msg(playerid, "Figyelem! Egy wifi hotspot rendelésének az ára 1 000 000 Ft, biztos vagy benne, hogy kérsz ilyet?");
				Msg(playerid, "Ha igen, írd be mégegyszer a parancsot");
				Biztos[playerid] = 1;
			}
			if(UresWifi() == NINCS) return Msg(playerid, "Nincs üres wifi hely, nem kérhetõ! Ha mégis szükség lenne rá, írj fórumon a Pedro&Terno topikba");
			GetPlayerName(playerid, playername, sizeof(playername));
			
			new rendelszam = -1;
			new mit[32]; mit = param[2];
			for(new o = 0; o < MAXRENDELES; o++)
			{
				if(rendelszam == -1 && Rendeles[o][Van] == 0)
					rendelszam = o;
			}
			if(rendelszam == -1)
			{
				SendClientMessage(playerid, COLOR_RED, "A rendelés betelt! Rendelj, ha lesz szabad hely!");
				return 1;
			} 

			if(!BankkartyaFizet(playerid, 1000000)) return SendFormatMessage(playerid,COLOR_LIGHTRED,"Nincs elég pénzed. %s Ft kell",FormatNumber(1000000, 0, ',' ));
			Rendeles[rendelszam][Van] = 1;
			Rendeles[rendelszam][Belso] = NINCS;
			Rendeles[rendelszam][Neve] = playername;
			Rendeles[rendelszam][Cim] = 0;
			format(Rendeles[rendelszam][Mit],sizeof(mit),mit);
			GetPlayerFacingAngle(playerid,Rendeles[rendelszam][iAngle]);
			GetPlayerPos(playerid, Rendeles[rendelszam][iX], Rendeles[rendelszam][iY], Rendeles[rendelszam][iZ]);
			
			SaveRendeles();
			SendFormatMessage(playerid, COLOR_GREEN, "Sikeresen rendeltél egy %s-t, hamarosan egy Scripter elkészíti neked!",mit);
			
			return 1;
		}*/
		if(egyezik(param[1],"object"))
		{
			if(!Admin(playerid,2))
				ShowPlayerDialog(playerid,DIALOG_NINCS, DIALOG_STYLE_MSGBOX, "Figyelmeztetés!", "Ezek az objectek közöségi területre valók! \nMinden olyan object ami nem megfelelõ helyre lett kérve törlésre kerül és nem tíritjük vissza az árát. \n A következõk nem kérhetõek frakció központokba: ATM, HOTDOG ! \n A gomb megnyomásával elfogadtad ezen feltételekket és tisztába vagy vele, hogy akár büntetést is von maga után." , "Rendben elfogadom","kilép");	
			if(params < 2)
			{
				Msg(playerid,"/rendel object [ATM | hotdog |Italautomata|Csokiautomata|Telefonfülke]");
				Msg(playerid,"[Árak] Hotdog: 400.000 Ft | Ital és Csoki: 260.000 Ft | Telefon: 300.000 | ATM: 800.000 FT");
				Msg(playerid, "FIGYELEM! EZEK A DOLGOK CSAK KÖZTPONTI HELYEKRE KÉRHETÕEK. MINDEN HÁZ ELÉ NEM RAKUNK LE!!!");
				return 1;
			}
			Msg(playerid, "FIGYELEM! EZEK A DOLGOK CSAK KÖZTPONTI HELYEKRE KÉRHETÕEK. MINDEN HÁZ ELÉ NEM RAKUNK LE!!!");
			new ar;
			
			if(UresObject() == NINCS || UresATM() == NINCS) return Msg(playerid, "Nincs üres hely, nem kérhetõ!");

			new objectid;
			if(egyezik(param[2],"Hotdog"))
				ar = 400000, objectid=1340;
			else if(egyezik(param[2],"Italautomata"))
				ar = 260000, objectid=1775;
			else if(egyezik(param[2],"csokiautomata"))
				ar = 260000, objectid=1776;
			else if(egyezik(param[2],"telefonfülke"))
				ar = 300000, objectid=1216;
			else if(egyezik(param[2],"atm"))
				ar = 800000;
			else
			{
				Msg(playerid, "/rendel [ Újgarázs | object | Lista]");
				Msg(playerid, "Object: ATM | Hotdog | Italautomata|Csokiautomata|Telefonfülke");
				return 1;
			}
			
			new mit[32];
			mit =param[2];
			
			GetPlayerName(playerid, playername, sizeof(playername));
			
			new rendelszam = -1;
			for(new o = 0; o < MAXRENDELES; o++)
			{
				if(rendelszam == -1 && Rendeles[o][Van] == 0)
					rendelszam = o;
			}
			if(rendelszam == -1)
			{
				SendClientMessage(playerid, COLOR_RED, "A rendelés betelt! Rendelj, ha lesz szabad hely!");
				return 1;
			} 

			if(!BankkartyaFizet(playerid,ar)) return SendFormatMessage(playerid,COLOR_LIGHTRED,"Nincs elég pénzed. %s Ft kell",FormatNumber(ar, 0, ',' ));
			Rendeles[rendelszam][Van] = 1;
			Rendeles[rendelszam][Belso] = NINCS;
			Rendeles[rendelszam][Neve] = playername;
			Rendeles[rendelszam][Cim] = objectid;
			format(Rendeles[rendelszam][Mit],sizeof(mit),mit);
			GetPlayerFacingAngle(playerid,Rendeles[rendelszam][iAngle]);
			
			
			GetPlayerPos(playerid, Rendeles[rendelszam][iX], Rendeles[rendelszam][iY], Rendeles[rendelszam][iZ]);
			
			SaveRendeles();
			
			SendFormatMessage(playerid, COLOR_GREEN, "Sikeresen rendeltél egy %s -t, hamarosan egy Scripter elkészíti neked!",mit);
			
			return 1;

		}
		return 1;
	}
	if(strcmp(cmd, "/allcarrespawn", true) == 0 || egyezik(cmd, "/acr"))
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6 || IsScripter(playerid) && CarRespawnSzamlalo == NINCS)
	    {
			if(CarRespawnSzamlalo != NINCS) return Msg(playerid, "MÁr folyamatban van egy carresi!");
			ResiCounter = 60;
			TextDrawShowForAll(resitd);
	    }
	    return 1;
  	}

	if(egyezik(cmd, "/acr30"))
	{
		if(!Admin(playerid, 6)) return 1;
		if(CarRespawnSzamlalo != NINCS) return Msg(playerid, "MÁr folyamatban van egy carresi!");
		ResiCounter = 30;
		TextDrawShowForAll(resitd);
	}

	if(egyezik(cmd, "/acrmost"))
	{
		if(!Admin(playerid, 1337)) return 1;
		if(CarRespawnSzamlalo != NINCS) return Msg(playerid, "MÁr folyamatban van egy carresi!");
		ResiCounter = 0;
		TextDrawShowForAll(resitd);
	}

	if(strcmp(cmd, "/ujbelso", true) == 0)
	{
	    if(Admin(playerid, 6))
	    {
			new hazszam, belso;
			if(params == 1)
			{
				hazszam = NINCS;
				for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if(PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
						hazszam = i;
				}

				if(hazszam == NINCS){
					SendClientMessage(playerid, COLOR_RED, "Nem vagy a ház bejáratánál! Távolról is átállíthatod: /ujbelso [házszám] [belsõ]");
					return 1;
				}
				belso = strval(param[1]);
			}
			else if(params == 2)
			{
				hazszam = strval(param[1]);
				belso = strval(param[2]);
				if(hazszam >= MAXHAZ || hazszam < 0 || HouseInfo[hazszam][Van] != 1)
					return Msg(playerid, "Nincs ilyen ház!");
			}
			else
				return Msg(playerid, "Használata: /ujbelso [belsõ], vagy távolról: /ujbelso [ház] [belsõ]");

			if(belso < 1 || belso > 37)
				return Msg(playerid, "Belsõ: Minimum 1 és max 37!");

			HouseInfo[hazszam][hBelso] = belso;

			format(string, sizeof(string), "Ház %d belseje lecserélve! (Belsõ:%d)",hazszam,belso);
			SendClientMessage(playerid, COLOR_GREEN, string);
			//HazUpdate(hazszam, "Belso='%d'", belso);
			HazUpdate(hazszam, HAZ_Belso);
	    }
	    return 1;
  	}

	if(strcmp(cmd, "/ujadatok", true) == 0) //sscanf by Ryan
	{
	    if(Admin(playerid, 1337))
	    {
			new hazak = sizeof(HouseInfo), hazszam = -1;
			new csakneki[MAX_PLAYER_NAME];
			new ara, csak;
			for(new i = 0; i < hazak; i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				    hazszam = i;
    		}

    		if(hazszam == -1){
    		    SendClientMessage(playerid, COLOR_RED, "Nem vagy a ház bejáratánál!");
    		    return 1;
    		}
			if(sscanf(pms, "dd", ara, csak))
				return Msg(playerid, "Használata: /ujadatok [ára] [csak(0-1)]");


			if(csak == 1)
			{
				if(sscanf(pms, "dds[MAX_PLAYER_NAME]", ara, csak, csakneki))
					return Msg(playerid,"Használata: /ujadatok [ára] [csak(0-1)] [csakneki(név)]");
			}
			else
			    csakneki = "Nemigenyles";

			HouseInfo[hazszam][hValue] = ara;
			HouseInfo[hazszam][hCsak] = csak;
			HouseInfo[hazszam][hCsakneki] = csakneki;

			if(csak == 0)
				format(string, sizeof(string), "Ház %d adatai átállitva! (Ára:%dFT)",hazszam,ara);
			else
			    format(string, sizeof(string), "Ház %d adatai átállitva! (Ára:%dFT | Csak neki:%s)",hazszam,ara,csakneki);
			SendClientMessage(playerid, COLOR_GREEN, string);
			HazUpdate(hazszam, HAZ_Value, HAZ_Csak, HAZ_Csakneki);
	    }
	    return 1;
  	}

	if(strcmp(cmd, "/ujbejarat", true) == 0)
	{
	    if(!Admin(playerid, 6)) return 1;

		if(params < 3)
		{
			Msg(playerid, "Használata: /ujbejarat [ház] [típus][torol]");
			Msg(playerid, "[torol] 0: nem törli a garázs, 1 törli");
			Msg(playerid, "1: Los Santos, 2: San Fierro");
			Msg(playerid, "3: GazdagNegyed, 4: Falu, 5: Tanya, 6: Sziget");
			return 1;
		}

		new hazszam = strval(param[1]), tipus = strval(param[2]);
		new torol=strval(param[3]);
		if(torol != 0 && torol != 1) return Msg(playerid, "[torol] 0: nem törli a garázst 1: törli");
		if(hazszam < 0 || hazszam >= MAXHAZ || HouseInfo[hazszam][Van] != 1)
		    return SendClientMessage(playerid, COLOR_RED, "Nincs ilyen ház");

		if(tipus < 1 || tipus > 6)
			return Msg(playerid, "Hibás típus!");

		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid,x,y,z);
		HouseInfo[hazszam][hEntrancex] = x;
		HouseInfo[hazszam][hEntrancey] = y;
		HouseInfo[hazszam][hEntrancez] = z;
		HouseInfo[hazszam][hTipus] = tipus;
		DestroyDynamicPickup(HazPickup[hazszam]);

		if(HouseInfo[hazszam][hOwned] == 0)
			HazPickup[hazszam] = UjPickup(1273, 23, HouseInfo[hazszam][hEntrancex], HouseInfo[hazszam][hEntrancey], HouseInfo[hazszam][hEntrancez]);

		if(HouseInfo[hazszam][hOwned] == 1)
			HazPickup[hazszam] = UjPickup(1239,23, HouseInfo[hazszam][hEntrancex], HouseInfo[hazszam][hEntrancey], HouseInfo[hazszam][hEntrancez]);

		format(string, sizeof(string), "Ház %d bejárata átrakva!",hazszam);
		SendClientMessage(playerid, COLOR_GREEN, string);
		//HazUpdate(hazszam, "X='%f', Y='%f', Z='%f'", x, y, z);
		HazUpdate(hazszam, HAZ_X, HAZ_Y, HAZ_Z, HAZ_Tipus);

		if(torol == 0) return 1;
		new result[128];

		new garazs = sizeof(GarazsInfo);
		for(new h = 0; h < garazs; h++)
		{
			if(GarazsInfo[h][hHaz]==hazszam)
			{
				DestroyDynamicPickup(GarazsPickup[h]);
				format(result, 128, "DELETE FROM %s WHERE ID='%d'", SQL_DB_Garazs, h); doQuery( result );
				GarazsInfo[h][hEladva] = 0;
				GarazsInfo[h][hEntrancex] = 0.0;
				GarazsInfo[h][hEntrancey] = 0.0;
				GarazsInfo[h][hEntrancez] = 0.0;
				GarazsInfo[h][Van] = 0;
			}
		}
	    return 1;
  	}
	if(egyezik(cmd, "/garázs") || egyezik(cmd, "/garazs"))
	{
		if(params < 1)
		{
		    if(PlayerInfo[playerid][pAdmin] == 0)
		        Msg(playerid, "/garázs Zár");
			else if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <1337)
				Msg(playerid, "/garázs [ Zár / Info ]");

	        if(Admin(playerid, 1337) || IsScripter(playerid))
		        Msg(playerid, "/garázs [Zár / Újbejárat / Go / Aelad / Töröl / Ár / Adat / Info / inaktív] ");

			return true;
		}
		if(egyezik(param[1], "inaktív"))
		{
			if(!Admin(playerid, 5555)) return Msg(playerid, "Még nem lehet használni!");
			
			
			for(new x = 0; x < MAXGARAZS; x++)
			{
				if(GarazsInfo[x][Van] != 1 || !InaktivCucc(x, INAKTIV_GARAZS) || GarazsInfo[x][hEladva] == 0 || GarazsInfo[x][hHaz] != NINCS)
					continue;
				
				SendFormatMessage(playerid, COLOR_GREY, "Garázs: Class u. %d - ", x);
			}
			
			Msg(playerid, "Idõ mentés 2013-10-05, még harminc napig nem jó adatokat ír!");
		
		}
		if(egyezik(param[1],"zár") || egyezik(param[1],"zar"))
		{
			new garazs = GarazsElottVan(playerid);
			if(garazs != NINCS)
			{
				if(GarazsInfo[garazs][hLock] == 1)
				{
					GarazsInfo[garazs][hLock] = 0;

					GarazsUpdate(garazs, GARAZS_Lock);
					GameTextForPlayer(playerid, "~w~Ajto ~g~Nyitva", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "* Valaki kinyitotta a garázs ajtaját.");
   					ProxDetector(30.0, playerid,string , COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else if(GarazsInfo[garazs][hLock] == 0)
				{
					GarazsInfo[garazs][hLock] = 1;
					GarazsUpdate(garazs, GARAZS_Lock);
					GameTextForPlayer(playerid, "~w~Ajto ~r~Zarva", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "* Valaki bezárta a garázs ajtaját.");
   					ProxDetector(30.0, playerid,string , COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
			}
			else return Msg(playerid, "Nem vagy a garázsod elõtt, vagy ez nem a tied");
		}
		if(egyezik(param[1],"ujbejarat") || egyezik(param[1],"újbejárat"))
		{
			if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;
			Msg(playerid,"Csak bejárat javításra szabad, nem szabad áthelyezni!");
			if(params < 3)
			{
				Msg(playerid, "Használata: /garázs ujbejarat [garázs] [belso]");
				Msg(playerid, "[belso] 1 - 3");
				return 1;
			}
			new garazsszam = strval(param[2]);
			new belso = strval(param[3]);
			if(belso>3 || belso<1) return Msg(playerid, "belsõ 1 - 3");
			if(garazsszam < 0 || garazsszam >= MAXGARAZS || GarazsInfo[garazsszam][Van] != 1)
				return SendClientMessage(playerid, COLOR_RED, "Nincs ilyen garázs");

			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid,x,y,z);
			GetPlayerFacingAngle(playerid, angle);
			GarazsInfo[garazsszam][hAngle] = angle;

			format(string,sizeof(string),"[GARÁZS]%s VOLT: %.3f %.3f %.3f lett: %.3f %.3f %.3f",PlayerName(playerid),GarazsInfo[garazsszam][hEntrancex],GarazsInfo[garazsszam][hEntrancey],GarazsInfo[garazsszam][hEntrancez],x,y,z);
			GarazsInfo[garazsszam][hEntrancex] = x;
			GarazsInfo[garazsszam][hEntrancey] = y;
			GarazsInfo[garazsszam][hEntrancez] = z;
			GetPlayerFacingAngle(playerid, angle);
			DestroyDynamicPickup(GarazsPickup[garazsszam]);

			if(GarazsInfo[garazsszam][hEladva] == 0)
				GarazsPickup[garazsszam] = UjPickup(1272, 23, GarazsInfo[garazsszam][hEntrancex], GarazsInfo[garazsszam][hEntrancey], GarazsInfo[garazsszam][hEntrancez]);

			if(GarazsInfo[garazsszam][hEladva] == 1)
				GarazsPickup[garazsszam] = UjPickup(1318,23,GarazsInfo[garazsszam][hEntrancex], GarazsInfo[garazsszam][hEntrancey], GarazsInfo[garazsszam][hEntrancez]);

			SendFormatMessage(playerid, COLOR_GREEN, "GarázsID: %d bejárata átrakva! Régi belsõ: %d | Új: %d",garazsszam, GarazsInfo[garazsszam][hBelso], belso);
			GarazsInfo[garazsszam][hBelso] = belso;
			
			
			Log("Scripter",string);

			GarazsUpdate(garazsszam, GARAZS_X, GARAZS_Y, GARAZS_Z, GARAZS_BELSO, GARAZS_ANGLE);
		}
		if(egyezik(param[1],"ár") || egyezik(param[1],"ar"))
		{
			if(!Admin(playerid, 5555) && !IsScripter(playerid)) return 1;
			if(params < 3) return Msg(playerid, "Használata: /garázs Ár [GarázsID] [Ára]");
			new garazsszam = strval(param[2]);
			new ara = strval(param[3]);
			if(garazsszam < 0 || garazsszam >= MAXGARAZS || GarazsInfo[garazsszam][Van] != 1)
				return SendClientMessage(playerid, COLOR_RED, "Nincs ilyen garázs!");

            if(GarazsInfo[garazsszam][hEladva] != 0) return Msg(playerid, "Csak eladó garázs árát állíthatod!");

			SendFormatMessage(playerid, COLOR_GREEN, "GarázsID: %d ára átírva! Régi: %dFt | Új: %dFt",garazsszam,GarazsInfo[garazsszam][hAra], ara);
			GarazsInfo[garazsszam][hAra] = ara;
			GarazsUpdate(garazsszam, GARAZS_Ara);
		}
		if(egyezik(param[1],"info") || egyezik(param[1],"infó"))
		{
			if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;
			if(params < 2) return Msg(playerid, "Használata: /garázs Info [GarázsID]");
			new garazsszam = strval(param[2]);
			if(garazsszam < 0 || garazsszam >= MAXGARAZS || GarazsInfo[garazsszam][Van] != 1)
				return SendClientMessage(playerid, COLOR_RED, "Nincs ilyen garázs!");

			SendClientMessage(playerid, COLOR_ORANGE, "======= [ Garázs információ ] =======");
            SendFormatMessage(playerid, COLOR_GREEN, "GarázsID: %d | Tulaj: %s | Tulaj UID: %d",garazsszam,GarazsInfo[garazsszam][hOwner],GarazsInfo[garazsszam][hTulajid]);
			SendFormatMessage(playerid, COLOR_GREEN, "Eladva: %d | Belsõ: %d | Ára: %dFt | Zárva: %d", GarazsInfo[garazsszam][hEladva],GarazsInfo[garazsszam][hBelso],GarazsInfo[garazsszam][hAra],GarazsInfo[garazsszam][hLock]);
		}
		if(egyezik(param[1],"adat"))
		{
			if(!Admin(playerid, 5555) && !IsScripter(playerid)) return 1;
			if(params < 3) return Msg(playerid, "Használata: /garázs Adat [GarázsID] [Házszám (0 = Szabadon megvehetõ)]");
			new garazsszam = strval(param[2]);
			new hsz = strval(param[3]);
			if(garazsszam < 0 || garazsszam >= MAXGARAZS || GarazsInfo[garazsszam][Van] != 1)
				return SendClientMessage(playerid, COLOR_RED, "Nincs ilyen garázs!");

			if(GarazsInfo[garazsszam][hEladva] != 0) return Msg(playerid, "Csak eladó garázs adatait állíthatod!");
            if(hsz > 0)
            {
    			SendFormatMessage(playerid, COLOR_GREEN, "GarázsID: %d hozzákötve a(z) %d házszámhoz! Így már csak a ház tulaja tudja megvenni.",garazsszam,hsz);
    			GarazsInfo[garazsszam][hHaz] = hsz;
			} else
			{
                SendFormatMessage(playerid, COLOR_GREEN, "GarázsID: %d már bárki számára megvehetõ!",garazsszam);
                GarazsInfo[garazsszam][hHaz] = NINCS;
			}
			GarazsUpdate(garazsszam, GARAZS_HAZ);
		}
		if(egyezik(param[1], "go"))
		{
			if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;
			if(params < 2) return Msg(playerid, "/garázs Go [GarázsID]");
			new atmid = strval(param[2]);
			if(atmid < 0 || atmid > MAXGARAZS) return Msg(playerid, "Hibás ID.");
			SetPlayerPos(playerid, GarazsInfo[atmid][hEntrancex], GarazsInfo[atmid][hEntrancey], GarazsInfo[atmid][hEntrancez]);
			SendFormatMessage(playerid,  COLOR_LIGHTGREEN, "* Teleportáltál a garázs-hoz. (ID: %d - Koordínáta: X: %f | Y: %f | Z: %f) ", atmid, GarazsInfo[atmid][hEntrancex], GarazsInfo[atmid][hEntrancey], GarazsInfo[atmid][hEntrancez]);
		}
		if(egyezik(param[1], "aelad"))
		{
			if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;
			if(params < 2) return Msg(playerid, "/garázs Aelad [GarázsID]");
			new id = strval(param[2]);

			DestroyDynamicPickup(GarazsPickup[id]);
			GarazsPickup[id] = UjPickup(1272, 23, GarazsInfo[id][hEntrancex], GarazsInfo[id][hEntrancey], GarazsInfo[id][hEntrancez]);
			GarazsInfo[id][hEladva] = 0;
			new nev[MAX_PLAYER_NAME] = "Nincs_Tulaj";
			GarazsInfo[id][hOwner] = nev;
			GarazsInfo[id][hTulajid] = NINCS;
			GarazsInfo[id][hLock] = 0;
			
			new cost=25000000;
			if(GarazsInfo[id][hBelso] == 1)
				cost=15000000;
			if(GarazsInfo[id][hBelso] == 2)
				cost=20000000;
			if(GarazsInfo[id][hBelso] == 3)
				cost=25000000;
			
			GarazsInfo[id][hAra] = cost;
			
			SendFormatMessage(playerid,  COLOR_LIGHTGREEN,"Eladtad %d garázst!", id);
			GarazsUpdate(id, GARAZS_Eladva, GARAZS_Tulaj,GARAZS_Tulajid,GARAZS_Lock, GARAZS_Ara);
			return 1;
		}
		if(egyezik(param[1],"töröl") || egyezik(param[1],"torol"))
		{
			if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;
			if(params < 2) return Msg(playerid, "/garázs Töröl [GarázsID]");
			new h= strval(param[2]);
			new result[128];
			DestroyDynamicPickup(GarazsPickup[h]);
			format(result, 128, "DELETE FROM %s WHERE ID='%d'", SQL_DB_Garazs, h); doQuery( result );
			GarazsInfo[h][hEladva] = 0;
			GarazsInfo[h][hEntrancex] = 0.0;
			GarazsInfo[h][hEntrancey] = 0.0;
			GarazsInfo[h][hEntrancez] = 0.0;
			GarazsInfo[h][Van] = 0;
			new nev[MAX_PLAYER_NAME] = "Nincs_Tulaj";
			GarazsInfo[h][hOwner] = nev;
			GarazsInfo[h][hTulajid] = NINCS;
			SendFormatMessage(playerid, COLOR_GREEN, "GarázsID: %d sikeresen törölve!",h);

		}
	}
	if(egyezik(cmd,"/ujgarazs") || egyezik(cmd,"/újgarázs"))
	{
		if(Admin(playerid, 1340) || IsScripter(playerid))
	    {
			new uresgarazs = UresGarazsKereses();
	        if(uresgarazs == -1)
	        {
				format(string, sizeof(string), "Max %d a megengedett garázs!", sizeof(HouseInfo));
				SendClientMessage(playerid, COLOR_RED, string);
				return 1;
			}

			if(params < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /ujgarazs [belso 1-3] [hazszam]  ((ha nulla szabadon vehetõ))");

			new cost;
	
			new belso=strval(param[1]);
			if(belso>3 || belso<1) return Msg(playerid, "belsõ 1 - 3 ");
			new hazhoz=strval(param[2]);
			
			if(belso == 1)
				cost=15000000;
			if(belso == 2)
				cost=20000000;
			if(belso == 3)
				cost=25000000;

			new Float:x, Float:y, Float:z, Float:angle;
   			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			//printf("ID:%d Parancs:/ujhaz %d %d",playerid,interior,cost);
			//printf("Uj haz berakasa folyamatban...");
			new nev[MAX_PLAYER_NAME] = "Nincs_Tulaj";

			if(hazhoz > 0)
				GarazsInfo[uresgarazs][hHaz] = hazhoz;
			else
				GarazsInfo[uresgarazs][hHaz] = NINCS;


			GarazsInfo[uresgarazs][hOwner] = nev;
			GarazsInfo[uresgarazs][hTulajid] = NINCS;
			GarazsInfo[uresgarazs][Van] = 1;
			GarazsInfo[uresgarazs][Uj] = 1;
			GarazsInfo[uresgarazs][hEladva] = 0;
			GarazsInfo[uresgarazs][hEntrancex] = x;
			GarazsInfo[uresgarazs][hEntrancey] = y;
			GarazsInfo[uresgarazs][hEntrancez] = z;
			GarazsInfo[uresgarazs][hBelso] = belso;
			GarazsInfo[uresgarazs][hAra] = cost;
			GarazsInfo[uresgarazs][hLock] = 0;
			GarazsInfo[uresgarazs][hRent] = 500;
			GarazsInfo[uresgarazs][hRentabil] = 0;
			GarazsInfo[uresgarazs][hDate] = 0;
			GarazsInfo[uresgarazs][hAngle] = angle;

			//printf("Uj haz adatai elmentve!");

			format(string, sizeof(string), "Az új Garázs elkészült! Száma %d! (Ára %iFT)", uresgarazs,cost);
			SendClientMessage(playerid, COLOR_GREEN, string);

			GarazsPickup[uresgarazs] = UjPickup(1272, 23, x,y,z);

			new nevek[128], adatok[256];

			nevek = "ID, Eladva, Tulaj, X, Y, Z, Ara, Angle, Haz, Belso";
			Format(adatok, "'%d', '0', 'Nincs_Tulaj', '%f', '%f', '%f', '%d', '%f', '%d', '%d'", uresgarazs, x, y, z, cost,angle,GarazsInfo[uresgarazs][hHaz],belso);
			Mysql_Insert(SQL_DB_Garazs, nevek, adatok);
	    }
	    return 1;
	}
	if(strcmp(cmd, "/ujhaz", true) == 0) // sscanf by Ryan
	{
	    if(IsScripter(playerid))
	    {
			new ureshaz = UresHazKereses();
			new csakneki[MAX_PLAYER_NAME];
			new interior, ar, csak;
	        if(ureshaz == -1)
	        {
				format(string, sizeof(string), "Max %d a megengedett ház!", sizeof(HouseInfo));
				SendClientMessage(playerid, COLOR_RED, string);
				return 1;
			}
			if(sscanf(pms, "ddd", interior, ar, csak))
				return Msg(playerid, "Használata: /ujhaz [belso(1-37)] [ára] [csak(0-1)]");
				
			if(interior < 1 || interior > 37)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "1-37 legyen az inti szám!");
				return 1;
			}
			if(csak == 1)
			{
				if(sscanf(pms, "ddds[MAX_PLAYER_NAME]", interior, ar, csak, csakneki))
					return Msg(playerid, "Használata: /ujhaz [belso] [ára] [csak(0-1)] [csakneki(név)]");
			}
			else
			    csakneki = "Nemigenyles";

			new nev[MAX_PLAYER_NAME] = "Nincs_Tulaj";
			new Float:x, Float:y, Float:z;
   			GetPlayerPos(playerid, x, y, z);

			HouseInfo[ureshaz][Van] = 1;
			HouseInfo[ureshaz][Uj] = 1;
			HouseInfo[ureshaz][hEntrancex] = x;
			HouseInfo[ureshaz][hEntrancey] = y;
			HouseInfo[ureshaz][hEntrancez] = z;
			HouseInfo[ureshaz][hBelso] = interior;
			HouseInfo[ureshaz][hHealth] = 0;
			HouseInfo[ureshaz][hArmour] = 0;
			HouseInfo[ureshaz][hOwner] = nev;
			HouseInfo[ureshaz][hTulaj] = NINCS;
			HouseInfo[ureshaz][hValue] = ar;
			HouseInfo[ureshaz][hHel] = 0;
			HouseInfo[ureshaz][hArm] = 0;
			HouseInfo[ureshaz][hLock] = 0;
			HouseInfo[ureshaz][hOwned] = 0;
			HouseInfo[ureshaz][hRooms] = 0;
			HouseInfo[ureshaz][hRent] = 500;
			HouseInfo[ureshaz][hRentabil] = 0;
			HouseInfo[ureshaz][hTakings] = 0;
			HouseInfo[ureshaz][hDate] = 0;
			HouseInfo[ureshaz][hCsak] = csak;
			HouseInfo[ureshaz][hCsakneki] = csakneki;
			HouseInfo[ureshaz][hCigi] = 0;
			HouseInfo[ureshaz][hKaja] = 0;
			HouseInfo[ureshaz][hKokain] = 0;
			HouseInfo[ureshaz][hHeroin] = 0;
			HouseInfo[ureshaz][hMati] = 0;
			HouseInfo[ureshaz][hAlma] = 0;
			HouseInfo[ureshaz][hTipus] = 1;

			if(csak != 1)
				format(string, sizeof(string), "Az új ház elkészült! Száma %d! (Belsõ %i, Ára %iFT)", ureshaz,interior,ar);
			else
			    format(string, sizeof(string), "Az új ház elkészült! Száma %d! (Belsõ %i, Ára %iFT, Csak neki: %s)", ureshaz,interior,ar, csakneki);
			SendClientMessage(playerid, COLOR_GREEN, string);

			SetPlayerPos(playerid,IntInfo[interior][iExitX],IntInfo[interior][iExitY],IntInfo[interior][iExitZ]);
			SetPlayerInterior(playerid, IntInfo[interior][iNumber]);
			SetPlayerVirtualWorld(playerid, ureshaz);
			HazPickup[ureshaz] = UjPickup(1273, 23, x,y,z);
			new nevek[128], adatok[256];
			nevek = "ID, Eladva, Tulaj, Csak, Neki, X, Y, Z, Ara, Belso";
			Format(adatok, "'%d', '0', 'Nincs_Tulaj', '%d', '%s', '%f', '%f', '%f', '%d', '%d'", ureshaz, csak, csakneki, x, y, z, ar, interior);
			Mysql_Insert(SQL_DB_Hazak, nevek, adatok);

	    }
	    return 1;
	}
	if(egyezik(cmd, "/apark"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return Msg(playerid, "[Hiba]: Nem használhatod!");
		new car = NINCS;
		if(SAdmin(playerid, 3) || IsScripter(playerid))
  		{
			sscanf(pms, "D(-1)", car);
		}
		if(car == NINCS)
			car = GetClosestVehicle(playerid, true, NINCS, 3.0);

		if(car == NINCS)
		{
		    if(!SAdmin(playerid, 3) && !IsScripter(playerid)) return SendClientMessage(playerid,COLOR_LIGHTRED, "[Hiba]: Nincs a közeledben jármû! A távoli parkolás pedig nem engedélyezett ezen az Adminszinten!");
			else return SendClientMessage(playerid,COLOR_GREEN, "Nincs a közeledben jármû! /apark [JármûID] ( Távoli parkolásnál INT 0-ban és VW 0-ban kell, hogy legyen! )");
		}
        new Float:x,Float:y,Float:z, Float:a, vs = IsAVsKocsi(car), fk = IsFrakcioKocsi(car), munkakocsi = IsMunkaKocsi(car), panelek, ajto, vilagitas, gumi, Float:elet;
		printf("%d %d %d",vs,fk,munkakocsi);
		if(vs > NINCS)
		{
			GetVehicleDamageStatus(car, panelek, ajto, vilagitas, gumi);
			GetVehicleHealth(car, elet);
	        GetVehiclePos(car, x, y, z);
			GetVehicleZAngle(car, a);
			ACrs[car]=true;
			ParkCar(vs, x, y, z, a, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
			ACrs[car]=false;
			UpdateVehicleDamageStatus(CarInfo[vs][cId], panelek, ajto, vilagitas, gumi);
			SetVehicleHealth(CarInfo[vs][cId], elet);
			SendFormatMessage(playerid, COLOR_GREEN, "[Info]: %s típusú jármû parkolva | JármûID: %d | Tulaj: %s | Online: %d | UID %d", vehName[GetVehicleModel(car) - 400], car, CarInfo[vs][cOwner],OnlineUID(CarInfo[vs][cTulaj]),CarInfo[vs][cTulaj]);
		}
		else if(fk > NINCS)
		{
		    if(!SAdmin(playerid, 3) && !IsScripter(playerid)) return SendClientMessage(playerid,COLOR_LIGHTRED, "[Hiba]: Nincs elegendõ Adminszinted a frakciós jármûvek parkolásához!");
		    new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				if(FrakcioKocsi[fk][k][fVan] && FrakcioKocsi[fk][k][fID] == car)
				{
					id = k;
					break;
				}
			}

			GetVehicleDamageStatus(car, panelek, ajto, vilagitas, gumi);
			GetVehicleHealth(car, elet);
			GetVehiclePos(car, x, y, z);
			GetVehicleZAngle(car, a);

			DestroyVehicle(FrakcioKocsi[fk][id][fID]);
			FrakcioKocsi[fk][id][fInt] = GetPlayerInterior(playerid);
			FrakcioKocsi[fk][id][fVW] = GetPlayerVirtualWorld(playerid);
			FrakcioKocsi[fk][id][fID] = UjKocsi(FrakcioKocsi[fk][id][fModel], x, y, z, a, FrakcioKocsi[fk][id][fSzin][0], FrakcioKocsi[fk][id][fSzin][1], FrakcioKocsi[fk][id][fInt], FrakcioKocsi[fk][id][fVW], CAR_TYPE_FK, fk, id);
			FrakcioKocsi[fk][id][fPos][0] = x;
			FrakcioKocsi[fk][id][fPos][1] = y;
			FrakcioKocsi[fk][id][fPos][2] = z;
			FrakcioKocsi[fk][id][fPos][3] = a;

			UpdateVehicleDamageStatus(FrakcioKocsi[fk][id][fID], panelek, ajto, vilagitas, gumi);
			SetVehicleHealth(FrakcioKocsi[fk][id][fID], elet);

			FrakcioKocsiMentes(fk, id);
   			SendFormatMessage(playerid, COLOR_GREEN, "[Info]: %s típusú jármû parkolva | JármûID: %d | Tulaj: %s (ID:%d)", vehName[GetVehicleModel(car) - 400], car ,Szervezetneve[fk-1][1], fk);
		}
		else if(munkakocsi > NINCS)
		{
			if(!SAdmin(playerid, 3) && !IsScripter(playerid)) return SendClientMessage(playerid,COLOR_LIGHTRED, "[Hiba]: Nincs elegendõ Adminszinted a munka jármûvek parkolásához!");
			
			new id = NINCS;
			for(new k = 0; k < MAX_MUNKAKOCSI; k++)
			{
				if(MunkaKocsi[munkakocsi][k][kVan] && MunkaKocsi[munkakocsi][k][kID] == car)
				{
					id = k;
					break;
				}
			}
			GetVehiclePos(car, x, y, z);
			GetVehicleZAngle(car, a);
			
			
			
			DestroyVehicle(MunkaKocsi[munkakocsi][id][kID]);

			MunkaKocsi[munkakocsi][id][kInt] = GetPlayerInterior(playerid);
			MunkaKocsi[munkakocsi][id][kVW] = GetPlayerVirtualWorld(playerid);

			MunkaKocsi[munkakocsi][id][kID] = UjKocsi(MunkaKocsi[munkakocsi][id][kModel], x, y, z, a, MunkaKocsi[munkakocsi][id][kSzin][0], MunkaKocsi[munkakocsi][id][kSzin][1], MunkaKocsi[munkakocsi][id][kInt], MunkaKocsi[munkakocsi][id][kVW], CAR_TYPE_MK, munkakocsi, id);
			MunkaKocsi[munkakocsi][id][kPos][0] = x;
			MunkaKocsi[munkakocsi][id][kPos][1] = y;
			MunkaKocsi[munkakocsi][id][kPos][2] = z;
			MunkaKocsi[munkakocsi][id][kPos][3] = a;

			MunkaKocsiMentes(munkakocsi, id);
			SendFormatMessage(playerid, COLOR_GREEN, "[Info]: %s típusú jármû parkolva | JármûID: %d | Tulaj: %d munka", vehName[GetVehicleModel(car) - 400], car ,munkakocsi);
			
		
		}
		else return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ez se nem V-s se nem frakciós se nem alap jármû!");

		if(IsPlayerInVehicle(playerid, car))
		{
		    GetPlayerPos(playerid, x,y,z);
			SetPlayerPos(playerid,x,y,z+2.0);
			TogglePlayerControllable(playerid, 1);
		}
		return true;
	}

	if(egyezik(cmd, "/ujmodel"))
	{
	    if(IsPlayerConnected(playerid))
		{
			if(!Admin(playerid, 1337)) return 1;

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /ujmodel [model]");
				return 1;
			}
			new model;
			model = GetVehicleModelIDFromName(tmp);

			if(model == -1)
			{
			    SendClientMessage(playerid, COLOR_YELLOW, "Ilyen kocsiról még nem hallottam...");
			    return 1;
			}
			
			
				
			new kocsi = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.0) return Msg(playerid, "Nincs jármû a közeledben!");

			new vs = IsAVsKocsi(kocsi);
			
			/*if(!Admin(playerid, 5555))
				if(IsABicikli(kocsi)) return Msg(playerid, "Ezt kérlek ne alakítsd kocsivá, ha muszáj keresd Terno-t");*/
			
			if(vs == NINCS) return Msg(playerid, "Ez nem V-s!");
			

			CarInfo[vs][cModel] = model;
			new Float:a,Float:x,Float:y,Float:z;
			
			GetVehicleZAngle(kocsi, a);
			GetVehiclePos(kocsi, x, y, z);
			
			format(string,sizeof(string),"[ujmodel]%s átlakaította %d rendszámû %d típusú kocsit %d-é. Tulaj: %s",PlayerName(playerid),kocsi,GetVehicleModel(kocsi),CarInfo[vs][cOwner]);
			Log("Egyeb",string);
			
			DestroyVehicle(kocsi);

			
			
			SendFormatMessage(playerid, COLOR_YELLOW,"x: %.3f y:%.3f z:%.3f a:%.3f",x, y, z, a);
			CarInfo[vs][cId] = UjKocsi(model, x, y, z, a, CarInfo[vs][cColorOne], CarInfo[vs][cColorTwo], GetPlayerInterior(playerid),  GetPlayerVirtualWorld(playerid));
			
			
			//Pedro tuningrendszerénél törli alakításnál a komponenseket by Ryan

			CarInfo[vs][cTuningok][0] = 0;
			CarInfo[vs][cTuningok][1] = 0;
			CarInfo[vs][cTuningok][2] = 0;
			CarInfo[vs][cTuningok][3] = 0;
			CarInfo[vs][cTuningok][4] = 0;
			CarInfo[vs][cTuningok][5] = 0;
			CarInfo[vs][cTuningok][6] = 0;
			CarInfo[vs][cTuningok][7] = 0;
			CarInfo[vs][cTuningok][8] = 0;
			CarInfo[vs][cTuningok][9] = 0;
			CarInfo[vs][cTuningok][10] = 0;
			CarInfo[vs][cTuningok][11] = 0;
			CarInfo[vs][cTuningok][12] = 0;
			CarInfo[vs][cTuningok][13] = 0;
			CarInfo[vs][cTuningok][14] = 0;
			//KmSzamol[CarInfo[vs][cId]] = 0;
			
			//Pótkulcs törlése
			CarInfo[vs][cKulcsok][0] = NINCS;
			CarInfo[vs][cKulcsok][1] = NINCS;
			
			CarUpdate(vs, CAR_Model,CAR_Kulcsok1,CAR_Kulcsok2,CAR_Tuningok);
			UnFreeze(playerid);

			SendFormatMessage(playerid, COLOR_LIGHTRED, "V-s [%d] kocsi átalakítva! Tulaja %s", vs, CarInfo[vs][cOwner]);
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/UjKocsi", true) == 0)
	{
		if(Admin(playerid,5555))
	    {
			new kocsiid = -1;
			for(new c = 0; c < MAXVSKOCSI; c++)
			{
			    if(CarInfo[c][Van] != 1 && kocsiid == -1)
				{
			        kocsiid = c;
					break;
				}
			}

			if(kocsiid == -1)
			{
			   	SendFormatMessage(playerid, COLOR_LIGHTRED, "Több kocsit nem tudsz lerakni! A maximum %d!", MAXVSKOCSI);
			   	return 1;
		   	}

			//if(!IsAt(playerid, IsAt_KereskedoHQ))
			//	return Msg(playerid, "Nem vagy a spawn helynél!");

			new model, ara, szin1, szin2;

			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) == 0)
			    model = 410;
			else
			{
				if(GetVehicleModelIDFromName(tmp) == -1)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Ilyen modelrõl még nem hallottam...");
				    return 1;
				}
				model = GetVehicleModelIDFromName(tmp);
			}

			/*tmp = strtok(cmdtext, idx);
			if(strlen(tmp) == 0)
			    ara = 3000000;
			else
				ara = strval(tmp);*/

			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) == 0)
				szin1 = 1;
            else
				szin1 = strval(tmp);

			tmp = strtok(cmdtext, idx);
			if(strlen(tmp) == 0)
				szin2 = 1;
            else
				szin2 = strval(tmp);

			new Float:x, Float:y, Float:z, Float:a;
   			GetPlayerPos(playerid, x, y, z);
   			GetPlayerFacingAngle(playerid, a);

			UjCar(x, y, z, a, szin1, szin2, model, ara);

			SetPlayerPos(playerid, x, y, z+1);
			SendClientMessage(playerid, COLOR_GREEN, "Új kocsi lerakva!");
			
			
	    }
	    return 1;
	}
	if(strcmp(cmd, "/saveint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if (IsScripter(playerid))
		    {
				GameTextForPlayer(playerid, "Interiorok mentve", 2500, 3);
				OnIntsUpdate();
			}
		}
		return 1;
	}
	//Scott
	if(strcmp(cmd, "/zöldséges", true) == 0 || strcmp(cmd, "/zoldseges", true) == 0)
	{
		if(FloodCheck(playerid)) return 1;
		if(params < 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Használat: /zöldséges [száma]");
			SendClientMessage(playerid, COLOR_GREEN, "************Zöldségek************");
			SendClientMessage(playerid, COLOR_YELLOW, "1:Répa(100Ft) 3:Uborka(175Ft) 4:Paradicsom(150Ft)");
			SendClientMessage(playerid, COLOR_YELLOW, "5:Paprika(200Ft) 6:Tök(320Ft) 7:Bab(30Ft)");
			SendClientMessage(playerid, COLOR_GREEN, "************Gyümölcsök***********");
			SendClientMessage(playerid, COLOR_YELLOW, "8:Alma(120Ft) 9:Barack(140Ft) 10:Dinnye(200Ft) 11:Narancs(75Ft)");
			SendClientMessage(playerid, COLOR_YELLOW, "12:Körte(65Ft) 13:Szilva(54Ft) 14:Meggy(49Ft) 15:Málna(46Ft)");
			return 1;
		}
		if(PlayerToPoint(3.0, playerid, 2534.393798, 2290.933593, 10.820312) || PlayerToPoint(3.0, playerid, 2089.889160, -1929.772338, 13.539438))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new Float:health;
			new item = strval(tmp);
			if (item == 1)
			{
				if(GetMoney(playerid) > 100)
				{
					GetPlayerHealth(playerid, health);
					format(string, sizeof(string), "* Valaki eszik egy répát...", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GiveMoney(playerid, - 100);
					SzuksegletAra(playerid,1,100);
					
				}
				else SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			if (item == 3)
			{
				if(GetMoney(playerid) > 175)
				{
					GetPlayerHealth(playerid, health);
					format(string, sizeof(string), "* Valaki eszik egy uborkát.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GiveMoney(playerid, - 175);
					SzuksegletAra(playerid,1,175);
				}
				else  SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			if (item == 4)
			{
			if(GetMoney(playerid) > 150)
			{
				GetPlayerHealth(playerid, health);
				format(string, sizeof(string), "* Valaki eszik egy paradicsomot.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				GiveMoney(playerid, - 150);
				SzuksegletAra(playerid,1,150);
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			if (item == 5)
			{
			if(GetMoney(playerid) > 200)
			{
				GetPlayerHealth(playerid, health);
				format(string, sizeof(string), "* Valaki eszik egy paprikát.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				GiveMoney(playerid, - 200);
				SzuksegletAra(playerid,1,200);
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			if (item == 6)
			{
			if(GetMoney(playerid) > 320)
			{
			GetPlayerHealth(playerid, health);
			format(string, sizeof(string), "* Valaki eszik egy tököt.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiveMoney(playerid, - 320);
			SzuksegletAra(playerid,1,320);
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			if (item == 7)
			{
			if(GetMoney(playerid) > 30)
			{
			GetPlayerHealth(playerid, health);
			format(string, sizeof(string), "* Valaki eszik egy babot.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiveMoney(playerid, - 30);
			SzuksegletAra(playerid,1,30);
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			if (item == 8)
			{
			if(GetMoney(playerid) > 120)
			{
			GetPlayerHealth(playerid, health);
			format(string, sizeof(string), "* Valaki eszik egy almát.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiveMoney(playerid, - 120);
			SzuksegletAra(playerid,1,120);
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			if (item == 9)
			{
			if(GetMoney(playerid) > 140)
			{
			GetPlayerHealth(playerid, health);
			format(string, sizeof(string), "* Valaki eszik egy barackot.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiveMoney(playerid, - 140);
			SzuksegletAra(playerid,1,140);
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			if (item == 10)
			{
			if(GetMoney(playerid) > 99)
			{
			GetPlayerHealth(playerid, health);
			format(string, sizeof(string), "* Valaki eszik egy dinnyét.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiveMoney(playerid, - 100);
			SzuksegletAra(playerid,1,100);
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			if (item == 11)
			{
			if(GetMoney(playerid) > 75)
			{
			GetPlayerHealth(playerid, health);
			format(string, sizeof(string), "* Valaki eszik egy narancsot.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiveMoney(playerid, - 75);
			SzuksegletAra(playerid,1,75);
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			if (item == 12)
			{
			if(GetMoney(playerid) > 64)
			{
			GetPlayerHealth(playerid, health);
			format(string, sizeof(string), "* Valaki eszik egy körtét.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiveMoney(playerid, - 65);
			SzuksegletAra(playerid,1,65);
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			if (item == 13)
			{
			if(GetMoney(playerid) > 54)
			{
			GetPlayerHealth(playerid, health);
			format(string, sizeof(string), "* Valaki eszik egy szilvát.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiveMoney(playerid, - 54);
			SzuksegletAra(playerid,1,54);
			}
			else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			if (item == 14)
			{
			if(GetMoney(playerid) > 49)
			{
			GetPlayerHealth(playerid, health);
			format(string, sizeof(string), "* Valaki eszik egy meggyet.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiveMoney(playerid, - 49);
			SzuksegletAra(playerid,1,49);
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			if (item == 15)
			{
			if(GetMoney(playerid) > 46)
			{
			GetPlayerHealth(playerid, health);
			format(string, sizeof(string), "* Valaki eszik egy málnát.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GiveMoney(playerid, - 46);
			SzuksegletAra(playerid,1,46);
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nincs elég pénzed!");
			}
			}
			} else { SendClientMessage(playerid,COLOR_WHITE,"Nem vagy a zöldségesnél! (/gps LSzöldséges vagy /gps LVzöldséges)");
			}
		}

	if(strcmp(cmd, "/deleteint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	    	new jatekosneve[MAX_PLAYER_NAME];
			GetPlayerName(playerid, jatekosneve, sizeof(jatekosneve));
		    if (IsScripter(playerid))
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Használat: /deleteint [szám]");
					return 1;
				}

                new ii = strval(tmp);

                if(ii >= IntekSzama()){
                    SendClientMessage(playerid, COLOR_RED, "Nincs ilyen interior!");
					return 1;
                }

				IntInfo[ii][iType] = 0;

				format(string, sizeof(string), "Interior %d torolve cimket kapott", ii, IntInfo[ii][iType]);
                GameTextForPlayer(playerid, string, 2500, 3);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/editint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	    	new jatekosneve[MAX_PLAYER_NAME];
			GetPlayerName(playerid, jatekosneve, sizeof(jatekosneve));
		    if (IsScripter(playerid))
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Használat: /editint [szám]");
					return 1;
				}

                new ii = strval(tmp);

                if(ii >= IntekSzama()){
                    SendClientMessage(playerid, COLOR_RED, "Nincs ilyen interior!");
					return 1;
                }

				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				IntInfo[ii][iNumber] = GetPlayerInterior(playerid);
				IntInfo[ii][iExitX] = x;
				IntInfo[ii][iExitY] = y;
				IntInfo[ii][iExitZ] = z;

				format(string, sizeof(string), "Interior %d szerkesztve", ii, IntInfo[ii][iType]);
                GameTextForPlayer(playerid, string, 2500, 3);

                format(string, sizeof(string), "Interior %d szerkesztve (%d, %f, %f, %f)",ii, IntInfo[ii][iType], IntInfo[ii][iNumber],IntInfo[ii][iExitX], IntInfo[ii][iExitY], IntInfo[ii][iExitZ]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/goint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	    	new jatekosneve[MAX_PLAYER_NAME];
			GetPlayerName(playerid, jatekosneve, sizeof(jatekosneve));
		    if (PlayerInfo[playerid][pAdmin] >= 1337)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Használat: /goint [szám]");
					return 1;
				}

                new ii = strval(tmp);

                if(ii > IntekSzama()){
                    SendClientMessage(playerid, COLOR_RED, "Nincs ilyen interior!");
					return 1;
                }

				SetPlayerInterior(playerid, IntInfo[ii][iNumber]);
				SetPlayerPos(playerid, IntInfo[ii][iExitX], IntInfo[ii][iExitY], IntInfo[ii][iExitZ]);

				format(string, sizeof(string), "Interior %d %s", ii, IntInfo[ii][iType]);
                GameTextForPlayer(playerid, string, 2500, 3);

                format(string, sizeof(string), "Interior %d/%s (%d, %f, %f, %f)",ii, IntInfo[ii][iType], IntInfo[ii][iNumber],IntInfo[ii][iExitX], IntInfo[ii][iExitY], IntInfo[ii][iExitZ]);
				SendClientMessage(playerid, COLOR_GREEN, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/poz", true) == 0)
	{
		new Float:posx, Float:posy, Float:posz, Float:angle;

		//ne írd át a formát elegem van hogy így küldik...
		if(veh < 1)
		{
			GetPlayerPos(playerid, posx, posy, posz);
			GetPlayerFacingAngle(playerid, angle);

			format(string, sizeof(string), "Poziciód: (XYZ: %.3f, %.3f, %.3f | Angle: %.3f | Int:%d | VW:%d)", posx, posy, posz, angle, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
		}
		else
		{
			GetVehiclePos(veh, posx, posy, posz);
			GetVehicleZAngle(veh, angle);
			format(string, sizeof(string), "Poziciód: (XYZ: %.3f, %.3f, %.3f | Angle: %.3f | Int:%d | VW:%d)", posx, posy, posz, angle, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
		}

		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		return 1;
	}

	if(strcmp(cmd, "/pozmentes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
				new result[128];
   				if(sscanf(pms, "s[128]", result))
					return SendClientMessage(playerid, COLOR_WHITE, "Használat: /pozmentes [Információ]");

				new year,month,day,hour,minute,second;
				getdate(year, month, day);
				gettime(hour,minute,second);
				new Float:posx, Float:posy, Float:posz, Float:angle, world, interior;
				world = GetPlayerVirtualWorld(playerid);
				interior = GetPlayerInterior(playerid);

				if(IsPlayerInAnyVehicle(playerid))
				{
					new car = GetPlayerVehicleID(playerid), model = GetVehicleModel(car);
					GetVehiclePos(car, posx, posy, posz);
					GetVehicleZAngle(car, angle);
					format(string, sizeof(string), "[%d-%d-%d %d:%d:%d] Kocsi %s - \"%s\" - [X:%.3f | Y:%.3f | Z:%.3f | Angle: %.3f | Int:%d | VW:%d] - UjKocsi(%d, %.3f, %.3f, %.3f, %.3f, %d, %d)",
					year, month, day, hour, minute, second, sendername, result, posx, posy, posz, angle, interior, world, model, posx, posy, posz, angle, KocsiSzinek[car][0], KocsiSzinek[car][1]);
					PosLog(string);
					format(string, sizeof(string), "Kocsi poziciód elmentve! (X:%.3f | Y:%.3f | Z:%.3f | Angle: %.3f | Int:%d | VW:%d)", posx, posy, posz, angle, GetPlayerInterior(playerid), world);
				}
				else
				{
					GetPlayerPos(playerid, posx, posy, posz);
					GetPlayerFacingAngle(playerid, angle);
					format(string, sizeof(string), "[%d-%d-%d %d:%d:%d] %s - \"%s\" - [X:%.3f | Y:%.3f | Z:%.3f | Angle: %.3f | Int:%d | VW:%d] - (%.3f, %.3f, %.3f, %.3f)",
					year, month, day, hour, minute, second, sendername, result, posx, posy, posz, angle, interior, world, posx, posy, posz, angle);
					PosLog(string);
					format(string, sizeof(string), "Poziciód elmentve! (X:%f | Y:%f | Z:%f | Angle: %.3f | Int:%d | VW:%d)", posx, posy, posz, angle, GetPlayerInterior(playerid), world);
				}

				SendClientMessage(playerid, COLOR_RED, string);

			}else
			    SendClientMessage(playerid, COLOR_GRAD2, "Én nem ismerek ilyen parancsot. Te igen? c(:");
		}
		return 1;
	}

	if (strcmp(cmd, "/leaderek", true) == 0) // Leaderek
    {
		new count = 0;
		SendClientMessage(playerid, COLOR_GREEN, "------------[Frakciók vezetõi(Legális)]------------");
		foreach(Jatekosok, i)
		{
			if(PlayerInfo[i][pLeader] > 0)
			{
				new nev[32], mehet = 0;
				if(PlayerInfo[i][pLeader] == FRAKCIO_SCPD)
					nev = "LSPD";
				else if(PlayerInfo[i][pLeader] == FRAKCIO_MENTO)
					nev = "OMSZ";
				else if(PlayerInfo[i][pLeader] == FRAKCIO_ONKORMANYZAT)
					nev = "Kormány";
				else if(PlayerInfo[i][pLeader] == FRAKCIO_RIPORTER)
					nev = "Riporter";
				else if(PlayerInfo[i][pLeader] == FRAKCIO_TAXI)
					nev = "Taxi";
				else if(PlayerInfo[i][pLeader] == FRAKCIO_SFPD)
					nev = "SFPD";
				else if(PlayerInfo[i][pLeader] == FRAKCIO_OKTATO)
					nev = "Oktatok";
				else if(PlayerInfo[i][pLeader] == FRAKCIO_NAV)
					nev = "SASD";
				else if(PlayerInfo[i][pLeader] == FRAKCIO_TUZOLTO)
					nev = "Tûzoltóság";
				else if(PlayerInfo[i][pLeader] == FRAKCIO_KATONASAG)
					nev = "USAF";
				else
					mehet=5;

				if(mehet == 0 && !IsTerno(i))
				{
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 64, "%s: %s", nev, sendername);
					SendClientMessage(playerid,COLOR_RED, string);
					count++;
				}
			}
		}
		if (count == 0) SendClientMessage(playerid,COLOR_GREY,"Nincs fent leader");
		SendClientMessage(playerid,COLOR_GREEN, "---------------------------------------");
		return 1;
    }

    if(egyezik(cmd, "/tagok") || egyezik(cmd, "/ranks"))
	{
		if(PlayerInfo[playerid][pMember] < 1) return 1;

		new rangnev[32], munka, rang, leader;
		new r = OsszRang[leader+1];
		leader = PlayerInfo[playerid][pMember] - 1;
		new melo = PlayerInfo[playerid][pMember];

		SendFormatMessage(playerid, COLOR_WHITE, "========== %s (Játékban: %d) ==========", Szervezetneve[leader][0], FrakcioOnline(melo));
		foreach(Jatekosok, s)
		{
			if(!IsPlayerConnected(s) || IsPlayerNPC(s) || PlayerInfo[s][pMember] != PlayerInfo[playerid][pMember] || IsClint(s)) continue;

			munka = PlayerInfo[s][pMember] - 1;
			rang = PlayerInfo[s][pRank];

			if(rang <= 0) rangnev = Rangok[munka][0];
			else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
			else rangnev = Rangok[munka][r];

			if(Admin(s, 1337))
				SendFormatMessage(playerid, COLOR_GREY, "[%d]%s - %s (%d)", s, AdminName(s), rangnev, rang);
			else if(LMT(s, FRAKCIO_RIPORTER) && OnDuty[s])
				SendFormatMessage(playerid, COLOR_GREY, "[%d]%s - %s (%d) (szolgálatban) (hírmondások: %ddb)", s, ICPlayerName(s), rangnev, rang, PlayerInfo[s][pNewsSkill]);
			else if(LMT(s, FRAKCIO_RIPORTER))
				SendFormatMessage(playerid, COLOR_GREY, "[%d]%s - %s (%d) (hírmondások: %ddb)", s, ICPlayerName(s), rangnev, rang, PlayerInfo[s][pNewsSkill]);
			else if(LMT(s, FRAKCIO_MENTO) && OnDuty[s])
				SendFormatMessage(playerid, COLOR_GREY, "[%d]%s - %s (%d) (szolgálatban) (mentések: %ddb)", s, ICPlayerName(s), rangnev, rang, PlayerInfo[s][pMechSkill]);
			else if(LMT(s, FRAKCIO_MENTO))
				SendFormatMessage(playerid, COLOR_GREY, "[%d]%s - %s (%d) (mentések: %ddb)", s, ICPlayerName(s), rangnev, rang, PlayerInfo[s][pMechSkill]);// OMSZ /tagokban már mutatja a mentéseinek számát.
			else if(OnDuty[s])
				SendFormatMessage(playerid, COLOR_GREY, "[%d]%s - %s (%d) (szolgálatban)", s, ICPlayerName(s), rangnev, rang);
			else
				SendFormatMessage(playerid, COLOR_GREY, "[%d]%s - %s (%d)", s, ICPlayerName(s), rangnev, rang);
		}

		SendFormatMessage(playerid, COLOR_WHITE, "========== %s (Játékban: %d) ==========", Szervezetneve[leader][0], FrakcioOnline(melo));

		return 1;
	}
//============================================================================================================
    if(strcmp(cmd, "/asay", true) == 0)
    {

        new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /asay [Üzenet]");

		if(SzovegEllenorzes(playerid, result, "/asay", ELLENORZES_MINDKETTO))
			return 1;

	    if(PlayerInfo[playerid][pAdmin] >= 1 || IsAS(playerid))
  		{
   		    new asadmin[16];
   	    	if(IsAS(playerid))
    	        asadmin = "Adminsegéd";
			if(Admin(playerid, 1) || IsScripter(playerid))
			    asadmin = "Admin";

	        for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pAdmin] >= 1337 || IsScripter(i))
			    	    format(string, sizeof(string), "* %s (%s): %s", asadmin, AdminName(playerid), result);
					else
						format(string, sizeof(string), "* %s: %s", asadmin, result);

					if(IsAS(playerid))
						format(string, sizeof(string), "* %s %s: %s", asadmin, PlayerName(playerid), result);
					SendClientMessage(i, COLOR_PIROS, string);
   				}
			}

	        printf("%s\n", string);
   		}
       	else
			return SendClientMessage(playerid,COLOR_GREY, "Ejnye...");
   	}

    if(strcmp(cmd, "/asayn", true) == 0)
    {
		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /asayn [Üzenet]");

		if(SzovegEllenorzes(playerid, result, "/asayn", ELLENORZES_MINDKETTO))
			return 1;

	    if(Admin(playerid) || IsAS(playerid))
    	{
	        for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					format(string, sizeof(string), "* %s %s: %s", AdminRangNev(playerid), AdminName(playerid), result);
					SendClientMessage(i, COLOR_PIROS, string);
	   			}
			}
	        printf("%s\n", string);
    	}
       	else
			return SendClientMessage(playerid,COLOR_GREY, "Ejnye...");
    }
//---------------------------------------------------------------------------------------------------------------
    if(strcmp(cmd, "/afk", true)== 0)
	{
		if(AFK[playerid] == 0)
		{
			new hazak = sizeof(HouseInfo), afk = -1;
			for(new i = 0; i < hazak; i++)
			{
				//printf("House :%d",i);
				new HazBelso = HouseInfo[i][hBelso];
				if(PlayerToPoint(250, playerid,IntInfo[HazBelso][iExitX], IntInfo[HazBelso][iExitY], IntInfo[HazBelso][iExitZ]) && GetPlayerVirtualWorld(playerid) == i && GetPlayerInterior(playerid) == IntInfo[HazBelso][iNumber])
				{
				    SendClientMessage(playerid, COLOR_LIGHTRED, "===============[AFK]===============");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Mostmár mehetsz a dolgodra. Ha már nem akarsz AFK-zni írd be h \"ClassRPG\"");
                    SendClientMessage(playerid, COLOR_LIGHTRED, "===============[AFK]===============");
					TogglePlayerControllable(playerid,0);
					SetPlayerColor(playerid, COLOR_BLACK);
					AFK[playerid] = 1;
					afk = 1;
				}
			}

			if(afk != 1)
				return SendClientMessage(playerid, COLOR_GREY, "Csak házban AFK-zhatsz!");
		}
		else
		{
 		   SendClientMessage(playerid, COLOR_GRAD1, "Kétszer mész el egymás után?");
	       return 1;
		}
	}
//-----------------------------------------------------------------------------//
	if(strcmp(cmd,"/respawn",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1 || IsScripter(playerid) || (Tevezik[playerid] > 0 && IsAS(playerid)))
		{
		    if(params != 1) return SendClientMessage(playerid, COLOR_WHITE, "Használata: /respawn [Játékos]");
		    new jatekos = ReturnUser(param[1]);
		    
			if(jatekos == INVALID_PLAYER_ID || IsPlayerNPC(jatekos))
				return Msg(playerid, "Nincs ilyen játékos!");
				
			if(Tevezik[playerid] > 0 && jatekos == playerid) 
				return Msg(playerid, "Miért is akarsz bugot kihasználni?");

			if(PlayerInfo[playerid][pAdmin] < PlayerInfo[jatekos][pAdmin])
				jatekos = playerid;
				
			if(jatekos == playerid)
				ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s respawnolta magát >>", PlayerName(playerid));
			else
				ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s respawnolta %s-t >>", PlayerName(playerid), PlayerName(jatekos));
				
			Hazbanvan[jatekos] = 0;
			Tevezik[jatekos] = NINCS;
			DontWriteJustLoggedIn[jatekos] = true;
			SpawnPlayer(jatekos);
			//SetPlayerSpawn(jatekos);
		}
		return 1;
	}
	if(strcmp(cmd,"/vhspawn",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1 || (Tevezik[playerid] > 0 && IsAS(playerid)))
		{
		    if(params != 1) return SendClientMessage(playerid, COLOR_WHITE, "Használata: /vhspawn [Játékos]");
		    new jatekos = ReturnUser(param[1]);

			if(jatekos == INVALID_PLAYER_ID || IsPlayerNPC(jatekos))
				return Msg(playerid, "Nincs ilyen játékos!");

			if(jatekos == playerid)
			{
				ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s városházára rakta magát >>", PlayerName(playerid));
			}
			else
			{
				ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s városházára rakta %s-t >>", PlayerName(playerid), PlayerName(jatekos));
			}
			SetPlayerPos(jatekos,1480.0736,-1737.7324,13.266);
			SetPlayerVirtualWorld(jatekos, 0);
			SetPlayerInterior(jatekos, 0);
			Hazbanvan[jatekos] = 0;
		}
		return 1;
	}

	if(strcmp(cmd, "/agivelicense", true) == 0 || strcmp(cmd, "/agl", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
				if(params < 2) {
				    SendClientMessage(playerid, COLOR_WHITE, "Használat: /agl [Jogsi neve] [Játékos]");
				    SendClientMessage(playerid, COLOR_WHITE, "Lehetõségek: auto, motor, repulo, kamion, horgasz, hajo, fegyver, adr");
					return 1;
				}
				if(egyezik(param[1], "motor"))
				{
					new p = ReturnUser(param[2]);
					if(p == INVALID_PLAYER_ID) return 1;
					Msg(playerid, "Adtál egy motor jogsit neki.");
					Msg(p, "Kaptál egy motor jogsit.");
					PlayerInfo[p][pMotorJogsi] = JOGSI_MOTOR;
					format(string, sizeof(string), "<< Admin %s Motor jogsit adott neki: %s >>", AdminName(playerid), PlayerName(p));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
				else if(egyezik(param[1], "kamion"))
				{
					new p = ReturnUser(param[2]);
					if(p == INVALID_PLAYER_ID) return 1;
					Msg(playerid, "Adtál egy kamion jogsit neki.");
					Msg(p, "Kaptál egy kamion jogsit.");
					PlayerInfo[p][pKamionJogsi] = JOGSI_KAMION;
					format(string, sizeof(string), "<< Admin %s Kamion jogsit adott neki: %s >>", AdminName(playerid), PlayerName(p));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
				else if(egyezik(param[1], "adr"))
				{
					new p = ReturnUser(param[2]);
					if(p == INVALID_PLAYER_ID) return 1;
					Msg(playerid, "Adtál egy adr jogsit neki.");
					Msg(p, "Kaptál egy adr jogsit.");
					PlayerInfo[p][pAdrJogsi] = JOGSI_ADR;
					format(string, sizeof(string), "<< Admin %s ADR engedélyt adott neki: %s >>", AdminName(playerid), PlayerName(p));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
				else if(egyezik(param[1], "hajo") || egyezik(param[1], "hajó"))
				{
					new p = ReturnUser(param[2]);
					if(p == INVALID_PLAYER_ID) return 1;
					Msg(playerid, "Adtál egy hajó jogsit neki.");
					Msg(p, "Kaptál egy hajó jogsit.");
					PlayerInfo[p][pBoatLic] = JOGSI_HAJO;
					format(string, sizeof(string), "<< Admin %s Hajó jogsit adott neki: %s >>", AdminName(playerid), PlayerName(p));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
				else if(egyezik(param[1], "horgasz") || egyezik(param[1], "horgász"))
				{
					new p = ReturnUser(param[2]);
					if(p == INVALID_PLAYER_ID) return 1;
					Msg(playerid, "Adtál egy horgász engedélyt neki.");
					Msg(p, "Kaptál egy horgász engedélyt.");
					PlayerInfo[p][pFishLic] = JOGSI_HORGASZ;
					format(string, sizeof(string), "<< Admin %s Horgász engedélyt adott neki: %s >>", AdminName(playerid), PlayerName(p));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
				else if(egyezik(param[1], "auto") || egyezik(param[1], "autó"))
				{
					new p = ReturnUser(param[2]);
					if(p == INVALID_PLAYER_ID) return 1;
					Msg(playerid, "Adtál egy autó jogsit neki.");
					Msg(p, "Kaptál egy autó jogsit.");
					PlayerInfo[p][pCarLic] = JOGSI_AUTO;
					format(string, sizeof(string), "<< Admin %s Autó jogsit adott neki: %s >>", AdminName(playerid), PlayerName(p));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
				else if(egyezik(param[1], "repulo") || egyezik(param[1], "repülõ"))
				{
					new p = ReturnUser(param[2]);
					if(p == INVALID_PLAYER_ID) return 1;
					Msg(playerid, "Adtál egy repülõ jogsit neki.");
					Msg(p, "Kaptál egy repülõ jogsit.");
					PlayerInfo[p][pFlyLic] = JOGSI_REPULO;
					format(string, sizeof(string), "<< Admin %s Repülõ jogsit adott neki: %s >>", AdminName(playerid), PlayerName(p));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
				else if(egyezik(param[1], "helikopter") || egyezik(param[1], "heli"))
				{
					new p = ReturnUser(param[2]);
					if(p == INVALID_PLAYER_ID) return 1;
					Msg(playerid, "Adtál egy helikopter jogsit neki.");
					Msg(p, "Kaptál egy helikopter jogsit.");
					PlayerInfo[p][pHeliLic] = JOGSI_REPULO;
					format(string, sizeof(string), "<< Admin %s Helikopter jogsit adott neki: %s >>", AdminName(playerid), PlayerName(p));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
				else if(egyezik(param[1], "fegyver"))
				{
					new p = ReturnUser(param[2]);
					if(p == INVALID_PLAYER_ID) return 1;
					Msg(playerid, "Adtál egy fegyver engedélyt neki.");
					Msg(p, "Kaptál egy fegyver engedélyt.");
					PlayerInfo[p][pGunLic] = JOGSI_FEGYVER;
					format(string, sizeof(string), "<< Admin %s Fegyver engedélyt adott neki: %s >>", AdminName(playerid), PlayerName(p));
					ABroadCast(COLOR_LIGHTRED, string, 1);
				}
				else
					Msg(playerid, "Hibás jogsinév");
	        }
	    }
	    return 1;
	}

	if(egyezik(cmd, "/kockahelp"))
 	{
		SendClientMessage(playerid,COLOR_GREEN,"*** Hol is van *** Kockát a 24/7-ben vagy a kaszinóban találhatsz. ");
		SendClientMessage(playerid,COLOR_GREEN,"*** Hogyan vegyem meg *** 24/7-ben /buy 4, kaszinóban /kocka, DE ha bemész a kaszinóba kapsz alapból.");
		SendClientMessage(playerid,COLOR_GREEN,"*** Játék *** A kocka segítségével játszhatsz. Van 6, 12 és 20 oldalú kocka(Mindet megkapod).");
		SendClientMessage(playerid,COLOR_GREEN,"*** Játék *** A játékokat a /kaszinohelp parancsban találhatod majd, vagy az oldalon.");
		SendClientMessage(playerid,COLOR_GREEN,"*** Játék *** Játssz nyugodtan a köv. parancsokkal: /dice /dice12 /dice20.");
		SendClientMessage(playerid,COLOR_GREEN,"*** Crash / Kilépés *** Crash / Kilépés után nem marad meg a kocka.");
		return 1;
	}
    if(strcmp(cmd, "/crs", true)== 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1 || IsScripter(playerid))
		{
			new car = NINCS;
           	if(!IsPlayerInAnyVehicle(playerid))
        		car = GetClosestVehicle(playerid);
			else
				car = GetPlayerVehicleID(playerid);

		   	if(GetPlayerDistanceFromVehicle(playerid, car) < 5.0)
		   	{
				SendFormatMessage(playerid, COLOR_GRAD1, "Respawnoltál egy %s típusú jármûvet | Jármû ID: %d", vehName[GetVehicleModel(car) - 400], car);
				ACrs[car]=true;
				KocsiRespawn(car);
				print("crs");
				KocsiObjectTorol(car);
				print("crs");
				ACrs[car]=false;
			}
			else
				return Msg(playerid, "A közeledben nincs jármû!");

			if(IsPlayerInAnyVehicle(playerid))
				UnFreeze(playerid);
	        return 1;
		}
		else
		{
                SendClientMessage(playerid, COLOR_GRAD1, "Nem vagy admin...");
		}
	}
//--------------------------------[/removecar]------------------------------------------------------------------------
    if(strcmp(cmd, "/removecar", true)== 0)
	{
		if(!Admin(playerid, 6)) return 1;

		new kocsi = GetClosestVehicle(playerid);
		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.0) return Msg(playerid, "Nincs kocsi a közeledben!");

		new talalt = NINCS;
		for(new i = 0; i < sizeof(CreatedCars); i++)
		{
			if(CreatedCars[i] == kocsi)
			{
				talalt = i;

				break;
			}
		}

		if(talalt != NINCS)
		{
			KocsiJavit(talalt);
			KocsiObjectTorol(talalt);
			DestroyVehicle(CreatedCars[talalt]);
			CreatedCars[talalt] = 0;
			Msg(playerid, "Közeledben lévõ lehívott jármû törölve!");
		}
		else Msg(playerid, "Ez nem törölhetõ");

		return 1;
	}

/////////////////////////////////////////////////////////////////////////////////////////
	if(strcmp(cmd, "/announce", true) == 0 || strcmp(cmd, "/ann", true) == 0 || strcmp(cmd, "/adminhirdet", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!Admin(playerid, 1) && !IsScripter(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nem használhatod!");
			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: (/ann)ouncement [Bejelentés szövege]");

            if(SzovegEllenorzes(playerid, result, "/ann", ELLENORZES_MINDKETTO))
				return 1;

			SendFormatMessageToAll(TEAM_ORANGE_COLOR, "(( **Bejelentés** Admin %s: %s ))", AdminName(playerid), result);
		}
		return 1;
	}

	if(strcmp(cmd, "/járat", true) == 0 || strcmp(cmd, "/jarat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /járat [Szöveg]");

			if(LMT(playerid, FRAKCIO_TAXI) || IsAdmin(playerid))
			{
				format(string, sizeof(string), "[%d] ** Menetrend ** %s", playerid, result);
				SendMessage(SEND_MESSAGE_OOCOFF, string, 0x15ff00aa);
				printf("%s\n", string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/rendezvény", true) == 0 || strcmp(cmd, "/rendezveny", true) == 0)
	{
		return SendClientMessage(playerid, COLOR_WHITE, "Használat: /kormány rendezvény [Szöveg]");


	}


//-------------------------------------------------------------------------
	if(egyezik(cmd, "/Quitfaction") || egyezik(cmd, "/leaderlemond"))
	{
		if(PlayerInfo[playerid][pLeader] == 0) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy leader!");
		FrakcioInfo[PlayerInfo[playerid][pLeader]][fLeaderekSzama]--;
		format(string, sizeof(string), "<< %s lemondta a Leaderségét | Frakció: %s (%d) >>", PlayerName(playerid),Szervezetneve[PlayerInfo[playerid][pMember]-1][2], PlayerInfo[playerid][pLeader]);
		ABroadCast(COLOR_LIGHTRED, string, 1);
        PlayerInfo[playerid][pMember] = 0;
		PlayerInfo[playerid][pRank] = 0;
		PlayerInfo[playerid][pLeader] = 0;
		SendClientMessage(playerid, COLOR_GREY, "Lemondtad a Leaderséged!");
		SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
	    return 1;

	}
	if(egyezik(cmd, "/gumi"))
	{
		new kocsi = GetClosestVehicle(playerid);
		new Float:tav = GetPlayerDistanceFromVehicle(playerid, kocsi);
		if(tav >= 3) return SendClientMessage(playerid, COLOR_LIGHTRED, "A közeledben nincs jármû!");
		if(IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem látod innen a gumit");
		if(IsABoat(kocsi) || IsABicikli(kocsi) || IsARepulo(kocsi)) return Msg(playerid,"Ezen nincs gumi ami elkopjon!");
		new Float:allapot=CarPart[kocsi][cKerekek];
		SendFormatMessage(playerid, COLOR_YELLOW, "Állapot infó: Az abroncsok %.2f százalékban elhasználtak!",allapot);
	}
//=================================Engine====================================

	if(egyezik(cmd,"/gyújtás") || egyezik(cmd,"/gyujtas"))
	{
		new vid = GetPlayerVehicleID(playerid);
		if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy jármûben!");
		if(IsKocsi(vid, "Gokart"))	return 1;
		if(IsABicikli(vid)) return Msg(playerid, "Biciklin nem lehet");
		if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return Msg(playerid, "Csak sofõr!");
		if(!KocsibanVan[playerid]) return Msg(playerid, "Nem vagy jármûben!");
		if(engineOn[vid]) return Msg(playerid, "Már be van indítva a motor!");
		if(CarPart[vid][cElektronika] >= 100.0) return Msg(playerid, "Az elektronika tönkrement, így nem tudod bekapcsolni!");
		new car = IsAVsKocsi(vid);
		if(car != -1)
		{
			if(CarInfo[car][cOwned] == 0 && (PlayerInfo[playerid][pAutoker]<1 && AutokerKulcs[playerid] !=1 && !Lefoglalt[playerid]))
			{
			//	format(string, sizeof(string), "Carinfo %d ==0 és (%d <1 és  %d != 1)", CarInfo[car][cOwned], PlayerInfo[playerid][pAutoker], AutokerKulcs[playerid]);
			//	SendClientMessage(playerid, COLOR_YELLOW, string);
				return 1;
			}
		}
		new Slot = NINCS;
		for(new x = 0; x < sizeof(CreatedCars); x++)
		{
			if(CreatedCars[x] == vid)
			{
				Slot = 1;
				break;
			}
		}
		if(SajatKocsi(playerid, vid) || car != -1 && CarInfo[car][cOwned] == 0 || JarmuKulcs[playerid] == vid || Slot==1)
		{
			if(Gyujtas[vid] == false)
			{
				Gyujtas[vid] = true;
				CarPart[vid][cElektronika] += 0.01;
			}
			else
				Gyujtas[vid] = false;
		}
	}		
	if(egyezik(cmd, "/motor"))
	{
		new vid = GetPlayerVehicleID(playerid);
		if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Mégis mit akarsz beinditani?");
		if(IsKocsi(vid, "Gokart")) return 1;
		if(IsABicikli(vid)) return Msg(playerid, "Biciklin motor? Ez modern bicikli lehet... :)");
		if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return Msg(playerid, "Csak sofõr!");
		if(!KocsibanVan[playerid]) return Msg(playerid, "Nem vagy jármûben!");

		new car = IsAVsKocsi(vid);
		if(car != -1)
		{
			if(CarInfo[car][cOwned] == 0 && (PlayerInfo[playerid][pAutoker]<1 && AutokerKulcs[playerid] !=1 && !Lefoglalt[playerid]))
			{
			//	format(string, sizeof(string), "Carinfo %d ==0 és (%d <1 és  %d != 1)", CarInfo[car][cOwned], PlayerInfo[playerid][pAutoker], AutokerKulcs[playerid]);
			//	SendClientMessage(playerid, COLOR_YELLOW, string);
				return 1;
			}
		}

		if(Tankolaskozben[vid]) return Msg(playerid,"Ebbe a kocsiba már tankolnak!");
		if(engineOn[vid] == 0)
		{
			if(KocsiElet(vid) <= 350)
				return Msg(playerid, "A jármû elromlott! Hívj szerelõt!");
			if(CarPart[vid][cMotorolaj] >= 100.0) return Msg(playerid,"Az olaj nagyon elhasználódott, az elektronika letiltotta a kocsi mûködését, hívj szerelõt");
			if(CarPart[vid][cMotor] >= 500.0) return Msg(playerid, "A motorblokk tönkrement! Hívj szerelõt, hogy megjavíthassa a jármûvet!");
			if(Inditasgatlo[vid] == 1 && !Lefoglalt[playerid]) return Msg(playerid,"Az indításgátló lezárta a kocsi motorját nem tudod elvinni(Ha tiéd a kocsi zárd be majd nyisd ki)");
			if(Almaszedeskozbe[vid] == 1) return Msg(playerid,"A kocsiba éppen almát szednek, ne vidd el!!");
			if(Gas[vid] <= 0)
				return Msg(playerid, "Nincs üzemanyag!");
			if(KocsiSokkolva[vid])
				return Msg(playerid, "A jármû sokkolva van");
			if(bikazott[vid] == 0 && CarPart[vid][cAkkumulator] < 4.1) return Msg(playerid, "Lemerült az akkumulátor!");

			new Slot = NINCS;
			for(new x = 0; x < sizeof(CreatedCars); x++)
			{
				if(CreatedCars[x] == vid)
				{
					Slot = 1;
					break;
				}
			}
			if(IsMunkaKocsi(vid) == MUNKA_CROSS)
			{
			    if(PlayerInfo[playerid][pCrossido]>0)
				{
					if(MunkaFolyamatban[playerid] == 1) return 1;
			        new kocsiserules, ido, Float:kocsielet;
			        GetVehicleHealth(vid, kocsielet);
			        kocsiserules = 1000 - floatround(kocsielet);
			        ido = 1000 + (kocsiserules * 5);
				    SendClientMessage(playerid, COLOR_LIGHTGREEN, "Beindítod a jármûvet...");
					KocsiHasznal[vid]=PlayerName(playerid);
					SetTimerEx("Munkavege", ido, false, "ddd", playerid, M_MOTOR, 0);
					MunkaFolyamatban[playerid] = 1;
					return 1;
				} 
				else
				    SendClientMessage(playerid, COLOR_YELLOW, "Ha szeretnél mutatványozni írd be, hogy /cross");
			}
			if(SajatKocsi(playerid, vid) || car != -1 && CarInfo[car][cOwned] == 0 || JarmuKulcs[playerid] == vid || Slot==1)
			{
				if(MunkaFolyamatban[playerid] == 1) return 1;
				new kocsiserules, ido, Float:kocsielet;
				GetVehicleHealth(vid, kocsielet);
				kocsiserules = 1000 - floatround(kocsielet);
				ido = 1000 + (kocsiserules * 5);
				SendClientMessage(playerid, COLOR_GREEN, "Beindítod a jármûvet...");
				KocsiHasznal[vid]=PlayerName(playerid);
				SetTimerEx("Munkavege", ido, false, "ddd", playerid, M_MOTOR, 0);
				MunkaFolyamatban[playerid] = 1;
				if(CarPart[vid][cMotorolaj] >= 70.0)
					Msg(playerid,"Lassan olajat kell cserélni, keress fel egy szerelõt!");
				if(CarPart[vid][cFek] >= 100.0)
					Msg(playerid, "A fékbetét elhasználódott, így nehezebb lesz fékezni!");
				if(CarPart[vid][cElektronika] >= 100.0)
					Msg(playerid, "Az elektronika tönkrement, így nem tudsz semmilyen elektronikus eszközt használni!");
				CarPart[vid][cAkkumulator] -= 4.0;
			}
			else
				SendClientMessage(playerid, COLOR_LIGHTRED, "Nincs kulcsod ehhez a jármûhöz! El kell lopnod. (( /ellop ))");
		}
		else
		{
			engineOn[vid] = 0;
			Gyujtas[vid] = false;
			//TogglePlayerControllable(playerid, false);
			SetJarmu(vid, KOCSI_MOTOR, false);
			SendClientMessage(playerid, COLOR_GREEN, "Jármû leállítva!");
			ProxDetector(30.0, playerid, "* Valaki leállította a jármûvét.", COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			
			if(RoncsDerby[playerid][rdVersenyez])
				Msg(playerid,"Mivel leállítottad a motort, feladtad a versenyt!");
				
			RoncsDerbiKieses(playerid);
		}
		return 1;
	}
	if(!strcmp(cmd, "/ellop", true))
	{
		if(Szint(playerid) < IllegalisMunkak[3]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[3]);
		if(params >= 1)
		{
			if(!egyezik(param[1], "lista") || params < 2)
				return Msg(playerid, "/ellop lista [level]");
		
			new level = strval(param[2]);
			
			if(level < 0 || level > 15) return Msg(playerid,"1-15");
			
			SendFormatMessage(playerid,COLOR_YELLOW,"====== ELLOPHATÓ KOCSI MODELLEK %d LEVEL ======",level);
			new szamlalo;
			new sor;
			format(string,sizeof(string),"[%d]",sor);
			
			for(new model=0;model < MAX_JARMUARA; model++)
			{
				
				new kocsiara = JarmuAra[model][jAra];
					
				//SendFormatMessage(playerid,COLOR_YELLOW,"%d < %d && %d > %d && %d > 100000",kocsiara,level*KOCSI_LOPAS_SZORZO,kocsiara,(level-1)*KOCSI_LOPAS_SZORZO,kocsiara);
				if(kocsiara < level*KOCSI_LOPAS_SZORZO && kocsiara >= (level-1)*KOCSI_LOPAS_SZORZO && kocsiara > 100000 && !IsARepulo(model+400,false))
				{
					format(string,sizeof(string),"%s %s(%d)",string,GetVehicleModelName(model+400),model+400);
					szamlalo++;
					
				}
				if(szamlalo == 7)
				{
					SendFormatMessage(playerid,COLOR_YELLOW,"%s",string);
					sor++;
					format(string,sizeof(string),"[%d]",sor);
					szamlalo=0;
				}	
			}
			if(szamlalo < 7 && szamlalo > 0)
				SendFormatMessage(playerid,COLOR_YELLOW,"%s",string);
				
			SendFormatMessage(playerid,COLOR_YELLOW," %s Ft => %s Ft",FormatInt((level-1)*KOCSI_LOPAS_SZORZO),FormatInt(level*KOCSI_LOPAS_SZORZO-1));
			return 1;
		}
		if(IsACop(playerid))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "Rendõrként?");
					
	    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Mégis mit akarsz ellopni bazze?");
		if(MunkaFolyamatban[playerid] == 1) return Msg(playerid,"A-a");
		new tmpcar = GetPlayerVehicleID(playerid);
		if(CarPart[tmpcar][cMotorolaj] >= 100.0) return Msg(playerid,"Az olaj nagyon elhasználódott, az elektronika letiltotta a kocsi mûködését, hívj szerelõt");	
		if(IsABicikli(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_RED, "Biciklin motor? Ez modern bicikli lehet... :)");
		if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return 1;
		new vs=IsAVsKocsi(tmpcar);
		if(vs != NINCS)
		{
			if(CarInfo[vs][cRiaszto] == 4 && CarInfo[vs][cCodeRiaszto][0] < UnixTime) return Msg(playerid,"Az indításgátló aktiválódott, így nem tudod elvinni! (Ha tiéd a jármû /v zár)");
		}	
		
		if(IsMunkaKocsi(tmpcar) != NINCS) return Msg(playerid, "Ezt nem kéne!");
		if(IsFrakcioKocsi(tmpcar) != NINCS)
		{
			
			format(string,128,"[Frakció jármû ellopása]Név: %s Kocsi: %d",PlayerName(playerid),tmpcar);
			
			Msg(playerid,"Ehhez van kulcsod!");	
			EgyebLog(string);
			return 1;
		}
		if(SajatKocsi(playerid,tmpcar))
		{
			format(string,128,"[Saját jármû ellopása]Név: %s Kocsi: %d",PlayerName(playerid),tmpcar);
			Msg(playerid,"Ehhez van kulcsod!");	
				
			EgyebLog(string);
			return 1;
		}
		
		new car = IsAVsKocsi(GetPlayerVehicleID(playerid));
		if(car != -1)
		{
		    if(CarInfo[car][cOwned] == 0)
				return 1;
		}

		new kocsi = GetPlayerVehicleID(playerid);

		if(engineOn[kocsi] == 0)
		{
			if(KocsiElet(kocsi) <= 350) return Msg(playerid, "A jármû elromlott! Hívj szerelõt!");
			if(Gas[kocsi] <= 0) return Msg(playerid, "Nincs üzemanyag!");

			if(KocsiSokkolva[kocsi])
				return Msg(playerid, "A jármû sokkolva van");
			if(CarPart[kocsi][cAkkumulator] < 5)//akku
				return Msg(playerid, "Lemerült az akkumulátor!");

			if(IsACop(playerid)) return Msg(playerid, "Rendõrként?!");
	        if(MunkaFolyamatban[playerid] == 1) return 1;

			if(JarmuLopas[kocsi][playerid] > UnixTime)
			{
				new kocsiserules, ido, Float:kocsielet;
				GetVehicleHealth(kocsi, kocsielet);
				kocsiserules = 1000 - floatround(kocsielet);
				ido = 1000 + (kocsiserules * 5);
				SendClientMessage(playerid, COLOR_GREEN, "Beindítod a jármûvet...");
				KocsiHasznal[kocsi]=PlayerName(playerid);
				SetTimerEx("Munkavege", ido, false, "ddd", playerid, M_MOTOR, 0);
				MunkaFolyamatban[playerid] = 1;
				return 1;
			}
				
			Freeze(playerid, 6000);
			Autotolvaj(playerid, 2);
			
			new level = SkillLevel(PlayerInfo[playerid][pJackSkill]);
			new ido;
			
			if(level == 1) ido=17000;
			if(level == 2) ido=13000;
			if(level == 3) ido=12000;
			if(level == 4) ido=10000;
			if(level == 5) ido=9000;
			if(level == 6) ido=8000;
			if(level == 7) ido=7500;
			if(level == 8) ido=7000;
			if(level == 9) ido=6500;
			if(level == 10) ido=6000;
			if(level == 11) ido=5500;
			if(level == 12) ido=5400;
			if(level == 13) ido=5300;
			if(level == 14) ido=5200;
			if(level >= 15) ido=5150;
			SetTimerEx("Autotolvaj", ido-2000, false, "dd", playerid, 3);
			SetTimerEx("Autotolvaj", ido, false, "dd", playerid, 4);
			MunkaFolyamatban[playerid] = 1;
			if(CarPart[kocsi][cMotorolaj] >= 70.0)
				Msg(playerid,"Lassan olajat kell cserélni, keress fel egy szerelõt!");
			if(CarPart[kocsi][cFek] >= 100.0)
				Msg(playerid, "A fékbetét elhasználódott, így nehezebb lesz fékezni!");
			if(CarPart[kocsi][cElektronika] >= 100.0)
				Msg(playerid, "Az elektronika tönkrement, így nem tudsz semmilyen elektronikus eszközt használni!");
			CarPart[kocsi][cAkkumulator] -= 4.0;
			return 1;
		}
	}

	if(!strcmp(cmd, "/kiszáll", true) || egyezik(cmd, "/kiszall"))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "Mibõl akarsz kiszállni?");
		new kocsi;
		kocsi = GetPlayerVehicleID(playerid);
		if(GetPlayerState(playerid) != 2) return Msg(playerid, "Csak sofõr!");
		if(ov[playerid] == 1) return Msg(playerid, "Bevagy csatolva, így elég nehéz lenne kiszállni.");
		if(gCarLock[kocsi] == 1) return Msg(playerid, "Ajtók zárva, így elég nehéz lenne kiszállni.");

		TogglePlayerControllable(playerid, true);
		if(Sokkol[playerid])
		{
			Sokkol[playerid] = false;
			if(IsValidDynamicObject(SokkObject[kocsi])) DestroyDynamicObject(SokkObject[kocsi]);
			SokkObject[kocsi] = INVALID_OBJECT_ID;
		}
		RemovePlayerFromVehicle(playerid);
		if(IsKocsi(vehicleid, "uttisztito") || IsKocsi(vehicleid, "Kamion") || IsKocsi(vehicleid, "Farmer")  || IsKocsi(vehicleid, "Funyiro") /*|| IsKocsi(vehicleid,"Kukas")*/ || IsKocsi(vehicleid, "Szerelo") || IsKocsi(vehicleid, "Favago") || IsKocsi(vehicleid, "Hulla") || IsKocsi(kocsi, "Prod") || IsKocsi(vehicleid, "Taxi"))
		{
			engineOn[kocsi] = 0;
			Gyujtas[kocsi] = false;
			SetJarmu(kocsi, KOCSI_MOTOR, 0);
			new Float:kocsiPos[3], Float:legkozelebb = 100000.0, Float:tav;
			GetVehiclePos(kocsi, kocsiPos[0], kocsiPos[1], kocsiPos[2]);
			new penz;
			new kozel;
			for(new b = 0; b < MAX_BENZINKUT; b++)
			{
				if(BenzinKutak[b][bMelyikvan] == 0)
				{
					tav = GetDistanceBetweenPoints(kocsiPos[0], kocsiPos[1], kocsiPos[2], BenzinKutak[b][bPosX], BenzinKutak[b][bPosY], BenzinKutak[b][bPosZ]);
					if(tav < legkozelebb)
					{
						legkozelebb = tav;
						kozel = b;
					}
				}
			}
			if(legkozelebb != 100000.0)
			{
				if(BenzinKutak[kozel][bTav] != 0)
				{
					if(IsABenzines(kocsi))
					{
						penz = PlayerInfo[playerid][pElhasznaltUzemanyag][0]*BenzinKutak[kozel][bBenzinAra];
						PlayerInfo[playerid][pPayCheck] -= penz;
						if(PlayerInfo[playerid][pElhasznaltUzemanyag][0] > 0)	
							SendFormatMessage(playerid,COLOR_LIGHTRED,"Elhasználtál %d liter benzint, az árát(legközelebbi kút ára) %d FT-ot levontuk a fizetésedbõl.",PlayerInfo[playerid][pElhasznaltUzemanyag][0], penz);
					}
					if(IsADieseles(kocsi))
					{
						penz = PlayerInfo[playerid][pElhasznaltUzemanyag][0]*BenzinKutak[kozel][bDieselAra];
						PlayerInfo[playerid][pPayCheck] -= penz;	
						if(PlayerInfo[playerid][pElhasznaltUzemanyag][0] > 0)
							SendFormatMessage(playerid,COLOR_LIGHTRED,"Elhasználtál %d liter dieselt, az árát(legközelebbi kút ára) %d FT-ot levontuk a fizetésedbõl.",PlayerInfo[playerid][pElhasznaltUzemanyag][0], penz);
					}
				}
			}
			else
			{
				penz = PlayerInfo[playerid][pElhasznaltUzemanyag][0]*300;
				PlayerInfo[playerid][pPayCheck] -= penz;
				if(PlayerInfo[playerid][pElhasznaltUzemanyag][0] > 0)	
					SendFormatMessage(playerid,COLOR_LIGHTRED,"Elhasználtál %d liter üzemanyagot, az árát %d FT-ot levontuk a fizetésedbõl.",PlayerInfo[playerid][pElhasznaltUzemanyag][0], penz);
			}
			FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] += penz;	
			
			PlayerInfo[playerid][pElhasznaltUzemanyag][0] = 0;
		}	
		Animbanemrakhato[playerid] = 0;
		ProxDetector(30.0, playerid, "* Valaki kiszáll a jármûvébõl.", COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return true;
	}

//---------------------PD Backup Sytems-----------------------------------
	if (strcmp(cmd, "/swaterõsítés", true)==0 || strcmp(cmd, "/sbk", true)==0)
	{
		if(PlayerInfo[playerid][pSwattag] == 1)
		{
		    new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /sbk [Amiért erõsítést kérsz]");

			format(string, sizeof(string), "* Valaki erõsítést kért");
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	   		format(string, sizeof(string), "**[SWAT] %s erõsítést kért. Információ: %s", ICPlayerName(playerid), result);
			SendMessage(SEND_MESSAGE_RADIO_SWAT, string, COLOR_DBLUE);
	  		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Hívtál erõsítést, tarts ki.");
	  		foreach(Jatekosok, p)
			{
				if(PlayerInfo[p][pSwattag] == 1 && OnDuty[p] == 1)
					SetPlayerMarkerForPlayer(p, playerid, COLOR_GREEN);
			}
			return 1;
		}
	}
	if (strcmp(cmd, "/brascoerõsítés", true)==0 || strcmp(cmd, "/bbk", true)==0)
	{
		if(PlayerInfo[playerid][pBrascoTag] == 1)
		{
		    new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /bbk [Amiért erõsítést kérsz]");

			format(string, sizeof(string), "* Valaki segítséget kért");
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	   		format(string, sizeof(string), "**[BRASCO] %s segítséget kért. Információ: %s", ICPlayerName(playerid), result);
			SendMessage(SEND_MESSAGE_RADIO_BRASCO, string, COLOR_DBLUE);
	  		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Hívtál erõsítést, tarts ki.");
	  		foreach(Jatekosok, p)
			{
				if(PlayerInfo[p][pBrascoTag] == 1)
					SetPlayerMarkerForPlayer(p, playerid, COLOR_RED);
			}
			return 1;
		}
	}

	if(egyezik(cmd, "/erõsítés") || egyezik(cmd, "/bk") || egyezik(cmd, "/erosites")) // sscanf by Ryan
	{
		if(!IsACop(playerid) && !LMT(playerid, FRAKCIO_MENTO) && !LMT(playerid, FRAKCIO_TUZOLTO) && !LMT(playerid, FRAKCIO_ONKORMANYZAT)) return Msg(playerid, "Nem használhatod ezt a parancsot!");
		if(OnDuty[playerid]==0) return Msg(playerid, "Nem vagy szolgálatban!");
		if(Erosites[playerid] == true) return Msg(playerid, "Már hívtál erõsítést!");
		if(NemMozoghat(playerid)) return Msg(playerid, "A-a!");
		new result[70];
		sscanf(pms, "s[70]", result);
			//return SendClientMessage(playerid, COLOR_WHITE, "Használat: /bk [Üzeneted]");
			
		Cselekves(playerid, "erõsítést kért.");
		SendRadioMessageFormat(FRAKCIO_SCPD, COLOR_DBLUE, "** %s erõsítést kért! Zöld színnel jelöljük a gps-en! Információ: %s", ICPlayerName(playerid), result);
		SendRadioMessageFormat(FRAKCIO_FBI, COLOR_DBLUE, "** %s erõsítést kért! Zöld színnel jelöljük a gps-en! Információ: %s", ICPlayerName(playerid), result);
		SendRadioMessageFormat(FRAKCIO_CIA, COLOR_DBLUE, "** %s erõsítést kért! Zöld színnel jelöljük a gps-en! Információ: %s", ICPlayerName(playerid), result);
		SendRadioMessageFormat(FRAKCIO_SFPD, COLOR_DBLUE, "** %s erõsítést kért! Zöld színnel jelöljük a gps-en! Információ: %s", ICPlayerName(playerid), result);
		SendRadioMessageFormat(FRAKCIO_NAV, COLOR_DBLUE, "** %s erõsítést kért! Zöld színnel jelöljük a gps-en! Információ: %s", ICPlayerName(playerid), result);
		SendRadioMessageFormat(FRAKCIO_KATONASAG, COLOR_DBLUE, "** %s erõsítést kért! Zöld színnel jelöljük a gps-en! Információ: %s", ICPlayerName(playerid), result);
		SendRadioMessageFormat(FRAKCIO_MENTO, COLOR_DBLUE, "** %s erõsítést kért! Zöld színnel jelöljük a gps-en! Információ: %s", ICPlayerName(playerid), result);
		SendRadioMessageFormat(FRAKCIO_TUZOLTO, COLOR_DBLUE, "** %s erõsítést kért! Zöld színnel jelöljük a gps-en! Információ: %s", ICPlayerName(playerid), result);
		SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "** %s erõsítést kért! Zöld színnel jelöljük a gps-en! Információ: %s", ICPlayerName(playerid), result);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Hívtál erõsítést, tarts ki.");
		Erosites[playerid] = true;
		foreach(Jatekosok, x)
		{
			if(LMT(x, FRAKCIO_SCPD) || LMT(x, FRAKCIO_FBI) || LMT(x, FRAKCIO_CIA) || LMT(x, FRAKCIO_SFPD) || LMT(x, FRAKCIO_NAV) || LMT(x, FRAKCIO_KATONASAG) || LMT(x, FRAKCIO_MENTO) || LMT(x, FRAKCIO_TUZOLTO))
			{
				if(OnDuty[x] == 1)
					SetPlayerMarkerForPlayer(x, playerid, COLOR_LIGHTGREEN);
			}
		}
		SetTimerEx("Erositeslemond", 300000, false, "d", playerid);
		return 1;
	}

	if(strcmp(cmd, "/erõsítéslemond", true)==0 || strcmp(cmd, "/cbk", true)==0)
	{
		if(OnDuty[playerid]==1)
		{
			if(!Erosites[playerid]) return 1;
			Cselekves(playerid, "lemondta az erõsítést.");
			SendRadioMessageFormat(FRAKCIO_SCPD, COLOR_DBLUE, "** %s lemondta az erõsítést.", ICPlayerName(playerid));
			SendRadioMessageFormat(FRAKCIO_FBI, COLOR_DBLUE, "** %s lemondta az erõsítést.", ICPlayerName(playerid));
			SendRadioMessageFormat(FRAKCIO_CIA, COLOR_DBLUE, "** %s lemondta az erõsítést.", ICPlayerName(playerid));
			SendRadioMessageFormat(FRAKCIO_SFPD, COLOR_DBLUE, "** %s lemondta az erõsítést.", ICPlayerName(playerid));
			SendRadioMessageFormat(FRAKCIO_NAV, COLOR_DBLUE, "** %s lemondta az erõsítést.", ICPlayerName(playerid));
			SendRadioMessageFormat(FRAKCIO_KATONASAG, COLOR_DBLUE, "** %s lemondta az erõsítést.", ICPlayerName(playerid));
			SendRadioMessageFormat(FRAKCIO_MENTO, COLOR_DBLUE, "** %s lemondta az erõsítést.", ICPlayerName(playerid));
			SendRadioMessageFormat(FRAKCIO_TUZOLTO, COLOR_DBLUE, "** %s lemondta az erõsítést.", ICPlayerName(playerid));
			SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_DBLUE, "** %s lemondta az erõsítést.", ICPlayerName(playerid));
			Erosites[playerid] = false;
			foreach(Jatekosok, x)
			{
				if(LMT(x, FRAKCIO_SCPD) || LMT(x, FRAKCIO_FBI) || LMT(x, FRAKCIO_CIA) || LMT(x, FRAKCIO_SFPD) || LMT(x, FRAKCIO_NAV) || LMT(x, FRAKCIO_KATONASAG) || LMT(x, FRAKCIO_MENTO) || LMT(x, FRAKCIO_TUZOLTO))
					SetPlayerMarkerForPlayer(x, playerid, COLOR_INVISIBLE);
			}
		}
		return 1;
	}

	if(egyezik(cmd, "/beépített") || egyezik(cmd, "/beepitett"))
	{
		new frakcio = PlayerInfo[playerid][pMember];
		if(!LMT(playerid, FRAKCIO_SCPD) && !LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA)) return Msg(playerid, "Nem vagy rendõr / FBI / CIA");
		if(!LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA) && !Munkarang(playerid, 4)) return Msg(playerid, "Minimum 4es rang szükséges.");
		if(OnDuty[playerid] == 0) return Msg(playerid, "Nem vagy szolgálatba.");
		if(!PlayerToPoint(FrakcioInfo[frakcio][fDPosR], playerid, FrakcioInfo[frakcio][fDPosX],FrakcioInfo[frakcio][fDPosY],FrakcioInfo[frakcio][fDPosZ],FrakcioInfo[frakcio][fDVW],FrakcioInfo[frakcio][fDINT]))
			return SendFormatMessage(playerid, COLOR_YELLOW,"Nem vagy duty helyen! [VW: %d, INT: %d]",FrakcioInfo[frakcio][fDVW],FrakcioInfo[frakcio][fDINT]),SetPlayerCheckpoint(playerid, FrakcioInfo[frakcio][fDPosX],FrakcioInfo[frakcio][fDPosY],FrakcioInfo[frakcio][fDPosZ],FrakcioInfo[frakcio][fDPosR]);
		format(string, sizeof(string), "Ird be melyik skint szeretnéd felvenni.\n", PlayerName(playerid));
		ShowPlayerDialog(playerid, DIALOG_BEP, DIALOG_STYLE_INPUT, "Beépített", string, "Tovább","Mégse");
		HolTart[playerid] = 1;
	}
//--------------------------Setskin---------------------------------------//
	if(egyezik(cmd, "/ideiglenesskin") || egyezik(cmd, "/idgskin"))
	{
		if(!Admin(playerid, 4)) return Msg(playerid, "Ezt a parancsot nem használhatod!");
		new jatekos, SkinID;
        if(sscanf(pms, "ud", jatekos, SkinID))
            return SendClientMessage(playerid, COLOR_WHITE, "Használata: /ideiglenesskin [Játékos] [SkinID]");

		if(PlayerInfo[jatekos][pAdmin] > PlayerInfo[playerid][pAdmin] && !IsRyan(playerid))
			return Msg(playerid, "Nagyobb Admin skinjét nem állíthatod át!");
		
		if(!IsValidSkin(SkinID))
		    return Msg(playerid,"Érvénytelen SkinID!");

		SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Átállítottad %s skinjét! Új skinje: %d", PlayerName(jatekos), SkinID);
		SetPlayerSkin(jatekos, SkinID);

		return 1;
	}
	if(strcmp(cmd, "/setskin", true) == 0)
	{
		if(!Admin(playerid, 5)) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a parancsot nem használhatod!");
		new jatekos, SkinID;
        if(sscanf(pms, "ud", jatekos, SkinID))
            return SendClientMessage(playerid, COLOR_WHITE, "Használata: /setskin [Játékos] [SkinID]");

		if(PlayerInfo[jatekos][pAdmin] > PlayerInfo[playerid][pAdmin] && !IsRyan(playerid))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nagyobb Admin skinjét nem állíthatod át!");
		
		if(!IsValidSkin(SkinID))
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Érvénytelen SkinID!");
		    
		if(jatekos != playerid)
			SendFormatMessage(jatekos,COLOR_LIGHTBLUE, "Admin %s átállította a Skined! SkinID: %d", AdminName(playerid), SkinID);

		SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Átállítottad %s skinjét! Új skinje: %d", PlayerName(jatekos), SkinID);
		SetPlayerSkin(jatekos, SkinID);
		PlayerInfo[jatekos][pModel] = SkinID;

		return 1;
	}
//------------------------------<[try Command]>---------------------------------------------------------
	if(strcmp(cmd, "/megpróbál", true) == 0 || strcmp(cmd, "/megprobal", true) == 0)
	{
		if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");
		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /megpróbál [Akció]");

		if(FloodMegprobal[playerid]>0)
		{
			SendFormatMessage(playerid, COLOR_YELLOW, "A-A ez túl sûrûn van. Legközelebb %d s múlva lehet!",FloodMegprobal[playerid]);
			return 1;
		}
		else
		{
			switch(random(2))
			{
				case 1:
				{
					FloodMegprobal[playerid]=45;
					if(PlayerInfo[playerid][pHamisNev] == 0)
						format(string, sizeof(string), "** %s megpróbál %s és sikerül neki", ICPlayerName(playerid), result);
					else
						format(string, sizeof(string), "** %s megpróbál %s és sikerül neki", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), result);
					ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					printf("%s\n", string);
				}
				default:
				{
					FloodMegprobal[playerid]=45;
					if(PlayerInfo[playerid][pHamisNev] == 0)
						format(string, sizeof(string), "** %s megpróbál %s, de sajnos nem sikerül neki", ICPlayerName(playerid), result);
					else
						format(string, sizeof(string), "** %s megpróbál %s, de sajnos nem sikerül neki", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), result);
					ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
			        printf("%s\n", string);
				}
			}
  		}
        return 1;
    }

	if(strcmp(cmd, "/megpróbálja", true) == 0 || strcmp(cmd, "/megprobalja", true) == 0)
	{
		if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");
		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /megpróbálja [Akció]");

		if(FloodMegprobal[playerid]>0)
		{
			SendFormatMessage(playerid, COLOR_YELLOW, "A-A ez túl sûrûn van. Legközelebb %d s múlva lehet!",FloodMegprobal[playerid]);
			return 1;
		}
		else
		{
			switch(random(2))
			{
				case 1:
				{
					FloodMegprobal[playerid]=45;
					if(PlayerInfo[playerid][pHamisNev] == 0)
						format(string, sizeof(string), "** %s megpróbálja %s és sikerül neki", ICPlayerName(playerid), result);
					else
						format(string, sizeof(string), "** %s megpróbálja %s és sikerül neki", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), result);
					ProxDetector(30.0, playerid, string, COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
					printf("%s\n", string);
				}
				default:
				{
					FloodMegprobal[playerid]=45;
					if(PlayerInfo[playerid][pHamisNev] == 0)
						format(string, sizeof(string), "** %s megpróbálja %s, de sajnos nem sikerül neki", ICPlayerName(playerid), result);
					else
						format(string, sizeof(string), "** %s megpróbálja %s, de sajnos nem sikerül neki", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), result);
					ProxDetector(30.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
			        printf("%s\n", string);
				}
			}
  		}
        return 1;
 	}
	//====[Gokart]===//

	if(egyezik(cmd, "/gokartozás") || egyezik(cmd, "/gokartozas"))
	{
		if(Gokartozik[playerid] == 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Már béreltél egy Gokartot!");
			return 1;
		}
		else
		{
			if(!IsPlayerInAnyVehicle(playerid))	return Msg(playerid, "Nem ülsz jármûben!");
			veh = GetPlayerVehicleID(playerid);
			if(!IsKocsi(veh, "Gokart")) return SendClientMessage(playerid, COLOR_GREY, "Ez nem Gokart!");
			if(MunkaFolyamatban[playerid] == 1) return 1;
			Gokartozik[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "Kibérelted!");
			SendClientMessage(playerid, COLOR_PIROS, "Ha már nem kivánod használni álj vissza oda ahonnan elhoztad és szálj ki!");
			new kocsiserules, ido, Float:kocsielet;
			GetVehicleHealth(veh, kocsielet);
			kocsiserules = 1000 - floatround(kocsielet);
			ido = 1000 + (kocsiserules * 5);
			SendClientMessage(playerid, COLOR_GREEN, "Motor indítása folyamatban...");
			SetTimerEx("Munkavege", ido, false, "ddd", playerid, M_MOTOR, 0);
			MunkaFolyamatban[playerid] = 1;
			return 1;
		}
	}
//--------------------------------[/kill]------------------------------------------------------------------------
    if(strcmp(cmd, "/kill", true)== 0)
	{
           SendClientMessage(playerid, COLOR_GRAD1, "A-A... Ilyet nem játszunk.. Magad nem fogod megölni.");
           return 1;
	}
//---------------------Admin duty etc------------------------------------

	if(strcmp(cmd, "/onduty", true) == 0)
	{
		if(!Admin(playerid, 1)) return 1;
		if(ScripterDuty[playerid]==1) return Msg(playerid, "A-A /sduty elõbb");
		Ehseg[playerid] = 0.0;
		if(AdminDuty[playerid] == 0)
		{
			new pmoff;
			if(params)
			{
				pmoff = strval(param[1]);
				if(pmoff < 0 || pmoff > 1)
					pmoff = 0;
			}
			SendClientMessageToAll(COLOR_WHITE, "====================================================================");
			AdminDuty[playerid] = 1;
			ReportDuty[playerid] = pmoff;
			gBooc[playerid] = 1;
			//HidePM[playerid] = pmoff;
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			new felirat[80];
			if(IsSuper(playerid))
			{
				if(pmoff)
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]%s %s szolgálatba lépett, így írhatsz neki (/report join 4 és /ü) | Megölni tilos!", playerid, AdminRangNev(playerid), AdminName(playerid));
					format(felirat, 128, "SCRIPTERADMIN SZOLGÁLAT\n%s\n/report join 4 és /ü", PlayerName(playerid), playerid);
				}
				else
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]%s %s szolgálatba lépett, így írhatsz neki (/pm %d) | Megölni tilos!", playerid, AdminRangNev(playerid), AdminName(playerid), playerid);
					format(felirat, 128, "SCRIPTERADMIN SZOLGÁLAT\n%s\n/pm %d\n", PlayerName(playerid), playerid);
				}

				AdminDuty3D[playerid] = CreateDynamic3DTextLabel(felirat, COLOR_SCRIPTERADMIN, 0.0, 0.0, 0.5, 40.0, playerid, INVALID_VEHICLE_ID);//COLOR_DBLUE
				SetPlayerColor(playerid, COLOR_SCRIPTERADMIN);//COLOR_LIMECOLOR_DBLUE
				return 1;
			}
			if(SAdmin(playerid, 1340) && PlayerInfo[playerid][pID] == 5637/*Dolph*/)
			{
				if(pmoff)
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]%s FõAdminszolgálatba szolgálatba lépett, így írhatsz neki (/report join 3 és /ü) | Megölni tilos!", playerid, AdminName(playerid));
					format(felirat, 128, "FÕADMINSZOLGÁLAT\n%s\n/report join 3 és /ü", PlayerName(playerid), playerid);
				}
				else
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]%s FõAdminszolgálatba szolgálatba lépett, így írhatsz neki (/pm %d) | Megölni tilos!", playerid, AdminName(playerid), playerid);
					format(felirat, 128, "FÕADMINSZOLGÁLAT\n%s\n/pm %d\n", PlayerName(playerid), playerid);
				}

				AdminDuty3D[playerid] = CreateDynamic3DTextLabel(felirat, COLOR_FOADMINKEK, 0.0, 0.0, 0.5, 40.0, playerid, INVALID_VEHICLE_ID);//COLOR_DBLUE
				SetPlayerColor(playerid, COLOR_FOADMINKEK);//COLOR_LIMECOLOR_DBLUE
				return 1;
			}
			if(SAdmin(playerid, 1340) && PlayerInfo[playerid][pID] == 4038/*Franklin*/)
			{
				if(pmoff)
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]%s FõAdminszolgálatba szolgálatba lépett, így írhatsz neki (/report join 3 és /ü) | Megölni tilos!", playerid, AdminName(playerid));
					format(felirat, 128, "FÕADMINSZOLGÁLAT\n%s\n/report join 3 és /ü", PlayerName(playerid), playerid);
				}
				else
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]%s FõAdminszolgálatba szolgálatba lépett, így írhatsz neki (/pm %d) | Megölni tilos!", playerid, AdminName(playerid), playerid);
					format(felirat, 128, "FÕADMINSZOLGÁLAT\n%s\n/pm %d\n", PlayerName(playerid), playerid);
				}

				AdminDuty3D[playerid] = CreateDynamic3DTextLabel(felirat, COLOR_FOADMINKEK, 0.0, 0.0, 0.5, 40.0, playerid, INVALID_VEHICLE_ID);//COLOR_DBLUE
				SetPlayerColor(playerid, COLOR_FOADMINKEK);//COLOR_LIMECOLOR_DBLUE
				return 1;
			}
			if(SAdmin(playerid, 1340) && PlayerInfo[playerid][pID] == 8181898/*Marcell*/)
			{
				if(pmoff)
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]Tulajdonos %s szolgálatba lépett, így írhatsz neki (/report join 3 és /ü) | Megölni tilos!", playerid, AdminName(playerid));
					format(felirat, 128, "FÕADMINSZOLGÁLAT\n%s\n/report join 3 és /ü", PlayerName(playerid), playerid);
				}
				else
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]Tulajdonos %s szolgálatba lépett, így írhatsz neki (/pm %d) | Megölni tilos!", playerid, AdminName(playerid), playerid);
					format(felirat, 128, "FÕADMINSZOLGÁLAT\n%s\n/pm %d\n", PlayerName(playerid), playerid);
				}

				AdminDuty3D[playerid] = CreateDynamic3DTextLabel(felirat, COLOR_FOADMINKEK, 0.0, 0.0, 0.5, 40.0, playerid, INVALID_VEHICLE_ID);//COLOR_DBLUE
				SetPlayerColor(playerid, COLOR_FOADMINKEK);//COLOR_LIMECOLOR_DBLUE
				return 1;
			}
			else if(SAdmin(playerid, 1350))
			{
				if(pmoff)
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]%s %s szolgálatba lépett, így írhatsz neki (/report join 2 és /ü) | Megölni tilos!", playerid, AdminRangNev(playerid), AdminName(playerid));
					format(felirat, 128, "FÕADMINSZOLGÁLAT\n%s\n/report join 2 és /ü", PlayerName(playerid), playerid);
				}
				else
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]%s %s szolgálatba lépett, így írhatsz neki (/pm %d) | Megölni tilos!", playerid, AdminRangNev(playerid), AdminName(playerid), playerid);
					format(felirat, 128, "FÕADMINSZOLGÁLAT\n%s\n/pm %d\n", PlayerName(playerid), playerid);
				}

				AdminDuty3D[playerid] = CreateDynamic3DTextLabel(felirat, COLOR_FOADMINKEK, 0.0, 0.0, 0.5, 40.0, playerid, INVALID_VEHICLE_ID);//COLOR_DBLUE
				SetPlayerColor(playerid, COLOR_FOADMINKEK);//COLOR_LIMECOLOR_DBLUE
			}
			else if(SAdmin(playerid, 1337))
			{
				if(pmoff)
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]%s FõAdminszolgálatba lépett, így írhatsz neki (/report join 2 és /ü) | Megölni tilos!", playerid, AdminName(playerid));
					format(felirat, 128, "FÕADMINSZOLGÁLAT\n%s\n/report join 2 és /ü", PlayerName(playerid), playerid);
				}
				else
				{
					SendFormatMessageToAll(COLOR_FOADMINKEK, "[%d]%s FõAdminszolgálatba lépett, így írhatsz neki (/pm %d) | Megölni tilos!", playerid, AdminName(playerid), playerid);
					format(felirat, 128, "FÕADMINSZOLGÁLAT\n%s\n/pm %d\n", PlayerName(playerid), playerid);
				}

				AdminDuty3D[playerid] = CreateDynamic3DTextLabel(felirat, COLOR_FOADMINKEK, 0.0, 0.0, 0.5, 40.0, playerid, INVALID_VEHICLE_ID);//COLOR_DBLUE
				SetPlayerColor(playerid, COLOR_FOADMINKEK);//COLOR_LIMECOLOR_DBLUE
			}
			else
			{
				if(pmoff)
				{
					SendFormatMessageToAll(COLOR_ADMINKEK, "[%d]%s AdminSzolgálatba lépett, így írhatsz neki (/report join 1 és /ü) | Megölni tilos!", playerid, AdminName(playerid), playerid);
					format(felirat, 128, "ADMINSZOLGÁLAT\n%s\n/report join 1 és /ü", PlayerName(playerid), playerid);
				}
				else
				{
					SendFormatMessageToAll(COLOR_ADMINKEK, "[%d]%s AdminSzolgálatba lépett, így írhatsz neki (/pm %d) | Megölni tilos!", playerid, AdminName(playerid), playerid);
					format(felirat, 128, "ADMINSZOLGÁLAT\n%s\n/pm %d", PlayerName(playerid), playerid);
				}

				AdminDuty3D[playerid] = CreateDynamic3DTextLabel(felirat, COLOR_ADMINKEK, 0.0, 0.0, 0.5, 40.0, playerid, INVALID_VEHICLE_ID);
				SetPlayerColor(playerid, COLOR_ADMINKEK);
			}
			for(new terulet = 0; terulet < MAXTERULET; terulet++)
			{
				if(TeruletInfo[terulet][tHarc])
				{
					if(TeruletInfo[terulet][tTulaj] == PlayerInfo[playerid][pMember])
					{
						Msg(playerid,"A frakciód éppen warozik, ha elfelejtetted inkább lépj ki!");
					}
				}	
			}
			// 5-ös adminok fegyver elrakása onduty
			if(PlayerInfo[playerid][pAdmin] <= 5 && WeaponArmed(playerid))
			{
				Msg(playerid, "Nincs szükséged fegyverre Adminszolgálatban, ezért elrakva.");
				WeaponArm(playerid);
			}
			//Attach3DTextLabelToPlayer(AdminDuty3D[playerid], playerid, 0.0, 0.0, 0.5);
		}
		else
		{
			SendClientMessageToAll(COLOR_WHITE, "====================================================================");
			SendFormatMessageToAll(COLOR_LIGHTRED, "%s már nincs szolgálatban, ne zavard õt | Ha kérdésed van írj nekünk a /report paranccsal", AdminName(playerid));
 			SetPlayerColor(playerid, COLOR_INVISIBLE);
			AdminDuty[playerid] = 0;
			gBooc[playerid] = 0;
			DestroyDynamic3DTextLabel(AdminDuty3D[playerid]);
			AdminDuty3D[playerid]=INVALID_3D_TEXT_ID;
			if(AdminDutySkin[playerid])
			{
				AdminDutySkin[playerid] = 0;
				if(PlayerInfo[playerid][pChar] > 0 && OnDuty[playerid] || PlayerInfo[playerid][pChar] > 0 && !LegalisSzervezetTagja(playerid) && !Civil(playerid))
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				else
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sduty", true) == 0)
	{
		if(!IsScripter(playerid))  return 1;
		if(AdminDuty[playerid] == 1) return Msg(playerid, "A-A /onduty elõbb");
		if(ScripterDuty[playerid] == 0)
		{
			if(params < 1)
			{
			if(!IsSuper(playerid)) return Msg(playerid, "/sduty [1-2] 1: PM-ek kikapcsolva, 2: PM-ek bekapcsolva");
			else
			{
			Msg(playerid, "/sduty [1-4] 1:PM kikapcsolva, 2: PM Bekapcsolva 3: Jelzés ki 1-es. 4: Jelzés ki 2-es."); //Egybe írtam úgy is tudjuk fejbõl by Amos
			//Msg(playerid, "/sduty [3-4] 3:kikapcsolja a pm-eket és nem írja chatbe, 4 bekapcsolja és nem írja chatbe,");
			return 1;
			}
			}
			new valaszt = strval(param[1]);
			new felirat[80];
			if(valaszt==1)
			{
				SendClientMessageToAll(COLOR_WHITE, "====================================================================");
				SendFormatMessageToAll(COLOR_SCRIPTERNARANCS, "[%d]%s %s szolgálatba lépett | Megölni tilos!", playerid, AdminRangNev(playerid), AdminName(playerid), playerid);
				SendClientMessageToAll(COLOR_SCRIPTERNARANCS, "Scripter ügyeket intéz kérlek NE ZAVARD MOST!!!");
				format(felirat, 128, "SCRIPTERSZOLGÁLAT\n%s\nNE ZAVARD MOST!", PlayerName(playerid));
				HidePM[playerid] = 1;
			}
			else if(valaszt==2)
			{
				SendClientMessageToAll(COLOR_WHITE, "====================================================================");
				SendFormatMessageToAll(COLOR_SCRIPTERNARANCS, "[%d]%s %s szolgálatba lépett, így írhatsz neki (/pm %d) | Megölni tilos!", playerid, AdminRangNev(playerid), AdminName(playerid), playerid);
				format(felirat, 128, "SCRIPTERSZOLGÁLAT\n%s\n/pm %d", PlayerName(playerid), playerid);
				SendClientMessageToAll(COLOR_SCRIPTERNARANCS, "Csak Scripter ügyekkel kapcsolatban írj neki!");
			}
			else if(valaszt==3 && IsSuper(playerid))
			{
				HidePM[playerid] = 1;
				Msg(playerid, "Szolgálatba léptél jelzés nélkül! A PM fogadása kikapcsolva.(/sduty 3)"); // Magunkan szerintem lehet egy ilyen jelzés by Amos
			}
			else if(valaszt==4 && IsSuper(playerid))
			{
				HidePM[playerid] = 0;
				Msg(playerid, "Szolgálatba léptél jelzés nélkül! A PM fogadása bekapcsolva.(/sduty 4)"); //
			}
			else
			{
				SendClientMessageToAll(COLOR_WHITE, "====================================================================");
				SendFormatMessageToAll(COLOR_SCRIPTERNARANCS, "[%d]%s %s szolgálatba lépett | Megölni tilos!", playerid, AdminRangNev(playerid), AdminName(playerid), playerid);
				SendClientMessageToAll(COLOR_SCRIPTERNARANCS, "Scripter ügyeket intéz kérlek NE ZAVARD MOST!!!");
				format(felirat, 128, "SCRIPTERSZOLGÁLAT\n%s\nNE ZAVARD MOST!", PlayerName(playerid));
				HidePM[playerid] = 1;
			}
 			SetPlayerColor(playerid, COLOR_SCRIPTERNARANCS);
			ScripterDuty[playerid] = 1;
			gBooc[playerid] = 1;
			//HidePM[playerid] = 1;
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);

			 

			AdminDuty3D[playerid] = CreateDynamic3DTextLabel(felirat, COLOR_SCRIPTERNARANCS, 0.0, 0.0, 0.5, 40.0, playerid, INVALID_VEHICLE_ID);
		}
		else
		{
			SendClientMessageToAll(COLOR_WHITE, "====================================================================");
			SendFormatMessageToAll(COLOR_LIGHTRED, "%s kilépett a Scripter szolgálatból!", AdminName(playerid));
 			SetPlayerColor(playerid, COLOR_INVISIBLE);
			ScripterDuty[playerid] = 0;
			gBooc[playerid] = 0;
			HidePM[playerid] = 0;

			DestroyDynamic3DTextLabel(AdminDuty3D[playerid]);
			AdminDuty3D[playerid]=INVALID_3D_TEXT_ID;
		}

		return 1;
	}
//-------------------Felszerelések--------------------------------------//
    if(egyezik(cmd, "/tru"))
	{
		if(params < 1) return Msg(playerid, "/tru [Felvesz / Kirúg / Felszerelés / Tagok / Engedélyez]");
		if(!LMT(playerid, FRAKCIO_NAV)) return Msg(playerid, "Nem vagy Sheriff Department tag!");
		new player;
		
        if(egyezik(param[1], "gov") || egyezik(param[1], "goverment"))
		{
			if(PlayerInfo[playerid][pVK] == 0) return Msg(playerid, "Te nem vagy a TRU tagja!");
			new uzike[128];
			if(sscanf(pms, "{s[32]}s[128]", uzike))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /tru gov [Bejelentés szövege]");
				
            if(SzovegEllenorzes(playerid, uzike, "/tru gov", ELLENORZES_MINDKETTO))
				return true;
				
			SendClientMessageToAll(COLOR_WHITE, "|___________ Sheriff Department - TRU felhívás ___________|");
			SendFormatMessageToAll(COLOR_DBLUE,"%s: %s", ICPlayerName(playerid), uzike);
		
		}
		if(egyezik(param[1],"engedélyez") || egyezik(param[1],"engedelyez"))
		{
			if(PlayerInfo[playerid][pLeader] != 20 && !Admin(playerid, 1337)) return Msg(playerid, "Csak Sheriff Department Leader!");
			if(VamkommandoEngedely == false)
			{
				foreach(Jatekosok, x)
				{
					if(PlayerInfo[x][pVK] > 0)
						SendFormatMessage(x, COLOR_LIGHTBLUE, "** %s engedélyezte a felszerelés használatát! **", ICPlayerName(playerid));
				}	
				VamkommandoEngedely = true;
				return 1;
			}
			else
			{
				foreach(Jatekosok, x)
				{
					if(PlayerInfo[x][pVK] > 0)
						SendFormatMessage(x, COLOR_LIGHTBLUE, "** %s letiltotta a felszerelés használatát! **", ICPlayerName(playerid));
				}
				VamkommandoEngedely = false;
				return 1;
			}
		}
		if(egyezik(param[1], "felvesz") || egyezik(param[1], "invite"))
		{
			if(params < 2) return Msg(playerid, "/tru felvesz [Játékos]");
			if(PlayerInfo[playerid][pLeader] != 20 && !Admin(playerid, 1337)) return Msg(playerid, "Csak Sheriff Department Leader vehet fel!");
			player = ReturnUser(param[2]);
			if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
			if(PlayerInfo[player][pVK]>0) return Msg(playerid,"Õ jelenleg is tagja a T.R.U.-nak!");
			PlayerInfo[player][pVK]=1;
			SendFormatMessage(player, COLOR_YELLOW, "%s felvett téged a T.R.U. osztagba!", ICPlayerName(playerid));
			SendFormatMessage(playerid, COLOR_YELLOW, "Felvetted õt: %s a T.R.U. osztagba!", ICPlayerName(player));
		}
		if(egyezik(param[1], "kirúg") || egyezik(param[1], "uninvite") || egyezik(param[1], "kirug"))
		{
			if(params < 2) return Msg(playerid, "/tru kirúg [Játékos]");
			if(PlayerInfo[playerid][pLeader] != 20 && !Admin(playerid, 1337)) return Msg(playerid, "Csak Sheriff Department Leader vehet fel!");
			player = ReturnUser(param[2]);
			if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
			if(PlayerInfo[player][pVK] < 1) return Msg(playerid,"Õ nem tagja a T.R.U.-nak!");
			PlayerInfo[player][pVK]=0;
			SendFormatMessage(player, COLOR_YELLOW, "%s kirúgott téged a T.R.U. osztagból!", ICPlayerName(playerid));
			SendFormatMessage(playerid, COLOR_YELLOW, "Kirúgtad õt: %s a T.R.U. osztagból!", ICPlayerName(player));
		}
		if(egyezik(param[1], "felszerelés") || egyezik(param[1], "duty") || egyezik(param[1], "felszereles"))
		{
		    if(PlayerInfo[playerid][pVK] == 0) return Msg(playerid, "Te nem vagy a T.R.U. osztag tagja!");
			if(VamkommandoEngedely == false) return Msg(playerid, "Jelenleg le van tiltva a T.R.U. felszerelés használata!");
			if(PlayerToPoint(8, playerid, 254.738, 76.012, 1003.640) || PlayerToPoint(8, playerid,2062.30004883,-2590.39990234,13.39999962) || PlayerToPoint(8, playerid,764.395,-1357.598,13.539) || PlayerToPoint(8, playerid,768.64, -1367.00, 13.63))
			{
				SetHealth(playerid, 150);
				SetPlayerArmour(playerid, 100);
				SetPlayerSkin(playerid, 262);
				
				if(FrakcioInfo[FRAKCIO_NAV][fDeagle] > 0)
					WeaponGiveWeapon(playerid, WEAPON_DEAGLE, 100), FrakcioInfo[FRAKCIO_NAV][fDeagle]--, FrakcioInfo[FRAKCIO_NAV][fDeagle][1]-=100;
					
				if(FrakcioInfo[FRAKCIO_NAV][fCombat] > 0)
					WeaponGiveWeapon(playerid, WEAPON_COMBAT, 200), FrakcioInfo[FRAKCIO_NAV][fCombat]--, FrakcioInfo[FRAKCIO_NAV][fCombat][1]-=200;
					
				if(FrakcioInfo[FRAKCIO_NAV][fM4] > 0)
					WeaponGiveWeapon(playerid, WEAPON_M4, 250), FrakcioInfo[FRAKCIO_NAV][fM4]--, FrakcioInfo[FRAKCIO_NAV][fM4][1]-=250;
				
				if(FrakcioInfo[FRAKCIO_NAV][fSniper] > 0)
					WeaponGiveWeapon(playerid, WEAPON_SNIPER, 70), FrakcioInfo[FRAKCIO_NAV][fSniper]--, FrakcioInfo[FRAKCIO_NAV][fSniper][1]-=70;
					
				WeaponGiveWeapon(playerid, WEAPON_PARACHUTE);
				
				format(string, sizeof(string), "* Valaki felvette a T.R.U. felszerelését.");
				if(!Csendvan) ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			} else
			    return Msg(playerid, "Itt nem tudod felvenni a felszerelést!");
		}
		if(egyezik(param[1], "tagok"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "========== T.R.U. Osztag =========");
			foreach(Jatekosok, x)
			{
				if(PlayerInfo[x][pVK] > 0)
					SendFormatMessage(playerid, COLOR_GREY, "[%d]%s", x, ICPlayerName(x));
			}
			SendClientMessage(playerid, COLOR_WHITE, "========== T.R.U. Osztag =========");
		}
		return true;
	}

	if(strcmp(cmd, "/határõr", true) == 0 || strcmp(cmd, "/hataror", true) == 0)
	{
		if(LMT(playerid, FRAKCIO_NAV))
		{
			if(PlayerToPoint(100,playerid,732.44, -1356.03, 18.81))
			{
				
				SetPlayerArmour(playerid, 100);
				SetPlayerSkin(playerid, 71);
				
				WeaponGiveWeapon(playerid, WEAPON_NITESTICK);
				new fegyo, ammo;
				GetPlayerWeaponData(playerid, 2, fegyo, ammo);
				if(fegyo != 24)
				{
					if(FrakcioInfo[FRAKCIO_NAV][fDeagle] < 1) Msg(playerid, "Nincs deagle raktáron!");
					else
					{
						
						WeaponGiveWeapon(playerid, WEAPON_DEAGLE, 100);
						FrakcioInfo[FRAKCIO_NAV][fDeagle]--;
					}
				}
				
				WeaponGiveWeapon(playerid, WEAPON_SPRAYCAN, 900);
				format(string, sizeof(string), "* Valaki felvette a határõröknek járó felszerelést.");
				if(!Csendvan) ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			return 1;
		}
		return 1;
	}


	if(strcmp(cmd, "/felszerelések", true) == 0 || strcmp(cmd, "/felszerelesek", true) == 0)
    {
		if(!LMT(playerid, FRAKCIO_SCPD) && !LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_MENTO) && !LMT(playerid, FRAKCIO_CIA) && !LMT(playerid, FRAKCIO_SFPD) && !LMT(playerid, FRAKCIO_NAV) && !LMT(playerid, FRAKCIO_TUZOLTO) && !LMT(playerid, FRAKCIO_KATONASAG) && !PlayerInfo[playerid][pSwattag])
			return SendClientMessage(playerid, COLOR_WHITE, "Nem vagy Rendõr / FBI / CIA / Sheriff Department / Katona / Mentõ / Tûzoltó / SWAT tag!");

		new frakcio = PlayerInfo[playerid][pMember];
		if(PlayerToPoint(FrakcioInfo[frakcio][fDPosR], playerid, FrakcioInfo[frakcio][fDPosX],FrakcioInfo[frakcio][fDPosY],FrakcioInfo[frakcio][fDPosZ],FrakcioInfo[frakcio][fDVW],FrakcioInfo[frakcio][fDINT]) ||
		PlayerToPoint(3, playerid, -1615.9227,684.7864,7.1875) || PlayerToPoint(5, playerid, 1564.318359375, 1207.8200683594, 9.8125)) //SWAT HQ
		/*if(PlayerToPoint(3, playerid,255.3,77.4,1003.6) || //LSPD
		PlayerToPoint(15, playerid, 2117.2380,-2524.6868,13.5659) || //LSPD új inti, régit bennhagyom hátha kellene még nekik
		PlayerToPoint(100,playerid, 288.6565,172.2111,1007.1794) || //FBI HQ
		PlayerToPoint(20,playerid,1600.4218,-1825.1154,13.4536) ||
		PlayerToPoint(5, playerid, 1344.59997559,520.29998779,1068.30004883) ||  //SFPD
		PlayerToPoint(5, playerid, 2505.2888,-2640.2583,13.8623) || //katona hq egyik duty hely
		PlayerToPoint(5, playerid, 764.395,-1357.598,13.539) || //LS nav hq kint
		PlayerToPoint(5, playerid, 2062.30004883,-2590.39990234,13.39999962) || // LS nav hq inti
		PlayerToPoint(5, playerid, 225.952, 123.001, 999.059) || // LS nav hq inti
		PlayerToPoint(5, playerid, 2744.5085,-2453.8015,13.8623) || //katona hq második duty hely
		(PlayerToPoint(10, playerid, 1964.044, -2411.701, 13.559) && GetPlayerVirtualWorld(playerid) == 137) || // Tûzoltó HQ
		(PlayerToPoint(20, playerid,1944.6885,-2458.5464,13.5703) && GetPlayerVirtualWorld(playerid) == 104) || //Kórház Interior
		PlayerToPoint(20, playerid, 1776.2656,-1301.5513,13.5828) || // FBI HQ lent
		PlayerToPoint(5, playerid, 280.8905,1855.4027,8.7759)) // katona HQ*/
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Használat: /felszerelések [szám]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "|___________ Rendõr felszerelések ___________|");
				SendClientMessage(playerid, COLOR_GRAD1, "| 1: Motoros felszerelés");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "|___________ Csak SWAT-nak ___________|");
				SendClientMessage(playerid, COLOR_GRAD2, "| 2: SWAT felszerelés 3: SWAT felszerelés(Taktikus) 4: SWAT felszerelés(Támadó) 5: SWAT felszerelés lerakás");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "|___________ Beépített ___________|");
				SendClientMessage(playerid, COLOR_GRAD2, "| 6: Detektív felszerelés");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "|___________ Tûzoltó felszerelés ___________|");
				SendClientMessage(playerid, COLOR_GRAD2, "| 7: Munkaruha");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "|___________ Mentõ felszerelés ___________|");
				SendClientMessage(playerid, COLOR_GRAD2, "| 8: Mûtõruha");
				return 1;
			}
			new item = strval(tmp);
			if (item == 1)
			{
				if(OnDuty[playerid] != 1)
					return Msg(playerid, "Nem vagy szolgálatban");
					
                if(!LMT(playerid, FRAKCIO_SCPD) && !LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA) && !LMT(playerid, FRAKCIO_SFPD) && !LMT(playerid, FRAKCIO_NAV) && !LMT(playerid, FRAKCIO_KATONASAG))
					return SendClientMessage(playerid, COLOR_WHITE, "Nem vagy Rendõr / FBI / Sheriff Department / CIA / Katona tag!");
				
				if(!Munkarang(playerid, 1)) return Msg(playerid, "Csak rang 1-tõl lehet!");
				
				SetPlayerArmour(playerid, 100);
			
				
				SetPlayerSkin(playerid, 284);
				format(string, sizeof(string), "* Valaki felvette a motoros felszerelést.");
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if (item == 2)
			{
				if(PlayerInfo[playerid][pSwattag] == 1)
				{
					OnDuty[playerid] = 1;
					Swatduty[playerid] =1;
					
					WeaponResetAll(playerid);
					SetPlayerArmour(playerid, 150);
					SetPlayerSkin(playerid, 285);
				
					
					if(FrakcioInfo[frakcio][fDeagle][1] > 50 && FrakcioInfo[frakcio][fDeagle][0] > 0)
					{
						WeaponGiveWeapon(playerid, WEAPON_DEAGLE, 50);
						FrakcioInfo[frakcio][fDeagle][0]--;
						FrakcioInfo[frakcio][fDeagle][1] -=50;
					}
					else Msg(playerid, "Nincs elég deagle raktáron!");
						
					if(FrakcioInfo[frakcio][fMp5][1] > 150 && FrakcioInfo[frakcio][fMp5][0] > 0)	
					{
						WeaponGiveWeapon(playerid, WEAPON_MP5, 150);
						FrakcioInfo[frakcio][fMp5][0]--;
						FrakcioInfo[frakcio][fMp5][1] -=150;
					}
					else Msg(playerid, "Nincs elég mp5 raktáron!");
					if(FrakcioInfo[frakcio][fM4][1] > 250 && FrakcioInfo[frakcio][fM4][0] > 0)
					{
						WeaponGiveWeapon(playerid, WEAPON_M4, 250);
						FrakcioInfo[frakcio][fM4][0]--;
						FrakcioInfo[frakcio][fM4][1] -=250;
					}
					else Msg(playerid, "Nincs elég m4 raktáron!");
					
					WeaponGiveWeapon(playerid, WEAPON_SPRAYCAN, 400);
					WeaponGiveWeapon(playerid, WEAPON_PARACHUTE);
					
					
					format(string, sizeof(string), "* Valaki felvette az alap SWAT felszerelést és szolgálatba állt");
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Csak SWAT Egység tagjainak!");
				}
			}
			else if (item == 3)
			{
				if(PlayerInfo[playerid][pSwattag] == 1)
				{
					if(taktikus == 1)
					{
						OnDuty[playerid] = 1;
						Swatduty[playerid] =1;
						
						WeaponResetAll(playerid);
						SetPlayerArmour(playerid, 150);
						SetPlayerSkin(playerid, 285);
					
						
						WeaponGiveWeapon(playerid, WEAPON_KNIFE);
							
						if(FrakcioInfo[frakcio][fDeagle][1] > 50 && FrakcioInfo[frakcio][fDeagle][0] > 0)
							WeaponGiveWeapon(playerid, WEAPON_DEAGLE, 50),FrakcioInfo[frakcio][fDeagle][0]--,FrakcioInfo[frakcio][fDeagle][1] -=50;
						if(FrakcioInfo[frakcio][fM4][1] > 250 && FrakcioInfo[frakcio][fM4][0] > 0)
							WeaponGiveWeapon(playerid, WEAPON_M4, 250),FrakcioInfo[frakcio][fM4][0]--,FrakcioInfo[frakcio][fM4][1] -=250;	
						if(FrakcioInfo[frakcio][fSniper][1] > 75 && FrakcioInfo[frakcio][fSniper][0] > 0)
							WeaponGiveWeapon(playerid, WEAPON_SNIPER, 75),FrakcioInfo[frakcio][fSniper][0]--,FrakcioInfo[frakcio][fSniper][1] -=75;
						
						
						format(string, sizeof(string), "* Valaki felvette a Taktikus SWAT felszerelést és szolgálatba állt");
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, "A-a! Nincs engedélyezve a Taktikus felszerelés!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Csak SWAT Egység tagjainak!");
					return 1;
				}
			}
			else if (item == 4)
			{
				if(PlayerInfo[playerid][pSwattag] == 1)
				{
					if(SwatTamado == 1)
					{
						OnDuty[playerid] = 1;
						Swatduty[playerid] =1;
						
						WeaponResetAll(playerid);
						SetPlayerArmour(playerid, 150);
						SetPlayerSkin(playerid, 285);

						WeaponGiveWeapon(playerid, WEAPON_KNIFE);
						WeaponGiveWeapon(playerid, WEAPON_PARACHUTE);
						
						if(FrakcioInfo[frakcio][fDeagle][1] > 50 && FrakcioInfo[frakcio][fDeagle][0] > 0)
							WeaponGiveWeapon(playerid, WEAPON_DEAGLE, 50),FrakcioInfo[frakcio][fDeagle][0]--,FrakcioInfo[frakcio][fDeagle][1] -=50;
						if(FrakcioInfo[frakcio][fMp5][1] > 150 && FrakcioInfo[frakcio][fMp5][0] > 0)	
							WeaponGiveWeapon(playerid, WEAPON_MP5, 150),FrakcioInfo[frakcio][fMp5][0]--,FrakcioInfo[frakcio][fMp5][1] -=150;
						if(FrakcioInfo[frakcio][fM4][1] > 250 && FrakcioInfo[frakcio][fM4][0] > 0)
							WeaponGiveWeapon(playerid, WEAPON_M4, 250),FrakcioInfo[frakcio][fM4][0]--,FrakcioInfo[frakcio][fM4][1] -=250;
						if(FrakcioInfo[frakcio][fCombat][1] > 75 && FrakcioInfo[frakcio][fCombat][0] > 0)
							WeaponGiveWeapon(playerid, WEAPON_COMBAT, 75),FrakcioInfo[frakcio][fCombat][0]--,FrakcioInfo[frakcio][fCombat][1] -=75;	
						if(FrakcioInfo[frakcio][fSniper][1] > 50 && FrakcioInfo[frakcio][fSniper][0] > 0)
							WeaponGiveWeapon(playerid, WEAPON_SNIPER, 50),FrakcioInfo[frakcio][fSniper][0]--,FrakcioInfo[frakcio][fSniper][1] -=50;

						format(string, sizeof(string), "* Valaki felvette a Támadó SWAT felszerelést és szolgálatba állt");
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, "A-a! Nincs engedélyezve a Támadó felszerelés!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Csak SWAT Egység tagjainak!");
				}
			}
			else if (item == 5)
			{
				if (Swatduty[playerid] !=1) return Msg(playerid, "Nem vagy swat szolgálatban");
				OnDuty[playerid] = 0;
				Swatduty[playerid] =0;
				Munkaruha(playerid, 0);

				
				// fegyverek
				new weapon;
				for(new w = 0; w < MAX_PLAYER_WEAPONS; w++)
				{
					if((weapon = PlayerWeapons[playerid][pWeapon][w]))
					{
						
						if(WeaponTakeWeapon(playerid, weapon))
						{
							if(weapon == WEAPON_DEAGLE)
								FrakcioInfo[frakcio][fDeagle][0] +=1;
							if(weapon == WEAPONSKILL_AK47)
								FrakcioInfo[frakcio][fAk47][0] +=1;
							if(weapon == WEAPON_SILENCED)
								FrakcioInfo[frakcio][fSilenced][0] +=1;
							if(weapon == WEAPON_MP5)	
								FrakcioInfo[frakcio][fMp5][0] +=1;
							if(weapon == WEAPON_M4)	
								FrakcioInfo[frakcio][fM4][0] +=1;
							if(weapon == WEAPON_SHOTGUN)
								FrakcioInfo[frakcio][fShotgun][0] +=1;
							if(weapon == WEAPON_SNIPER)
								FrakcioInfo[frakcio][fSniper][0] +=1;
							if(weapon == WEAPON_COMBAT)
								FrakcioInfo[frakcio][fCombat][0] +=1;
							if(weapon == WEAPON_RIFLE)
								FrakcioInfo[frakcio][fRifle][0] +=1;
						
						}
					}
				}
				new ammo;
				for(weapon = 1; weapon < MAX_WEAPONS; weapon++)
				{
					if(WeaponAmmo(playerid, weapon) > 0)
					{
						ammo=WeaponAmmo(playerid, weapon);
						if(WeaponTakeAmmo(playerid, weapon))
						{
							if(weapon == WEAPON_DEAGLE)
								FrakcioInfo[frakcio][fDeagle][1] +=ammo;
							if(weapon == WEAPONSKILL_AK47)
								FrakcioInfo[frakcio][fAk47][1] +=ammo;
							if(weapon == WEAPON_SILENCED)
								FrakcioInfo[frakcio][fSilenced][1] +=ammo;
							if(weapon == WEAPON_MP5)	
								FrakcioInfo[frakcio][fMp5][1] +=ammo;
							if(weapon == WEAPON_M4)	
								FrakcioInfo[frakcio][fM4][1] +=ammo;
							if(weapon == WEAPON_SHOTGUN)
								FrakcioInfo[frakcio][fShotgun][1] +=ammo;
							if(weapon == WEAPON_SNIPER)
								FrakcioInfo[frakcio][fSniper][1] +=ammo;
							if(weapon == WEAPON_COMBAT)
								FrakcioInfo[frakcio][fCombat][1] +=ammo;
							if(weapon == WEAPON_RIFLE)
								FrakcioInfo[frakcio][fRifle][1] +=ammo;
						}
					}
				}
				
				
				//WeaponResetAll(playerid);
				
				format(string, sizeof(string), "* Valaki levette a SWAT felszerelést és kilépet a szolgálatból!!");
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if (item == 6)
			{
				if(OnDuty[playerid] != 1)
					return Msg(playerid, "Nem vagy szolgálatban");

				
				WeaponResetAll(playerid);
				SetPlayerArmour(playerid, 100);
				SetPlayerSkin(playerid, 177);
				
				WeaponGiveWeapon(playerid, WEAPON_DEAGLE, 50);
				format(string, sizeof(string), "* Valaki felvette a detektív felszerelést.");
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if (item == 7)
			{
				if(!LMT(playerid, FRAKCIO_TUZOLTO))
					return SendClientMessage(playerid, COLOR_WHITE, "Nem vagy Tûzoltó!");
					
                Munkaruha(playerid, 1);
				format(string, sizeof(string), "* Valaki felvette a tûzoltó felszerelést.");
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if (item == 8)
			{
				if(!LMT(playerid, FRAKCIO_MENTO))
					return SendClientMessage(playerid, COLOR_WHITE, "Nem vagy Országos Mentõ Szolgálatos!");
				if(OnDuty[playerid] != 1)
					return Msg(playerid, "Nem vagy szolgálatban");

				if(PlayerInfo[playerid][pSex] == 1) return SetPlayerSkin(playerid, 144);
				else if(PlayerInfo[playerid][pSex] == 2) return SetPlayerSkin(playerid, 91);
				if((PlayerInfo[playerid][pKotszer] + 10) < MAXKOTSZER) PlayerInfo[playerid][pKotszer] += 10;
				format(string, sizeof(string), "* Valaki felvette a mûtõfelszerelést.");
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		else
		{
			SendFormatMessage(playerid, COLOR_YELLOW,"Nem vagy duty helyen! [VW: %d, INT: %d]",FrakcioInfo[frakcio][fDVW],FrakcioInfo[frakcio][fDINT]),SetPlayerCheckpoint(playerid, FrakcioInfo[frakcio][fDPosX],FrakcioInfo[frakcio][fDPosY],FrakcioInfo[frakcio][fDPosZ],FrakcioInfo[frakcio][fDPosR]);
		}
		return 1;
	}
	/*if(egyezik(cmd, "/raktár"))
	{
		
		if(params < 1) return Msg(playerid, "/raktár [lõszer|fegyver]");
		new id=NINCS;
		if(egyezik(param[1],"lõszer") || egyezik(param[1],"loszer"))
			id=1,SendFormatMessage(playerid, COLOR_LIGHTGREEN,"================ RAKTÁR(AK) LÕSZER ((MAX %d))================ ",MAX_FEGYVER_LOSZER);
		if(egyezik(param[1],"fegyver"))
			id=0,SendFormatMessage(playerid, COLOR_LIGHTGREEN,"================ RAKTÁR(AK) FEGYVER ((MAX %d))================ ",MAX_FEGYVER_RAKTAR);
			
		
		if(id == NINCS) return Msg(playerid, "/raktár [lõszer|fegyver]");
		
		new frakcio;
		
		if(PlayerInfo[playerid][pLeader] == FRAKCIO_SCPD || Admin(playerid, 1))
			frakcio=FRAKCIO_SCPD;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[LSPD] Deagle: %d | Silenced: %d | Mp5: %d | M4: %d | Shotgun: %d",FrakcioInfo[frakcio][fDeagle][id], FrakcioInfo[frakcio][fSilenced][id], FrakcioInfo[frakcio][fMp5][id], FrakcioInfo[frakcio][fM4][id], FrakcioInfo[frakcio][fShotgun][id]);
			
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[LSPD] Sniper: %d | Combat: %d | Rifle: %d | Ejtõernyõ: %d",FrakcioInfo[frakcio][fSniper][id], FrakcioInfo[frakcio][fCombat][id],FrakcioInfo[frakcio][fRifle][id],FrakcioInfo[frakcio][fParachute]);
			
			SendClientMessage(playerid, COLOR_LIGHTGREEN,"================================ RAKTÁR ================================ ");
		if(PlayerInfo[playerid][pLeader] == FRAKCIO_SFPD || Admin(playerid, 1))
			frakcio=FRAKCIO_SFPD;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[SFPD] Deagle: %d | Silenced: %d | Mp5: %d | M4: %d | Shotgun: %d",FrakcioInfo[frakcio][fDeagle][id], FrakcioInfo[frakcio][fSilenced][id], FrakcioInfo[frakcio][fMp5][id], FrakcioInfo[frakcio][fM4][id], FrakcioInfo[frakcio][fShotgun][id]);
			
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[SFPD] Sniper: %d | Combat: %d | Rifle: %d | Ejtõernyõ: %d",FrakcioInfo[frakcio][fSniper][id], FrakcioInfo[frakcio][fCombat][id],FrakcioInfo[frakcio][fRifle][id],FrakcioInfo[frakcio][fParachute]);
			
			SendClientMessage(playerid, COLOR_LIGHTGREEN,"================================ RAKTÁR ================================ ");
		
		if(PlayerInfo[playerid][pLeader] == FRAKCIO_FBI || Admin(playerid, 1))
			frakcio=FRAKCIO_FBI;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[FBI] Deagle: %d | Silenced: %d | Mp5: %d | M4: %d | Shotgun: %d",FrakcioInfo[frakcio][fDeagle][id], FrakcioInfo[frakcio][fSilenced][id], FrakcioInfo[frakcio][fMp5][id], FrakcioInfo[frakcio][fM4][id], FrakcioInfo[frakcio][fShotgun][id]);
			
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[FBI] Sniper: %d | Combat: %d | Rifle: %d | Ejtõernyõ: %d",FrakcioInfo[frakcio][fSniper][id], FrakcioInfo[frakcio][fCombat][id],FrakcioInfo[frakcio][fRifle][id],FrakcioInfo[frakcio][fParachute]);
			SendClientMessage(playerid, COLOR_LIGHTGREEN,"================================ RAKTÁR ================================ ");
		
		if(PlayerInfo[playerid][pLeader] == FRAKCIO_NAV || Admin(playerid, 1))
			frakcio=FRAKCIO_NAV;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[NAV] Deagle: %d | Silenced: %d | Mp5: %d | M4: %d | Shotgun: %d",FrakcioInfo[frakcio][fDeagle][id], FrakcioInfo[frakcio][fSilenced][id], FrakcioInfo[frakcio][fMp5][id], FrakcioInfo[frakcio][fM4][id], FrakcioInfo[frakcio][fShotgun][id]);
			
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[NAV] Sniper: %d | Combat: %d | Rifle: %d | Ejtõernyõ: %d",FrakcioInfo[frakcio][fSniper][id], FrakcioInfo[frakcio][fCombat][id],FrakcioInfo[frakcio][fRifle][id],FrakcioInfo[frakcio][fParachute]);
			SendClientMessage(playerid, COLOR_LIGHTGREEN,"================================ RAKTÁR ================================ ");
		
		if(PlayerInfo[playerid][pLeader] == FRAKCIO_KATONASAG || Admin(playerid, 1))
			frakcio=FRAKCIO_KATONASAG;
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[KATONA] Deagle: %d | Silenced: %d | Mp5: %d | M4: %d | Shotgun: %d",FrakcioInfo[frakcio][fDeagle][id], FrakcioInfo[frakcio][fSilenced][id], FrakcioInfo[frakcio][fMp5][id], FrakcioInfo[frakcio][fM4][id], FrakcioInfo[frakcio][fShotgun][id]);
			
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[KATONA] Sniper: %d | Combat: %d | Rifle: %d | Ejtõernyõ: %d",FrakcioInfo[frakcio][fSniper][id], FrakcioInfo[frakcio][fCombat][id],FrakcioInfo[frakcio][fRifle][id],FrakcioInfo[frakcio][fParachute]);
			SendClientMessage(playerid, COLOR_LIGHTGREEN,"================================ RAKTÁR ================================ ");
	
	}*/

	if(egyezik(cmd, "/csipogó") ||egyezik(cmd, "/csipogo"))
	{
		if(!LMT(playerid, FRAKCIO_YAKUZA) && !LMT(playerid, FRAKCIO_TURKEY) && !LMT(playerid, FRAKCIO_COSANOSTRA) && !LMT(playerid, FRAKCIO_TUZOLTO)) return Msg(playerid, "Nem vagy maffia tagja!");
		if(NemMozoghat(playerid)) return Msg(playerid, "A-a!");
		if(Harcol[playerid]) return Msg(playerid, "Ilyenkor nem használhatod!");
		Cselekves(playerid, "megnyomta a csipogót.");
		foreach(Jatekosok, x)
		{
			if(LMT(x, PlayerInfo[playerid][pMember]))
			{
				SetPlayerMarkerForPlayer(x, playerid, COLOR_RED);
				SendFormatMessage(x, COLOR_LIGHTRED, "RIADÓ!! %s megnyomta a vészcsipogót!!", ICPlayerName(playerid));
			}
		}
	}
//-------------------_-----FBI tracking system------------------------------//
    if(strcmp(cmd, "/lenyomoz", true) == 0)
	{
		if(!IsACop(playerid) && !IsHitman(playerid) &&  !Admin(playerid, 3))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Nem vagy Rendõr / FBI tag!");
			return 1;
	    }
		if(params < 2)
			return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /lenyomoz [Játékos / Jármû] [playerid / rendszám]");

		if(egyezik(param[1], "játékos") || egyezik(param[1], "jatekos"))
		{
			if(egyezik(param[2], "all") && Admin(playerid, 1337))
			{
				foreach(Jatekosok, x)
				{
					if(!IsPlayerConnected(x) || IsPlayerNPC(x) || !Logged(x)) continue;
					SetPlayerMarkerForPlayer(playerid, x, COLOR_LIGHTRED);
				}
			}
			else
			{
				new player = ReturnUser(param[2]);
				if(player != INVALID_PLAYER_ID && !HitmanDuty[player] && !IsClint(player) && !IsPlayerNPC(player))
				{
					if(PhoneOnline[player]) return Msg(playerid, "A játékosnak kivan kapcsolva a telefonja!");
					if(!Admin(playerid, 1337) && PlayerInfo[player][pPnumber] == 0 && !PlayerInfo[player][pLaptopBe] || !PlayerInfo[player][pLaptop]) return Msg(playerid, "Nincs telefonja vagy laptopja!");
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(player, X,Y,Z);
					SetPlayerMarkerForPlayer(playerid, player, 0xFF0000FF );
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " Lenyomoztad a célszemélyt !");
					if(IsRyanAndFranklin(player))
					{
						format(string,128,"[Figyelem] [%d]%s lenyomozott",playerid,PlayerName(playerid));
						SendMessage(SEND_MESSAGE_PLAYER, string, COLOR_LIGHTRED, 234);
						//Ezzel kívánom kicsit szûrni az idegesítõ nonos lenyomozásokat
					}
				}
				else
					return Msg(playerid, "Nincs ilyen játékos");
			}
		}
		else if(egyezik(param[1], "jármû") || egyezik(param[1], "jarmu"))
		{
			new rendszam = strval(param[2]);
			if(rendszam < 0 || !IsVehicleConnected(rendszam)) return 1;
			if(Carblock[rendszam] > UnixTime) return Msg(playerid, "Sajnálom, de ezt a jármûvet nem tudod lenyomozni, mert a hackerek blokkolták!");
			new Float:x, Float:y, Float:z;
			GetVehiclePos(rendszam, x, y, z);
			SetPlayerCheckpoint(playerid, x, y, z, 5);
			Nyomozott[playerid] = 10;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Jármû lenyomozva. (Rendszám: %d)", rendszam);
		}
	}

	if(strcmp(cmdtext, "/nyomozki", true)==0)
	{
	    if(Nincsbelepve(playerid)) return 1;
	    if(!IsACop(playerid) && !IsHitman(playerid) &&  !Admin(playerid, 3))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Nem vagy az rendõrség tagja!");
			return 1;
	    }

	    foreach(Jatekosok, x)
			SetPlayerMarkerForPlayer(playerid, x, 0xFFFFFF00);

		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Most már nem látod õt a GPS-en.");
		return 1;
	}
//-------------------------------[Pay(s)]--------------------------------------------------------------------------
    if(strcmp(cmd, "/pays", true) == 0)
	{
		new jatekos, osszeg;
		if(sscanf(pms, "d", osszeg))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /pays [Összeg]");

		if(osszeg < 1 || osszeg > 100000)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Az összeg 1 - 100 000Ft között lehet!");
			return 1;
		}
		
		jatekos = GetClosestPlayer(playerid);
		if(jatekos == NINCS || GetDistanceBetweenPlayers(playerid, jatekos) > 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "Senki sincs a közeledben!");
			return 1;
		}
		
		new playermoney = GetMoney(playerid);
		if(osszeg > 0 && playermoney >= osszeg)
		{
			if(GetMoney(jatekos) > MAXERTEK) return Msg(playerid, "Nem fér el több pénz nála...");
			if(FloodCheck(playerid, 1)) return 1;
			ConsumingMoney[jatekos] = 1;
			GiveMoney(playerid, (0 - osszeg));
			GiveMoney(jatekos, osszeg);

			SendFormatMessage(playerid, COLOR_GRAD1, "Átadtál a melletted állónak %sFt-ot",FormatNumber( osszeg, 0, ',' ));
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

			SendFormatMessage(jatekos, COLOR_GRAD1, "Kaptál a melletted álló alaktól %sFt-ot", FormatNumber( osszeg, 0, ',' ));
			PlayerPlaySound(jatekos, 1052, 0.0, 0.0, 0.0);

			format(string, sizeof(string), "%s atadott %sFt-ot neki: %s", PlayerName(playerid), FormatNumber( osszeg, 0, ',' ), PlayerName(jatekos));
			PayLog(string);

			ProxDetector(30.0, playerid, "* Valaki átadott egy kis pénzt a másiknak", COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE,COLOR_PURPLE, COLOR_PURPLE);
		}
		else
			SendClientMessage(playerid, COLOR_GRAD1, "Érvénytelen összeg!");

		return 1;
	}

	if(strcmp(cmd, "/pay", true) == 0)
	{
		new jatekos, osszeg;
		if(sscanf(pms, "rd", jatekos, osszeg))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /pay [Játékos] [Összeg]");

		if(jatekos == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		if(osszeg < 1 || osszeg > 10000000)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Az összeg 1 - 10 000 000Ft között lehet!");
			return 1;
		}
		if(GetDistanceBetweenPlayers(playerid, jatekos) > 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "Õ nincs a közeledben!");
			return 1;
		}

		new playermoney = GetMoney(playerid);
		if(osszeg > 0 && playermoney >= osszeg)
		{
			if(GetMoney(jatekos) > MAXERTEK) return Msg(playerid, "Nem fér el több pénz nála...");
			if(FloodCheck(playerid, 1)) return 1;
			ConsumingMoney[jatekos] = 1;
			GiveMoney(playerid, (0 - osszeg));
			GiveMoney(jatekos, osszeg);
			
			if(PlayerInfo[playerid][pHamisNev] == 0)
			{
				SendFormatMessage(playerid, COLOR_GRAD1, "Átadtál neki: [%d]%s, %sFt-ot.", jatekos, ICPlayerName(jatekos), FormatNumber( osszeg, 0, ',' ));
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

				SendFormatMessage(jatekos, COLOR_GRAD1, "Kaptál %sFt-ot tõle: [%d]%s.", FormatNumber( osszeg, 0, ',' ), playerid, ICPlayerName(playerid));
				PlayerPlaySound(jatekos, 1052, 0.0, 0.0, 0.0);

				format(string, sizeof(string), "%s átadott valakinek %sFt-ot", PlayerName(playerid), FormatNumber( osszeg, 0, ',' ));
				PayLog(string);

				format(string, sizeof(string), "* %s elõvett egy kis pénzt és átadta valakinek.", ICPlayerName(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				SendFormatMessage(playerid, COLOR_GRAD1, "Átadtál neki: [%d]%s, %sFt-ot.", jatekos, ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), FormatNumber( osszeg, 0, ',' ));
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

				SendFormatMessage(jatekos, COLOR_GRAD1, "Kaptál %sFt-ot tõle: [%d]%s.", FormatNumber( osszeg, 0, ',' ), playerid, ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
				PlayerPlaySound(jatekos, 1052, 0.0, 0.0, 0.0);

				format(string, sizeof(string), "%s átadott valakinek %sFt-ot", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), FormatNumber( osszeg, 0, ',' ));
				PayLog(string);

				format(string, sizeof(string), "* %s elõvett egy kis pénzt és átadta valakinek.", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		else
			SendClientMessage(playerid, COLOR_GRAD1, "Érvénytelen összeg (1 - 10 000 000Ft)!");

		return 1;
	}
//-------------------------------[Stats]--------------------------------------------------------------------------
	if(strcmp(cmd, "/stats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			ShowStats(playerid,playerid);
		}
		return 1;
	}

	if(strcmp(cmd, "/zsebem", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			format(string, sizeof(string), "* Valaki megnézte a zsebét.");
			ProxDetector(30.0, playerid,string , COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ShowZseb(playerid,playerid);
		}
		return 1;
	}

	if(strcmp(cmd, "/down", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1 || IsScripter(playerid))
		{
			new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz-2);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Nem vagy Admin! !");
		}
		return 1;
	}
	if(strcmp(cmd, "/up", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1 || IsScripter(playerid))
		{
			new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz+2);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Nem vagy Admin! !");
		}
		return 1;
	}
	if (strcmp(cmd, "/fly", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py+15, pz+5);
				}
				if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-30, py, pz+5);
				}
				if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py-15, pz+5);
				}
				if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py-30, pz+5);
				}
				if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py-15, pz+5);
				}
				if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+30, py, pz+5);
				}
				if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py+15, pz+5);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Nem vagy Admin! !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/lt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1 || IsScripter(playerid))
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly+2, slz);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Nem vagy Admin! !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1 || IsScripter(playerid))
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly-2, slz);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Nem vagy Admin! !");
			}
		}
		return 1;
	}
//-------------------------------[Check]--------------------------------------------------------------------------
	if(strcmp(cmd, "/check", true) == 0)
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;

		if(params < 2)
			return Msg(playerid, "Használat: /check [játékos] [stats / zseb / gyógyszerek]");

        giveplayerid = ReturnUser(param[1]);
	    if(giveplayerid == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos!");

		if(egyezik(param[2], "stats"))
			ShowStats(playerid, giveplayerid);
		elseif(egyezik(param[2], "zseb"))
			ShowZseb(playerid, giveplayerid);
		elseif(egyezik(param[2], "gyógyszerek") || egyezik(param[2], "gyogyszerek"))
			ShowGyogyszerTaska(playerid, giveplayerid);
		else
			Msg(playerid, "Használat: /check [játékos] [stats / zseb / gyógyszerek]");

		return 1;
	}
	if(strcmp(cmd, "/number", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pPhoneBook] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Használat: /number [Játékos v. Telefonszám]");
					return 1;
				}
				if(IsNumeric(tmp))
				{
					new kie = -1;
					new szam = strval(tmp);

					for(new x = 0; x < MAX_PLAYERS; x++)
					{
						if(!IsPlayerConnected(x) || IsPlayerNPC(x) || !Logged(x) || IsClint(x)) continue;

						if(PlayerInfo[x][pPnumber] == szam)
						{
							kie = x;
							break;
						}
					}

					if(kie != -1)
					{
						SendFormatMessage(playerid, COLOR_GRAD1, "Ez a telefonszám (%s) az övé: %s", FormatNumber( szam, 0, '-' ), ICPlayerName(kie));
						return 1;
					}

				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid) && giveplayerid != INVALID_PLAYER_ID && !IsClint(giveplayerid))
				{
					GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					format(string, 256, "Név: %s, Telefonszám: %s",sendername,FormatNumber( PlayerInfo[giveplayerid][pPnumber], 0, '-' ));
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
				else
					SendClientMessage(playerid, COLOR_GRAD1, "   Nincs ilyen játékos !");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "  Nincs telefonkönyved !");
			}
		}
		return 1;
	}
//-------------------------------[Login]--------------------------------------------------------------------------
	#endif
	if(egyezik(cmd, "/login"))
	{
		if(!PreConfigured[ playerid ])
			return Msg(playerid, "Pillanat");
			
		if(!JatekBetoltve[playerid])
			return Msg(playerid, "Ne siess, várd meg, míg betölt!");
			
		if(!Registered(playerid))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Nem vagy még regisztrálva | Karakter regisztráció a kezelofelületen: ucp.classrpg.net");
			
		if(Logged(playerid))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Már be vagy jelentkezve!");
			
		if(BejelentkezokSzama >= MAXBEJELENTKEZES)
			return Msg(playerid, "Jelenleg több ember lép be a játékba, a túlterhelés miatt várnod kell 1-2 másodpercet, kérlek próbáld meg most");
			
		if(PlayerInfo[playerid][pLoginTryNext] > UnixTime)
		{
			PlayerInfo[playerid][pLoginTries]++;
			if(PlayerInfo[playerid][pLoginTries] >= 3)
				return Kick(playerid);
				
			return SendClientMessage(playerid, COLOR_LIGHTRED, "Ne floodolj!");
		}
		
		PlayerInfo[playerid][pLoginTryNext] = UnixTime + 1;
		PlayerInfo[playerid][pLoginTries] = 0;
			
		if(ClassClient && PlayerInfo[playerid][pID] != 1)
		{
			if(!PlayerInfo[playerid][pKliensAktiv])
				return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Belépéshez a ClassRPG Kliens szükséges - letöltheted innen: kliens.classrpg.net");
				
			return Msg(playerid, "Nincs szükség a /login parancs használatára, a bejelentkezés automatikus, türelem...");
			//if(!CallRemoteFunction("CC_IsConnected", "d", SQLID(playerid)))// || !CallRemoteFunction("CC_RequestCode", "dd", playerid, SQLID(playerid)))
			/*	return
					CallRemoteFunction("CC_RequestStatusCheck", "d", SQLID(playerid)),
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Belépéshez a ClassRPG Kliens szükséges - letöltheted innen: kliens.classrpg.net")
				;*/
			//else
			//	PlayerInfo[playerid][pKliensAktiv] = 1;
		}
		
		format(string, sizeof(string), "Üdv %s\n\nKérlek add meg a jelszavad.\nJelszavad:", PlayerName(playerid));

		if(strlen(param[1]) && (egyezik(param[1], "regi") || egyezik(param[1], "régi")))
			ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_INPUT, "Bejelentkezés", string, "Belépés","Mégse");
		else
			ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Bejelentkezés", string, "Belépés", "Mégse");

		return 1;
	}

	#if !defined SEE_DEBUG

	if(egyezik(cmd, "/register"))
	{
		if(Registered(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Már regisztrálva vagy!");
		if(Logged(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Már be vagy jelentkezve!");
		if(!RegEngedely[playerid]) return Msg(playerid, "Karakter regisztráció a kezelõfelületen: www.ucp.classrpg.net");
		if(!RegAdatok[playerid]) return Msg(playerid, "Ki kell töltened az alapvetõ adataidat. Használd az /adatok parancsot");

		format(string, sizeof(string), "Üdv %s\n\nKérlek add meg a jelszavad.\nJelszavad:", PlayerName(playerid));
		ShowPlayerDialog(playerid, DIALOG_REGISTRATION, DIALOG_STYLE_INPUT, "Regisztráció", string, "Regisztráció","Mégse");
		return 1;
	}
//----------------------------------[ooc]-----------------------------------------------
	if(strcmp(cmd, "/ooc", true) == 0 || strcmp(cmd, "/o", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(FloodCheck(playerid)) return 1;
			if (noooc)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "(( Nincs bekapcsolva a Globális OOC Chat ))");
				return 1;
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "   Némítva vagy, hogy akarsz beszélni? :D");
				return 1;
			}
			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /o [Globál OOC Üzeneted]");

			format(string, sizeof(string), "(( [%d]%s: %s ))", playerid, PlayerName(playerid), result);
			SendMessage(SEND_MESSAGE_OOCOFF, string, COLOR_LIGHTBLUE);
			ChatLog(string);
		}
		return 1;
	}
	if(egyezik(cmd, "/noooc"))
	{
		if(!Admin(playerid, 1337)) return 1;
		if (!noooc)
		{
			noooc = 1;
		 	SendClientMessageToAll(COLOR_GRAD2, "(( A Globális OOC Chat le lett tiltva! ))");
		}
		else if(noooc)
		{
			noooc = 0;
			SendClientMessageToAll(COLOR_GRAD2, "(( A Globális OOC Chat engedélyezve lett! Használata: /o | Helyi kikapcsolása: /togooc ))");
		}
		return 1;
	}
	if(egyezik(cmd, "/határellenõrzés") || egyezik(cmd, "/hatarellenorzes"))
	{
		if(!MunkaLeader(playerid, FRAKCIO_NAV) && !LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA) && !LMT(playerid, FRAKCIO_KATONASAG)) return Msg(playerid, "Nem vagy Sheriff Department Leader / FBI / Katona!");
		if(LMT(playerid, FRAKCIO_KATONASAG) && !Munkarang(playerid, 6)) return Msg(playerid, "Katonaságban rang 6tól engedélyezett a határellenõrzés!");
		if(hatar != 1)
		{
			hatar = 1;
			SendClientMessageToAll(COLOR_GOV2, "A Sheriff Department / FBI / Katonaság befejezte az ellenõrzést a határon!");
			//SetDynamicObjectRot(hatar1, 0, 0, 173.04718017578); // 173.04718017578
			//SetDynamicObjectRot(hatar2, 0, 0, 173.04718017578); // 173.04718017578
			return 1;
		}
		else
		{
			hatar = 0;
			SendClientMessageToAll(COLOR_GOV2, "A Sheriff Department / FBI / Katonaság ellenõrzést tart a határon!");
			//SetDynamicObjectRot(hatar1, 0.000000, 270.000000, 90.000000);
			//SetDynamicObjectRot(hatar2, 0, 90, 90.0000); // 173.04718017578
			return 1;
		}
	}
//----------------------------------[advertise]-----------------------------------------------
	if(egyezik(cmd, "/ad") || egyezik(cmd, "/advertise") || egyezik(cmd, "/hirdet")) //sscanf by Ryan
	{
	    if(!Bortonben(playerid))
	    {
			new hirdetes[256];
			if(FloodCheck(playerid)) return 1;
		
			if(PlayerInfo[playerid][pPnumber]==0)
			return Msg(playerid, "Nincs telefonod így nem adhatsz fel hírdetést!");
			
			new illegalis;
			
			if(!LegalisSzervezetTagja(playerid))
			{
				tmp = strtok(cmdtext, idx);

				if(!egyezik(tmp, "legális") && !egyezik(tmp, "legalis") && !egyezik(tmp, "illegális") && !egyezik(tmp, "illegális"))
					return Msg(playerid, "Használata: /ad [legális/illegális] [hírdetés]");
				else if(egyezik(tmp, "illegalis") || egyezik(tmp, "illegális"))
					illegalis = 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new szoveg[128];
			while ((idx < length) && ((idx - offset) < (sizeof(szoveg) - 1)))
			{
				szoveg[idx - offset] = cmdtext[idx];
				idx++;
			}
			szoveg[idx - offset] = EOS;
			if(!strlen(szoveg))
			{
				if(!illegalis)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Használata: /ad [hirdetés]");
					SendClientMessage(playerid, COLOR_GRAD2, "Ha oktatót keresel, /oktatók");
				}
				else
					SendClientMessage(playerid, COLOR_GRAD2, "Használata: /ad [legális/illegális] [hirdetés]");
				return 1;
			}

			if(SzovegEllenorzes(playerid, szoveg, "/ad", ELLENORZES_HIRDETES))
				return 1;

			if(illegalis && !ladds || !illegalis && !adds)
				return SendClientMessage(playerid, COLOR_GRAD2, "Már adtak fel hirdetést, próbáld meg késõbb...");

			if(strlen(szoveg) < 10 || strlen(szoveg) > 75)
				return SendClientMessage(playerid, COLOR_GREY, "Minimum 10, maximum 75 karakter!");

			if(PlayerInfo[playerid][pConnectTime] < 10)
				return SendClientMessage(playerid, COLOR_GREY, "Még nem játszottál eleget, hogy használhasd!");

			new ara = strlen(szoveg) * BizzInfo[BIZ_HIRDETES][bEntranceCost];
			if(!BankkartyaFizet(playerid, ara))
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* A hirdetés %sFt-ba kerül! Neked nincs ennyid!", FormatNumber( ara, 0, ',' ));
				return 1;
			}
			BizPenz(BIZ_HIRDETES, ara);
			new telefonszam = PlayerInfo[playerid][pPnumber];
			if(!illegalis)
			{
				format(hirdetes, sizeof(hirdetes), "Hirdetés: %s | Hirdetõ: %s | Tel: %s [%s:%s]",  szoveg, ICPlayerName(playerid), FormatNumber( telefonszam, 0, '-' ), Time("ora"), Time("perc"));

				SendClientMessageToAll(TEAM_GROVE_COLOR, hirdetes);

				EgyebLog(hirdetes);
				format(string, sizeof(string), "~r~A hirdetes ara %dFt~n~~w~%d karakterbol allt", ara, strlen(szoveg));
				GameTextForPlayer(playerid, string, 5000, 5);
				SetTimer("AddsOn", addtimer, 0);
				adds = 0;
			}
			else
			{
				format(hirdetes, sizeof(hirdetes), "Alvilág: %s | Hirdetõ: %s | Tel: %s [%s:%s]",  szoveg, ICPlayerName(playerid), FormatNumber( telefonszam, 0, '-' ), Time("ora"), Time("perc"));
				foreach(Jatekosok, u)
				{
					if(LegalisSzervezetTagja(u) && !Admin(u, 1)) continue;
					SendClientMessage(u, COLOR_LIGHTRED, hirdetes);
				}
				SetTimer("LAddsOn", laddtimer, 0);
				ladds = 0;
				EgyebLog(hirdetes);
				format(string, sizeof(string), "~r~A hirdetes ara %dFt~n~~w~%d karakterbol allt", ara, strlen(szoveg));
				GameTextForPlayer(playerid, string, 5000, 5);
			}
		}
		else
			Msg(playerid, "Börtönben nem lehet!");
		return 1;
	}
	if(egyezik(cmd, "/had") || egyezik(cmd, "/hadvertise") || egyezik(cmd, "/hitmanhirdet")) // sscanf By Ryan
	{
		if(!IsDirector(playerid)) return Msg(playerid, "Nem vagy director!");
	    if(!Bortonben(playerid))
	    {
			new hirdetes[256];
			if(FloodCheck(playerid)) return 1;
		
			if(PlayerInfo[playerid][pPnumber]==0)
			return Msg(playerid, "Nincs telefonod így nem adhatsz fel hírdetést!");
			
			new szoveg[128];
			if(sscanf(pms, "s[128]", szoveg))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /had [hirdetés]");

			if(SzovegEllenorzes(playerid, szoveg, "/had", ELLENORZES_HIRDETES))
				return 1;

			if(!adds)
				return SendClientMessage(playerid, COLOR_GRAD2, "Már adtak fel hirdetést, próbáld meg késõbb...");

			if(strlen(szoveg) < 10 || strlen(szoveg) > 85)
				return SendClientMessage(playerid, COLOR_GREY, "Minimum 10, maximum 85 karakter!");

			if(PlayerInfo[playerid][pConnectTime] < 10)
				return SendClientMessage(playerid, COLOR_GREY, "Még nem játszottál eleget, hogy használhasd!");

			new ara = strlen(szoveg) * BizzInfo[BIZ_HIRDETES][bEntranceCost];
			if(!BankkartyaFizet(playerid, ara))
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* A hirdetés %sFt-ba kerül! Neked nincs ennyid!", FormatNumber( ara, 0, ',' ));
				return 1;
			}
			BizPenz(BIZ_HIRDETES, ara);
			format(hirdetes, sizeof(hirdetes), "Hirdetés: %s | Hirdetõ: Hitman",  szoveg);

			SendClientMessageToAll(TEAM_GROVE_COLOR, hirdetes);

			EgyebLog(hirdetes);
			format(string, sizeof(string), "~r~A hirdetes ara %dFt~n~~w~%d karakterbol allt", ara, strlen(szoveg));
			GameTextForPlayer(playerid, string, 5000, 5);
			SetTimer("AddsOn", addtimer, 0);
			adds = 0;
		}
		else
			Msg(playerid, "Börtönben nem lehet!");
		return 1;
	}
//----------------------------------[government]-----------------------------------------------
	if(strcmp(cmd, "/government", true) == 0 || strcmp(cmd, "/gov", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid) && !LMT(playerid, FRAKCIO_ONKORMANYZAT) && !LMT(playerid, FRAKCIO_TUZOLTO) && !LMT(playerid, FRAKCIO_MENTO))
			{
			    SendClientMessage(playerid, COLOR_GREY, "Nem használhatod ezt a parancsot!");
			    return 1;
			}
			if(NemMozoghat(playerid)) return Msg(playerid, "Most nem használhatod!");
				
			if(LMT(playerid, FRAKCIO_SCPD) && PlayerInfo[playerid][pRank] < 8) return Msg(playerid, "Minimum 8-as rang.");
			if(LMT(playerid, FRAKCIO_MENTO) && PlayerInfo[playerid][pRank] < 7) return Msg(playerid, "Minimum 8-as rang.");
			if(LMT(playerid, FRAKCIO_NAV) && PlayerInfo[playerid][pRank] < 8) return Msg(playerid, "Minimum 8-as rang.");
			//if(LMT(playerid, FRAKCIO_SFPD) && PlayerInfo[playerid][pRank] < 9) return Msg(playerid, "Minimum 9-es rang.");
			if(LMT(playerid, FRAKCIO_TUZOLTO) && PlayerInfo[playerid][pRank] < 9) return Msg(playerid, "Minimum 9-es rang.");
			if(LMT(playerid, FRAKCIO_ONKORMANYZAT) && PlayerInfo[playerid][pRank] < 9) return Msg(playerid, "Minimum 9-es rang.");
			if(LMT(playerid, FRAKCIO_KATONASAG) && PlayerInfo[playerid][pRank] < 8) return Msg(playerid, "Minimum 8-as rang.");
			
		 	new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /gov [Bejelentés szövege]");
				
            if(SzovegEllenorzes(playerid, result, "/gov", ELLENORZES_MINDKETTO))
				return true;

			new szin = COLOR_DBLUE;
			if(LMT(playerid, FRAKCIO_SCPD))
				SendClientMessageToAll(COLOR_WHITE, "|___________ Los Santos Police Department felhívása ___________|");
			else if(LMT(playerid, FRAKCIO_FBI))
				SendClientMessageToAll(COLOR_WHITE, "|___________ Federal Bureau of Investigation felhívása ___________|");
			else if(LMT(playerid, FRAKCIO_CIA))
				SendClientMessageToAll(COLOR_WHITE, "|___________ Centrall Intelligent Agency felhívása ___________|");
			else if(LMT(playerid, FRAKCIO_SFPD))
				SendClientMessageToAll(COLOR_WHITE, "|___________ San Fierro Police Department felhívása ___________|");
			else if(LMT(playerid, FRAKCIO_NAV))
				SendClientMessageToAll(COLOR_WHITE, "|___________ San Andreas Sheriff Department felhívása ___________|");
			else if(LMT(playerid, FRAKCIO_ONKORMANYZAT))
				szin = COLOR_GOV2, SendClientMessageToAll(COLOR_GOV1, "|___________ United States Government felhívása ___________|");
			else if(LMT(playerid, FRAKCIO_TUZOLTO))
				SendClientMessageToAll(COLOR_WHITE, "|___________ San Fierro Fire Department ___________|");
			else if(LMT(playerid, FRAKCIO_MENTO))
				SendClientMessageToAll(COLOR_WHITE,"|___________ United States Medical Center felhívása ___________|");
			else if(LMT(playerid, FRAKCIO_KATONASAG))
				SendClientMessageToAll(COLOR_WHITE,"|___________ United States Army Forces felhívása ___________|");

			SendFormatMessageToAll(szin,"%s: %s", ICPlayerName(playerid), result);
		}
		return 1;
	}
	if(strcmp(cmd, "/swatgovernment", true) == 0 || strcmp(cmd, "/sgov", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pSwattag] != 1) return Msg(playerid, "Csak SWATosoknak.");
			if(NemMozoghat(playerid)) return Msg(playerid, "Most nem használhatod!");
			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /sgov [Bejelentés szövege]");

			SendClientMessageToAll(COLOR_LIGHTRED, "|___________ Special Weapons And Tactics felhívása ___________|");
			SendFormatMessageToAll(COLOR_DBLUE,"%s: %s", ICPlayerName(playerid), result);
		}
		return 1;
	}
//----------------------------------[togooc]-----------------------------------------------
	if(egyezik(cmd, "/togpoliceooc"))
	{
		if(!MunkaLeader(playerid, FRAKCIO_SCPD)) return 1;
		if(LSPD)
		{
			SendRadioMessageFormat(FRAKCIO_SCPD, COLOR_LIGHTBLUE, "%s kikapcsolta az OOC rádiót!", PlayerName(playerid));
			LSPD = false;
		}
		else
		{
			SendRadioMessageFormat(FRAKCIO_SCPD, COLOR_LIGHTBLUE, "%s bekapcsolta az OOC rádiót!", PlayerName(playerid));
			LSPD = true;
		}
		return 1;
	}
	if(egyezik(cmd, "/tog"))
	{
        if(Admin(playerid, 1) || IsScripter(playerid))
			SendClientMessage(playerid, COLOR_GREY, "Lehetõségek: /togooc /tognews /togradio /togpm /togphone /toginfo /togkill /togva /togb /togszidas /togelõtag");
		else
			SendClientMessage(playerid, COLOR_GREY, "Lehetõségek: /togooc /tognews /togradio /togphone /togva");
		return 1;
	}
	if(egyezik(cmd, "/togva") || egyezik(cmd,"/togvá"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid) && !IsAS(playerid))  return 1;
		if(TogVa[playerid] == 1)
		{
			TogVa[playerid]=0;
			SendClientMessage(playerid, COLOR_GRAD2, "(( Most már újra látod mások válaszait! ))");
		}
		else
		{
			TogVa[playerid]=1;
			SendClientMessage(playerid, COLOR_GRAD2, "(( Most már nem látod másik válaszait! ))");
		}

	}
	if(egyezik(cmd, "/togelõtag") || egyezik(cmd,"/meac"))//parancs az admin elõtagok kikapcsolásra by Amos
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid) && !IsSuper(playerid))  return 1;
		if(TogElotag[playerid] == 1)
		{
			TogElotag[playerid]=0;
			SendClientMessage(playerid, COLOR_GRAD2, "(( Most már nem látod az admin chat elõtagokat! ))");
		}
		else
		{
			TogElotag[playerid]=1;
			SendClientMessage(playerid, COLOR_GRAD2, "(( Most már újra látod az admin chat elõtagokat! ))");
		}

	}
	if(egyezik(cmd, "/togkill"))
	{
		if(togkill[playerid])
		{
			togkill[playerid]=false;
			SendClientMessage(playerid, COLOR_GRAD2,"(( Most már nem látod a gyilkosságokat! ))");
		}
		else
		{
			togkill[playerid]=true;
			SendClientMessage(playerid, COLOR_GRAD2,"(( Most már újra látod a gyilkosságokat! ))");
		}
	}
    if(egyezik(cmd, "/toginfo"))
	{
	    if(Admin(playerid, 1) || IsScripter(playerid))
	    {
			if (gInfo[playerid] == 0)
			{
				gInfo[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "(( Most már nem látod az Admin Információkat! ))");
			}
			else
			{
				gInfo[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "(( Most már újra látod az Admin Információkat! ))");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/togb"))
	{
		if(!gBooc[playerid])
		{
			gBooc[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "(( Ha írsz már OOC szövegként jelenik meg. ))");
		}
		else
		{
			gBooc[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "((Ha írsz már IC szövegként jelenik meg. ))");
		}
		return 1;
	}

	if(egyezik(cmd, "/togszidas") || egyezik(cmd, "/togszídás"))
	{
		if(!gBoocszidas[playerid])
		{
			gBoocszidas[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "(( Most már látod az OOC szidásokat. ))");
		}
		else
		{
			gBoocszidas[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "(( Most már nem látod az OOC szidásokat. ))");
		}
		return 1;
	}

	if(egyezik(cmd, "/togooc"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gOoc[playerid])
			{
				gOoc[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "(( Most már nem látod a Globális OOC Chatet! ))");
			}
			else
			{
				gOoc[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "(( Most már újra látod a Globális OOC Chatet! ))");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/tognews") || egyezik(cmd, "/togriporter"))
	{
		new mi[32];
		if(sscanf(pms, "s[32]", mi))
		{
			Msg(playerid, "/tognews [zene / minden / be]");
			Msg(playerid, "/tognews zene   -> zene: nem hallható, riport: látható");
			Msg(playerid, "/tognews minden -> zene: nem hallható, riport: nem látható");
			Msg(playerid, "/tognews be     -> zene: hallható, riport: látható");
		}
		if(egyezik(mi, "zene"))
		{
			gNews[playerid] = 1;
			if(RiporterZeneVan == true)
				StopAudioStreamForPlayer(playerid);
			SendClientMessage(playerid, COLOR_GRAD2, "Most már nem hallod a riporterek által sugárzott zenét!");
		}
		else if(egyezik(mi, "minden") || egyezik(mi, "mind"))
		{
			gNews[playerid] = 2;
			if(RiporterZeneVan == true)
				StopAudioStreamForPlayer(playerid);
			SendClientMessage(playerid, COLOR_GRAD2, "Kikapcsoltad a riportereket (nem hallod a zenét és nem látod a riportokat)!");
		}
		else if(egyezik(mi, "be"))
		{
			gNews[playerid] = 0;
			if(RiporterZeneVan == true)
				PlayAudioStreamForPlayer(playerid, RiporterZene);
			SendClientMessage(playerid, COLOR_GRAD2, "Most már újra látod a riportokat és hallhatod a zenét!");
		}		
		return 1;
	}
	if(egyezik(cmd, "/togradio") || egyezik(cmd, "/tográdió"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gFam[playerid])
			{
				if(!PlayerInfo[playerid][pRadio])
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Nincs nálad rádió");
					return 1;
				}
				gFam[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Rádió kikapcsolva");
				Cselekves(playerid, "kikapcsolta a rádióját");
			}
			else if (gFam[playerid])
			{
				gFam[playerid] = 0;
				if(!PlayerInfo[playerid][pRadio])
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Nincs nálad rádió");
					return 1;
				}
				SendClientMessage(playerid, COLOR_GRAD2, "   Rádió bekapcsolva!");
				Cselekves(playerid, "bekapcsolta a rádióját");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/togwhisper") || egyezik(cmd, "/togpm"))
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;

		if(!HidePM[playerid])
		{
			HidePM[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "(( A játékosok most már nem tudnak neked PM-et küldeni! ))");
		}
		else
		{
			HidePM[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "(( A játékosok ismét tudnak neked PM-et küldeni! ))");
		}
		return 1;
	}
	if(egyezik(cmd, "/togphone") || egyezik(cmd, "/togtelefon"))
	{
		if(PlayerInfo[playerid][pPnumber] == 0) return Msg(playerid, "Nincs telefonod!");
		if (!PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = true;
			SendClientMessage(playerid, COLOR_GRAD2, "   Telefonod kikapcsolva !");
			Cselekves(playerid, "kikapcsolta a telefonját.", 1);
		}
		else if (PhoneOnline[playerid])
		{
			PhoneOnline[playerid] = false;
			SendClientMessage(playerid, COLOR_GRAD2, "   Telefonod bekapcsolva !");
			Cselekves(playerid, "bekapcsolta a telefonját.",1);
		}
		return 1;
	}
	/*if(egyezik(cmd, "/togpb"))
	{
		if(gPB[playerid])
		{
			gPB[playerid] = 0;
			Msg(playerid, "Paintball értesítések kikapcsolva");
		}
		else
		{
			gPB[playerid] = 1;
			Msg(playerid, "Paintball értesítések bekapcsolva.");
		}
		return 1;
	}*/
//----------------------------------[Emote]-----------------------------------------------
	if(egyezik(cmd, "/va"))
	{
		if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");
		if(Leutve[playerid]) return Msg(playerid,"Leütve nem!!");
		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /va [Cselekvés]");

		if(strlen(result) < 10)
			return Msg(playerid, "Minimum 10 karakter hossz");

		Cselekves(playerid, result, 1);

		new szoveg[128]; Format(szoveg, "* %s", result);
		SetPlayerChatBubble(playerid, szoveg, COLOR_PURPLE, B_Cselekves, 5000);
		format(string, sizeof(string), "[%s]* Valaki %s", PlayerName(playerid), result);
		ChatLog(string);
		return 1;
	}
	if(egyezik(cmd, "/do"))
	{
		if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");
		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /do [Történés]");
		
		if(PlayerInfo[playerid][pHamisNev] == 0)
			format(string, sizeof(string), "* %s ((%s))", result, PlayerName(playerid));
		else
			format(string, sizeof(string), "* %s ((%s))", result, PlayerInfo[playerid][pHamisNev]);
		ChatLog(string);
		ProxDetector(B_Cselekves, playerid, string, COLOR_BLUE,COLOR_BLUE,COLOR_BLUE,COLOR_BLUE,COLOR_BLUE);
		format(string, sizeof(string), "%s", result);
		SetPlayerChatBubble(playerid, string, COLOR_BLUE, B_Cselekves, 5000);
		return 1;
	}
	if(egyezik(cmd,"/swt") || egyezik(cmd,"/swatpajzs"))
	{
		if(PlayerInfo[playerid][pSwattag] == 0) return Msg(playerid,"Nem használhatod");
		if(params < 1) return Msg(playerid,"Használata: /swatpajzs [Használ / Engedélyez]");
		if(egyezik(param[1],"használ") || egyezik(param[1],"hasznal") || egyezik(param[1],"h"))
		{
			if(PajzsNala[playerid] == false)
			{
				if(SwatPajzsEngedely != 1) return Msg(playerid,"Nincs engedélyezve!");
				PajzsNala[playerid] = true;
				PutRiotShieldOnArm(playerid);
				Cselekves(playerid, "magához vette a SWAT taktikus pajzsot.");
			}
			else if(PajzsNala[playerid] == true)
			{
				Cselekves(playerid, "letette a SWAT taktikus pajzsot.");
				PajzsTorles(playerid);
			}
		}
		else if(egyezik(param[1],"engedélyez") || egyezik(param[1],"engedelyez"))
		{
			if(params < 2) return Msg(playerid,"Használata: /swatpajzs engedélyez [Pajzs/Taktikus/Támadó]");
			if(egyezik(param[2],"pajzs"))
			{
				if(SwatPajzsEngedely != 1)
				{
					if(PlayerInfo[playerid][pSwatRang] < 3) return Msg(playerid,"Nem használhatod!");
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "** %s engedélyezte a S.W.A.T. Pajzsok használatát! **", sendername);
					SendMessage(SEND_MESSAGE_RADIO_SWAT, string, TEAM_ORANGE_COLOR);
					SwatPajzsEngedely = 1;
					return 1;
				}
				else
				{
					if(PlayerInfo[playerid][pSwatRang] < 3) return Msg(playerid,"Nem használhatod!");
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "** %s letiltotta a S.W.A.T. Pajzsok használatát! **", sendername);
					SendMessage(SEND_MESSAGE_RADIO_SWAT, string, TEAM_ORANGE_COLOR);
					SwatPajzsEngedely = 0;
					return 1;
				}
			}
			else if(egyezik(param[2],"taktikus"))	
			{
				if(PlayerInfo[playerid][pSwatRang] < 5) return Msg(playerid,"Nem használhatod");
				if(taktikus == 0)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "** %s engedélyezte a Taktikus felszerelés használatát! **", sendername);
					SendMessage(SEND_MESSAGE_RADIO_SWAT, string, TEAM_ORANGE_COLOR);
					taktikus = 1;
					return 1;
				}
				else
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "** %s betiltotta a Taktikus felszerelés használatát! **", sendername);
					SendMessage(SEND_MESSAGE_RADIO_SWAT, string, TEAM_ORANGE_COLOR);
					taktikus = 0;
					return 1;
				}
			}
			else if(egyezik(param[2],"támadó") || egyezik(param[2],"tamado"))		
			{
				if(PlayerInfo[playerid][pSwatRang] < 5) return Msg(playerid,"Nem használhatod");
				if(SwatTamado == 0)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "** %s engedélyezte a Támadó felszerelés használatát! **", sendername);
					SendMessage(SEND_MESSAGE_RADIO_SWAT, string, TEAM_ORANGE_COLOR);
					SwatTamado = 1;
					return 1;
				}
				if(SwatTamado == 1)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "** %s betiltotta a Támadó felszerelés használatát! **", sendername);
					SendMessage(SEND_MESSAGE_RADIO_SWAT, string, TEAM_ORANGE_COLOR);
					SwatTamado = 0;
					return 1;
				}
			}
		}
	}	
	if(egyezik(cmd, "/me"))
	{
		if(Leutve[playerid]) return Msg(playerid,"Leütve nem!!");
		if(Csendvan) return Msg(playerid, "Most nem beszélhetsz!");

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /me [Cselekvés]");

		Cselekves(playerid, result);
		SetPlayerChatBubble(playerid, result, COLOR_PURPLE, B_Cselekves, 5000);
		return 1;
	}
//----------------------------------[Local]-----------------------------------------------
	if(egyezik(cmd, "/local") || egyezik(cmd, "/l"))
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /(l)ocal [Ismeretlen beszéd]");

		if(IsOOC(result)) return Msg(playerid, "Nincs /l ooc!");

		if(SzovegEllenorzes(playerid, result, "/l", ELLENORZES_HIRDETES))
			return 1;
		if(Leutve[playerid]) return Msg(playerid,"Leütve nem!!");	
        if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "   Némítva vagy, hogy akarsz beszélni? :D");
			return 1;
		}

		foreach(Jatekosok, p)
		{
			if(Poloska[p] && Poloskazott[playerid] && Poloskazta[p] == playerid)
				SendFormatMessage(p, COLOR_DORANGE, "<< Poloska: %s: %s >>", sendername, result);
		}
		if(SzajBekotve[playerid] == 1) return Msg(playerid, "A szád bevan kötve, így nem tudsz beszélni.");
		format(string, sizeof(string), "Valaki mondja: %s", result);
		ProxDetector(B_Normal, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		SetPlayerChatBubble(playerid, result, COLOR_WHITE, B_Normal, 5000);
		format(string, sizeof(string), "[%s]Valaki mondja: %s", sendername, result);
		ChatLog(string);
		return 1;
	}

	if(egyezik(cmd, "/b"))//local ooc
	{
		if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");
		if(KorhazIdo[playerid] > 0) return Msg(playerid, "Most nem beszélhetsz!");
		if(FloodCheck(playerid) &&!Admin(playerid,4)) return 1;
		GetPlayerName(playerid, sendername, sizeof(sendername));

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /b [OOC üzeneted]");

		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "   Némítva vagy, hogy akarsz beszélni? :D");
			return 1;
		}
		if(SzovegEllenorzes(playerid, result, "/b", ELLENORZES_MINDKETTO))
			return 1;

		if(PlayerInfo[playerid][pHamisNev] == 0 && Szajkendo[playerid] == 0)
		{
			format(string, sizeof(string), "%s mondja OOC: (( %s ))", sendername, result);
			ChatLog(string);
		}
		else if(PlayerInfo[playerid][pHamisNev] != 0 && Szajkendo[playerid] == 0)
		{
		    format(string, sizeof(string), "[%s]%s mondja OOC: (( %s ))", PlayerName(playerid), PlayerInfo[playerid][pHamisNev], result);
		    ChatLog(string);
			format(string, sizeof(string), "%s mondja OOC: (( %s ))", PlayerInfo[playerid][pHamisNev], result);
		}
		else if(Szajkendo[playerid] != 0)
		{
			format(string, sizeof(string), "(( (Szajkendo)%s mondja OOC: %s ))", sendername, result);
			ChatLog(string);
			format(string, sizeof(string), "%s mondja OOC: (( %s ))", sendername, result);
		}
		ProxDetector(B_Normal, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		return 1;
	}
	if(egyezik(cmd, "/close") || egyezik(cmd, "/c"))
	{
		if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");
		if(Leutve[playerid]) return Msg(playerid,"Leütve nem!!");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		strrep(sendername, '_', ' ');

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /c(oser) [Suttogás]");

		if(SzovegEllenorzes(playerid, result, "/c", ELLENORZES_HIRDETES)) return 1;
		if(SzajBekotve[playerid] == 1) return Msg(playerid, "A szád bevan kötve, így nem tudsz beszélni.");

		if(PlayerInfo[playerid][pHamisNev] == 0)
		{
			if(PlayerInfo[playerid][pANyelv])
			{
				format(string, sizeof(string), "%s suttogja%%s: %%s", sendername);
				ProxDetector(B_Kozel, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5, false, result);
			}
			else
			{
				format(string, sizeof(string), "%s suttogja: %s", sendername, result);
				ProxDetector(B_Kozel, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			}
			ChatLog(string);
		}
		else
		{
			if(PlayerInfo[playerid][pANyelv])
			{
				format(string, sizeof(string), "[%s]%s suttogja %s: %s", sendername, ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), Nyelvek[ PlayerInfo[playerid][pANyelv] - 1][1], result); ChatLog(string);
				format(string, sizeof(string), "%s suttogja%%s: %%s", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
				ProxDetector(B_Kozel, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5, false, result);
			}
			else
			{
				format(string, sizeof(string), "[%s]%s suttogja: %s", sendername, ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), result); ChatLog(string);
				format(string, sizeof(string), "%s suttogja: %s", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), result);
				ProxDetector(B_Kozel, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			}
		}

		SetPlayerChatBubble(playerid, result, COLOR_WHITE, B_Kozel, 5000);
		return 1;
	}
//----------------------------------[Shout]-----------------------------------------------
	if(egyezik(cmd, "/shout") || egyezik(cmd, "/s"))
	{
		if(FloodCheck(playerid)) return 1;
		if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");
		if(Leutve[playerid]) return Msg(playerid,"Leütve nem!!");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		strrep(sendername, '_', ' ');

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /(s)outh [Ordibálás]");

		if(SzovegEllenorzes(playerid, result, "/s", ELLENORZES_HIRDETES))
			return 1;

        if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "   Némítva vagy, hogy akarsz beszélni? :D");
			return 1;
		}
		if(SzajBekotve[playerid] == 1) return Msg(playerid, "A szád bevan kötve, így nem tudsz beszélni.");
		foreach(Jatekosok, p)
		{
			if(Poloska[p] && Poloskazott[playerid] && Poloskazta[p] == playerid)
				SendFormatMessage(p, COLOR_DORANGE, "<< Poloska (ordítva): %s: %s >>", sendername, result);
		}
		if(PlayerInfo[playerid][pHamisNev] == 0)
		{
			if(PlayerInfo[playerid][pANyelv] > 0)
			{
				format(string, sizeof(string), "%s ordítja%%s: %%s!!", sendername);
				ProxDetector(B_Tavol, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2, false, result);
			}
			else
			{
				format(string, sizeof(string), "%s ordítja: %s!!", sendername, result);
				ProxDetector(B_Tavol, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			}
			ChatLog(string);
		}
		else
		{
			if(PlayerInfo[playerid][pANyelv] > 0)
			{
				format(string, sizeof(string), "[%s]%s ordítja %s: %s!!", sendername, ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), Nyelvek[ PlayerInfo[playerid][pANyelv] - 1][1], result); ChatLog(string);
				format(string, sizeof(string), "%s ordítja%%s: %%s!!", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
				ProxDetector(B_Tavol, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2, false, result);
			}
			else if(Szajkendo[playerid] != 0)
			{
			    format(string, sizeof(string), "(Szajkendo)%s ordítja: %s", sendername, result);
			    ChatLog(string);
				format(string, sizeof(string), "Valaki ordítja: %s",result);
			}
			else
			{
				format(string, sizeof(string), "[%s]%s ordítja: %s!!", sendername, ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), result); ChatLog(string);
				format(string, sizeof(string), "%s ordítja: %s!!", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), result);
				ProxDetector(B_Tavol, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			}

		}
		SetPlayerChatBubble(playerid, result, COLOR_WHITE, B_Tavol, 5000);

		return 1;
	}
//----------------------------------[Shout]-----------------------------------------------
	if(egyezik(cmd, "/felszólít") || egyezik(cmd, "/felszolit"))
	{
		if(FloodMegprobal[playerid]>0)
		{
			SendFormatMessage(playerid, COLOR_YELLOW, "A-A ez túl sûrûn van. Legközelebb %d s múlva lehet!",FloodMegprobal[playerid]);
			return 1;
		}

		if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");

		if(SzajBekotve[playerid] == 1) return Msg(playerid, "A szád bevan kötve, így nem tudsz beszélni.");
		if(!IsACop(playerid)) return Msg(playerid, "Nem vagy a rendvédelem tagja");
		new ellcar = GetPlayerVehicleID(playerid);
		if(!IsACopCar(ellcar)) return Msg(playerid, "Nem vagy rendõr autóban");

		new felszolit[4][80] = {
		{"Itt az L.S.P.D! Kérem álljon félre igazoltatásra!"},
		{"Állítsa le a gépjármûvet, és várjon a további utasításokra!"},
		{"Amennyiben nem tesz eleget a felszólításnak,"},
		{"kényszerítõ eszközt alkalmazhatunk!"}
		};
		if(LMT(playerid, FRAKCIO_SFPD))
		    felszolit[0]="Itt az S.F.P.D! Kérem álljon félre igazoltatásra!";
		if(LMT(playerid, FRAKCIO_FBI))
			felszolit[0]="Itt az F.B.I! Kérem álljon félre igazoltatásra!";
		if(LMT(playerid, FRAKCIO_NAV))
			felszolit[0]="Itt a S.A.S.D! Mélységi ellenõrzést folytatunk!";
		if(LMT(playerid, FRAKCIO_KATONASAG))
			felszolit[0]="Itt a U.S.A.F! Álljon félre ellenõrzésre!";
		if(PlayerInfo[playerid][pSwatRang] >= 1 && Swatduty[playerid] ==1)
			felszolit[0]="Itt a S.W.A.T! Azonnal álljon félre!";
		for(new x = 0; x<4; x++)
		{
			new szoveg[80];
			format(string, sizeof(string), "[ %s o< %s ]", sendername, felszolit[x]);

			ProxDetector(B_Tavol2, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);

			Format(szoveg, "o< %s", felszolit[x]);
			SetPlayerChatBubble(playerid, szoveg, COLOR_YELLOW, B_Tavol2, 5000);
			ChatLog(string);
			FloodMegprobal[playerid]=10;
		}
	}
	if(egyezik(cmd, "/felszólít2") || egyezik(cmd, "/felszolit2"))
	{
		if(FloodMegprobal[playerid]>0)
		{
			SendFormatMessage(playerid, COLOR_YELLOW, "A-A ez túl sûrûn van. Legközelebb %d s múlva lehet!",FloodMegprobal[playerid]);
			return 1;
		}

		if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");

		if(SzajBekotve[playerid] == 1) return Msg(playerid, "A szád bevan kötve, így nem tudsz beszélni.");
		if(!IsHitman(playerid)) return Msg(playerid, "Nem vagy hitman!");
		new hitmancar = GetPlayerVehicleID(playerid);
		if(!IsAHitmanCar(hitmancar)) return Msg(playerid, "Nem vagy hitman autóban");
		
		if(params < 1) return Msg(playerid, "/felszólít2 [frakcióid]");
		new frakcioid = strval(param[1]);

		new felszolit2[4][80] = {
		{"Itt az L.S.P.D! Kérem álljon félre igazoltatásra!"},
		{"Állítsa le a gépjármûvet, és várjon a további utasításokra!"},
		{"Amennyiben nem tesz eleget a felszólításnak,"},
		{"kényszerítõ eszközt alkalmazhatunk!"}
		};
		if(frakcioid == FRAKCIO_SCPD)
		    felszolit2[0]="Itt az L.S.P.D! Kérem álljon félre igazoltatásra!";
		else if(frakcioid == FRAKCIO_SFPD)
		    felszolit2[0]="Itt az S.F.P.D! Kérem álljon félre igazoltatásra!";
		else if(frakcioid == FRAKCIO_FBI)
			felszolit2[0]="Itt az F.B.I! Kérem álljon félre igazoltatásra!";
		else if(frakcioid == FRAKCIO_NAV)
			felszolit2[0]="Itt a S.A.S.D! Mélységi ellenõrzést folytatunk!";
		else if(frakcioid == FRAKCIO_KATONASAG)
			felszolit2[0]="Itt a U.S.A.F! Álljon félre ellenõrzésre!";
		else return 1;
			
		for(new x = 0; x<4; x++)
		{
			new szoveg[80];
			if(PlayerInfo[playerid][pHamisNev] != 0)
			{
			format(string, sizeof(string), "[ %s o< %s ]", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), felszolit2[x]);
			}
			else
			{
			format(string, sizeof(string), "[ %s o< %s ]", sendername, felszolit2[x]);
			}

			ProxDetector(B_Tavol2, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);

			Format(szoveg, "o< %s", felszolit2[x]);
			SetPlayerChatBubble(playerid, szoveg, COLOR_YELLOW, B_Tavol2, 5000);
			ChatLog(string);
			FloodMegprobal[playerid]=10;
		}
	}
	/*if(egyezik(cmd, "/felszólítás") || egyezik(cmd, "/felszolitas"))
	{
		if(FloodMegprobal[playerid]>0)
		{
			SendFormatMessage(playerid, COLOR_YELLOW, "A-A ez túl sûrûn van. Legközelebb %d s múlva lehet!",FloodMegprobal[playerid]);
			return 1;
		}
		if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");

		if(SzajBekotve[playerid] == 1) return Msg(playerid, "A szád bevan kötve, így nem tudsz beszélni.");
		
		if(PlayerInfo[playerid][pHamisNev] == 0)
		{
			if(PlayerInfo[playerid][pANyelv])
			{
				format(string, sizeof(string), "%s ordítja%%s: %%s!!", sendername);
				ProxDetector(B_Tavol, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2, false, result);
			}
			else
			{
				format(string, sizeof(string), "%s ordítja: %s!!", sendername, result);
				ProxDetector(B_Tavol, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			}
			ChatLog(string);
		}
		else
		{
			if(PlayerInfo[playerid][pANyelv])
			{
				format(string, sizeof(string), "[%s]%s ordítja Állj, tedd fel a kezed és dobd el a fegyvered!", sendername, PlayerInfo[playerid][pHamisNev], Nyelvek[ PlayerInfo[playerid][pANyelv] - 1][1], result); ChatLog(string);
				format(string, sizeof(string), "%s ordítja%%s: Állj, tedd fel a kezed és dobd el a fegyvered!", PlayerInfo[playerid][pHamisNev]);
				ProxDetector(B_Tavol, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2, false, result);
			}
			else if(Szajkendo[playerid] != 0)
			{
			    format(string, sizeof(string), "(Szajkendo)%s ordítja: Állj, tedd fel a kezed és dobd el a fegyvered!", sendername);
			    ChatLog(string);
				format(string, sizeof(string), "Valaki ordítja: Állj, tedd fel a kezed és dobd el a fegyvered!",result);
			}
			else
			{
				format(string, sizeof(string), "[%s]%s ordítja: Állj, tedd fel a kezed és dobd el a fegyvered!", sendername, PlayerInfo[playerid][pHamisNev],); ChatLog(string);
				format(string, sizeof(string), "%s ordítja: Állj, tedd fel a kezed és dobd el a fegyvered!!", PlayerInfo[playerid][pHamisNev]);
				ProxDetector(B_Tavol, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			}

		}
		SetPlayerChatBubble(playerid, result, COLOR_WHITE, B_Tavol, 5000);
	}*/
	if(strcmp(cmd, "/megaphone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(FloodMegprobal[playerid]>0)
			{
				SendFormatMessage(playerid, COLOR_YELLOW, "A-A ez túl sûrûn van. Legközelebb %d s múlva lehet!",FloodMegprobal[playerid]);
				return 1;
			}

			if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");
			new tmpcar = GetPlayerVehicleID(playerid);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strrep(sendername, '_', ' ');

			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /(m)egaphone [Hangosbemondó]");

			if(SzajBekotve[playerid] == 1) return Msg(playerid, "A szád bevan kötve, így nem tudsz beszélni.");
			if(IsACop(playerid) || LMT(playerid, FRAKCIO_TUZOLTO) || IsHitman(playerid))
			{
				if(!IsACopCar(tmpcar) && !IsATuzoltoCar(tmpcar) && !IsAHitmanCar(tmpcar) && !PlayerToPoint(3.0, playerid, 1354.1110, 1356.7679, 10.9698))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Nem vagy rendõr / tûzoltó autóba / a fegyenctelep irányítópultjánál!");
					return 1;
				}
				if(SzovegEllenorzes(playerid, result, "/m", ELLENORZES_HIRDETES))
					return 1;

				if(PlayerInfo[playerid][pHamisNev] == 0)
				{
					format(string, sizeof(string), "[ %s o< %s ]", sendername, result);
				}
				else
				{
					format(string, sizeof(string), "[ %s o< %s ]", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), result);				
				}
				ProxDetector(B_Tavol2, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);

				Format(result, "o< %s", result);
				SetPlayerChatBubble(playerid, result, COLOR_YELLOW, B_Tavol2, 5000);
				FloodMegprobal[playerid]=10;
				ChatLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Nem vagy a PD/FBI/Katonaság/Sheriff Department/TÛZOLTÓSÁG/Hitman tagja!");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[Team]-----------------------------------------------
	if(egyezik(cmd, "/r"))
	{
	    if(!Bortonben(playerid))
	    { 
			if(Csendvan || KorhazIdo[playerid] > 0) return Msg(playerid, "Most nem beszélhetsz!");
			if(gFam[playerid] || !PlayerInfo[playerid][pRadio])	return Msg(playerid, "Kivan kapcsolva a rádiód vagy nincs");
			if(Alszik[playerid] != 0) return Msg(playerid, "Most aludj, ne beszélj!");

			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: (/r)adio [IC üzeneted]");

			GetPlayerName(playerid, sendername, sizeof(sendername));
			strrep(sendername, '_', ' ');

			if(PlayerInfo[playerid][pHamisNev] != 0)
				format(sendername, sizeof(sendername), "%s", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
				
			if(PlayerCuffed[playerid] || Leutve[playerid] || PlayerTied[playerid]) return Msg(playerid, "Ilyenkor hogy akarsz a rádióba beszélni?");
			
			if(SzovegEllenorzes(playerid, result, "/r", ELLENORZES_HIRDETES))
				return 1;

            if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "   Némítva vagy, hogy akarsz beszélni? :D");
				return 1;
			}
			foreach(Jatekosok, p)
			{
				if(Poloska[p] && Poloskazott[playerid] && Poloskazta[p] == playerid)
					SendFormatMessage(p, COLOR_DORANGE, "<< Poloska (rádió): %s: %s >>", sendername, result);
			}
			if(LMT(playerid, FRAKCIO_FBI) || LMT(playerid, FRAKCIO_KATONASAG))
			{
				if(PlayerInfo[playerid][pRank] <= 5)
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s: %s, vége **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, Pink,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s: %s, vége **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, Pink2,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
			}
			else if(LMT(playerid, FRAKCIO_CIA))
			{
				if(PlayerInfo[playerid][pRank] <= 5)
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s: %s, vége **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_BLUE_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s: %s, vége **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_BLUE_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] > 0)
			{
				if(LMT(playerid, FRAKCIO_SCPD) /*|| LMT(playerid, FRAKCIO_KATONASAG)*/)
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s: %s, vége **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_BLUE_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else if(LMT(playerid, FRAKCIO_NAV))
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s: %s, vége **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_GROVE_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else if(LMT(playerid, FRAKCIO_MENTO))
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s: %s **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_BLUE_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else if(LMT(playerid, FRAKCIO_ONKORMANYZAT))
				{
                    new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s: %s, vége **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_BLUE_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else if(LMT(playerid, FRAKCIO_TUZOLTO))
				{
                    new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s: %s, vége **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_AZTECAS_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s: %s **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_AZTECAS_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Nem vagy szervezet tagja!");
				return 1;
			}
		}
		else
			Msg(playerid, "Börtönben nem lehet!");
		return 1;
	}

	if(egyezik(cmd, "/rb"))
	{
		if(Bortonben(playerid)) return 1; //ne töröld
	    if(IsPlayerConnected(playerid))
	    {
			if(Csendvan || KorhazIdo[playerid] > 0) return Msg(playerid, "Most nem beszélhetsz!");
			if(Bortonben(playerid)) return Msg(playerid, "Börtönben nem lehet!");
			if(LMT(playerid, FRAKCIO_SCPD) && !LSPD) return Msg(playerid, "Ki van kapcsolva az ooc rádió!");
			GetPlayerName(playerid, sendername, sizeof(sendername));

            new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /rb [OOC üzeneted]");

			if(SzovegEllenorzes(playerid, result, "/rb", ELLENORZES_MINDKETTO))
				return 1;

            if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "   Némítva vagy, hogy akarsz beszélni? :D");
				return 1;
			}
			if(LMT(playerid, FRAKCIO_FBI) || LMT(playerid, FRAKCIO_KATONASAG))
			{
				if(PlayerInfo[playerid][pRank] <= 5)
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];

					format(string, sizeof(string), "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, Pink,munka+1);
					//SendRadioMessageFormat(munka+1, Pink, "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja OOC: (( %s ))", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s mondja OOC: (( %s )), vége **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, Pink2,munka+1);
					//SendRadioMessageFormat(munka+1, Pink2, "** %s %s mondja OOC: (( %s )) **", rangnev, sendername, result);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja OOC: (( %s ))", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
			}
			else if(LMT(playerid, FRAKCIO_CIA))
			{
				if(PlayerInfo[playerid][pRank] <= 5)
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];

					format(string, sizeof(string), "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_BLUE_COLOR,munka+1);
					//SendRadioMessageFormat(munka+1, Pink, "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja OOC: (( %s ))", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s mondja OOC: (( %s )), vége **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_BLUE_COLOR,munka+1);
					//SendRadioMessageFormat(munka+1, Pink2, "** %s %s mondja OOC: (( %s )) **", rangnev, sendername, result);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja OOC: (( %s ))", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] > 0)
			{
				if(LMT(playerid, FRAKCIO_SCPD))// || LMT(playerid, FRAKCIO_KATONASAG))
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					//SendRadioMessageFormat(munka+1, TEAM_BLUE_COLOR, "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_BLUE_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: (( %s ))", sendername, result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else if(LMT(playerid, FRAKCIO_NAV))
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_GROVE_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: (( %s ))", sendername, result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else if(LMT(playerid, FRAKCIO_MENTO))
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					//SendRadioMessageFormat(munka+1,TEAM_BLUE_COLOR , "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_BLUE_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: (( %s ))", sendername, result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else if(LMT(playerid, FRAKCIO_ONKORMANYZAT))
				{
                    new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_BLUE_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s OOC: (( %s ))", sendername, result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
				else
				{
					new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
					if(rang <= 0) rangnev = Rangok[munka][0];
					else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
					else rangnev = Rangok[munka][r];
					format(string, sizeof(string), "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					//SendRadioMessageFormat(munka+1,TEAM_AZTECAS_COLOR , "** %s %s OOC: (( %s )) **", rangnev, sendername, result);
					SendMessage(SEND_MESSAGE_RADIO, string, TEAM_AZTECAS_COLOR,munka+1);
					printf("%s", string);
					format(string, sizeof(string), "[Rádió]%s mondja: (( %s ))", sendername, result);
					ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Nem vagy szervezet tagja!");
				return 1;
			}
		}
		return 1;
	}

	if(egyezik(cmd, "/swatradio") || egyezik(cmd, "/sr"))
	{
		if(gFam[playerid] || !PlayerInfo[playerid][pRadio])	return Msg(playerid, "Kivan kapcsolva a rádiód vagy nincs");
	    if(PlayerInfo[playerid][pSwattag] == 1)
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strrep(sendername, '_', ' ');
			if(PlayerInfo[playerid][pHamisNev] != 0)
				format(sendername, sizeof(sendername), "%s", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));

			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /s(wat)r(adio) [IC üzeneted]");

			if(SzovegEllenorzes(playerid, result, "/sr", ELLENORZES_HIRDETES))
				return 1;

			if(PlayerInfo[playerid][pSwatRang] == 12)
			{
				format(string, sizeof(string), "** SWAT Parancsnok %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 11)
			{
				format(string, sizeof(string), "** SWAT MásodParancsnok %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 10)
			{
				format(string, sizeof(string), "** SWAT VezérÕrnagy %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 9)
			{
				format(string, sizeof(string), "** SWAT Kapitány %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 8)
			{
				format(string, sizeof(string), "** SWAT Ezredes %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 7)
			{
				format(string, sizeof(string), "** SWAT Õrnagy %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 6)
			{
				format(string, sizeof(string), "** SWAT Százados %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 5)
			{
				format(string, sizeof(string), "** SWAT FõHadnagy %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 4)
			{
				format(string, sizeof(string), "** SWAT Hadnagy %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 3)
			{
				format(string, sizeof(string), "** SWAT Kommandós %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 2)
			{
				format(string, sizeof(string), "** SWAT Tiszt %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 1)
			{
				format(string, sizeof(string), "** SWAT Közlegény %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
     		else if(PlayerInfo[playerid][pSwatRang] == 0)
			{
				format(string, sizeof(string), "** SWAT Újonc %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
			ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		}
		return 1;
	}
	if(egyezik(cmd, "/swatradiob") || egyezik(cmd, "/srb"))
	{
	    if(PlayerInfo[playerid][pSwattag] == 1)
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[playerid][pHamisNev] != 0)
				format(sendername, sizeof(sendername), "%s",PlayerInfo[playerid][pHamisNev]);

			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /(s)wat(r)adio(b) [OOC üzeneted]");

			if(SzovegEllenorzes(playerid, result, "/srb", ELLENORZES_MINDKETTO))
				return 1;

			if(PlayerInfo[playerid][pSwatRang] == 12)
			{
				format(string, sizeof(string), "** SWAT Parancsnok %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 11)
			{
				format(string, sizeof(string), "** SWAT MásodParancsnok %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 10)
			{
				format(string, sizeof(string), "** SWAT VezérÕrnagy %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 9)
			{
				format(string, sizeof(string), "** SWAT Kapitány %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 8)
			{
				format(string, sizeof(string), "** SWAT Ezredes %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 7)
			{
				format(string, sizeof(string), "** SWAT Õrnagy %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 6)
			{
				format(string, sizeof(string), "** SWAT Százados %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 5)
			{
				format(string, sizeof(string), "** SWAT FõHadnagy %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 4)
			{
				format(string, sizeof(string), "** SWAT Hadnagy %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 3)
			{
				format(string, sizeof(string), "** SWAT Kommandós %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 2)
			{
				format(string, sizeof(string), "** SWAT Tiszt %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pSwatRang] == 1)
			{
				format(string, sizeof(string), "** SWAT Közlegény %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
     		else if(PlayerInfo[playerid][pSwatRang] == 0)
			{
				format(string, sizeof(string), "** SWAT Újonc %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_SWAT, string,TEAM_ORANGE_COLOR);
			}
			format(string, sizeof(string), "[Rádió]%s mondja(OOC): (( %s )) ", sendername, result);
			ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		}
		return 1;
	}
	//========SWAT Rang By: FluckS========//

 	if(egyezik(cmd, "/srang"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /srang [playerid/PartOfName] [0-12]");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 0. Újonc | 1. Közlegény  | 2. Tiszt | 3. Kommandós | 4.  Hadnagy");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 5. FõHadnagy | 6. Százados  | 7. Õrnagy");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 8.  Ezredes | 9. Kapitány | 10. VezérÕrnagy");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 11. MásodParancsnok | 12. Parancsnok ");
				return 1;
			}
			new para1;
			new level;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			para1 = ReturnUser(tmp);

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /srang [playerid/PartOfName] [0-12]");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 0. Újonc | 1. Közlegény  | 2. Tiszt | 3. Kommandós | 4.  Hadnagy");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 5. FõHadnagy | 6. Százados  | 7. Õrnagy");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 8.  Ezredes | 9. Kapitány | 10. VezérÕrnagy");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 11. MásodParancsnok | 12. Parancsnok ");
				return 1;
			}

			level = strval(tmp);
			if(level > 12 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "0-12-ig legyen a rang szám!"); return 1; }
			if(PlayerInfo[playerid][pSwatRang] == 12 || PlayerInfo[playerid][pSwatRang] == 10 || PlayerInfo[playerid][pSwatRang] == 11 || Admin(playerid, 1337))
			{
				if(PlayerInfo[para1][pSwattag] != 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Ez a játékos nem a SWAT tag!");
					return 1;
				}
				if(IsPlayerConnected(para1))
				{
			        if(para1 != INVALID_PLAYER_ID)
			        {
           			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
		            PlayerInfo[para1][pSwatRang] = level;
		            format(string, sizeof(string), " A SWAT egységbe új rangot(%d) adtál neki: %s", level, giveplayer);
		            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            format(string, sizeof(string), "A SWAT Egységbe új rangot kaptál!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					if(level == 0)
					{
					format(string, sizeof(string), "Új rangod: SWAT Újonc!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
		            else if(level == 1)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT Közlegény");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
              		else if(level == 2)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT Tiszt!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 3)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT Kommandós!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 4)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT Hadnagy!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 5)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT FõHadnagy!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 6)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT Százados!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 7)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT Õrnagy!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		           	}
                    else if(level == 8)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT Ezredes!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 9)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT Kapitány!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 10)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT VezérÕrnagy!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		           }
                    else if(level == 11)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT MásodParancsnok!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 12)
		            {
		            format(string, sizeof(string), "Új rangod: SWAT Parancsnok!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }

              		}
			  }
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Csak SWAT Parancsnoknak!");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/sranks"))
	{
		if(PlayerInfo[playerid][pSwattag] != 1) return Msg(playerid, "Nem vagy a SWAT egység tagja!");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "===============[SWAT Tagok]===============");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pSwattag] == 1)
					SendFormatMessage(playerid, COLOR_LIGHTRED, "[ID:%d]%s - %d", i, ICPlayerName(i), PlayerInfo[i][pSwatRang]);
			}
		}
	}
	// BRASCO FAMILY
	if(egyezik(cmd, "/brascoradio") || egyezik(cmd, "/br"))
	{
		if(gFam[playerid] || !PlayerInfo[playerid][pRadio])	return Msg(playerid, "Kivan kapcsolva a rádiód vagy nincs");
	    if(PlayerInfo[playerid][pBrascoTag] == 1)
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strrep(sendername, '_', ' ');

			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /b(rasco)r(adio) [IC üzeneted]");

			if(SzovegEllenorzes(playerid, result, "/br", ELLENORZES_HIRDETES))
				return 1;

			if(PlayerInfo[playerid][pBrascoRang] == 7)
			{
				format(string, sizeof(string), "** A Keresztapa %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 6)
			{
				format(string, sizeof(string), "** A Keresztapa jobbkeze %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 5)
			{
				format(string, sizeof(string), "** Fõnök %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 4)
			{
				format(string, sizeof(string), "** Kis Fõnök %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 3)
			{
				format(string, sizeof(string), "** FõTanácsadó %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 2)
			{
				format(string, sizeof(string), "** Tanácsadó %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 1)
			{
				format(string, sizeof(string), "** Végrehajtó %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 0)
			{
				format(string, sizeof(string), "** Újonc %s: %s, vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			
			/*format(string, sizeof(string), "[Rádió]%s mondja: %s", sendername, result);
			ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);*/
		}
		return 1;
	}
	if(egyezik(cmd, "/brascoradiob") || egyezik(cmd, "/brb"))
	{
	    if(PlayerInfo[playerid][pBrascoTag] == 1)
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));

			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /(b)rasco(r)adio(b) [OOC üzeneted]");

			if(SzovegEllenorzes(playerid, result, "/brb", ELLENORZES_MINDKETTO))
				return 1;

			if(PlayerInfo[playerid][pBrascoRang] == 7)
			{
				format(string, sizeof(string), "** A Keresztapa %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 6)
			{
				format(string, sizeof(string), "** A Keresztapa jobbkeze %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 5)
			{
				format(string, sizeof(string), "** Fõnök %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 4)
			{
				format(string, sizeof(string), "** Kis Fõnök %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 3)
			{
				format(string, sizeof(string), "** FõTanácsadó %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 2)
			{
				format(string, sizeof(string), "** Tanácsadó %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 1)
			{
				format(string, sizeof(string), "** Végrehajtó %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			else if(PlayerInfo[playerid][pBrascoRang] == 0)
			{
				format(string, sizeof(string), "** Újonc %s(OOC): (( %s )), vége. **", sendername, result);
				SendMessage(SEND_MESSAGE_RADIO_BRASCO, string,TEAM_ORANGE_COLOR);
			}
			/*format(string, sizeof(string), "[Rádió]%s mondja(OOC): (( %s )) ", sendername, result);
			ProxDetector(20.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);*/
		}
		return 1;
	}
	if(egyezik(cmd, "/brang"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /brang [playerid/PartOfName] [0-7]");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 0. Újonc | 1. Végrehajtó  | 2. Tanácsadó | 3. FõTanácsadó");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 4. Kis Fõnök | 5. Fõnök  | 6. A keresztapa jobbkeze");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 7. A Keresztapa");
				return 1;
			}
			new para1;
			new level;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			para1 = ReturnUser(tmp);

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /brang [playerid/PartOfName] [0-7]");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 0. Újonc | 1. Végrehajtó  | 2. Tanácsadó | 3. FõTanácsadó");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 4. Kis Fõnök | 5. Fõnök  | 6. A keresztapa jobbkeze");
				SendClientMessage(playerid, COLOR_GRAD2, "Rangok: 7. A Keresztapa");
				return 1;
			}

			level = strval(tmp);
			if(level > 7 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "0-7-ig legyen a rang szám!"); return 1; }
			if(PlayerInfo[playerid][pBrascoRang] == 7 || PlayerInfo[playerid][pBrascoRang] == 6 || Admin(playerid, 5555))
			{
				if(PlayerInfo[para1][pBrascoTag] != 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Ez a játékos nem a Brasco Család tagja!");
					return 1;
				}
				if(IsPlayerConnected(para1))
				{
			        if(para1 != INVALID_PLAYER_ID)
			        {
           			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
		            PlayerInfo[para1][pBrascoRang] = level;
		            format(string, sizeof(string), "A Brasco Családba új rangot(%d) adtál neki: %s", level, giveplayer);
		            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            format(string, sizeof(string), "A Brasco Családba új rangot kaptál!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					if(level == 0)
					{
					format(string, sizeof(string), "Új rangod: Újonc!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
		            else if(level == 1)
		            {
		            format(string, sizeof(string), "Új rangod: Végrehajtó!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
              		else if(level == 2)
		            {
		            format(string, sizeof(string), "Új rangod: Tanácsadó!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 3)
		            {
		            format(string, sizeof(string), "Új rangod: Fõtanácsadó!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 4)
		            {
		            format(string, sizeof(string), "Új rangod: Kis Fõnök!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 5)
		            {
		            format(string, sizeof(string), "Új rangod: Fõnök!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 6)
		            {
		            format(string, sizeof(string), "Új rangod: A Keresztapa jobbkeze!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                    else if(level == 7)
		            {
		            format(string, sizeof(string), "Új rangod: A Keresztapa!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		           	}

              		}
			  }
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Csak Brasco Családfõknek!");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/branks"))
	{
		if(PlayerInfo[playerid][pBrascoTag] != 1) return Msg(playerid, "Nem vagy a BRASCO Család tagja!");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "===============[Családtagok]===============");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pBrascoTag] == 1)
					SendFormatMessage(playerid, COLOR_LIGHTRED, "[ID:%d]%s - %d", i, ICPlayerName(i), PlayerInfo[i][pBrascoRang]);
			}
		}
	}
	if(egyezik(cmd, "/brasco"))
	{
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Használat: /brasco [playerid/PartOfName]");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if(giveplayerid == INVALID_PLAYER_ID) return 1;

		if(PlayerInfo[playerid][pBrascoRang] == 6 || PlayerInfo[playerid][pBrascoRang] == 7 || Admin(playerid, 5555))
		{
			if(PlayerInfo[giveplayerid][pBrascoTag] == 0)
			{
				SendClientMessage(playerid, COLOR_ORANGE, "Felvetted a BRASCO Családhoz!");
				SendClientMessage(giveplayerid, COLOR_ORANGE, "Felvettek a BRASCO Családhoz!");
				SendClientMessage(giveplayerid, COLOR_ORANGE, "Család Rádió: /brascoradio(/br)");
				PlayerInfo[giveplayerid][pBrascoTag] = 1;
				PlayerInfo[giveplayerid][pBrascoRang] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ORANGE, "Kirúgtad a BRASCO Családból!");
				SendClientMessage(giveplayerid, COLOR_ORANGE, "Kirúgtak a BRASCO Családból!");
				PlayerInfo[giveplayerid][pBrascoTag] = 0;
				PlayerInfo[giveplayerid][pBrascoRang] = 0;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Csak Brasco Családfõknek!");
		}
		return 1;
	}
	//========SWAT Egység By: FluckS========//

	if(egyezik(cmd, "/swat"))
	{
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Használat: /Swat [playerid/PartOfName]");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if(giveplayerid == INVALID_PLAYER_ID) return 1;

		if(PlayerInfo[playerid][pSwatRang] == 12 || PlayerInfo[playerid][pSwatRang] == 10 || PlayerInfo[playerid][pSwatRang] == 11 || Admin(playerid, 1337))
		{
			if(PlayerInfo[giveplayerid][pSwattag] == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Felvetted a SWAT Egységhez!");
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Felvettek a SWAT Egységhez!");
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "SWAT Rádió: /swatradio(/sr)");
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Mostantól felveheted a SWAT felszerelést!");
				PlayerInfo[giveplayerid][pSwattag] = 1;
				PlayerInfo[giveplayerid][pSwatRang] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kirúgtad a SWAT egységtõl!");
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Kirúgtak a SWAT Egységtõl!");
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Mostantól nem tudod felvenni a SWAT felszerelést!");
				PlayerInfo[giveplayerid][pSwattag] = 0;
				PlayerInfo[giveplayerid][pSwatRang] = 0;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Csak SWAT Vezérnek!");
		}
		return 1;
	}
	//========Kitüntetés By: FluckS========//
	if(strcmp(cmd, "/kitüntetés", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /kitüntetés [playerid/PartOfName] [1-6]");
				SendClientMessage(playerid, COLOR_GRAD2, "Kitüntetések: 1. Bronz Csillag | 2. Bronz Medál | 3. Ezüst Csillag | 4. Ezüst Medál | 5. Arany Csillag | 6. Arany Medál");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);

			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /kitüntetés [playerid/PartOfName] [1-6]");
				SendClientMessage(playerid, COLOR_GRAD2, "Kitüntetések: 1. Bronz Csillag | 2. Bronz Medál | 3. Ezüst Csillag | 4. Ezüst Medál | 5. Arany Csillag | 6. Arany Medál");
				return 1;
			}

			level = strval(tmp);
			if(level > 6 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "1-6-ig legyen a kitüntetés száma!"); return 1; }
			if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pLeader] == 20 || PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pLeader] == 13)
			{
			if(LMT(para1, FRAKCIO_SCPD) || LMT(para1, FRAKCIO_FBI) || LMT(para1, FRAKCIO_CIA) || LMT(para1, FRAKCIO_SFPD) || LMT(para1, FRAKCIO_NAV) || LMT(para1, FRAKCIO_TUZOLTO) || LMT(para1, FRAKCIO_KATONASAG))
			{
	  		if(IsPlayerConnected(para1))
	  		{
			        if(para1 != INVALID_PLAYER_ID)
			        {
           			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
              		GetPlayerName(playerid, sendername, sizeof(sendername));
		            PlayerInfo[para1][pKituntetes] = level;
		            format(string, sizeof(string), " Új kitüntetést(%d) adtál neki: %s", level, giveplayer);
		            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            format(string, sizeof(string), "Kitüntetést kaptál!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                	if(level == 1)
                	{
                	format(string, sizeof(string), "Kitüntetés: Bronz Csillag!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
		            else if(level == 2)
		            {
		            format(string, sizeof(string), "Kitüntetés: Bronz Medál!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
              		else if(level == 3)
		            {
		            format(string, sizeof(string), "Kitüntetés: Ezüst Csillag!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
                	else if(level == 4)
		            {
		            format(string, sizeof(string), "Kitüntetés: Ezüst Medál!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
           		 	else if(level == 5)
		            {
		            format(string, sizeof(string), "Kitüntetés: Arany Csillag!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }
		            else if(level == 6)
		            {
		            format(string, sizeof(string), "Kitüntetés: Arany Medál!");
		            SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		            }

              		}
			  }
			  }
			  else
			  {
			  SendClientMessage(playerid, COLOR_GRAD2, "Ez a játékos nem rendvédelmi szervezet tagja!");
			  return 1;
			  }
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Csak rendvédelmi szervezet irányítójinak!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/kitüntetésem", true) == 0 || strcmp(cmd, "/kituntetesem", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(LMT(playerid, FRAKCIO_SCPD) || LMT(playerid, FRAKCIO_FBI) || LMT(playerid, FRAKCIO_CIA) || LMT(playerid, FRAKCIO_SFPD) || LMT(playerid, FRAKCIO_NAV) || LMT(playerid, FRAKCIO_TUZOLTO) || LMT(playerid, FRAKCIO_KATONASAG))
			{
                	SendClientMessage(playerid, COLOR_LIGHTRED, "*====[Kitüntetésed]===*");
                	if(PlayerInfo[playerid][pKituntetes] == 1)
                	{
	 				format(string, sizeof(string), "Kitüntetésed: Bronz Csillag!");
		            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            }
		            else if(PlayerInfo[playerid][pKituntetes] == 2)
		            {
		            format(string, sizeof(string), "Kitüntetésed: Bronz Medál!");
		            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            }
              		else if(PlayerInfo[playerid][pKituntetes] == 3)
		            {
		            format(string, sizeof(string), "Kitüntetésed: Ezüst Csillag!");
		            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            }
           		 	else if(PlayerInfo[playerid][pKituntetes] == 4)
		            {
		            format(string, sizeof(string), "Kitüntetésed: Ezüst Medál!");
		            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            }
           		 	else if(PlayerInfo[playerid][pKituntetes] == 5)
		            {
		            format(string, sizeof(string), "Kitüntetésed: Arany Csillag!");
		            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            }
		            else if(PlayerInfo[playerid][pKituntetes] == 6)
		            {
		            format(string, sizeof(string), "Kitüntetésed: Arany Medál!");
		            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            }
		            else
		            {
		            format(string, sizeof(string), "Kitüntetésed: Nincs kitüntetésed!");
		            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            }
                	SendClientMessage(playerid, COLOR_LIGHTRED, "*====[Kitüntetésed]===*");
                	format(string, sizeof(string), "* Valaki megnézte a kitüntetését...");
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Nem vagy rendvédelmi szervezet tagja!");
			return 1;
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/átöltöz", true) == 0)
 	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(PlayerToPoint(10, playerid, 207.4895,-134.9079,1002.8672) || PlayerToPoint(10, playerid, 204.5925,-163.6875,1000.5234) || IsAt(playerid, IsAt_Haz) != NINCS)
			{
	    	new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Használat: /átöltöz [ruha]");
	    		SendClientMessage(playerid, COLOR_WHITE, "Férfi Ruhák: öltöny, strand, alap");
	    		SendClientMessage(playerid, COLOR_WHITE, "Nõi Ruhák: elegáns, bikini, alap");
				return 1;
			}
			if(strcmp(x_nr,"alap", true) == 0)
			{
				format(string, sizeof(string), "Visszaöltöztél!");
				SendClientMessage(playerid, COLOR_YELLOW, string);
				if(PlayerInfo[playerid][pChar] > 0 && OnDuty[playerid] || PlayerInfo[playerid][pChar] > 0 && !LegalisSzervezetTagja(playerid) && !Civil(playerid))
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				else
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
			}
		    if(strcmp(x_nr,"öltöny",true) == 0)
			{
				format(string, sizeof(string), "Átöltöztél öltönybe!");
				SendClientMessage(playerid, COLOR_YELLOW, string);
				SetPlayerSkin(playerid, 186);
				return 1;
			}
			else if(strcmp(x_nr,"strand",true) == 0)
			{
				format(string, sizeof(string), "Átöltöztél strand ruhába!");
				SendClientMessage(playerid, COLOR_YELLOW, string);
				SetPlayerSkin(playerid, 97);
				return 1;
			}
			else if(strcmp(x_nr,"bikini",true) == 0)
			{
				format(string, sizeof(string), "Átöltöztél bikinibe!");
				SendClientMessage(playerid, COLOR_YELLOW, string);
				SetPlayerSkin(playerid, 92);
				return 1;
			}
			else if(strcmp(x_nr,"elegáns",true) == 0)
			{
				format(string, sizeof(string), "Átöltöztél elegáns ruhába!");
				SendClientMessage(playerid, COLOR_YELLOW, string);
				SetPlayerSkin(playerid, 150);
				return 1;
			}
			}
			else
			{
			SendClientMessage(playerid, COLOR_YELLOW, "Nem vagy ruhaboltba!");
			return 1;
			}
		}
		return 1;
	}
	
//----------------------------------[offduty]-------------------------------------------
	if(egyezik(cmd, "/duty"))
	{
	
	
		if(params < 1) return Msg(playerid, "/duty [ rangok | szolgálat | fegyver | loszer | rangok | mellény]");
		
		new frakcio=NINCS;
		if(egyezik(param[1],"rangok"))
		{
		
			if(!IsACop(playerid)) return Msg(playerid, "Csak rendvédelem!");
			
			frakcio=PlayerInfo[playerid][pMember];
			if(frakcio == NINCS)
				frakcio = PlayerInfo[playerid][pLeader];
				
			if(params == 1)
			{
				SendFormatMessage(playerid,COLOR_YELLOW,"Deagle: %d",FrakcioInfo[frakcio][fDeagle][2]);
				SendFormatMessage(playerid,COLOR_YELLOW,"Shotgun: %d",FrakcioInfo[frakcio][fShotgun][2]);
				SendFormatMessage(playerid,COLOR_YELLOW,"Silenced: %d",FrakcioInfo[frakcio][fSilenced][2]);
				SendFormatMessage(playerid,COLOR_YELLOW,"Mp5: %d",FrakcioInfo[frakcio][fMp5][2]);
				SendFormatMessage(playerid,COLOR_YELLOW,"M4: %d",FrakcioInfo[frakcio][fM4][2]);
				SendFormatMessage(playerid,COLOR_YELLOW,"Sniper: %d",FrakcioInfo[frakcio][fSniper][2]);
				SendFormatMessage(playerid,COLOR_YELLOW,"Combat: %d",FrakcioInfo[frakcio][fCombat][2]);
				SendFormatMessage(playerid,COLOR_YELLOW,"Rifle: %d",FrakcioInfo[frakcio][fRifle][2]);
				SendFormatMessage(playerid,COLOR_YELLOW,"Ak47: %d",FrakcioInfo[frakcio][fAk47][2]);
				
			}
			if(params < 3 && (PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pSwatRang] >= 11))
				return Msg(playerid, "/duty rangok fegyverneve rang");
			
			if(PlayerInfo[playerid][pLeader] < 1) return 1;
			new weaponstr[32]; new weapon; new rang;
			
			sscanf(pms, "{s[7]}s[32]d", weaponstr,rang);
		
			if(isNumeric(weaponstr))
				weapon = strval(weaponstr);
			else
				weapon = GetGunID(weaponstr);

			if(weapon < 1 || weapon > MAX_WEAPONS)
				return Msg(playerid, "Ilyen fegyver nem létezik");
			
			if(weapon == WEAPON_M4	|| weapon == WEAPON_SNIPER || weapon == WEAPON_AK47 || weapon == WEAPON_COMBAT || weapon == WEAPON_SHOTGUN || weapon == WEAPON_RIFLE)
			{
				if(rang < 13) return Msg(playerid, "Ennek a fegyvernek a szolgálatban való használatát határozatlan idõre tiltja a Kormány!");
			}

			if(weapon == WEAPON_MP5)
			{
				if(rang < 4) return Msg(playerid, "Ennek a fegyvernek az alkalmazása csak 4-es rangtól lehetséges.");
			}
			if(weapon == WEAPON_DEAGLE)
				FrakcioInfo[frakcio][fDeagle][2] =rang;
			if(weapon == WEAPON_AK47)
				FrakcioInfo[frakcio][fAk47][2] =rang;
			if(weapon == WEAPON_SILENCED)
				FrakcioInfo[frakcio][fSilenced][2] =rang;
			if(weapon == WEAPON_MP5)	
				FrakcioInfo[frakcio][fMp5][2] =rang;
			if(weapon == WEAPON_M4)	
				FrakcioInfo[frakcio][fM4][2] =rang;
			if(weapon == WEAPON_SHOTGUN)
				FrakcioInfo[frakcio][fShotgun][2] =rang;
			if(weapon == WEAPON_SNIPER)
				FrakcioInfo[frakcio][fSniper][2] =rang;
			if(weapon == WEAPON_COMBAT)
				FrakcioInfo[frakcio][fCombat][2] =rang;
			if(weapon == WEAPON_RIFLE)
				FrakcioInfo[frakcio][fRifle][2] =rang;	
				
			SendFormatMessage(playerid, COLOR_YELLOW,"Rang átírva %d -re!",rang);	
			return 1;
		}
		frakcio = PlayerInfo[playerid][pMember];
		if(!LegalisSzervezetTagja(playerid)) return Msg(playerid, "Nem vagy legális frakció tagja");
		
		
		if(!PlayerToPoint(FrakcioInfo[frakcio][fDPosR], playerid, FrakcioInfo[frakcio][fDPosX],FrakcioInfo[frakcio][fDPosY],FrakcioInfo[frakcio][fDPosZ],FrakcioInfo[frakcio][fDVW],FrakcioInfo[frakcio][fDINT]))
			return SendFormatMessage(playerid, COLOR_YELLOW,"Nem vagy duty helyen! [VW: %d, INT: %d]",FrakcioInfo[frakcio][fDVW],FrakcioInfo[frakcio][fDINT]),SetPlayerCheckpoint(playerid, FrakcioInfo[frakcio][fDPosX],FrakcioInfo[frakcio][fDPosY],FrakcioInfo[frakcio][fDPosZ],FrakcioInfo[frakcio][fDPosR]);
		
		if(egyezik(param[1],"mellény") || egyezik(param[1],"melleny"))
		{
			if(!IsACop(playerid)) return Msg(playerid,"Csak rendvédelem!");
			SetPlayerArmour(playerid,100);
			Cselekves(playerid,"felvett egy új golyóálló mellényt.");
		}
		if(egyezik(param[1],"szolgálat") || egyezik(param[1], "szolgalat"))
		{
			if(OnDuty[playerid]==0)
			{
				if(!IsValidSkin(PlayerInfo[playerid][pChar])) return Msg(playerid, "Nincs szolgálati ruhád, menj ruhaboltba!");
				
				if(frakcio == FRAKCIO_TAXI)
				{
					Msg(playerid, "/taxi duty");
					return 1;
				}
				
				Cselekves(playerid, "átöltözött a munkaruhájába", 0);
				
				
				OnDuty[playerid] = 1;
				Munkaruha(playerid, 1);
				
				if(IsACop(playerid))
				{
					SetPlayerArmour(playerid,100);
				
					WeaponGiveWeapon(playerid, WEAPON_SPRAYCAN, 400);
					WeaponGiveWeapon(playerid, 3, 2);
					
				}
				
				if(frakcio == FRAKCIO_ONKORMANYZAT)
				{
				
					WeaponGiveWeapon(playerid, WEAPON_DEAGLE, 50);
					WeaponGiveWeapon(playerid, WEAPON_SPRAYCAN, 400);
					
				}
				
				if(frakcio == FRAKCIO_MENTO)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Mostmár szolgálatban vagy, így fogadnod kell a hívásokat!");
					SendClientMessageToAll(COLOR_LIGHTBLUE, "* Mentõsök szolgálatban! Hívd õket ha baj van!");
					Medics++;
					if((PlayerInfo[playerid][pKotszer] + 10) < MAXKOTSZER) PlayerInfo[playerid][pKotszer] += 10;
					return 1;
				}
				if(frakcio == FRAKCIO_TUZOLTO)
					DutyFegyverekBeallitasa(playerid);
				if(frakcio == FRAKCIO_OKTATO)
				{
					if(PlayerInfo[playerid][pRank] < 1) return Msg(playerid,"Fel vagy függesztve, így nem kell szolgálatba lépned");
					
					if(PlayerInfo[playerid][pRank] > 1)
					{  
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Mostmár szolgálatban vagy, így fogadnod kell a hívásokat!");
						SendClientMessageToAll(COLOR_LIGHTBLUE, "*Egy oktató szolgálatba lépett! Hívd õket ha vizsgázni szeretnél /oktatók!");
					}
					else
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Mostmár szolgálatban vagy, így kaptál munkaruhát!");
	
				}
				
			}
			else if(OnDuty[playerid]==1)
			{
				Cselekves(playerid, "visszaöltözött!");
				
				OnDuty[playerid] = 0;
				Munkaruha(playerid, 0);
				
				if(frakcio == FRAKCIO_MENTO)
					Medics--;
				
				if(frakcio == FRAKCIO_TAXI)
					Taxi[playerid][tDuty] = false;
				if(IsACop(playerid))
				{
					
					// fegyverek
					new weapon, raktar;
					for(new w = 0; w < MAX_PLAYER_WEAPONS; w++)
					{
						if((weapon = PlayerWeapons[playerid][pWeapon][w]))
						{
							
							if(WeaponTakeWeapon(playerid, weapon))
							{
								if(weapon == WEAPON_DEAGLE)
									FrakcioInfo[frakcio][fDeagle][0] +=1, raktar=FrakcioInfo[frakcio][fDeagle][0];
								if(weapon == WEAPONSKILL_AK47)
									FrakcioInfo[frakcio][fAk47][0] +=1, raktar=FrakcioInfo[frakcio][fAk47][0];
								if(weapon == WEAPON_SILENCED)
									FrakcioInfo[frakcio][fSilenced][0] +=1, raktar=FrakcioInfo[frakcio][fSilenced][0];
								if(weapon == WEAPON_MP5)	
									FrakcioInfo[frakcio][fMp5][0] +=1, raktar=FrakcioInfo[frakcio][fMp5][0];
								if(weapon == WEAPON_M4)	
									FrakcioInfo[frakcio][fM4][0] +=1, raktar=FrakcioInfo[frakcio][fM4][0];
								if(weapon == WEAPON_SHOTGUN)
									FrakcioInfo[frakcio][fShotgun][0] +=1, raktar=FrakcioInfo[frakcio][fShotgun][0];
								if(weapon == WEAPON_SNIPER)
									FrakcioInfo[frakcio][fSniper][0] +=1, raktar=FrakcioInfo[frakcio][fSniper][0];
								if(weapon == WEAPON_COMBAT)
									FrakcioInfo[frakcio][fCombat][0] +=1, raktar=FrakcioInfo[frakcio][fCombat][0];
								if(weapon == WEAPON_RIFLE)
									FrakcioInfo[frakcio][fRifle][0] +=1, raktar=FrakcioInfo[frakcio][fRifle][0];
								if(weapon == WEAPON_PARACHUTE)
									FrakcioInfo[frakcio][fParachute] +=1, raktar=FrakcioInfo[frakcio][fParachute];
							
							}
							format(_tmpString, 128, "[duty lead fegyver]%s Frakcio: %d | 1 Db %s-t | Raktár Volt: %d Lett: %d", PlayerName(playerid),frakcio,GunName(weapon),raktar-1,raktar);
							Log("Fegyver",_tmpString);
						}
					}
					new ammo;
					for(weapon = 1; weapon < MAX_WEAPONS; weapon++)
					{
						if(WeaponAmmo(playerid, weapon) > 0)
						{
							ammo=WeaponAmmo(playerid, weapon);
							if(WeaponTakeAmmo(playerid, weapon))
							{
								if(weapon == WEAPON_DEAGLE)
									FrakcioInfo[frakcio][fDeagle][1] +=ammo, raktar=FrakcioInfo[frakcio][fDeagle][1];
								if(weapon == WEAPONSKILL_AK47)
									FrakcioInfo[frakcio][fAk47][1] +=ammo, raktar=FrakcioInfo[frakcio][fAk47][1];
								if(weapon == WEAPON_SILENCED)
									FrakcioInfo[frakcio][fSilenced][1] +=ammo, raktar=FrakcioInfo[frakcio][fSilenced][1];
								if(weapon == WEAPON_MP5)	
									FrakcioInfo[frakcio][fMp5][1] +=ammo, raktar=FrakcioInfo[frakcio][fMp5][1];
								if(weapon == WEAPON_M4)	
									FrakcioInfo[frakcio][fM4][1] +=ammo, raktar=FrakcioInfo[frakcio][fM4][1];
								if(weapon == WEAPON_SHOTGUN)
									FrakcioInfo[frakcio][fShotgun][1] +=ammo, raktar=FrakcioInfo[frakcio][fShotgun][1];
								if(weapon == WEAPON_SNIPER)
									FrakcioInfo[frakcio][fSniper][1] +=ammo, raktar=FrakcioInfo[frakcio][fSniper][1];
								if(weapon == WEAPON_COMBAT)
									FrakcioInfo[frakcio][fCombat][1] +=ammo, raktar=FrakcioInfo[frakcio][fCombat][1];
								if(weapon == WEAPON_RIFLE)
									FrakcioInfo[frakcio][fRifle][1] +=ammo, raktar=FrakcioInfo[frakcio][fRifle][1];
								if(weapon == WEAPON_PARACHUTE)
									FrakcioInfo[frakcio][fParachute] +=ammo, raktar=FrakcioInfo[frakcio][fParachute];
							}
							format(_tmpString, 128, "[duty lead lõszer]%s Frakcio: %d | %d Db %s-t | Raktár Volt: %d Lett: %d", PlayerName(playerid),frakcio,ammo,GunName(weapon),raktar-ammo,raktar);
							Log("Fegyver",_tmpString);
						}
					}
	
					Cselekves(playerid, "leadta a fegyvereit", 1);
				}
			}
		}
		
		if(!OnDuty[playerid]) return Msg(playerid, "Csak szolgálatban!");
		
		new id = NINCS;
		if(egyezik(param[1],"fegyver"))
			id=0;
		if(egyezik(param[1],"lõszer") || egyezik(param[1],"loszer"))
			id=1;
			
		if(id == NINCS) return Msg(playerid, "/duty [fegyver|lõszer] [felvesz | lead] [fegyvernév]");
		
		if(params < 3 && id == 0)
		{
			Msg(playerid, "/duty fegyver [felvesz | lead] [fegyvernév]");
			Msg(playerid, "[deagle | sniper | shoutgun | mp5 | m4 | rifle | ak47  | combat | silenced | parachute]");
			return 1;
		}
		if(params < 3 && id == 1)
		{
			Msg(playerid, "/duty lõszer [felvesz | lead] [fegyvernév]");
			Msg(playerid, "[deagle | sniper | shoutgun | mp5 | m4 | rifle | ak47  | combat | silenced | parachute]");
			return 1;
		}
		
		if(egyezik(param[2],"felvesz"))
		{
			if(FloodCheck(playerid)) return 1;
			
			if(frakcio == FRAKCIO_FBI || frakcio == FRAKCIO_NAV || frakcio == FRAKCIO_SFPD || frakcio == FRAKCIO_CIA || frakcio == FRAKCIO_SCPD || frakcio == FRAKCIO_KATONASAG)
			{
				
				
				new weapon=NINCS,ammo=NINCS;
				new weapons[32];
				new rang = PlayerInfo[playerid][pRank];
				
				
				sscanf(param[3], "s[32]", weapons);
				
				if(id == 1)
					sscanf(param[4], "d",ammo);
				else
					ammo=1;
					
				if(isNumeric(weapons))
					weapon = strval(weapons);
				else
					weapon = GetGunID(weapons);
			
				if(weapon < 1 || weapon > MAX_WEAPONS)
					return Msg(playerid, "Ilyen fegyver nem létezik");
					
				if(weapon != WEAPON_DEAGLE && weapon != WEAPON_MP5 && weapon != WEAPON_SNIPER && weapon != WEAPON_SHOTGUN && weapon != WEAPON_M4 && weapon != WEAPON_RIFLE && weapon != WEAPON_AK47 && weapon != WEAPON_COMBAT && weapon != WEAPON_SILENCED && weapon != WEAPON_PARACHUTE)
					return Msg(playerid, "Ilyen fegyver nem létezik");
				
				if(id == 1)
				{
					new loszer=PlayerWeapons[playerid][pAmmo][weapon];
					if(loszer+ammo > 400) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Minek neked ilyen sok lõszer? Nálad van %d, és még akarsz %d-t",loszer,ammo);
				}	
				if(weapon == WEAPON_DEAGLE && (FrakcioInfo[frakcio][fDeagle][2] > rang || FrakcioInfo[frakcio][fDeagle][id] < ammo))
					return Msg(playerid, "Nincs jogod a fegyverhez, vagy nincs a raktárban ennyi!");
				if(weapon == WEAPON_MP5 && (FrakcioInfo[frakcio][fMp5][2] > rang || FrakcioInfo[frakcio][fMp5][id] < ammo))
					return Msg(playerid, "Nincs jogod a fegyverhez, vagy nincs a raktárban ennyi!");
				if(weapon == WEAPON_SNIPER && (FrakcioInfo[frakcio][fSniper][2] > rang || FrakcioInfo[frakcio][fSniper][id] < ammo))
					return Msg(playerid, "Nincs jogod a fegyverhez, vagy nincs a raktárban ennyi!");	
				if(weapon == WEAPON_SHOTGUN && (FrakcioInfo[frakcio][fShotgun][2] > rang || FrakcioInfo[frakcio][fShotgun][id] < ammo))
					return Msg(playerid, "Nincs jogod a fegyverhez, vagy nincs a raktárban ennyi!");				
				if(weapon == WEAPON_M4 && (FrakcioInfo[frakcio][fM4][2] > rang || FrakcioInfo[frakcio][fM4][id] < ammo))
					return Msg(playerid, "Nincs jogod a fegyverhez, vagy nincs a raktárban ennyi!");		
				if(weapon == WEAPON_RIFLE && (FrakcioInfo[frakcio][fRifle][2] > rang || FrakcioInfo[frakcio][fRifle][id] < ammo))
					return Msg(playerid, "Nincs jogod a fegyverhez, vagy nincs a raktárban ennyi!");		
				if(weapon == WEAPON_AK47 && (FrakcioInfo[frakcio][fAk47][2] > rang || frakcio == FRAKCIO_KATONASAG && FrakcioInfo[frakcio][fAk47][id] < ammo))
					return Msg(playerid, "Nincs jogod a fegyverhez, vagy nincs a raktárban ennyi!");		
				if(weapon == WEAPON_COMBAT && (FrakcioInfo[frakcio][fCombat][2] > rang || FrakcioInfo[frakcio][fCombat][id] < ammo))
					return Msg(playerid, "Nincs jogod a fegyverhez, vagy nincs a raktárban ennyi!");	
				if(weapon == WEAPON_SILENCED && (FrakcioInfo[frakcio][fSilenced][2] > rang || FrakcioInfo[frakcio][fSilenced][id] < ammo))
					return Msg(playerid, "Nincs jogod a fegyverhez, vagy nincs a raktárban ennyi!");	
				if(weapon == WEAPON_PARACHUTE && (FrakcioInfo[frakcio][fParachute] < 1))
					return Msg(playerid, "Nincs a raktárban!");		
				
				if(id == 0)
				{
					if(WeaponCanHoldWeapon(playerid, weapon, 0) < 0) return Msg(playerid, "Nem fér el nálad!");
					
					WeaponGiveWeapon(playerid, weapon, .maxweapon = 0);
					
				}
				else
				{
					if(ammo <=0) return Msg(playerid, "Hibás töltény szám!");
					new venni = max(0, min(ammo, WeaponMaxAmmo(weapon) - WeaponAmmo(playerid, weapon)));
					if(!venni)
						return Msg(playerid, "Nem fér el nálad!");
						
					WeaponGiveAmmo(playerid, weapon, venni);
				
				}
				new raktar;
				
				if(weapon == WEAPON_DEAGLE)
					FrakcioInfo[frakcio][fDeagle][id] -=ammo, raktar=FrakcioInfo[frakcio][fDeagle][id];
				if(weapon == WEAPONSKILL_AK47)
					FrakcioInfo[frakcio][fAk47][id] -=ammo, raktar=FrakcioInfo[frakcio][fAk47][id];
				if(weapon == WEAPON_SILENCED)
					FrakcioInfo[frakcio][fSilenced][id] -=ammo, raktar=FrakcioInfo[frakcio][fSilenced][id];
				if(weapon == WEAPON_MP5)	
					FrakcioInfo[frakcio][fMp5][id] -=ammo, raktar=FrakcioInfo[frakcio][fMp5][id];
				if(weapon == WEAPON_M4)	
					FrakcioInfo[frakcio][fM4][id] -=ammo, raktar=FrakcioInfo[frakcio][fM4][id];
				if(weapon == WEAPON_SHOTGUN)
					FrakcioInfo[frakcio][fShotgun][id] -=ammo, raktar=FrakcioInfo[frakcio][fShotgun][id];
				if(weapon == WEAPON_SNIPER)
					FrakcioInfo[frakcio][fSniper][id] -=ammo, raktar=FrakcioInfo[frakcio][fSniper][id];
				if(weapon == WEAPON_COMBAT)
					FrakcioInfo[frakcio][fCombat][id] -=ammo, raktar=FrakcioInfo[frakcio][fCombat][id];
				if(weapon == WEAPON_RIFLE)
					FrakcioInfo[frakcio][fRifle][id] -=ammo, raktar=FrakcioInfo[frakcio][fRifle][id];
				if(weapon == WEAPON_PARACHUTE)
					FrakcioInfo[frakcio][fParachute] -=ammo, raktar=FrakcioInfo[frakcio][fParachute];
					
				Cselekves(playerid, "felvett egy fegyvert");
				
				if(id == 0)
				{
					format(_tmpString, 128, "felvett egy %s fegyvert fegyverraktárból", GunName(weapon)), Cselekves(playerid, _tmpString);
					format(_tmpString, 128, "[duty felvesz fegyver]%s Frakcio: %d | 1 Db %s-t | Raktár: Volt: %d Lett: %d", PlayerName(playerid),frakcio,GunName(weapon),raktar+ammo,raktar);
					Log("Fegyver",_tmpString);
				}
				else
				{
					format(_tmpString, 128, "felvett %d %s lõszert fegyverraktárból", ammo,GunName(weapon)), Cselekves(playerid, _tmpString);
					format(_tmpString, 128, "[duty felvesz lõszer]%s Frakcio: %d | %d Db %s-t | Raktár: Volt: %d Lett: %d", PlayerName(playerid),frakcio,ammo,GunName(weapon),raktar+ammo,raktar);
					Log("Fegyver",_tmpString);
				}
				
			}

		}
		if(egyezik(param[2],"lead"))
		{
			new weaponstr[32]; new weapon; new ammo;
			if(params < 3)return Msg(playerid, "/duty [fegyver|lõszer] [lead] [fegyvernév]");
			
			sscanf(param[3], "s[32]",weaponstr);
			if(!IsACop(playerid)) return Msg(playerid, "Ez a parancs csak rendõröknek érhetõ el!");
			
			if(isNumeric(weaponstr))
				weapon = strval(weaponstr);
			else
				weapon = GetGunID(weaponstr);
				
			if(weapon < 1 || weapon > MAX_WEAPONS)
				return Msg(playerid, "Ilyen fegyver nem létezik");
			
			if(id == 0)
			{
				new slot = WeaponHaveWeapon(playerid, weapon);
				if(slot == NINCS)
					return Msg(playerid, "Nincs ilyen fegyvered!");
				
				ammo=1;
				
				if(!WeaponTakeWeapon(playerid, weapon)) return Msg(playerid, "Hiba, valamit elírtál, vagy nincs neked ilyen fegyvered!");
	
				
			}
			else
			{
				ammo=PlayerWeapons[playerid][pAmmo][weapon];
			
				if(ammo <=0)
					return Msg(playerid, "Nincs ilyen lõszered!");
			
				if(!WeaponTakeAmmo(playerid, weapon)) return Msg(playerid, "Hiba, valamit elírtál, vagy nincs neked ilyen lõszered!");
	
			}
			new raktar;	
		
			if(weapon == WEAPON_DEAGLE)
				FrakcioInfo[frakcio][fDeagle][id] +=ammo, raktar=FrakcioInfo[frakcio][fDeagle][id];
			if(weapon == WEAPONSKILL_AK47)
				FrakcioInfo[frakcio][fAk47][id] +=ammo, raktar=FrakcioInfo[frakcio][fAk47][id];
			if(weapon == WEAPON_SILENCED)
				FrakcioInfo[frakcio][fSilenced][id] +=ammo, raktar=FrakcioInfo[frakcio][fSilenced][id];
			if(weapon == WEAPON_MP5)	
				FrakcioInfo[frakcio][fMp5][id] +=ammo, raktar=FrakcioInfo[frakcio][fMp5][id];
			if(weapon == WEAPON_M4)	
				FrakcioInfo[frakcio][fM4][id] +=ammo, raktar=FrakcioInfo[frakcio][fM4][id];
			if(weapon == WEAPON_SHOTGUN)
				FrakcioInfo[frakcio][fShotgun][id] +=ammo, raktar=FrakcioInfo[frakcio][fShotgun][id];
			if(weapon == WEAPON_SNIPER)
				FrakcioInfo[frakcio][fSniper][id] +=ammo, raktar=FrakcioInfo[frakcio][fSniper][id];
			if(weapon == WEAPON_COMBAT)
				FrakcioInfo[frakcio][fCombat][id] +=ammo, raktar=FrakcioInfo[frakcio][fCombat][id];
			if(weapon == WEAPON_RIFLE)
				FrakcioInfo[frakcio][fRifle][id] +=ammo, raktar=FrakcioInfo[frakcio][fRifle][id];
			if(weapon == WEAPON_PARACHUTE)
				FrakcioInfo[frakcio][fParachute] +=ammo, raktar=FrakcioInfo[frakcio][fParachute];
			
			if(id == 0)
			{
				format(_tmpString, 128, "visszrakott egy %s fegyvert fegyverraktárba", GunName(weapon)), Cselekves(playerid, _tmpString);
				format(_tmpString, 128, "[duty lead fegyver]%s Frakcio: %d | 1 Db %s-t | Raktár Volt: %d Lett: %d", PlayerName(playerid),frakcio,GunName(weapon),raktar-ammo,raktar);
				Log("Fegyver",_tmpString);
			}
			else
			{
				format(_tmpString, 128, "visszrakott %d %s lõszert fegyverraktárba", ammo,GunName(weapon)), Cselekves(playerid, _tmpString);
				format(_tmpString, 128, "[duty lead lõszer]%s Frakcio: %d | %d Db %s-t | Raktár Volt: %d Lett: %d", PlayerName(playerid),frakcio,ammo,GunName(weapon),raktar-ammo,raktar);
				Log("Fegyver",_tmpString);
			}
			Log("Fegyver",_tmpString);
		}
		

		return 1;
	}

//======Leüt=======
	if(egyezik(cmd, "/leüt") || egyezik(cmd, "/leut"))
	{
		if(Szint(playerid) < 10)
			return Msg(playerid, "10es szinttõl!");

		if(NemMozoghat(playerid))
			return Msg(playerid, "Hogyne...");

		if(Leutve[playerid])
			return Msg(playerid, "Leütve akarod leütni?");

		if(Animban[playerid])
			return Msg(playerid, "Animban vagy és úgy akarod leütni?");

		if(Leutott[playerid] > 0)
		{
			Msg(playerid, "Még várnod kell.");
			return 1;
		}
		if(IsPlayerInAnyVehicle(playerid))
		{
			Msg(playerid, "Kocsiban nem!");
			return 1;
		}
		if(WeaponArmed(playerid) != WEAPON_BAT && WeaponArmed(playerid) != WEAPON_DEAGLE && WeaponArmed(playerid) != WEAPON_AK47 && WeaponArmed(playerid) != WEAPON_M4) return Msg(playerid, "Csak Baseballütõvel, Deaglevel, vagy Nehézfegyverzettel!");
		new leutott;
		if(params > 0)
			leutott = ReturnUser(param[1]);
		else
			leutott = GetClosestPlayer(playerid);
		
		if(leutott == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs a közeledben senki");
		
		if(leutott == BankSFNPC || leutott==BankNPC)
		{
			//Jail(playerid, "set", 15*60, "ajail2", "Terno: 1 Hagyod békén NPC-t! 2 Ablakon át ütöd le? NONRP");
			Msg(playerid, "Szerintem ablakon át nem tudod leütni. Te nem így gondolod?");
			return 1;
		}

		if(Leutve[leutott]) return Msg(playerid, "Már levan ütve jóember, nem látod?");

		if(leutott == playerid) return 1;
		
		if(PlayerInfo[leutott][pMegad])
			return Msg(playerid, "Nem látod, hogy megadta magát? ...");
			
		if(AdminDuty[leutott] == 1)
		{
			SeeBan(playerid, (UnixTime + (60*60*1)), NINCS, "Adminszolgálatos leütése");
			return 1;
		}

		if(IsPlayerConnected(leutott))
		{
			if(GetDistanceBetweenPlayers(playerid,leutott) < 2)
			{
				if(IsPlayerInAnyVehicle(leutott))
				{
					Msg(playerid, "Elöbb talán szedd ki..");
					return 1;
				}

				if(PlayerInfo[playerid][pJailed] == 3 || PlayerInfo[playerid][pJailed] == 6)
				{
					Cselekves(playerid, "le akart ütni valakit adminjailban, de kapott +15perc idõt :)", 0, true);
					PlayerInfo[playerid][pJailTime] += 900;
					return 1;
				}

				Feketeseg(leutott, true);
				Leutve[leutott] = true;
				LeutveIdo[leutott] = 60;
				Freeze(leutott);
				GetPlayerName(leutott, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				//format(string, sizeof(string), "<< %s leütötte %s-t! >>", sendername, giveplayer);
				//ABroadCast(COLOR_LIGHTRED, string, 1);
				Msg(leutott, "Leütöttek");
				Msg(playerid, "Leütötted");
				Cselekves(playerid, "leütött valakit");
				ApplyAnimation(playerid,"PED","BIKE_elbowL",4.0,0,0,0,0,0);
				ApplyAnimation(leutott,"PED","KO_skid_front",4.1,0,1,1,1,1);
				ApplyAnimation(leutott,"PED","KO_skid_front",4.1,0,1,1,1,1);
				
				WeaponArm(leutott);
				
				Leutott[playerid] = 15;
				//FegyverElrak(leutott);
				WeaponArm(leutott);
				GameTextForPlayer(leutott, "~r~Leutottek", 2500, 0);
			}
			else
			{
				Msg(playerid, "A közeledben nincs senki!");
				return 1;
			}
		}
	    return 1;
	}

//----------------------------------[departments]-----------------------------------------------
	if(egyezik(cmd, "/departments") || egyezik(cmd, "/d"))
	{
		if(Bortonben(playerid)) return Msg(playerid, "a-a");
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid) && !LMT(playerid, FRAKCIO_MENTO) && !LMT(playerid, FRAKCIO_TUZOLTO) && !LMT(playerid, FRAKCIO_ONKORMANYZAT)) return Msg(playerid, "(( Nem használhatod ezt a parancsot! ))");

			if(gFam[playerid] || !PlayerInfo[playerid][pRadio])	return Msg(playerid, "Kivan kapcsolva a rádiód vagy Nincs");
			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: (/d)epartments [Üzeneted]");

			
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strrep(sendername, '_', ' ');
			//if(IsOOC(result)) return Msg(playerid, "Nincs /d ooc!");
			new rangnev[32], munka = PlayerInfo[playerid][pMember] - 1, rang = PlayerInfo[playerid][pRank], r = OsszRang[munka+1];
			
			if(LMT(playerid, FRAKCIO_ONKORMANYZAT) && rang < 10) return Msg(playerid, "10-es rangtól");
			
			if(rang <= 0) rangnev = Rangok[munka][0];
			else if(rang >= 1 && rang <= r) rangnev = Rangok[munka][rang];
			else rangnev = Rangok[munka][r];
			if(Swatduty[playerid] ==1)
			{
				if(PlayerInfo[playerid][pSwatRang] == 12){format(rangnev, sizeof(rangnev), "SWAT Parancsnok");}
				else if(PlayerInfo[playerid][pSwatRang] == 11){format(rangnev, sizeof(rangnev), "SWAT MásodParancsnok");}
				else if(PlayerInfo[playerid][pSwatRang] == 10){format(rangnev, sizeof(rangnev), "SWAT VezérÕrnagy");}
				else if(PlayerInfo[playerid][pSwatRang] == 9){format(rangnev, sizeof(rangnev), "SWAT Kapitány");}
				else if(PlayerInfo[playerid][pSwatRang] == 8){format(rangnev, sizeof(rangnev), "SWAT Ezredes");}
				else if(PlayerInfo[playerid][pSwatRang] == 7){format(rangnev, sizeof(rangnev), "SWAT Õrnagy");}
				else if(PlayerInfo[playerid][pSwatRang] == 6){format(rangnev, sizeof(rangnev), "SWAT Százados");}
				else if(PlayerInfo[playerid][pSwatRang] == 5){format(rangnev, sizeof(rangnev), "SWAT FõHadnagy");}
				else if(PlayerInfo[playerid][pSwatRang] == 4){format(rangnev, sizeof(rangnev), "SWAT Hadnagy");}
				else if(PlayerInfo[playerid][pSwatRang] == 3){format(rangnev, sizeof(rangnev), "SWAT Kommandós");}
				else if(PlayerInfo[playerid][pSwatRang] == 2){format(rangnev, sizeof(rangnev), "SWAT Tiszt");}
				else if(PlayerInfo[playerid][pSwatRang] == 1){format(rangnev, sizeof(rangnev), "SWAT Közlegény");}
				else if(PlayerInfo[playerid][pSwatRang] == 0){format(rangnev, sizeof(rangnev), "SWAT Újonc");}
			}
			if(PlayerInfo[playerid][pHamisNev] != 0)
				format(sendername, sizeof(sendername), "%s", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
			if(Onkentesszolgalatban[playerid])
				format(rangnev, 32, "Önkéntes");
			format(_tmpString, sizeof(_tmpString), "** %s %s: %s, vége. **", rangnev, sendername, result);
			SendMessage(SEND_MESSAGE_DEPARTMENTS, _tmpString, COLOR_ALLDEPT);
			/*CopMsgFormat(COLOR_ALLDEPT, "** %s %s: %s, vége. **", rangnev, sendername, result);
			SendRadioMessageFormat(FRAKCIO_ONKORMANYZAT, COLOR_ALLDEPT, "** %s %s: %s, vége. **", rangnev, sendername, result);
			SendRadioMessageFormat(FRAKCIO_MENTO, COLOR_ALLDEPT, "** %s %s: %s, vége. **", rangnev, sendername, result);
			SendRadioMessageFormat(FRAKCIO_TUZOLTO, COLOR_ALLDEPT, "** %s %s: %s, vége. **", rangnev, sendername, result);*/
			format(string, sizeof(string), "** %s %s: %s, vége. **", rangnev, sendername, result);
			printf("%s", string);
			if(Kamera[playerid] == NINCS)
			{
				format(string, sizeof(string), "[RÁDIÓ]%s mondja: %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			}
		}
		return 1;
	}
	
	if(egyezik(cmd, "/departments2") || egyezik(cmd, "/d2"))
	{
		if(PlayerInfo[playerid][pHitman] < 1) return 1;
		if(gFam[playerid] || !PlayerInfo[playerid][pRadio])	return Msg(playerid, "Kivan kapcsolva a rádiód vagy Nincs");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		strrep(sendername, '_', ' ');
		if(params < 3) return Msg(playerid, "/d(epartments)2 [FrakcióID] [RangID] [Üzenet]");
				
		new sznev = strval(param[1])-1;
		if(!IsRendvedelmiFrakcio(strval(param[1]))) return Msg(playerid, "Csak rendvédelmis szervezetként beszélhetsz!");
		new rang = strval(param[2]);
					
					
		if(params < 3) return Msg(playerid, "/d(epartments)2 [FrakcióID] [RangID] [Üzenet]");
			
		if(PlayerInfo[playerid][pHamisNev] != 0)
		{
			format(_tmpString, sizeof(_tmpString), "** %s: %s %s, vége. **", Rangok[sznev][rang], ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), param[3]);
			SendMessage(SEND_MESSAGE_DEPARTMENTS, _tmpString, COLOR_ALLDEPT);
		}
		else
		{
			format(_tmpString, sizeof(_tmpString), "** %s: %s %s, vége. **", Rangok[sznev][rang], sendername, param[3]);
			SendMessage(SEND_MESSAGE_DEPARTMENTS, _tmpString, COLOR_ALLDEPT);
		}
		if(Kamera[playerid] == NINCS)
		{
			if(PlayerInfo[playerid][pHamisNev] != 0)
			{
			format(string, sizeof(string), "[RÁDIÓ]%s mondja: %s", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), param[3]);
			}
			else
			{
			format(string, sizeof(string), "[RÁDIÓ]%s mondja: %s", sendername, param[3]);
			}
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		}
		printf("%s", string);
		return 1;
	}

//----------------------------------[LOCK]-----------------------------------------------
	if(strcmp(cmd, "/lock", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
    	{
			if(HireCar[playerid] == NINCS)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Nincs bérelt kocsid!");
				return 1;
			}
			new berkocsi = HireCar[playerid];
			if(GetPlayerDistanceFromVehicle(playerid, berkocsi) > 3.0) return Msg(playerid, "Nincs a közeledben bérelt jármû!");

			if(berkocsi != NINCS)
			{
				if(gCarLock[berkocsi] == 0)
				{
					GameTextForPlayer(playerid, "~w~Berelt kocsid ~r~zarva", 5000, 3);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					LockCar(berkocsi);
					format(string, sizeof(string), "* Valaki bezárta a kocsiját.");
					ProxDetector(30.0, playerid,string , COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					GameTextForPlayer(playerid, "~w~Berelt kocsid ~g~nyitva", 5000, 3);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					UnLockCar(berkocsi);
					format(string, sizeof(string), "* Valaki kinyitotta a kocsiját.");
  					ProxDetector(30.0, playerid,string , COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/aopen"))
	{
		if(!Admin(playerid, 1337)) return Msg(playerid, "Nem használhatod!");
		new haz = HaznalVan(playerid);
		if(haz == NINCS) return 1;
		if(HouseInfo[haz][hLock] == 1)
		{
			HouseInfo[haz][hLock] = 0;
			HazUpdate(haz, HAZ_Lock);
			GameTextForPlayer(playerid, "~g~NYITVA", 5000, 6);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			return 1;
		}
		else if(HouseInfo[haz][hLock] == 0)
		{
			HouseInfo[haz][hLock] = 1;
			HazUpdate(haz, HAZ_Lock);
			GameTextForPlayer(playerid, "~r~ZÁRVA", 5000, 6);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/open", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new haz = HazaElottVan(playerid), berel = PlayerInfo[playerid][pBerlo];
			if(haz == NINCS) haz = HazabanVan(playerid);
			if(haz == NINCS) haz = HazaElottVan2(playerid);
			if(haz == NINCS) haz = HazabanVan2(playerid);

			if(berel == NINCS || (!Haznal(playerid, berel) && !Hazban(playerid, berel)))
				berel = NINCS;

			if(haz != NINCS || berel != NINCS)
			{
				if(haz == NINCS && berel != NINCS) haz = berel;

				if(HouseInfo[haz][hLock] == 1)
				{
					HouseInfo[haz][hLock] = 0;
					//HazUpdate(haz, "Zarva='%d'", 0);
					HazUpdate(haz, HAZ_Lock);
					GameTextForPlayer(playerid, "~w~Ajto ~g~Nyitva", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "* Valaki kinyitotta a ház ajtaját.");
   					ProxDetector(30.0, playerid,string , COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else if(HouseInfo[haz][hLock] == 0)
				{
					HouseInfo[haz][hLock] = 1;
					//HazUpdate(haz, "Zarva='%d'", 1);
					HazUpdate(haz, HAZ_Lock);
					GameTextForPlayer(playerid, "~w~Ajto ~r~Zarva", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "* Valaki bezárta a ház ajtaját.");
   					ProxDetector(30.0, playerid,string , COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							BizzInfo[i][bLocked] = 0;
							GameTextForPlayer(playerid, "~w~Biznisz ~g~Nyitva", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "* Valaki kinyitotta a bizniszét.");
	    					ProxDetector(30.0, playerid,string , COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
						}
						if(BizzInfo[i][bLocked] == 0)
						{
							BizzInfo[i][bLocked] = 1;
							GameTextForPlayer(playerid, "~w~Biznisz ~r~Zarva", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "* Valaki bezárta a bizniszét.");
	    					ProxDetector(30.0, playerid,string , COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Nincs hozza kulcsod!", 5000, 6);
						return 1;
					}
				}
			}
	    }
	    return 1;
	}
	if(egyezik(cmd, "/pmek"))
	{
		if(!Admin(playerid, 1337)) return Msg(playerid, "Nem használhatod!");
		if(Pmek[playerid] ==0)
		{
			Pmek[playerid]=1;
			ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s Bekapcsolta minden PM nézését >>", AdminName(playerid));
			SendClientMessage(playerid, COLOR_GRAD2, "Bekapcsoltad!!");
		}
		else
		{
			Pmek[playerid]=0;
			ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< %s Kikapcsolta minden PM nézését >>", AdminName(playerid));
			SendClientMessage(playerid, COLOR_GRAD2, "Kikapcsoltad!!");
		}
	}

//----------------------------------[/pm]-----------------------------------------------
	if(egyezik(cmd, "/pm"))
	{
		if(FloodCheck(playerid)) return 1;
		new kinek, uzenet[128];
		if(sscanf(pms, "rs[128]", kinek, uzenet)) return Msg(playerid, "Használata: /pm [Adminisztrátor] [üzenet]");

		if(kinek == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");
		if(ScripterDuty[kinek] == 1)
			SendClientMessage(playerid,COLOR_RED,"Nefeled, csak is Scripter ügyekben írhatsz. Pl.: Garázs, Atm, Autómaták, Telefon, Ajtó teleport lerakása, Kapu stb..");

		if(!Admin(playerid, 1) && !Admin(kinek, 1) && !IsScripter(kinek))
			return Msg(playerid, "Csak adminnak/scripternek írhatsz!");

		if(!Admin(playerid, 1) && !AdminDuty[kinek] && !ScripterDuty[kinek])
			return Msg(playerid, "Õ nincs szolgálatban");

		if(HidePM[kinek] && !Admin(playerid, 1337)) return Msg(playerid, "Neki nem lehet üzenetet küldeni, mivel letiltotta a PM fogadást");
		if(ReportDuty[kinek] && !Admin(playerid, 1337)) return Msg(playerid, "Neki nem lehet üzenetet küldeni, mivel reportos adminszolgálatban van");
		if(PMBlock[kinek][playerid] && !PlayerInfo[playerid][pAdmin])
			return Msg(playerid, "Nem tudsz írni neki, mivel blokkolta a PMjeid");
		
		if(gPaused[kinek]) SendFormatMessage(playerid, COLOR_WHITE, "%s "COL_PIROS"jelenleg szünetelteti a játékát"COL_FEHER", így valószínûleg késõbb fog válaszolni!", AdminName(kinek));

		if(!Admin(kinek) && !IsAS(kinek))
		{
			if(ValaszokEll[playerid][kinek]<1)
			{
				StatInfo[playerid][pPM]++;
			}
		}
		if(strlen(uzenet) < 10 || ValaszokEll[playerid][kinek]>0)
			ValaszokEll[playerid][kinek]=15;


		if(PlayerInfo[playerid][pHamisNev] == 0 || !Admin(playerid, 1337))
			format(string, sizeof(string), "[%d]%s üzeni: %s", playerid, Nev(playerid), uzenet);
		else
			format(string, sizeof(string), "%s üzeni: %s", PlayerInfo[playerid][pHamisNev], uzenet);

		SendClientMessage(kinek, COLOR_LIGHTBLUE, string);
		foreach(Jatekosok, x)
		{
			if(Pmek[x] == 1 && Admin(x, 1337))
			{
				format(string, sizeof(string), "[%d]%s üzen: [%d]%s: %s", playerid, Nev(playerid), kinek, Nev(kinek), uzenet);
				SendClientMessage(x, COLOR_LIGHTBLUE, string);
			}
		}
		format(string, sizeof(string), " Üzeneted neki: %s - %s", Nev(kinek), uzenet);
		SendClientMessage(playerid,  COLOR_LIGHTBLUE, string);
		return 1;
	}
	//----------------------------------[/pm]-----------------------------------------------

	if(strcmp(cmd, "/dice", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new dice = random(6)+1;
			format(string, sizeof(string), "* %s dob a 6 oldalú kockával és az eredmény: %d", ICPlayerName(playerid), dice);
			ApplyAnimation(playerid,"GRENADE","WEAPON_throwu",3.0,0,0,0,0,0);
			ProxDetector(5.0, playerid, string, TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR);
		}
		return 1;
	}
	if(strcmp(cmd, "/dice12", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new dice = random(12)+1;
			format(string, sizeof(string), "* %s dob a 12 oldalú kockával és az eredmény: %d", ICPlayerName(playerid), dice);
			ApplyAnimation(playerid,"GRENADE","WEAPON_throwu",3.0,0,0,0,0,0);
			ProxDetector(5.0, playerid, string, TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR);
		}
		return 1;
	}
	if(strcmp(cmd, "/dice20", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new dice = random(20)+1;
			format(string, sizeof(string), "* %s dob a 20 oldalú kockával és az eredmény: %d", ICPlayerName(playerid), dice);
			ApplyAnimation(playerid,"GRENADE","WEAPON_throwu",3.0,0,0,0,0,0);
			ProxDetector(5.0, playerid, string, TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR);
		}
		return 1;
	}
	if(egyezik(cmd, "/áru") || egyezik(cmd, "/aru"))
	{
		if(params < 1)
		{
			Msg(playerid, "/áru [Funkció]");
			Msg(playerid, "Funkciók: felpakol, feltöltés, megnéz, lista");
			return 1;
		}
		if(egyezik(param[1], "lista"))
		{
			SendClientMessage(playerid, COLOR_ORANGE, "================= [ Boltok ] =================");
		    new x = NINCS;
		    for(;++x < MAX_BOLTOK;)
		    {
		        if(Boltok[x][boltAruTav] > 0)
		            SendFormatMessage(playerid, COLOR_GREEN, "ID: %d | Árucikkek: %d / %d | Vételár: %dFt | Tulaj: %s | Név: %s", x, Boltok[x][boltProdMennyiseg],Boltok[x][boltMaxProdMennyiseg],Boltok[x][boltProdVetelAr], Boltok[x][boltTulaj], Boltok[x][boltNev]);
			}
		}
		if(egyezik(param[1], "megnéz") || egyezik(param[1], "megnez"))
		{
			if(IsPlayerConnected(playerid))
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				if(!IsATruck(tmpcar))
				{
					GameTextForPlayer(playerid, "~r~Nem vagy aruszallito/teherszallito kocsiban!", 5000, 1);
					return 1;
				}
				format(string, sizeof(string), "Árucikkek: %d/%d.", MAXPROD,PlayerHaul[tmpcar][pLoad]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
			}
			return 1;
		}
		if(egyezik(param[1], "felpakol"))
		{
			if(IsPlayerConnected(playerid))
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				new ProdAr = 500;
				if(PlayerToPoint(60.0, playerid, 2487.3169, -2106.0815, 13.5445))
				{
					if(IsATruck(tmpcar))
					{
						if(PlayerHaul[tmpcar][pLoad] < MAXPROD)
						{
							new mennyiseg = strval(param[2]);
							if(!strlen(param[2]))
							{
								SendClientMessage(playerid, COLOR_GRAD1, "Használat: /áru felpakol [mennyiség]");
								return 1;
							}
							if(mennyiseg < 1 || mennyiseg > MAXPROD) { SendFormatMessage(playerid, COLOR_GREY, "A kocsiban max %d árucikk fér el!", MAXPROD); return 1; }
							new check= PlayerHaul[tmpcar][pLoad] + mennyiseg;
							if(check > MAXPROD)
							{
								format(string, sizeof(string), "A kocsi maximum %d árucikket bír el!",MAXPROD);
								SendClientMessage(playerid, COLOR_GREY, string);
								return 1;
							}
							new osszeg = mennyiseg*ProdAr;
							if(GetMoney(playerid) >= osszeg)
							{
								PlayerHaul[tmpcar][pLoad] += mennyiseg;
								format(string, sizeof(string), "Árucikkek: %d/%d.", MAXPROD, PlayerHaul[tmpcar][pLoad]);
								SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								format(string, sizeof(string), "Vettél %d árucikket %dFt-ért", mennyiseg,osszeg);
								SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								GiveMoney(playerid,-osszeg);
								return 1;
							}
							else
							{
								format(string, sizeof(string), "Nincs elég pénzed(%dFt) %d áru megvételére!", osszeg, mennyiseg);
								SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return 1;
							}
						}
						else
						{
								format(string, sizeof(string), "Árucikkek: %d/%d.", MAXPROD, PlayerHaul[tmpcar][pLoad]);
								SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
								return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, TEAM_GROVE_COLOR, "Nem vagy teherszállító kocsiban!");
						return 1;
					}
				}
				else SendClientMessage(playerid, TEAM_GROVE_COLOR, "Nem vagy az árufeltöltõ telepen!");
			}
		}
		if(egyezik(param[1], "feltöltés") || egyezik(param[1], "feltoltes"))
		{
			if(params < 2)
			{
				Msg(playerid, "/áru feltöltés [Funkció]");
				Msg(playerid, "Funkciók: biznisz, bolt");
				return 1;
			}
			new cashmade;
			new tmpcar;
			if(IsPlayerConnected(playerid))
			{
				tmpcar = GetPlayerVehicleID(playerid);
				if(!IsATruck(tmpcar))
				{
					GameTextForPlayer(playerid, "~r~Nem vagy teherszállítóban!", 5000, 1);
					return 1;
				}
				if(PlayerHaul[tmpcar][pLoad] == 0)
				{
					GameTextForPlayer(playerid, "~r~A kocsi ures", 5000, 1);
					format(string, sizeof(string), "Árucikkek: %d/%d.", MAXPROD, PlayerHaul[tmpcar][pLoad]);
					SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
					return 1;
				}
				if(egyezik(param[2], "biznisz"))
				{
					for(new i = 0; i < sizeof(BizzInfo); i++)
					{
						if (PlayerToPoint(10, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
						{
							for(new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
							{
								if(BizzInfo[i][bProducts] == BizzInfo[i][bMaxProducts])
								{
									GameTextForPlayer(playerid, "~r~A biznisz tele", 5000, 1);
									SendFormatMessage(playerid, TEAM_GROVE_COLOR, "Kaptál érte %dFt-ot | Árucikkek: %d/%d.", cashmade, MAXPROD, PlayerHaul[tmpcar][pLoad]);
									PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
									return 1;
								}
								if(BizzInfo[i][bPriceProd] > BizzInfo[i][bTill])
								{
									GameTextForPlayer(playerid, "~r~Nem tudjuk kifizetni mindet", 5000, 1);
									SendFormatMessage(playerid, TEAM_GROVE_COLOR, "Kaptál érte %dFt-ot | Árucikkek: %d/%d.", cashmade, MAXPROD, PlayerHaul[tmpcar][pLoad]);
									PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
									return 1;
								}
								PlayerHaul[tmpcar][pLoad]--;
								BizzInfo[i][bProducts]++;
								cashmade = cashmade+BizzInfo[i][bPriceProd];
								ConsumingMoney[playerid] = 1;
								GiveMoney(playerid,BizzInfo[i][bPriceProd]);
							
								BizPenz(i, -BizzInfo[i][bPriceProd]);
								if(PlayerHaul[tmpcar][pLoad] == 0)
								{
									SendFormatMessage(playerid, TEAM_GROVE_COLOR, "Kaptál érte %dFt-ot | Árucikkek: %d/%d.", cashmade, MAXPROD, PlayerHaul[tmpcar][pLoad]);
									GameTextForPlayer(playerid, "~r~A kocsi ures", 5000, 1);
									return 1;
								}
							}
						
							BizUpdate(i, BIZ_Till, BIZ_Products);
							return 1;
						}
					}
				}
				if(egyezik(param[2], "bolt"))
				{
					for(new i = 0; i < sizeof(Boltok); i++)
					{
						if (PlayerToPoint(Boltok[i][boltAruTav], playerid,Boltok[i][boltAruPosX], Boltok[i][boltAruPosY], Boltok[i][boltAruPosZ]))
						{
							for(new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
							{
								if(Boltok[i][boltProdMennyiseg] == Boltok[i][boltMaxProdMennyiseg])
								{
									GameTextForPlayer(playerid, "~r~A biznisz tele", 5000, 1);
									SendFormatMessage(playerid, TEAM_GROVE_COLOR, "Kaptál érte %dFt-ot | Árucikkek: %d/%d.", cashmade, MAXPROD, PlayerHaul[tmpcar][pLoad]);
									return 1;
								}
								if(Boltok[i][boltProdVetelAr] > Boltok[i][boltSzef])
								{
									GameTextForPlayer(playerid, "~r~Nem tudjuk kifizetni mindet", 5000, 1);
									SendFormatMessage(playerid, TEAM_GROVE_COLOR, "Kaptál érte %dFt-ot | Árucikkek: %d/%d.", cashmade, MAXPROD, PlayerHaul[tmpcar][pLoad]);
									return 1;
								}
								PlayerHaul[tmpcar][pLoad]--;
								Boltok[i][boltProdMennyiseg]++;
								cashmade = cashmade+Boltok[i][boltProdVetelAr];
								ConsumingMoney[playerid] = 1;
								GiveMoney(playerid,Boltok[i][boltProdVetelAr]);
							
								Boltok[i][boltSzef] -= Boltok[i][boltProdVetelAr];
								BoltAdatFrissites(i);
								if(PlayerHaul[tmpcar][pLoad] == 0)
								{
									SendFormatMessage(playerid, TEAM_GROVE_COLOR, "Kaptál érte %dFt-ot | Árucikkek: %d/%d.", cashmade, MAXPROD, PlayerHaul[tmpcar][pLoad]);
									GameTextForPlayer(playerid, "~r~A kocsi ures", 5000, 1);
									return 1;
								}
							}
							BoltAdatFrissites(i);
							return 1;
						}
					}
				}
			}
			GameTextForPlayer(playerid, "~r~Messze vagy a bolttol vagy biznisztol", 5000, 1);
			return 1;
		}
		return 1;
	}
	if(egyezik(cmd, "/buy") || egyezik(cmd, "/vesz") || egyezik(cmd, "/abuy") || egyezik(cmd, "/avesz"))
	{
		//if(!PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53) && !PlayerToPoint(100, playerid, 1347.6865,1328.8383,10.8400)) return Msg(playerid, "Nem vagy 24/7-ben/autósboltban.");
		//if(PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53) && GetPlayerInterior(playerid) != 6 || IsBoltbaVan(playerid)) teszt erejéig
		
		
		new bolt = IsBoltbaVan(playerid);
		if(bolt != NINCS)
		{	
			if(MunkaFolyamatban[playerid]) return Msg(playerid, "Jelenleg nem vásárolhatsz semmit!");
			
			if(Boltok[bolt][boltProdMennyiseg] < 1)
				return GameTextForPlayer(playerid, "~r~res a bolt!", 5000, 1);
			new szoveg[750], id;
			while(id < sizeof(BuyCuccok))
			{
				if(id == 0) format(szoveg, 750, "%s", BuyCuccok[0]);
				else format(szoveg, 750, "%s\n%s", szoveg, BuyCuccok[id]);
				id++;
			}

			ShowPlayerDialog(playerid, DIALOG_VESZ, DIALOG_STYLE_LIST, "24/7", szoveg, "Megvesz", "Mégse");
			TogglePlayerControllable(playerid, false);
			Cselekves(playerid, "nézelõdik", 1);
			
		}
		else if(PlayerToPoint(100, playerid, 1347.6865,1328.8383,10.8400) && (GetPlayerVirtualWorld(playerid) == 124 || GetPlayerVirtualWorld(playerid) == 135))
		{
			ShowPlayerDialog(playerid, DIALOG_AVESZ, DIALOG_STYLE_LIST, "Autósbolt", "Vontatókötél - 3.000Ft\nAkkumulátortöltõ(egyszerhasználatos) - 40.000Ft\nGPS Lokátor - 25.000Ft\nBikázó kábel - 20.000Ft\nSzerszámosláda - 50.000Ft\nMotorolaj(egyszerhasználatos) - 20.000 Ft", "Megvesz","Mégse");
			Cselekves(playerid, "nézelõdik", 1);
		}
		else if(PlayerToPoint(100, playerid, -26.691598,-55.714897,1003.546875) && GetPlayerInterior(playerid) == 6)
		{
		
			ShowPlayerDialog(playerid, DIALOG_GYVESZ, DIALOG_STYLE_LIST, "Gyógyszertár", "Aspirin(10 DB hp +10/db) - 8.000Ft\nCataflan(10 DB hp +20/db)- 12.000Ft\n ", "Megvesz","Mégse");
			Cselekves(playerid, "nézelõdik", 1);
		
		}
		else
			Msg(playerid, "Nem vagy 24/7-ben vagy autósboltban vagy gyógyszertárban!");
	}
	if(strcmp(cmd, "/kocka", true) == 0)
 	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerToPoint(8.0, playerid, 1871.4955, -1711.7728, 1286.0610))
	  		{
				BankkartyaFizet(playerid,-800);
				//GiveMoney(playerid, -800);
				gDice[playerid] = 1;
				SendClientMessage(playerid, COLOR_WHITE, " Kocka megvéve. A /kockahelp parancsban sok segítséget találsz");
				return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, " Nem vagy a kaszinó bárjánál!");
		}
		return 1;
	}
	if(strcmp(cmd, "/buyhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pPhousekey] != NINCS)
			{
				if(PlayerInfo[playerid][pPremiumPont] < 1)
					return Msg(playerid, "Már van egy házad! Ha szeretnél második házat, vegyél prémiumot!");
				else if(PlayerInfo[playerid][pPremiumPont] > 0 && PlayerInfo[playerid][pPhousekey2] != NINCS && PlayerInfo[playerid][pPhousekey3] != NINCS)
					return Msg(playerid, "Márhárom házad van!");
				else if(PlayerInfo[playerid][pPremiumPont] > 0 && PlayerInfo[playerid][pPhousekey2] == NINCS && Biztos[playerid] != 1)
				{
					Biztos[playerid] = 1;
					Msg(playerid, "Biztos vagy benne, hogy a prémium pontodat felhasználod második vagy harmadik házra? Jármûvet is vehetsz belõle.");
					Msg(playerid, "Ha biztos van benne, írd be újra a parancsot!");
				}
			}

			GetPlayerName(playerid, playername, sizeof(playername));
			new hazak = sizeof(HouseInfo);
			for(new h = 0; h < hazak; h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
				{
					if(HouseInfo[h][hCsak] == 1)
					{
					    if(strcmp(playername, HouseInfo[h][hCsakneki], true))
					    {
					        format(string, sizeof(string), "Ezt a házat csak %s veheti meg!", HouseInfo[h][hCsakneki]);
					        SendClientMessage(playerid, COLOR_RED, string);
					        return 1;
	        			}
					}

					if(GetMoney(playerid) >= HouseInfo[h][hValue])
					{
					    new neki[MAX_PLAYER_NAME];
						neki = "Nemigenyles";

						HouseInfo[h][hOwned] = 1;
						HouseInfo[h][hCsak] = 0;

						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						HouseInfo[h][hTulaj] = PlayerInfo[playerid][pID];

						GiveMoney(playerid,-HouseInfo[h][hValue]);

						PlayerPlayMusic(playerid);
						new HazBelso = HouseInfo[h][hBelso];

						SetPlayerInterior(playerid,IntInfo[HazBelso][iNumber]);
						SetPlayerPos(playerid,IntInfo[HazBelso][iExitX],IntInfo[HazBelso][iExitY],IntInfo[HazBelso][iExitZ]);
						SetPlayerVirtualWorld(playerid, h);
						PlayerInfo[playerid][pLocal] = h;
						SendClientMessage(playerid, COLOR_WHITE, "Gratulálok! Megvetted új házadat!");

						if(PlayerInfo[playerid][pPhousekey] == NINCS)
						{
							PlayerInfo[playerid][pPhousekey] = h;
						}
						else if(PlayerInfo[playerid][pPhousekey2] == NINCS)
						{
							PlayerInfo[playerid][pPhousekey2] = h;
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ezzel felhasználtad a prémium pontodat");
							PlayerInfo[playerid][pPremiumPont]--;
						}
						else if(PlayerInfo[playerid][pPhousekey3] == NINCS)
						{
							PlayerInfo[playerid][pPhousekey3] = h;
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ezzel felhasználtad a prémium pontodat");
							PlayerInfo[playerid][pPremiumPont]--;
						}
						Biztos[playerid] = 0;

						SendClientMessage(playerid, COLOR_WHITE, "A /help paranncsal több infóra is lelsz, a házzal kapcsolatban");
						DestroyDynamicPickup(HazPickup[h]);
						HazPickup[h] = UjPickup(1239, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);

						HazUpdate(h, HAZ_Owned, HAZ_Owner, HAZ_Csak, HAZ_Tulaj);


						DateProp(playerid, DP_Haz);

						format( _tmpString, 128, "UPDATE %s SET House='%d' WHERE ID='%d'", SQL_DB_Player, h, SQLID( playerid ));
						doQuery( _tmpString );
						
						new vetellog[256];
						format(vetellog, 256, "[/buyhouse] - %s vett egy házat %d, %s Ft-ért",PlayerName(playerid),h,FormatNumber( HouseInfo[h][hValue], 0, ',' ));
						EgyebLog(vetellog);
						return 1;
					}
					else
					{
					    format(string, sizeof(string), "Nincs elég pénzed a ház megvételére! Még %dFt KP kell! A ház ára %dFt", (HouseInfo[h][hValue] - GetMoney(playerid)), HouseInfo[h][hValue]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/buygarazs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pGarazs] != NINCS) return Msg(playerid,"Már van garázsod");

			GetPlayerName(playerid, playername, sizeof(playername));
			new garazs = sizeof(GarazsInfo);
			for(new h = 0; h < garazs; h++)
			{
				if(PlayerToPoint(2.0, playerid, GarazsInfo[h][hEntrancex], GarazsInfo[h][hEntrancey], GarazsInfo[h][hEntrancez]) && GarazsInfo[h][hEladva] == 0)
				{
					if(GarazsInfo[h][hHaz] != NINCS) return Msg(playerid, "Ez egy házhoz tartozó garázs, /buyhazgarazs");
					if(GetMoney(playerid) >= GarazsInfo[h][hAra])
					{
						new neki[MAX_PLAYER_NAME];
						neki = "Nemigenyles";
						GarazsInfo[h][hEladva] = 1;

						PlayerInfo[playerid][pGarazs] = h;

						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(GarazsInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						GarazsInfo[h][hTulajid] = PlayerInfo[playerid][pID];

						GiveMoney(playerid,-GarazsInfo[h][hAra]);
						PlayerPlayMusic(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "Gratulálok! Megvettél egy garázst!");
						DestroyDynamicPickup(GarazsPickup[h]);
						GarazsPickup[h] = UjPickup(1318, 23, GarazsInfo[h][hEntrancex], GarazsInfo[h][hEntrancey], GarazsInfo[h][hEntrancez]);
						GarazsInfo[h][hDate]=UnixTime;
						GarazsUpdate(h, GARAZS_Eladva, GARAZS_Ara, GARAZS_Tulaj, GARAZS_Date,GARAZS_Tulajid);
						DateProp(playerid, DP_Garazs);
						
						new vetellog[256];
						format(vetellog, 256, "[/buygarazs] - %s vett egy garázst %d, %s Ft-ért",PlayerName(playerid),h,FormatNumber( GarazsInfo[h][hAra], 0, ',' ));
						EgyebLog(vetellog);
						return 1;
					}
					else
					{
						format(string, sizeof(string), "Nincs elég pénzed a Garázs megvételére! Még %dFt KP kell! A garázs ára %dFt", (GarazsInfo[h][hAra] - GetMoney(playerid)), GarazsInfo[h][hAra]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/buyhazgarazs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, playername, sizeof(playername));
			new garazs = sizeof(GarazsInfo);

			for(new h = 0; h < garazs; h++)
			{
				if(PlayerToPoint(2.0, playerid, GarazsInfo[h][hEntrancex], GarazsInfo[h][hEntrancey], GarazsInfo[h][hEntrancez]) && GarazsInfo[h][hEladva] == 0)
				{
					if(GarazsInfo[h][hHaz] == NINCS) return Msg(playerid, "Ez nem házhoz tartozó garázs, /buygarazs");
					if(PlayerInfo[playerid][pPhousekey] != GarazsInfo[h][hHaz] && PlayerInfo[playerid][pPhousekey2] != GarazsInfo[h][hHaz] && PlayerInfo[playerid][pPhousekey3] != GarazsInfo[h][hHaz])
							return Msg(playerid, "Ezt csak a kijelölt ház tulajdonosa veheti meg");
					if(GetMoney(playerid) >= GarazsInfo[h][hAra])
					{

						new neki[MAX_PLAYER_NAME];
						neki = "Nemigenyles";
						GarazsInfo[h][hEladva] = 1;

						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(GarazsInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						GarazsInfo[h][hTulajid] = PlayerInfo[playerid][pID];

						GiveMoney(playerid,-GarazsInfo[h][hAra]);
						PlayerPlayMusic(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "Gratulálok! Megvettél egy garázst!");
						DestroyDynamicPickup(GarazsPickup[h]);
						GarazsPickup[h] = UjPickup(1318, 23, GarazsInfo[h][hEntrancex], GarazsInfo[h][hEntrancey], GarazsInfo[h][hEntrancez]);
						GarazsInfo[h][hDate]=UnixTime;
						GarazsUpdate(h, GARAZS_Eladva, GARAZS_Ara, GARAZS_Tulaj, GARAZS_Date,GARAZS_Tulajid);
						
						new vetellog[256];
						format(vetellog, 256, "[/buyhazgarazs] - %s vett egy garázst %d, %s Ft-ért",PlayerName(playerid),h,FormatNumber( GarazsInfo[h][hAra], 0, ',' ));
						EgyebLog(vetellog);
						return 1;
					}
					else
					{
						format(string, sizeof(string), "Nincs elég pénzed a Garázs megvételére! Még %dFt KP kell! A garázs ára %dFt", (GarazsInfo[h][hAra] - GetMoney(playerid)), GarazsInfo[h][hAra]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						return 1;
					}
				}
			}
		}
		return 1;
	}
	/*if(strcmp(cmd, "/rentroom", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			new hazak = sizeof(HouseInfo);
			for(new h = 0; h < hazak; h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
				{
					if(VanHaza(playerid) > 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Már van házad...");
						return 1;
					}
					if(GetMoney(playerid) > HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pBerlo] = h;
						GiveMoney(playerid,-HouseInfo[h][hRent]);
						HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
						PlayerPlayMusic(playerid);
						new HazBelso = HouseInfo[h][hBelso];
						SetPlayerInterior(playerid,IntInfo[HazBelso][iNumber]);
						SetPlayerPos(playerid,IntInfo[HazBelso][iExitX],IntInfo[HazBelso][iExitY],IntInfo[HazBelso][iExitZ]);
						SetPlayerVirtualWorld(playerid, h);
						GameTextForPlayer(playerid, "~w~Udv itt", 5000, 3);
						PlayerInfo[playerid][pLocal] = h;
						SendClientMessage(playerid, COLOR_WHITE, "Gratulálunk, kibérelted a házat!");
						//SendClientMessage(playerid, COLOR_WHITE, "Type /househelp to review the new property help section.");
						return 1;
					}
					else
					{
      					SendFormatMessage(playerid, COLOR_WHITE, "Nincs elég pénzed! Még %dFt kell KPba! Bérlés Ára: %dFt", (HouseInfo[h][hRent] - GetMoney(playerid)), HouseInfo[h][hRent]);
						return 1;
					}
				}
			}
		}
		return 1;
	}*/
	if(strcmp(cmd, "/rentcar", true) == 0)
	{
		
		new ora;
		if(sscanf(pms, "d", ora))
			return Msg(playerid, "/rentcar [óra]");
			
		
		if(ora < 1 || ora > 5)
			return Msg(playerid, "[1 - 5] intervallum!");
			
		new kocsi = GetPlayerVehicleID(playerid);
		if(!IsPlayerInAnyVehicle(playerid) || kocsi < 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Nem vagy jármûben!");
		
		new munkakocsi = IsMunkaKocsi(kocsi);
		if(munkakocsi == NINCS)
			return Msg(playerid, "Nem bérelhetõ!");
		
		new mid = MunkaKocsiID(kocsi, munkakocsi);
		if(mid == NINCS)
			return Msg(playerid, "Nem bérelhetõ!");
		
		if(BereltKocsi(kocsi))
			return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ez a kocsi ki van már bérelve! Még %d sec",MunkaKocsi[munkakocsi][mid][kBerelido]-UnixTime);
		
		new ara,biz=NINCS;
		if(munkakocsi == MUNKA_BEREL1)
			biz=BIZ_BERLES1;
		if(munkakocsi == MUNKA_BEREL2)
			biz=BIZ_BERLES2;
		if(munkakocsi == MUNKA_BEREL3)
			biz=BIZ_HAJO;
		printf("biz %d",biz);
		if(biz == NINCS) return Msg(playerid, "Nem bérelhetõ!");
		if(BizzInfo[biz][bProducts] < 1)
			return GameTextForPlayer(playerid, "~r~res a biznisz!", 5000, 1);

		ara = ora*BizzInfo[biz][bEntranceCost];
		if(!BankkartyaFizet(playerid, ara))
			return SendFormatMessage(playerid, COLOR_LIGHTRED,"Nincs elég pénzed! %s Ft kell!", FormatInt(ara));
			
		BizPenz(biz, ara);
		BizzInfo[biz][bProducts] -= ora;
		BizUpdate(biz, BIZ_Products, BIZ_Till);

		if(HireCar[playerid] != NINCS)
		{
			gCarLock[HireCar[playerid]] = 0;
			UnLockCar(HireCar[playerid]);
		}

		HireCar[playerid] = MunkaKocsi[munkakocsi][mid][kID];
		MunkaKocsi[munkakocsi][mid][kBerel] = PlayerInfo[playerid][pID];
		MunkaKocsi[munkakocsi][mid][kBerelido] = UnixTime+(ora*3600);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		GameTextForPlayer(playerid, "~g~Kibrelted az autot/hajot!~n~Zarni a /lock-al tudod", 5000, 3);
		
		return 1;
	}
	if(strcmp(cmd, "/unrentcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != NINCS)
			{
				new kocsi = GetPlayerVehicleID(playerid);
				new munkakocsi = IsMunkaKocsi(kocsi);
				
				if(munkakocsi == MUNKA_BEREL1 ||munkakocsi == MUNKA_BEREL2 || munkakocsi == MUNKA_BEREL2)
				{
				
					MunkaKocsi[munkakocsi][kocsi][kBerel] = NINCS;
					MunkaKocsi[munkakocsi][kocsi][kBerelido] = NINCS;
			
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
					HireCar[playerid] = -1;
					
					
					GameTextForPlayer(playerid, "~w~Már nem berled a kocsit", 5000, 3);
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/unrent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(Berlo(playerid) == NINCS)
			{
				SendClientMessage(playerid, COLOR_WHITE, "   Nincs bérelt házad !");
				return 1;
			}
			PlayerInfo[playerid][pBerlo] = NINCS;
			SendClientMessage(playerid, COLOR_WHITE, "Bérlés lemondva.");
		}
		return 1;
	}

	if(egyezik(cmd, "/asellbiz"))
	{
		if(!Admin(playerid, 1337)) return Msg(playerid, "Nem használhatod !");
		new biz;
		if(sscanf(pms, "d", biz))
			return SendClientMessage(playerid, COLOR_WHITE, "Használata: /asellbiz [Biznisz ID]");

        ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< Admin %s eladta a %d számú bizniszt | Régi Tulaj: %s >>", AdminName(playerid), biz , BizzInfo[biz][bOwner]);
		SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Biznisz ID: %d eladva! | Régi tulaj: %s", biz, BizzInfo[biz][bOwner]);

		BizzInfo[biz][bLocked] = 1;
		BizzInfo[biz][bOwned] = 0;
		BizzInfo[biz][bTulaj] = NINCS;
		BizzInfo[biz][bMTulajID] = NINCS;
		strmid(BizzInfo[biz][bOwner], "Onkormanyzat", 0, strlen("Onkormanyzat"), 255);
		strmid(BizzInfo[biz][bExtortion], "Nincs", 0, strlen("Nincs"), 255);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "~w~Eladtad a bizniszt");
		GameTextForPlayer(playerid, string, 10000, 3);
		BizUpdate(biz, BIZ_Locked, BIZ_Owned, BIZ_Owner, BIZ_Extortion, BIZ_Tulaj);
		return 1;
	}
	if(egyezik(cmd, "/asellhouse"))
	{
		if(!Admin(playerid, 1338)) return Msg(playerid, "Nem használhatod !");
		new house;
		if(sscanf(pms, "d", house))
			return SendClientMessage(playerid, COLOR_WHITE, "Használata: /asellhouse [Házszám]");

        /*if(!InaktivCucc(house, INAKTIV_HAZ) && !IsScripter(playerid))
			return Msg(playerid, "Ez még NEM eladható!");*/
			
		if(!InaktivCucc(house, INAKTIV_HAZ) && Biztos[playerid] != 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Ez még NEM eladható! Amennyiben mégis el szeretnéd adni, írd be mégegyszer a parancsot");
			Biztos[playerid] = 1;
			return 1;
		}

        ABroadCastFormat(COLOR_LIGHTRED, PlayerInfo[playerid][pAdmin], "<< Admin %s eladta a %d számú házat | Régi Tulaj: %s >>", AdminName(playerid), house , HouseInfo[house][hOwner]);
		SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Házszám: %d eladva! | Régi tulaj: %s", house, HouseInfo[house][hOwner]);

		HouseInfo[house][hHel] = 0;
		HouseInfo[house][hArm] = 0;
		HouseInfo[house][hLock] = 0;
		HouseInfo[house][hOwned] = 0;
		//HouseInfo[house][hCsakneki] ="Nemigenyles";
		format(HouseInfo[house][hCsakneki],11,"Nemigenyles");
		HouseInfo[house][hCsak] = 0 ;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "~w~Eladtad a hazat", HouseInfo[house][hValue]);
		GameTextForPlayer(playerid, string, 10000, 3);
		DestroyDynamicPickup(HazPickup[house]);
		HazPickup[house] = UjPickup(1273, 23, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey], HouseInfo[house][hEntrancez]);
		HazUpdate(house, HAZ_Owned, HAZ_Owner, HAZ_Lock, HAZ_Hel, HAZ_Arm, HAZ_Tulaj,HAZ_Csak,HAZ_Csakneki);

		return 1;
	}

	if(strcmp(cmd, "/sellhouse", true) == 0)
	{
		if(playerid != -1) return Msg(playerid, "Átmenetileg tiltva");
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPhousekey] == NINCS)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Nincs is házad.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Házas ember vagy, miért adnád el a házad ?!");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPhousekey] != NINCS && PlayerInfo[playerid][pID] == HouseInfo[PlayerInfo[playerid][pPhousekey]][hTulaj])
			{
				new house = PlayerInfo[playerid][pPhousekey];
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hArm] = 0;
				HouseInfo[house][hLock] = 0;
				HouseInfo[house][hOwned] = 0;

				//HazUpdate(house, "Eladva='0', Zarva='0', Elet='0', Pajzs='%d'", 0);
				HazUpdate(house, HAZ_Owned, HAZ_Lock, HAZ_Hel, HAZ_Arm, HAZ_Tulaj);

				GetPlayerName(playerid, sendername, sizeof(sendername));
				ConsumingMoney[playerid] = 1;
				GiveMoney(playerid, (HouseInfo[house][hValue] / 2));

				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Sikeresen~n~ eladtad a hazad ~n~~g~%dFt-ert", (HouseInfo[house][hValue] / 2));
				GameTextForPlayer(playerid, string, 10000, 3);
				PlayerInfo[playerid][pPhousekey] = NINCS;
				if(PlayerInfo[playerid][pLocal] == house)
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
				}
				format( _tmpString, 128, "UPDATE %s SET House='-1' WHERE ID='%d'", SQL_DB_Player, SQLID( playerid ));
				doQuery( _tmpString );
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Nincs is házad.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/houseupgrade", true) == 0 || strcmp(cmd, "/hu", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pPhousekey] == NINCS && PlayerInfo[playerid][pPhousekey2] == NINCS && PlayerInfo[playerid][pPhousekey3] == NINCS)
				return Msg(playerid, "Nincs házad!");

			GetPlayerName(playerid, playername, sizeof(playername));

			new house = HazaElottVan(playerid);
			if(house != NINCS)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Használata: /houseupgrade [szám]");
					SendClientMessage(playerid, COLOR_GRAD1, "|_______ Ház fejlesztések _______|");
					SendClientMessage(playerid, COLOR_GRAD2, "| 1: Hûtõ 50000Ft");
					SendClientMessage(playerid, COLOR_GRAD3, "| 2: Mellény szekrény (páncél) 100000Ft");
					return 1;
				}
				new item = strval(tmp);
				switch (item)
				{
					case 1:
					{
						if(GetMoney(playerid) < 50000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "Nincs elég pénzed!");
							return 1;
						}
						HouseInfo[house][hHel] = 1;
						//HazUpdate(house, "Elet='%d'", HouseInfo[house][hHel]);
						HazUpdate(house, HAZ_Hel, HAZ_Tulaj);
						GiveMoney(playerid,-50000);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "Mostmár otthon is töltheted az életed. Parancs: /heal.");
					}
					case 2:
					{
					    if(!IsACop(playerid))
					    {
							SendClientMessage(playerid, COLOR_GREY, "   Nem vagy rendõr, ezért nem vehetsz pajzsot a házadba!");
							return 1;
					    }
						if(GetMoney(playerid) < 100000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "Nincs elég pénzed!");
							return 1;
						}
						HouseInfo[house][hArm] = 1;
						//HazUpdate(house, "Pajzs='%d'", HouseInfo[house][hArm]);
						HazUpdate(house, HAZ_Arm);
						GiveMoney(playerid,-100000);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "Mostmár otthon is van pajzsod. Parancs: /heal.");
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  Nem vagy a házad elõtt!");
				return 1;
			}
		}
		return 1;
	}
	/*if(strcmp(cmd, "/setrent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(NincsHaza(playerid)) return Msg(playerid, "Nincs házad!");

			new bouse = HazaElottVan(playerid);
			GetPlayerName(playerid, playername, sizeof(playername));
			if(bouse != NINCS)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Használat: /setrent [ár]");
					return 1;
				}
				if(strval(tmp) < 1 || strval(tmp) > 99999)
				{
					SendClientMessage(playerid, COLOR_WHITE, "A minimum érték 1Ft, a maximum pedig 99999Ft.");
					return 1;
				}
				HouseInfo[bouse][hRent] = strval(tmp);
				//HazUpdate(bouse, "KAra='%d'", strval(tmp));
				HazUpdate(bouse, HAZ_Rent);
				format(string, sizeof(string), "A hazad berelheto %dFt-ert", HouseInfo[bouse][hRent]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Nem vagy a házad elõtt!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/evictall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(NincsHaza(playerid)) return Msg(playerid, "Nincs házad!");

			new bouse = HazaElottVan(playerid);
			if(bouse != NINCS)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(i != playerid)
						{
							if (PlayerInfo[i][pPhousekey] == bouse )
							{
								SendClientMessage(i, COLOR_WHITE, "A ház tulaja kilakoltatott.");
								SendClientMessage(playerid, COLOR_WHITE, "Mindenkit sikeresen kilakoltattál a házadból.");
								PlayerInfo[i][pPhousekey] = NINCS;
								return 1;
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  Nem vagy a házad elõtt!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/evict", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != NINCS && PlayerInfo[playerid][pID] == HouseInfo[bouse][hTulaj])
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Használat: /evict [playerid/PartOfName]");
				}
				new target;
				//target = strval(tmp);
				target = ReturnUser(tmp);
				if (target == playerid)
				{
					SendClientMessage(target, COLOR_WHITE, "Vicces, saját magad nem lakoltatod ki.");
					return 1;
				}
				if(IsPlayerConnected(target))
				{
				    if(target != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[target][pPhousekey] == PlayerInfo[playerid][pPhousekey])
						{
							SendClientMessage(target, COLOR_WHITE, "A ház tulaja kilakoltatott.");
							SendClientMessage(playerid, COLOR_WHITE, "A játékost kilakoltattad.");
							PlayerInfo[target][pPhousekey] = NINCS;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_WHITE, "A játékos nem a te házadban lakik.");
						    return 1;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Nincs is házad!");
				return 1;
			}
		}
		return 1;
	}*/
	/*if(strcmp(cmd, "/setrentable", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(NincsHaza(playerid))
				return Msg(playerid, "Nincs házad!");

			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = HazaElottVan(playerid);
			if(bouse != NINCS)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp) || strval(tmp) != 1 && strval(tmp) != 0)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Használat: /setrentable [0/1]");
				}
				HouseInfo[bouse][hRentabil] = strval(tmp);
				//HazUpdate(bouse, "Kiado='%d'", strval(tmp));
				HazUpdate(bouse, HAZ_Rentabil);
				format(string, sizeof(string), "Haz kiadosaga: %d.", HouseInfo[bouse][hRentabil]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  Nem vagy a házad elõtt!");
				return 1;
			}
		}
		return 1;
	}*/

	if(egyezik(cmd, "/letilt") || egyezik(cmd, "/letílt"))
	{
		new telefonszam;
		if(sscanf(pms, "d", telefonszam))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /letílt [telefonszám]");

        if(!LMT(playerid, FRAKCIO_RIPORTER)) return Msg(playerid, "Nem vagy riporter!");
	    for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pPnumber] == telefonszam && telefonszam != 0)
				{
				    if(Tiltottszam[i] == true) return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ez a telefonszám már le van tiltva!");
	 				Tiltottszam[i] = true;
	 				SendClientMessage(i, COLOR_YELLOW, "[SMS]: A riporterek ideiglenesen blokkolták a telefonszámod, így nem tudsz nekik SMS-t küldeni!");
	 				SendFormatMessage(playerid, COLOR_LIGHTRED, "[Info]: Sikeresen letiltottad a következõ telefonszámot: %d (%s)", telefonszam, ICPlayerName(i));
	 				return true;

				}
			}
		}
		SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nincs ilyen telefonszám!");
		return true;
	}

	if(egyezik(cmd, "/call") || egyezik(cmd, "/hívás"))
	{
		if(params < 1) return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /call [Telefonszám] | Telefonfülkénél: /call (t)elefon(f)ülke [Telefonszám]");
		new jatekos, Hivasara = BizzInfo[BIZ_TELEFON][bEntranceCost];
		
		if(PlayerCuffed[playerid] || Leutve[playerid] || PlayerTied[playerid]) return Msg(playerid, "Ilyenkor hogy akarsz beszélni?");
		if(egyezik(param[1], "telefonfülke") || egyezik(param[1], "telefonfulke") || egyezik(param[1],"tf"))
		{
				if(!IsAt(playerid, IsAt_Telefonfulke)) return SendClientMessage(playerid, COLOR_GRAD2, "Nem vagy telefonfülkénél!!");
				if(params < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /call (t)elefon(f)ülke [Telefonszám]");
				new phonenumb = strval(param[2]);
				Cselekves(playerid, "felveszi a telefonkagylót", 0);
				TelefonTipus[playerid] = 1;
				if(phonenumb == 911 ||phonenumb ==107)
				{
					SendClientMessage(playerid, COLOR_ALLDEPT, "Üdvözlöm, itt a Class City Police Department. Kérem mondja el mi történt!");
					Mobile[playerid] = 912;
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					return 1;
				}
				if(phonenumb == 104)
				{
					//bug miatt 10-el szorzva
					Mobile[playerid] = 1004;
					SendClientMessage(playerid, COLOR_ALLDEPT, "Üdvözlöm, itt a Class City Medic Department. Kérem mondja el mi történt!");
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					return 1;
				}
				if(phonenumb == 105)
				{
					if(CallTuz[playerid])
						return Msg(playerid, "Már hívtál tûzoltót!");

					Mobile[playerid] = 1005;
					SendClientMessage(playerid, COLOR_ALLDEPT, "Üdvözlöm, itt a San Fierro Fire Department. Kérem mondja el mi történt!");
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					return 1;
				}
				if(phonenumb == 103)
				{
					Mobile[playerid] = 1003;
					SendClientMessage(playerid, COLOR_ALLDEPT, "Üdvözlünk, itt a Class City News szerkesztõsége. Hamarosan riporterünk adásba kapcsol!");
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					tformat(128, "%s be szeretne kerülni az élõ mûsorba - elfogadáshoz: /accept call %d", ICPlayerName(playerid), playerid);
					SendMessage(SEND_MESSAGE_FRACTION, _tmpString, COLOR_GREEN, 9);
					return 1;
				}
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
				foreach(Jatekosok, i)
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						jatekos = i;
						if(PhoneOnline[jatekos]) return Msg(playerid, "Ki van kapcsolva a telefonja!");
						if(Bortonben(jatekos)) return Msg(playerid,"Az illetõ börtönben van!");
						Mobile[playerid] = jatekos; //caller connecting
						if(GetMoney(playerid) < Hivasara)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Nincs nálad elég pénz!!!");
							return 1;
						}
						if(PlayerInfo[jatekos][pJailed] != 0)
							return Msg(playerid, "Börtönben van!");
						if(PhoneOnline[jatekos])
						{
							SendClientMessage(playerid, COLOR_GREY, "Ki van kapcsolva a telefonja.");
							return 1;
						}
						if(Mobile[jatekos] == 255)
						{
	     					SendClientMessage(jatekos, COLOR_YELLOW, "Csörög a telefonod! Hívó: Telefonfülke (/pickup)");
								
							RingTone[jatekos] = 10;
							CellTime[playerid] = 1;
							TelefonTipus[playerid]=1;
							Cselekves(jatekos, "telefonja csörög", 1);
							return 1;
						}
						else
							Msg(playerid, "Foglalt... Hívásban van...");
					}
				}
				SendClientMessage(playerid, COLOR_GRAD2, "Nincs ilyen telefonszám.");
		}
		else
		{
		//idáig
			if(!Bortonben(playerid))
			{
				if(params < 1)
					return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /call [telefon szám]");
				
				new phonenumb = strval(param[1]);
				TelefonTipus[playerid] = 0;
				if(phonenumb == 112)
				{
					if(PlayerInfo[playerid][pPnumber] != 0)
						return Msg(playerid, "/call 104");
					
					if(PlayerInfo[playerid][pVeszHivo] < 1) 
						return Msg(playerid, "Nincsen hívód. Vegyél a TT bolt -ban");
				
					PlayerInfo[playerid][pVeszHivo]--;
					Mobile[playerid] = 1004;
					SendClientMessage(playerid, COLOR_ALLDEPT, "Üdvözlöm, itt a Class City Medic Department. Kérem mondja el mi történt!");
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_SLOT_SISAK)) RemovePlayerAttachedObject(playerid,ATTACH_SLOT_SISAK);
					SetPlayerAttachedObject(playerid, ATTACH_SLOT_SISAK, 18866, 6, 0.0729, 0.0289, 0.0140, -120.7999, 6.7999, 173.1000, 1.0000, 1.0000, 1.0000, 0, 0);
					return 1;
				}
				if(PlayerInfo[playerid][pPnumber] == 0)
					return SendClientMessage(playerid, COLOR_GRAD2, "Nincs telefonod!");

				if(PhoneOnline[playerid]) return Msg(playerid, "Ki van kapcsolva a telefonod!");
				
				if(phonenumb == PlayerInfo[playerid][pPnumber])
					return SendClientMessage(playerid, COLOR_GRAD2, "Magadat hívod fel?");
					
				if(Mobile[playerid] != 255)
					return SendClientMessage(playerid, COLOR_GRAD2, "Már hívásban vagy!");
					
				Cselekves(playerid, "elõveszi a telefonját", 0);
				if(phonenumb == 12345 && PlayerInfo[playerid][pAutoker] > 0)
				{
					if(UresKocsiHely() == -1 || playerid == playerid)
						return Msg(playerid, "Import Kft.: Sajnálom, jelenleg nincs eladó!", false);

					if(RendelesDatum != gdate)
					{
						RendeltKocsik = 0;
						RendelesDatum = gdate;
					}
					if(RendelesAlatt != 0)
					{
						SendFormatMessage(playerid, COLOR_LIGHTRED, "Jelenleg rendelés alatt van egy importkocsi! Név: %s, hátramaradt befizetés: %dFt", GetVehicleModelName(RendelesModel), RendelesPenz);
						return 1;
					}
					if(RendeltKocsik >= MAXRENDELES)
					{
						SendFormatMessage(playerid, COLOR_WHITE, "Ma már rendeltek %d kocsit, az importosok csak ennyit hoznak egy nap!", MAXRENDELES);
						return 1;
					}
					new data_car[1024];
					for(new j = 0; j < sizeof(RendelesID); j++)
					{
						if(j == 0)
							Format(data_car, "%dFt\t%s\n", RendelesAra[j], RendelesNev[j]);
						else
							Format(data_car, "%s%dFt\t%s\n", data_car, RendelesAra[j], RendelesNev[j]);
					}
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_SLOT_SISAK)) RemovePlayerAttachedObject(playerid,ATTACH_SLOT_SISAK);
					SetPlayerAttachedObject(playerid, ATTACH_SLOT_SISAK, 18866, 6, 0.0729, 0.0289, 0.0140, -120.7999, 6.7999, 173.1000, 1.0000, 1.0000, 1.0000, 0, 0);
					
					
					ShowPlayerDialog(playerid, DIALOG_CAR, DIALOG_STYLE_LIST, "Rendelés", data_car, "Rendel", "Mégse");
					SendClientMessage(playerid, COLOR_ALLDEPT, "Import Kft.: Üdvözlöm, milyen kocsit szeretne?");
					return 1;
				}

				if(phonenumb == 911 || phonenumb == 107)
				{
					SendClientMessage(playerid, COLOR_ALLDEPT, "Üdvözlöm, itt a Class City Police Department. Kérem mondja el mi történt!");
					Mobile[playerid] = 912;
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_SLOT_SISAK)) RemovePlayerAttachedObject(playerid,ATTACH_SLOT_SISAK);
					SetPlayerAttachedObject(playerid, ATTACH_SLOT_SISAK, 18866, 6, 0.0729, 0.0289, 0.0140, -120.7999, 6.7999, 173.1000, 1.0000, 1.0000, 1.0000, 0, 0);
					return 1;
				}
				if(phonenumb == 104)
				{
					Mobile[playerid] = 1004;
					SendClientMessage(playerid, COLOR_ALLDEPT, "Üdvözlöm, itt a Class City Medic Department. Kérem mondja el mi történt!");
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_SLOT_SISAK)) RemovePlayerAttachedObject(playerid,ATTACH_SLOT_SISAK);
					SetPlayerAttachedObject(playerid, ATTACH_SLOT_SISAK, 18866, 6, 0.0729, 0.0289, 0.0140, -120.7999, 6.7999, 173.1000, 1.0000, 1.0000, 1.0000, 0, 0);
					return 1;
				}
				if(phonenumb == 105)
				{
					if(CallTuz[playerid])
						return Msg(playerid, "Már hívtál tûzoltót!");

					Mobile[playerid] = 1005;
					SendClientMessage(playerid, COLOR_ALLDEPT, "Üdvözlöm, itt a Class City Fire Department. Kérem mondja el mi történt!");
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_SLOT_SISAK)) RemovePlayerAttachedObject(playerid,ATTACH_SLOT_SISAK);
					SetPlayerAttachedObject(playerid, ATTACH_SLOT_SISAK, 18866, 6, 0.0729, 0.0289, 0.0140, -120.7999, 6.7999, 173.1000, 1.0000, 1.0000, 1.0000, 0, 0);
					return 1;
				}
				if(phonenumb == 103)
				{
					Mobile[playerid] = 1003;
					SendClientMessage(playerid, COLOR_ALLDEPT, "Üdvözlünk, itt a Class City News szerkesztõsége. Hamarosan riporterünk adásba kapcsol!");
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_SLOT_SISAK)) RemovePlayerAttachedObject(playerid,ATTACH_SLOT_SISAK);
					SetPlayerAttachedObject(playerid, ATTACH_SLOT_SISAK, 18866, 6, 0.0729, 0.0289, 0.0140, -120.7999, 6.7999, 173.1000, 1.0000, 1.0000, 1.0000, 0, 0);
					tformat(128, "%s be szeretne kerülni az élõ mûsorba - elfogadáshoz: /accept call %d", ICPlayerName(playerid), playerid);
					SendMessage(SEND_MESSAGE_FRACTION, _tmpString, COLOR_GREEN, 9);
					return 1;
				}
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
				if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_SLOT_SISAK)) RemovePlayerAttachedObject(playerid,ATTACH_SLOT_SISAK);
				SetPlayerAttachedObject(playerid, ATTACH_SLOT_SISAK, 18866, 6, 0.0729, 0.0289, 0.0140, -120.7999, 6.7999, 173.1000, 1.0000, 1.0000, 1.0000, 0, 0);
				foreach(Jatekosok, i)
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						jatekos = i;
						Mobile[playerid] = jatekos;
						if(PhoneOnline[jatekos]) return Msg(playerid, "Ki van kapcsolva a telefonja!");
						if(Bortonben(jatekos)) return Msg(playerid,"Az illetõ börtönben van!");

						if(PlayerInfo[playerid][pTeloEgyenleg] < Hivasara)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Nem áll rendelkezésre elegendõ összeg a hívás kapcsolásához. (Feltöltés: '/telefonfeltöltés')");
							return 1;
						}
						if(PhoneOnline[jatekos] || Bortonben(playerid))
						{
							SendClientMessage(playerid, COLOR_GREY, "Ki van kapcsolva a telefonja.");
							return 1;
						}
						if(Mobile[jatekos] == 255)
						{
							new hivo = PlayerInfo[playerid][pPnumber];
							if(!Rejtett[playerid])
							    SendFormatMessage(jatekos, COLOR_YELLOW, "Csörög a telefonod! Hívó: %s (/pickup)",  FormatNumber( hivo, 0, '-' ));
							else if(Admin(giveplayerid, 1))
							    SendFormatMessage(jatekos, COLOR_YELLOW, "Csörög a telefonod! Hívó: Ismeretlen (/pickup) - %s", FormatNumber( hivo, 0, '-' ));
							else
							    SendClientMessage(jatekos, COLOR_YELLOW, "Csörög a telefonod! Hívó: Ismeretlen (/pickup)");
								    
							TelefonTipus[playerid] = 0;
							RingTone[jatekos] = 10;
							CellTime[playerid] = 1;
							Cselekves(jatekos, "telefonja csörög", 1);
							return 1;
						}
						else
							Msg(playerid, "Foglalt... Hívásban van...");
					}
				}
				SendClientMessage(playerid, COLOR_GRAD2, "Nincs ilyen telefonszám.");
			}
			else
				Msg(playerid, "Börtönben nem lehet!");
			return 1;
		}
	}

	if(egyezik(cmd, "/hs") || egyezik(cmd, "/hitmansms"))
	{
		if(!IsDirector(playerid)) return 1;
		new result[128], phonenumb;
		if(sscanf(pms, "ds[128]", phonenumb, result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /HitmanSMS [Telefonszám] [Szöveg]");

		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
			{
				SendFormatMessage(i, COLOR_YELLOW, "SMS: %s, Feladó: Hitman", result);
				SendFormatMessage(playerid, COLOR_YELLOW, "SMS elküldve.(Telefonszám: %d)", phonenumb);
				SendFormatMessage(playerid, COLOR_YELLOW, "SMS Szövege: %s", result);
			}
		}
	}
	if(strcmp(cmd, "/sms", true) == 0)
	{
		if(FloodCheck(playerid))
			return 1;
		
		if(PlayerCuffed[playerid] || Leutve[playerid] || PlayerTied[playerid])
			return Msg(playerid, "Ilyenkor hogy akarsz a sms-t írni?");
			
	    if(!Bortonben(playerid))
		{
		    new result[128], phonenumb;
			if(sscanf(pms, "ds[128]", phonenumb, result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /SMS [Telefonszám] [SMS Szövege] | Riporter: 103");

			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  Nincs telefonod! 24/7-be lehet venni!");
				return 1;
			}
			if(PhoneOnline[playerid]) return SendClientMessage(playerid, COLOR_GREY, "A telefonod kivan kapcsolva...");

			if(SzovegEllenorzes(playerid, result, "/sms", ELLENORZES_HIRDETES))
				return 1;

			new ara = BizzInfo[BIZ_TELEFON][bEntranceCost] / 5;
			new egyenleg = PlayerInfo[playerid][pTeloEgyenleg];

			if(egyenleg < ara)
			{
	            format(string, sizeof(string), "[Szolgáltató]SMS: Egy SMShez %dFtra van szükség, így nem tudsz SMS-t küldeni! (( Feltöltés: /telefonfeltöltés ))", ara);
	            SendClientMessage(playerid, COLOR_YELLOW, string);
	            return 1;
			}

			if(phonenumb == 103)
			{
				if(!LMT(playerid, FRAKCIO_RIPORTER))
				{
				    if(Tiltottszam[playerid] == true) return Msg(playerid, "Nem küldhetsz SMS-t a riportereknek, mert ideiglenesen blokkolták a telefonszámod!");
					if(rtelo == 0)
					{
						SendClientMessage(playerid, COLOR_RED, "A szám jelenleg nem kapcsolható!");
						return 1;
					}
					if(PlayerInfo[playerid][pTeloEgyenleg] < 1)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "[Szolgáltató]SMS: Nincs pénz a telefonodon!");
						return 1;
					}
					if(PlayerInfo[playerid][pTeloEgyenleg] <600)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "[Szolgáltató]SMS: Nincs elég pénzed rá. Riporterekhez 600Ft kell!");
						return 1;
					}
					//emelt díjas sms
					ara=600;
					
					FrakcioSzef(FRAKCIO_RIPORTER, ara);
					PlayerInfo[playerid][pTeloEgyenleg] = PlayerInfo[playerid][pTeloEgyenleg] - ara;
					format(string, sizeof(string), "~r~- %dFT", ara);
					GameTextForPlayer(playerid, string, 5000, 1);
					format(string, sizeof(string), "[Riporter]SMS: %s | Telefonszám: [%s]", result,FormatNumber( PlayerInfo[playerid][pPnumber], 0, '-' ));
					GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					SendClientMessage(playerid, COLOR_WHITE, "Üzenet elküldve a riportereknek!");
					foreach(Jatekosok, y)
					{
						if(LMT(y, FRAKCIO_RIPORTER) && OnDuty[y] == 1)
							SendClientMessage(y, COLOR_YELLOW, string);
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* Valaki elõvette a telefonját, és írt egy sms-t.");
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
					SendClientMessage(playerid, COLOR_RED, "Riporter vagy, ne küldj magadnak!");
				return 1;
			}
			foreach(Jatekosok, i)
			{
				if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0 && i != playerid)
				{
					giveplayerid = i;
					Mobile[playerid] = giveplayerid; //caller connecting
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PhoneOnline[giveplayerid])
						{
							SendClientMessage(playerid, COLOR_GREY, " A játékos telefonja kivan kapcsolva!");
							return 1;
						}
						if(Bortonben(giveplayerid))
							return Msg(playerid, "Õ börtönben van!");
							
						GetPlayerName(giveplayerid, sendername, sizeof(sendername));
							
						RingTone[giveplayerid] = 20;
						SendClientMessage(playerid, COLOR_WHITE, "Üzenet elküldve!");
						SendFormatMessage(giveplayerid,COLOR_YELLOW,"SMS: %s", result);
						SendFormatMessage(giveplayerid,COLOR_YELLOW,"Telefonszám: [%s]",FormatNumber( PlayerInfo[playerid][pPnumber], 0, '-' ));
						//SendClientMessage(giveplayerid, COLOR_YELLOW, string);
						//SendClientMessage(playerid,  COLOR_YELLOW, string);
						SendFormatMessage(playerid,COLOR_YELLOW,"SMS: %s", result);
						SendFormatMessage(playerid,COLOR_YELLOW,"Telefonszám: [%s]",FormatNumber( PlayerInfo[playerid][pPnumber], 0, '-' ));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Valaki elõvette a telefonját, és írt egy sms-t.");
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						format(string, sizeof(string), "~r~-%dFT", ara);
						GameTextForPlayer(playerid, string, 5000, 1);
						BizPenz(BIZ_TELEFON, ara);
						PlayerInfo[playerid][pTeloEgyenleg] = PlayerInfo[playerid][pTeloEgyenleg] - ara;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						Mobile[playerid] = 255;
						return 1;
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  Üzenet elküldése sikertelen...");
		}
		else
			Msg(playerid, "Börtönben nem lehet!");
		return 1;
	}
//----------------------------------[pickup]-----------------------------------------------

	if(strcmp(cmd, "/pickup", true) == 0 || strcmp(cmd, "/p", true) == 0)
	{
        if(Bortonben(playerid)) return Msg(playerid,"Börtönben nem!");
		if(PlayerCuffed[playerid] || Leutve[playerid] || PlayerTied[playerid]) return Msg(playerid, "Ilyenkor hogy akarsz a rádióba beszélni?");
		if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, " Már telefonálsz.");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
						Mobile[playerid] = i; //caller connecting
						SendClientMessage(i,  COLOR_GRAD2, "   Felvették a telefont.");
						CallCost[i] = BizzInfo[BIZ_TELEFON][bEntranceCost];
						Cselekves(playerid, "felvette  a telefonját");
						RingTone[playerid] = 0;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/hangup", true) == 0 || strcmp(cmd, "/h", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			CellTime[playerid] = 0;
			RingTone[playerid] = 0;
			new caller = Mobile[playerid];
			Mobile[playerid] = 255;
			if(caller == 1003 && OnAirID == playerid)
			{
				format(_tmpString, 128, "** Megszakadt a kapcsolat %s-el **", ICPlayerName(playerid));
				SendMessage(SEND_MESSAGE_OOCNEWS, _tmpString, COLOR_NEWS);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				TeloElrak[playerid]=TELOELRAK;
				CellTime[playerid] = 0;
				SendClientMessage(playerid,  COLOR_GRAD2, "Leraktad.");
				OnAirID = 255;
				return 1;
			}
			
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						SendClientMessage(caller,  COLOR_GRAD2, "Lerakták.");
						SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
						TeloElrak[playerid]=TELOELRAK;
						CellTime[caller] = 0;
						CellTime[playerid] = 0;
						SendClientMessage(playerid,  COLOR_GRAD2, "Leraktad.");
						Mobile[caller] = 255;

						return 1;
					}
				}
			}
			else
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  COLOR_GRAD2, "Leraktad.");
						}
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return 1;
					}
				}
			}
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			TeloElrak[playerid]=TELOELRAK;
			SendClientMessage(playerid,  COLOR_GRAD2, "A telefonod beraktad a zsebedbe.");
			Cselekves(playerid, "letette a telefonját");
		}
		return 1;
	}
//----------------------------------[TIME]-----------------------------------------------
    if(strcmp(cmd, "/fixr", true) == 0)
    {
        if(IsPlayerConnected(playerid))
		{
			PlayerFixRadio(playerid);
		}
		return 1;
	}
	if(strcmp(cmd, "/time", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new mtext[20];
			new year, month,day;
			getdate(year, month, day);
			if(month == 1) { mtext = "Januar"; }
			else if(month == 2) { mtext = "Februar"; }
			else if(month == 3) { mtext = "Marcius"; }
			else if(month == 4) { mtext = "Aprilis"; }
			else if(month == 5) { mtext = "Majus"; }
			else if(month == 6) { mtext = "Junius"; }
			else if(month == 7) { mtext = "Julius"; }
			else if(month == 8) { mtext = "Augusztus"; }
			else if(month == 9) { mtext = "Szeptember"; }
			else if(month == 10) { mtext = "Oktober"; }
			else if(month == 11) { mtext = "November"; }
			else if(month == 12) { mtext = "December"; }
		    new hour,minuite,second;
			gettime(hour,minuite,second);
			string[0] = EOS;

			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch", 4.1, 0, 0, 0, 0, -1);

			if (minuite < 10)
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%s %d~n~~g~|~w~%d:0%d~g~|~n~~w~B¨rt¨n: %dmp", mtext, day, hour, minuite, PlayerInfo[playerid][pJailTime]);
				}
				else
				{
					format(string, sizeof(string), "~y~%s %d~n~~g~|~w~%d:0%d~g~|", mtext, day, hour, minuite);
				}
			}
			else
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%s %d~n~~g~|~w~%d:%d~g~|~n~~w~B¨rt¨n: %dmp", mtext, day, hour, minuite, PlayerInfo[playerid][pJailTime]);
				}
				else
				{
					format(string, sizeof(string), "~y~%s %d~n~~g~|~w~%d:%d~g~|", mtext, day, hour, minuite);
				}
			}
			GameTextForPlayer(playerid, string, 5000, 1);
			format(string, sizeof(string), "* Valaki megnézte az óráját.");
			ProxDetector(30.0, playerid,string , COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return 1;
	}
//----------------------{HOUSES}-------------------
	if(egyezik(cmd, "/houseo"))
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 6)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Használat: /houseo [Házszám]");
					return 1;
				}
				new housenum = strval(tmp);
				if(HouseInfo[housenum][Van] != 1)
				{
					SendClientMessage(playerid, COLOR_RED, "Nincs ilyen ház");
					return 1;
				}
				SetPlayerPos(playerid,HouseInfo[housenum][hEntrancex],HouseInfo[housenum][hEntrancey],HouseInfo[housenum][hEntrancez]);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
				//GameTextForPlayer(playerid, "~w~ Mindjart ottvagyunk", 5000, 1);
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/house"))
	{
	    if(!Admin(playerid, 6)) return true;
		if(params < 1) return Msg(playerid, "/house [Ki / Be] [Házszám]");
		if(egyezik(param[1], "be") || egyezik(param[1], "bejárat"))
		{
		    if(params < 2) return Msg(playerid, "/house Be [Házszám]");
		    new housenum = strval(param[2]);
			if(HouseInfo[housenum][Van] != 1)
			{
			    SendClientMessage(playerid, COLOR_RED, "Nincs ilyen ház");
			    return 1;
			}
			new HazBelso = HouseInfo[housenum][hBelso];
			SetPlayerInterior(playerid,IntInfo[HazBelso][iNumber]);
			SetPlayerPos(playerid,IntInfo[HazBelso][iExitX],IntInfo[HazBelso][iExitY],IntInfo[HazBelso][iExitZ]);
			SetPlayerVirtualWorld(playerid, housenum);
			GameTextForPlayer(playerid, "~w~Megerkeztel", 5000, 1);
			PlayerInfo[playerid][pLocal] = housenum;
		}
		if(egyezik(param[1], "ki") || egyezik(param[1], "kijárat"))
		{
		    if(params < 2) return Msg(playerid, "/house Ki [Házszám]");
		    new housenum = strval(param[2]);
			if(HouseInfo[housenum][Van] != 1)
			{
			    SendClientMessage(playerid, COLOR_RED, "Nincs ilyen ház");
			    return 1;
			}
			SetPlayerPos(playerid,HouseInfo[housenum][hEntrancex],HouseInfo[housenum][hEntrancey],HouseInfo[housenum][hEntrancez]);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			GameTextForPlayer(playerid, "~w~Megerkeztel", 5000, 1);
		}
		return true;
	}
	if(strcmp(cmd, "/edit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(!Admin(playerid, 1337)) return true;
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Edit __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Használat: /edit [Mit] [Érték] (Házaknak és Bizniszeknek)");
				SendClientMessage(playerid, COLOR_GREY, "Lehetõségek: Level, Belepo, Price, Funds, Products, Maxprod, Prodara, csak");
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /edit [name] [ammount]");
				return 1;
			}
			new proplev = strval(tmp);
	       
	        new hazak = sizeof(HouseInfo);
	        for(new i = 0; i < hazak; i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "House: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_job,"price",true) == 0)
					    {
							HouseInfo[i][hValue] = proplev;
							//HazUpdate(i, "Ara='%d'", proplev);
							HazUpdate(i, HAZ_Value);
						}

					}
					if(egyezik(x_job,"csak"))
					{
						new csakneki[MAX_PLAYER_NAME];
						if(sscanf(pms, "{s[4]}s[128]", csakneki))
						
						HouseInfo[i][hCsak] = 1;
						//HouseInfo[i][hCsakneki] = csakneki;
						//format(HouseInfo[i][hCsakneki],MAX_PLAYER_NAME,"%s",csakneki);
						HouseInfo[i][hCsakneki] = csakneki;
						SendFormatMessage(playerid,COLOR_YELLOW,"%s",csakneki);
						HazUpdate(i, HAZ_Csak,HAZ_Csakneki);
						
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Biz: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_job,"level",true) == 0)
					    {
							BizzInfo[i][bLevelNeeded] = proplev;
							//BizUpdate(i, "Szint='%d'", proplev);
							BizUpdate(i, BIZ_LevelNeeded);
						}
						else if(strcmp(x_job,"price",true) == 0)
					    {
							BizzInfo[i][bBuyPrice] = proplev;
							//BizUpdate(i, "Ara='%d'", proplev);
							BizUpdate(i, BIZ_BuyPrice);
						}
						else if(strcmp(x_job,"funds",true) == 0)
					    {
							BizzInfo[i][bTill] = proplev;
							//BizUpdate(i, "Kassza='%d'", proplev);
							BizUpdate(i, BIZ_Till);
						}
						else if(strcmp(x_job,"products",true) == 0)
					    {
							BizzInfo[i][bProducts] = proplev;
							//BizUpdate(i, "Prod='%d'", proplev);
							BizUpdate(i, BIZ_Products);
						}
						else if(strcmp(x_job,"maxprod",true) == 0)
					    {
							BizzInfo[i][bMaxProducts] = proplev;
							//BizUpdate(i, "MaxProd='%d'", proplev);
							BizUpdate(i, BIZ_MaxProducts);
						}
						else if(strcmp(x_job,"belepo",true) == 0)
					    {
							BizzInfo[i][bEntranceCost] = proplev;
							//BizUpdate(i, "BelepesAra='%d'", proplev);
							BizUpdate(i, BIZ_EntranceCost);
						}
						else if(strcmp(x_job,"prodara",true) == 0)
					    {
							BizzInfo[i][bPriceProd] = proplev;
							//BizUpdate(i, "ProdPrice='%d'", proplev);
							BizUpdate(i, BIZ_PriceProd);
						}
					}
				}
			}
			format(string, sizeof(string), "A(z) %s értékét átírtad erre: %d", x_job, proplev);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(egyezik(cmd, "/kiképzõ") || egyezik(cmd, "/kikepzo"))
	{
		if(params < 1) return Msg(playerid, "/kiképzõ [bérel / belép / kilép]");
	 
		if(egyezik(param[1],"bérel"))
		{
			if(!PlayerToPoint(15, playerid, BizzInfo[BIZ_PB][bEntranceX], BizzInfo[BIZ_PB][bEntranceY], BizzInfo[BIZ_PB][bEntranceZ])) return Msg(playerid,"Nem vagy a kiképzõ Terem elõtt!");
			if(params < 4) return Msg(playerid, "/kiképzõ bérel [belsõ] [belépõkód] [idõ óra]"), Msg(playerid, "Árak: 24 óra alatt 200k * óra, felette 100k *óra"), Msg(playerid, "Belsõk: 1: PB terem alap, 2: PB terem extrákkal ((csak 1 van)) 3: torony terem ((csak 1 van))");
			
			new belso = strval(param[2]);
			new kod = strval(param[3]);
			new ido = strval(param[4]);
			
			if(belso < 1 || belso > 3) return Msg(playerid, "Hibás belsõ!");
			new id = NINCS;
			//meik üres ellenõrzés
			new bool:foglalt;
			if(belso == 2 || belso == 3)
			{
				
				for(new x = 0; x < MAX_KIKEPZO; x++)
				{
					if(Kikepzo[x][kBelso] == belso)
					{
						foglalt=true;
						break;
					}		
				}
				
			}
			if(foglalt) return Msg(playerid, "Sajnos ebbõl csak 1 pályánk van és már lefoglalták!");
			
			for(new x = 0; x < MAX_KIKEPZO; x++)
			{
				if(Kikepzo[x][kIdo] < UnixTime)
				{
					Kikepzo[x][kVan] = false;
					Kikepzo[x][kIdo] = NINCS;
					Kikepzo[x][kVw] = NINCS;
					Kikepzo[x][kKod] = NINCS;		
					Kikepzo[x][kBelso] = NINCS;
				}
			}
			
			for(new x = 0; x < MAX_KIKEPZO; x++)
			{
				if(Kikepzo[x][kVan] != true)
				{
					id=x;
					break;
				}		
			}
			if(id == NINCS) return Msg(playerid, "Sajnos minden pályánk foglalt!");
			
			if(kod < 1000 || kod > 9999) return Msg(playerid, "A kód 1000 és 9999 között lehet csak!");
			if(ido < 1 || ido > 48) return Msg(playerid, "Az idõ 1 és 48 óra között lehet csak");
			new ara;
			if(ido < 24)
				ara=ido * 200000;
			if(ido > 23)
				ara=ido * 100000;
			if(!BankkartyaFizet(playerid, ara)) return Msg(playerid, "Nincs rá elég pénzed");
			BizPenz(BIZ_PB, ara);
			Kikepzo[id][kVan] = true;
			Kikepzo[id][kIdo] = (3600*ido)+UnixTime;
			if(belso == 3)
				Kikepzo[id][kVw] = 134;
			else if(belso == 2)
				Kikepzo[id][kVw] = 999;
			else
				Kikepzo[id][kVw] = id+1000;
			Kikepzo[id][kKod] = kod;
			Kikepzo[id][kBelso] = belso;
			
			SendFormatMessage(playerid, COLOR_YELLOW,"Sikeresen béreltél egy kiképzõ termet. Ne feledd a kódót a belépéshez /kiképzõ belép %d %d",Kikepzo[id][kVw], Kikepzo[id][kKod]);
			SaveKikepzo();
			
			return 1;
		}
		if(egyezik(param[1],"belép"))
		{
			if(!PlayerToPoint(15, playerid, BizzInfo[BIZ_PB][bEntranceX], BizzInfo[BIZ_PB][bEntranceY], BizzInfo[BIZ_PB][bEntranceZ])) return Msg(playerid,"Nem vagy a kiképzõ Terem elõtt!");
			if(params < 3) return Msg(playerid, "/kiképzõ belép [képzõkód] [sajátkód]");
			
			new kod = strval(param[2]);
			new kod2 = strval(param[3]);
			
			new id = NINCS;
			for(new x = 0; x < MAX_KIKEPZO; x++)
			{
				if(Kikepzo[x][kVan] == true && Kikepzo[x][kVw] == kod  && Kikepzo[x][kKod] == kod2)
				{
					id=x;
					break;
				}		
			}
			if(id == NINCS) return Msg(playerid, "Hibás kód, vagy már nem létezik!");
			
			if(Kikepzo[id][kIdo] < UnixTime)
			{
				Kikepzo[id][kVan] = false;
				Kikepzo[id][kIdo] = NINCS;
				Kikepzo[id][kVw] = NINCS;
				Kikepzo[id][kKod] = NINCS;		
				Kikepzo[id][kBelso] = NINCS;				
				Msg(playerid, "Lejárt a bérlési idõ, a bérlési adatok törölve!");
				
				foreach(Jatekosok,z)
				{
					if(GetPlayerVirtualWorld(z) == id+1000 && GetPlayerInterior(z) == 10)
						SetPlayerPos(z, BizzInfo[BIZ_PB][bEntranceX],BizzInfo[BIZ_PB][bEntranceY],BizzInfo[BIZ_PB][bEntranceZ]),Kikepzoben[z] = false;
				}
				return 1;
			}
			if(Kikepzo[id][kBelso] == 3)
				SetPlayerPos(playerid, 2079.2761,-2487.4246,13.7491);
			else
				SetPlayerPos(playerid, -978.2880,1053.0551,1344.9883);
				
			SetPlayerInterior(playerid, 10);
			Kikepzoben[playerid] = true;
			SetPlayerVirtualWorld(playerid, Kikepzo[id][kVw]);
			
			Msg(playerid, "Sikeresen beléptél a kiképzõbe! Ha akarsz vehetsz fegyvert /f vesz!");
			
			return 1;
		}
		if(egyezik(param[1],"kilép"))
		{
			if(!PlayerToPoint(8, playerid,-978.2880,1053.0551,1344.9883) && !PlayerToPoint(8, playerid, -1128.1240,1066.5463,1345.7405) && !PlayerToPoint(8, playerid, 2079.2761,-2487.4246,13.7491) || !KikepzobenVan(playerid)) return Msg(playerid, "Nem vagy a kiképzõben, az ajtóban! ((Fehér nyilak))");
			
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			Kikepzoben[playerid] = false;
			SetPlayerPos(playerid, BizzInfo[BIZ_PB][bEntranceX],BizzInfo[BIZ_PB][bEntranceY],BizzInfo[BIZ_PB][bEntranceZ]);
			return 1;
		}
	}
	if(egyezik(cmd,"/lõtér") || egyezik(cmd,"/loter"))
	{
		if(FloodCheck(playerid)) return 1;
		if(!PlayerToPoint(4,playerid, BizzInfo[BIZ_LOTER][bEntranceX],BizzInfo[BIZ_LOTER][bEntranceY],BizzInfo[BIZ_LOTER][bEntranceZ])) return Msg(playerid,"Nem vagy a lõtér bejáratánál!");
		if(BizzInfo[BIZ_LOTER][bLocked]) return Msg(playerid,"A lõtér zárva van, gyere vissza késõbb!");
		new tipus[32], ido;
		for(new l = 0; l < MaxLoter; l++)
		{
			if(sscanf(pms, "s[32]d", tipus, ido)) return Msg(playerid,"/lõtér [Pisztoly / Silenced / Deagle / Combat / Shotgun / Mp5 / AK47 / M4 / Sniper] [Idõtartam (perc)]");
			if(LoterInfo[l][lHasznalva] == false)
			{
				if(!BankkartyaFizet(playerid, BizzInfo[BIZ_LOTER][bEntranceCost]*ido,false))
				{
					SendFormatMessage(playerid,COLOR_LIGHTRED,"Nincs elég pénzed, a belépõ %d!",BizzInfo[BIZ_LOTER][bEntranceCost]*ido);
					return 1;
				}
				
				if(ido < 1 || ido > 15) return Msg(playerid, "Minimum 1, maximum 15 perc!");
				new szoveg[200];
				if(egyezik(tipus,"pisztoly"))  
				{ 
					if(!BankkartyaFizet(playerid, BizzInfo[BIZ_LOTER][bEntranceCost]*ido))
					{
						Msg(playerid,"Nincs elég pénzed");
						return 1;
					}

					BizPenz(BIZ_LOTER, BizzInfo[BIZ_LOTER][bEntranceCost]*ido);
					//ResetWeapon(playerid);
					WeaponResetAll(playerid);
					LoterInfo[l][lFegyver] = 0; 
					 
					WeaponGiveWeapon(playerid, WEAPON_COLT45, 500);
					LoterInfo[l][lIdo] = UnixTime+60*ido;
					
					SetPlayerPos(playerid, LoterInfo[l][lTelePos][0],LoterInfo[l][lTelePos][1], 1011.5);
					SetPlayerVirtualWorld(playerid, 5995);
					SetPlayerFacingAngle(playerid, 90);
					Loterben[playerid] = l;
					Freeze(playerid, 5000);
					LoterInfo[l][lHasznalo] = playerid;
					LoterInfo[l][lHasznalva] = true;
					LoterGyakorlat(l, playerid);
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Üdvözellek a lõtéren, kérlek állj be lõpozícióba, a gyakorlat %d percig tart!((5 másodpercre lefagyasztottunk))", ido);
					format(szoveg,200,"Játékos(%d) belépett a %d lõtérbe!",playerid,l);
					SetPlayerArmedWeapon(playerid,22);
					Streamer_Update(playerid);
					
					
					new bool:viszbe=false;
					foreach(Jatekosok, id)
					{
						if(Visz[id] == playerid)
							viszbe = true;
					
					}
					
					if(PlayerCuffed[giveplayerid] == 2 || viszbe)
						return SeeBan(playerid, 0, NINCS, "Cufolva vagy viszbe Lõtérre menés!" );
					
					return 1;
				}
				else if(egyezik(tipus,"silenced"))  
				{ 
					if(!BankkartyaFizet(playerid, BizzInfo[BIZ_LOTER][bEntranceCost]*ido))
					{
						Msg(playerid,"Nincs elég pénzed");
						return 1;
					}

					BizPenz(BIZ_LOTER, BizzInfo[BIZ_LOTER][bEntranceCost]*ido);
					//ResetWeapon(playerid);
					WeaponResetAll(playerid);
					LoterInfo[l][lFegyver] = 1; 
					 
					WeaponGiveWeapon(playerid, WEAPON_SILENCED, 500);
					LoterInfo[l][lIdo] = UnixTime+60*ido;

					SetPlayerPos(playerid, LoterInfo[l][lTelePos][0],LoterInfo[l][lTelePos][1], 1011.5);
					SetPlayerVirtualWorld(playerid, 5995);
					SetPlayerFacingAngle(playerid, 90);
					Loterben[playerid] = l;
					Freeze(playerid, 5000);
					LoterInfo[l][lHasznalo] = playerid;
					LoterInfo[l][lHasznalva] = true;
					LoterGyakorlat(l, playerid);
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Üdvözellek a lõtéren, kérlek állj be lõpozícióba, a gyakorlat %d percig tart!((5 másodpercre lefagyasztottunk))", ido);
					format(szoveg,200,"Játékos(%d) belépett a %d lõtérbe!",playerid,l);
					SetPlayerArmedWeapon(playerid,23);
					Streamer_Update(playerid);
					return 1;
				}
				else if(egyezik(tipus,"deagle"))  
				{ 
					if(!BankkartyaFizet(playerid, BizzInfo[BIZ_LOTER][bEntranceCost]*ido))
					{
						Msg(playerid,"Nincs elég pénzed");
						return 1;
					}

					BizPenz(BIZ_LOTER, BizzInfo[BIZ_LOTER][bEntranceCost]*ido);
					//ResetWeapon(playerid);
					WeaponResetAll(playerid);

					LoterInfo[l][lFegyver] = 2; 
					 
					WeaponGiveWeapon(playerid, WEAPON_DEAGLE, 500);
					SetPlayerArmedWeapon(playerid,24);
					LoterInfo[l][lIdo] = UnixTime+60*ido;
					SetPlayerPos(playerid, LoterInfo[l][lTelePos][0],LoterInfo[l][lTelePos][1], 1011.5);
					SetPlayerVirtualWorld(playerid, 5995);
					SetPlayerFacingAngle(playerid, 90);
					Loterben[playerid] = l;
					Freeze(playerid, 5000);
					LoterInfo[l][lHasznalo] = playerid;
					LoterInfo[l][lHasznalva] = true;
					LoterGyakorlat(l, playerid);
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Üdvözellek a lõtéren, kérlek állj be lõpozícióba, a gyakorlat %d percig tart!((5 másodpercre lefagyasztottunk))", ido);
					format(szoveg,200,"Játékos(%d) belépett a %d lõtérbe!",playerid,l);
					Streamer_Update(playerid);
					return 1;
				}
				else if(egyezik(tipus,"shotgun"))  
				{ 
					if(!BankkartyaFizet(playerid, BizzInfo[BIZ_LOTER][bEntranceCost]*ido))
					{
						Msg(playerid,"Nincs elég pénzed");
						return 1;
					}

					BizPenz(BIZ_LOTER, BizzInfo[BIZ_LOTER][bEntranceCost]*ido);
					//ResetWeapon(playerid);
					WeaponResetAll(playerid);

					LoterInfo[l][lFegyver] = 3; 
					 
					WeaponGiveWeapon(playerid, WEAPON_SHOTGUN, 500);
					SetPlayerArmedWeapon(playerid,25);
					LoterInfo[l][lIdo] = UnixTime+60*ido;
					SetPlayerPos(playerid, LoterInfo[l][lTelePos][0],LoterInfo[l][lTelePos][1], 1011.5);
					SetPlayerVirtualWorld(playerid, 5995);
					SetPlayerFacingAngle(playerid, 90);
					Loterben[playerid] = l;
					Freeze(playerid, 5000);
					LoterInfo[l][lHasznalo] = playerid;
					LoterInfo[l][lHasznalva] = true;
					LoterGyakorlat(l, playerid);
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Üdvözellek a lõtéren, kérlek állj be lõpozícióba, a gyakorlat %d percig tart!((5 másodpercre lefagyasztottunk))", ido);
					format(szoveg,200,"Játékos(%d) belépett a %d lõtérbe!",playerid,l);
					Streamer_Update(playerid);
					return 1;
				}
				else if(egyezik(tipus,"combat"))  
				{ 
					if(!BankkartyaFizet(playerid, BizzInfo[BIZ_LOTER][bEntranceCost]*ido))
					{
						Msg(playerid,"Nincs elég pénzed");
						return 1;
					}

					BizPenz(BIZ_LOTER, BizzInfo[BIZ_LOTER][bEntranceCost]*ido);
					//ResetWeapon(playerid);
					WeaponResetAll(playerid);
					
					LoterInfo[l][lFegyver] = 5; 
					 
					WeaponGiveWeapon(playerid, WEAPON_COMBAT, 500);
					SetPlayerArmedWeapon(playerid,27);
					LoterInfo[l][lIdo] = UnixTime+60*ido;
					SetPlayerPos(playerid, LoterInfo[l][lTelePos][0],LoterInfo[l][lTelePos][1], 1011.5);
					SetPlayerVirtualWorld(playerid, 5995);
					SetPlayerFacingAngle(playerid, 90);
					Loterben[playerid] = l;
					Freeze(playerid, 5000);
					LoterInfo[l][lHasznalo] = playerid;
					LoterInfo[l][lHasznalva] = true;
					LoterGyakorlat(l, playerid);
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Üdvözellek a lõtéren, kérlek állj be lõpozícióba, a gyakorlat %d percig tart!((5 másodpercre lefagyasztottunk))", ido);
					format(szoveg,200,"Játékos(%d) belépett a %d lõtérbe!",playerid,l);
					Streamer_Update(playerid);
					return 1;
				}
				else if(egyezik(tipus,"mp5"))  
				{ 
					if(!BankkartyaFizet(playerid, BizzInfo[BIZ_LOTER][bEntranceCost]*ido))
					{
						Msg(playerid,"Nincs elég pénzed");
						return 1;
					}

					BizPenz(BIZ_LOTER, BizzInfo[BIZ_LOTER][bEntranceCost]*ido);
					//ResetWeapon(playerid);
					WeaponResetAll(playerid);

					LoterInfo[l][lFegyver] = 7; 
					 
					WeaponGiveWeapon(playerid, WEAPON_MP5, 500);
					SetPlayerArmedWeapon(playerid,29);
					LoterInfo[l][lIdo] = UnixTime+60*ido;
					SetPlayerPos(playerid, LoterInfo[l][lTelePos][0],LoterInfo[l][lTelePos][1], 1011.5);
					SetPlayerVirtualWorld(playerid, 5995);
					SetPlayerFacingAngle(playerid, 90);
					Loterben[playerid] = l;
					Freeze(playerid, 5000);
					LoterInfo[l][lHasznalo] = playerid;
					LoterInfo[l][lHasznalva] = true;
					LoterGyakorlat(l, playerid);
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Üdvözellek a lõtéren, kérlek állj be lõpozícióba, a gyakorlat %d percig tart!((5 másodpercre lefagyasztottunk))", ido);
					format(szoveg,200,"Játékos(%d) belépett a %d lõtérbe!",playerid,l);
					Streamer_Update(playerid);
					return 1;
				}
				else if(egyezik(tipus,"ak47"))  
				{ 
					if(!BankkartyaFizet(playerid, BizzInfo[BIZ_LOTER][bEntranceCost]*ido))
					{
						Msg(playerid,"Nincs elég pénzed");
						return 1;
					}

					BizPenz(BIZ_LOTER, BizzInfo[BIZ_LOTER][bEntranceCost]*ido);
					//ResetWeapon(playerid);
					WeaponResetAll(playerid);
					
					LoterInfo[l][lFegyver] = 8; 
					 
					WeaponGiveWeapon(playerid, WEAPON_AK47, 500);
					SetPlayerArmedWeapon(playerid,30);
					LoterInfo[l][lIdo] = UnixTime+60*ido;
					SetPlayerPos(playerid, LoterInfo[l][lTelePos][0],LoterInfo[l][lTelePos][1], 1011.5);
					SetPlayerVirtualWorld(playerid, 5995);
					SetPlayerFacingAngle(playerid, 90);
					Loterben[playerid] = l;
					Freeze(playerid, 5000);
					LoterInfo[l][lHasznalo] = playerid;
					LoterInfo[l][lHasznalva] = true;
					LoterGyakorlat(l, playerid);
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Üdvözellek a lõtéren, kérlek állj be lõpozícióba, a gyakorlat %d percig tart!((5 másodpercre lefagyasztottunk))", ido);
					format(szoveg,200,"Játékos(%d) belépett a %d lõtérbe!",playerid,l);
					Streamer_Update(playerid);
					return 1;
				}
				else if(egyezik(tipus,"m4"))  
				{ 
					if(!BankkartyaFizet(playerid, BizzInfo[BIZ_LOTER][bEntranceCost]*ido))
					{
						Msg(playerid,"Nincs elég pénzed");
						return 1;
					}

					BizPenz(BIZ_LOTER, BizzInfo[BIZ_LOTER][bEntranceCost]*ido);
					//ResetWeapon(playerid);
					WeaponResetAll(playerid);

					LoterInfo[l][lFegyver] = 9; 
					 
					WeaponGiveWeapon(playerid, WEAPON_M4, 500);
					SetPlayerArmedWeapon(playerid,31);
					LoterInfo[l][lIdo] = UnixTime+60*ido;
					SetPlayerPos(playerid, LoterInfo[l][lTelePos][0],LoterInfo[l][lTelePos][1], 1011.5);
					SetPlayerVirtualWorld(playerid, 5995);
					SetPlayerFacingAngle(playerid, 90);
					Loterben[playerid] = l;
					Freeze(playerid, 5000);
					LoterInfo[l][lHasznalo] = playerid;
					LoterInfo[l][lHasznalva] = true;
					LoterGyakorlat(l, playerid);
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Üdvözellek a lõtéren, kérlek állj be lõpozícióba, a gyakorlat %d percig tart!((5 másodpercre lefagyasztottunk))", ido);
					format(szoveg,200,"Játékos(%d) belépett a %d lõtérbe!",playerid,l);
					Streamer_Update(playerid);
					return 1;
				}
				else if(egyezik(tipus,"sniper"))  
				{ 
					if(!BankkartyaFizet(playerid, BizzInfo[BIZ_LOTER][bEntranceCost]*ido))
					{
						Msg(playerid,"Nincs elég pénzed");
						return 1;
					}

					BizPenz(BIZ_LOTER, BizzInfo[BIZ_LOTER][bEntranceCost]*ido);
					//ResetWeapon(playerid);
					WeaponResetAll(playerid);

					LoterInfo[l][lFegyver] = 10; 
					 
					WeaponGiveWeapon(playerid, WEAPON_SNIPER, 500);
					SetPlayerArmedWeapon(playerid,34);
					LoterInfo[l][lIdo] = UnixTime+60*ido;
					SetPlayerPos(playerid, LoterInfo[l][lTelePos][0],LoterInfo[l][lTelePos][1], 1011.5);
					SetPlayerVirtualWorld(playerid, 5995);
					SetPlayerFacingAngle(playerid, 90);
					Loterben[playerid] = l;
					Freeze(playerid, 5000);
					LoterInfo[l][lHasznalo] = playerid;
					LoterInfo[l][lHasznalva] = true;
					LoterGyakorlat(l, playerid);
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Üdvözellek a lõtéren, kérlek állj be lõpozícióba, a gyakorlat %d percig tart!((5 másodpercre lefagyasztottunk))", ido);
					format(szoveg,200,"Játékos(%d) belépett a %d lõtérbe!",playerid,l);
					Streamer_Update(playerid);
					return 1;
				}
				else
				{
					Msg(playerid,"/lõtér [Pisztoly / Silenced / Deagle / Combat / Shotgun / Mp5 / AK47 / M4 / Sniper] [Idõtartam (perc)]");
					return 1;
				}
				//LoterUzenet(szoveg);
			}
			
		}
		SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Sajnos mind a %d lõtér foglalt, próbáld késõbb!", MaxLoter);
	}	
	if(egyezik(cmd, "/enter"))
	{
	    if(IsPlayerConnected(playerid))
		{
			/*for(new a = 0; a < MAXAJTO; a++)
				if(Ajtok[a][Zarva]) return Msg(playerid, "Az ajtó zárva van");*/
			if(IsPlayerInAnyVehicle(playerid))
			{
				new k = GetPlayerVehicleID(playerid);
				new m = GetVehicleModel(k);
				if(m == 483 || m == 508 || m == 484 || m == 453 || m == 454)
				{
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, 100000 + k);
					SetPlayerPos(playerid, 2513.154, -1729.182, 778.637);
					Freeze(playerid, 5000);
					Cselekves(playerid, "hátra ment...", 1);
				}
			}
			new m = GetClosestVehicle(playerid); //KAMION INTERIOR
			if(GetVehicleModel(m) == 435 || GetVehicleModel(m) == 591)
			{
				SetPlayerPos(playerid, 1993.103, 1143.598, 8805.083);
				SetPlayerInterior(playerid, 1);
				Freeze(playerid, 2000);
				SetPlayerVirtualWorld(playerid, (m + 100));
				//SendFormatMessage(playerid,COLOR_YELLOW,"%d +100",m);
			}
			if(GetVehicleModel(m) == 519)
			{
				SetPlayerPos(playerid, 1.808619,32.384357,1199.593750);
				SetPlayerInterior(playerid, 1);
				Freeze(playerid, 2000);
				SetPlayerVirtualWorld(playerid, (m + 100));
				//SendFormatMessage(playerid,COLOR_YELLOW,"%d +100",m);
			}
			if(PlayerToPoint(1.0, playerid, 2169.9451,1589.8287,999.9761)) //SF bank pénz
			{
				if(GetPlayerVirtualWorld(playerid) == 1555 && GetPlayerInterior(playerid) == 1)
				{
					if(!AMT(playerid, MUNKA_PENZ)) return 1;
					SetPlayerPos(playerid,2319.3892,-1.7706,26.7496);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid,1555);
					new result[128];
					format(result, 128, "Pénztáros: Üdvözlöm kolléga.");
					ProxDetector(B_Tavol, BankSFNPC, result, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE, COLOR_LIGHTBLUE);
					SetPlayerChatBubble(BankSFNPC, result, COLOR_WHITE, B_Normal, 5000);
					SetPlayerFacingAngle(BankSFNPC, 2.53);
					Msg(playerid, "Kérd el a pénzkazettákat a pénztárostól. ((/pénzszállító felvesz))",false,COLOR_YELLOW);
				}
			}
			if(PlayerToPoint(1.0, playerid,2319.3892,-1.7706,26.7496)) //SF bank pénz
			{
				if(GetPlayerVirtualWorld(playerid) == 1555 && GetPlayerInterior(playerid) == 0)
				{
					if(!AMT(playerid, MUNKA_PENZ)) return 1;
					SetPlayerPos(playerid,2169.9451,1589.8287,999.9761);
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid,1555);
					Msg(playerid, "Rakd be a pénzkazetákat a pénzszállítóba! Ha még fér a kocsiba hozz még! ((/pénzszállító berak))");
				
				}
			}
			if(PlayerToPoint(5.0, playerid,2274.210, -1107.507, 37.548 )) //Hitman HQ Garázs - Ryan
			{
				if(GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
				{
					if(!IsHitman(playerid)) return 1; // Csak hitman tud bemenni
					if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
						return Msg(playerid, "Ezen az úton csak jármûvel lehet bemenni... Használd a másik bejáratot!");
					Tele(playerid, 2300.872, 2498.494, 2.949, true, 9555,0);
					foreach(Jatekosok, x)
					{
						if(!IsPlayerInVehicle(x, GetPlayerVehicleID(playerid))) continue;
						SetPlayerInterior(x, 0);
						SetPlayerVirtualWorld(playerid, 9555);
					}
					SetVehicleZAngle(GetPlayerVehicleID(playerid), 268.0);
				}
			}
			/*if(PlayerToPoint(5.0, playerid,2274.210, -1107.507, 37.548 )) //Hitman HQ Garázs - Ryan
			{
				if(GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
				{
					if(PlayerInfo[playerid][pHitman] < 1) return 1; // Csak hitman tud bemenni - Ryan
					if(GetPlayerState(playerid) == 2)
					{
						SetVehiclePos(GetPlayerVehicleID(playerid), 2300.872, 2498.494, 2.949);
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 9555);
						SetVehicleZAngle(GetPlayerVehicleID(playerid), 268);
					}
					else
					{
						SetPlayerFacingAngle(playerid, 268);
						SetPlayerPos(playerid,2300.872, 2498.494, 2.949);
					}
					foreach(Jatekosok, x)
					{
						if(!IsPlayerInVehicle(x, GetPlayerVehicleID(playerid))) continue;
						SetPlayerInterior(x, 0);
						SetPlayerVirtualWorld(playerid, 9555);
						Msg(playerid, "Isten hozott a bérgyilkosok hazájában! Válaszd ki a neked megfelelõ kocsit a gyilkoláshoz.");
					}
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid,9555);
					Msg(playerid, "Isten hozott a bérgyilkosok hazájában! Válaszd ki a neked megfelelõ kocsit a gyilkoláshoz.");
					
				
				}
			}*/
			if(PlayerToPoint(5.0, playerid, 1423.3461,-1553.3212,13.5391))//netkávézó
			{
				Tele(playerid, 1416.9039,-1554.0294,13.9759);
				Msg(playerid, "Üdvözöllek a netkávézóban!");
				return 1;
			}
			else if(PlayerToPoint(10, playerid, 1345.3436,368.0875,19.1368)) //ITZRT
			{
				if(GetPlayerState(playerid) == 2)
					SetVehiclePos(GetPlayerVehicleID(playerid), 958.8598,2074.9353,10.5473);
				else SetPlayerPos(playerid, 958.8598,2074.9353,10.5473);
			}
			else if(PlayerToPoint(10, playerid, 2179.2317,-2256.0120,14.7734)) //GSF
			{
				if(GetPlayerState(playerid) == 2)
					SetVehiclePos(GetPlayerVehicleID(playerid), 2176.7634,-2253.9114,14.0455);
				else SetPlayerPos(playerid, 2176.7634,-2253.9114,14.0455);
			}
			else if(PlayerToPoint(2, playerid, 1671.346,-1320.195,16.804)) //Disco
			{
				if(!BankkartyaFizet(playerid, BizzInfo[BIZ_DISCO][bEntranceCost])) {
					SendFormatMessage(playerid, COLOR_LIGHTRED,"ClassRPG: Nincs elég pénzed! A belépõ ára: %dFT", BizzInfo[BIZ_DISCO][bEntranceCost]);
					return 1;
				}
				
				BizPenz(BIZ_DISCO, BizzInfo[BIZ_DISCO][bEntranceCost]);
				SetPlayerPos(playerid, 1671.653,-1322.050,17.477);
				SendFormatMessage(playerid,COLOR_LIGHTBLUE, "Üdvözellek a %s -ban / ben! Jó szórakozást!",BizzInfo[BIZ_DISCO][bMessage]);
			}
			else if(PlayerToPoint(2.0, playerid, 797.5851,-617.5155,16.3359)) // FBI HQ
			{
				new State = GetPlayerState(playerid);
				if(!IsPlayerInAnyVehicle(playerid)) return 1;
		        if(State!=PLAYER_STATE_DRIVER) return 1;
				if(!LMT(playerid, FRAKCIO_FBI)) return 1;
				new kocsi = GetPlayerVehicleID(playerid);
				foreach(Jatekosok, player)
				{
					if(IsPlayerInVehicle(player, kocsi))
					{
						SetPlayerInterior(player, 18);
						SetPlayerVirtualWorld(player, 0);
					}
				}
				Tele(playerid, 1292.6230,-0.6250,1001.0198, true, 0, 18);
				Fbibent = 0;
				return 1;
			}
			else if(PlayerToPoint(3, playerid, 154.3915,1903.6664,18.7569)) // Katona fõbázis
			{
				SetPlayerInterior(playerid, 18);
				SetPlayerVirtualWorld(playerid, 1006);
				SetPlayerPos(playerid, 1726.8728,-1638.0116,20.2230);
				return 1;
			}
			else if(PlayerToPoint(3, playerid, 153.3858,1844.6747,17.6406)) // Katonai lõpálya
			{
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1006);
				SetPlayerPos(playerid, -978.2092,1053.2931,1344.9886);
			}
			else if(PlayerToPoint(5, playerid, 1832.7106,-1125.8104,24.6721)) // FBI Tetõ
			{
				SetPlayerPos(playerid, 1835.8121,-1138.2793,51.8638);
				return 1;
			}
			else if(PlayerToPoint(1.0, playerid, 2143.198, 1620.651, 1001.338)) // bank széfbõl szellõzõ
			{
				Tele(playerid, -1210.570, -417.099, 14.148, false, 1, 0);
				Cselekves(playerid, "bemászott a szellõzõbe", 1);
				return 1;
			}
			else if(PlayerToPoint(3.0, playerid, -1940.146, 418.298, 35.171)) // kintrõl be a szellõzõbe
			{
				Tele(playerid, -1240.2706,-399.1472,14.1484, false, 1, 0);
				Cselekves(playerid, "bemászott a szellõzõbe", 1);
				return 1;
			}
			else if(PlayerToPoint(10.0, playerid, -2520.8059,-39.1380,25.6172)) // Camorra lift
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Felmentél a liftel!");
				SetPlayerPos(playerid, -2520.3818,-40.9882,37.3828);
				return 1;
			}
			else if(PlayerToPoint(10.0, playerid, -2541.3821,-47.4891,16.5329)) // Camorra épület
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Üdv a Camorra Private Clubban!");
				SetPlayerVirtualWorld(playerid, 1012);
				SetPlayerPos(playerid, 1812.5616,-1540.1208,-81.2067);
				Freeze(playerid, 5000);
				return 1;
			}
			else if(PlayerToPoint(2.0, playerid, 1804.5605,-1561.5798,-81.2067))//Camorra lépcsõház
			{
				SetPlayerPos(playerid, 1773.3752,-1527.5599,-72.4829);
				return 1;
			}
			else if(PlayerToPoint(2.0, playerid, 1771.8864,-1526.5944,-68.2829))//Camorra gunshop
			{
				SetPlayerPos(playerid, 1771.1146,-1523.8370,-68.3391);
				return 1;
			}
			else if(PlayerToPoint(2.0, playerid, 1787.2323,-1512.5000,-68.3391))//Camorra pálya
			{
				SetPlayerPos(playerid, 1787.1317,-1509.7487,-68.3391);
				return 1;
			}
			else if(PlayerToPoint(2.0, playerid, 1788.0602,-1492.9620,-68.3391))//Camorra doboz
			{
				SetPlayerPos(playerid, 1790.9409,-1492.9364,-68.3391);
				return 1;
			}
			else if(PlayerToPoint(3.0, playerid, -2385.8811,2216.0706,4.9844)) // Yakuza
			{
				SetPlayerInterior(playerid, 1);
				SetPlayerPos(playerid, -2158.6450, 642.9626, 1052.3750);
				SetPlayerVirtualWorld(playerid, 1009);
			}
			else if(PlayerToPoint(3, playerid, -2434.1033,2258.7627,4.9822)) // Yakuza
			{
				SetPlayerInterior(playerid, 2);
				SetPlayerPos(playerid, -978.2092,1053.2931,1344.9886);
				SetPlayerVirtualWorld(playerid, 1009);
			}
			else if(PlayerToPoint(7.5, playerid, -1979.235, 435.348, 26.061))
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetVehicleModel(GetPlayerVehicleID(playerid)) != 428)
					return Msg(playerid, "Ezen az úton csak pénzszállítóval lehet bemenni!");
				Tele(playerid,  2208.422, 1551.530, 1008.640, true, 1555, 1);
				foreach(Jatekosok, x)
				{
					if(!IsPlayerInVehicle(x, GetPlayerVehicleID(playerid))) continue;
					SetPlayerInterior(x, 1);
					SetPlayerVirtualWorld(playerid, 1555);
				}
				SetVehicleZAngle(GetPlayerVehicleID(playerid), 271.0);
			}
			else if(PlayerToPoint(3, playerid, 1462.4670,-1011.9344,26.8438)) //LSBank
			{
				if(ghour < 6)
					Msg(playerid, "A bank éjféltõl reggel 6ig zárva van!");
				else
				{
					Freeze(playerid, 5000);
					LsBankban[playerid]=true;
					Tele(playerid, 1909.59639229, -2436.85037467, 13.9656142578, false);
					SetPlayerVirtualWorld(playerid, 1555);
				}
				return 1;
			}
			else if(PlayerToPoint(3, playerid, -1942.973876, 556.252868, 35.171875)) //SFBank
			{
				if(ghour < 6)
					Msg(playerid, "A bank éjféltõl reggel 6ig zárva van!");
				else
				{
					SetPlayerVirtualWorld(playerid, 1555);
					Tele(playerid, 2305.358398, -16.142288, 26.749565, false);
				}
				return 1;
			}
			else if(PlayerToPoint(3.0, playerid, 2315.571044, 0.354859, 26.742187) && GetPlayerVirtualWorld(playerid) == 1555) //SF Bank Széf
			{
				SetPlayerVirtualWorld(playerid, 1555);
				Tele(playerid, 2147.8445,1603.7917,1006.1677, false);
				SetPlayerInterior(playerid, 1);
				Freeze(playerid, 8000);
				if(!IsACop(playerid))
				{
					if(random(5) == 1)
					{
						Cselekves(playerid, "Valakit észrevett a kamera", 2);
						Msg(playerid, "Vigyázz, mert a kamera észrevett téged!", false);
						CopMsg(TEAM_BLUE_COLOR, "Biztonsági központ: Figyelem! Valaki lement a San Fierroi bank széfjébe!");
						
					}
					else
						Msg(playerid, "A kamera nem vett észre, menj nyugodtan.", false, COLOR_LIGHTGREEN);
				}
				return 1;
			}

			new playerVW = GetPlayerVirtualWorld(playerid), playerInt = GetPlayerInterior(playerid);
			for(new i = 0; i < MAXAJTO; i++)
			{
				if(Ajtok[i][Van] == 1 && PlayerToPoint(3, playerid, Ajtok[i][BeX], Ajtok[i][BeY], Ajtok[i][BeZ]) && playerVW == Ajtok[i][BeVW] && playerInt == Ajtok[i][BeInt])
				{
					if(Ajtok[i][Zarva] == 0 || Ajtok[i][Zarva] == 1 && IsAdmin(playerid))
					{
						if(Ajtok[i][Kocsi] == 1 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
						{


							Tele(playerid, Ajtok[i][KiX], Ajtok[i][KiY], Ajtok[i][KiZ], true, Ajtok[i][KiVW], Ajtok[i][KiInt],Ajtok[i][KiAngle]);

						}
						else
						{

                            Tele(playerid, Ajtok[i][KiX], Ajtok[i][KiY], Ajtok[i][KiZ], false, Ajtok[i][KiVW], Ajtok[i][KiInt],Ajtok[i][KiAngle]);
						}
						if(Ajtok[i][Freezel] > 0)
						{
							Ajtozott[playerid] = 5;
							Freeze(playerid, Ajtok[i][Freezel]);
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Zarva", 5000, 1);
					}
				}
			}

			new hazak = sizeof(HouseInfo);
			for(new i = 0; i < hazak; i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					//printf("Found House :%d",i);
					if(HouseInfo[i][hLock] == 0) //PlayerInfo[playerid][pPhousekey] == i || Berlo(playerid) == i ||
					{
					    new HazBelso = HouseInfo[i][hBelso];
						SetPlayerInterior(playerid,IntInfo[HazBelso][iNumber]);
						SetPlayerPos(playerid,IntInfo[HazBelso][iExitX],IntInfo[HazBelso][iExitY],IntInfo[HazBelso][iExitZ]);
						SetPlayerVirtualWorld(playerid, i);
						GameTextForPlayer(playerid, "~w~Udv itt!", 5000, 1);
						PlayerInfo[playerid][pLocal] = i;
						Hazbanvan[playerid] = 1;
						new zseka = Fbios[playerid];
						if(zseka == NINCS) return 1;
						if(!IsACop(zseka)) return 1;
						SendFormatMessage(zseka, Pink, "PDA Üzenet: %s bement a %d számú házba.", ICPlayerName(playerid), i);
						SetPlayerMarkerForPlayer(zseka, playerid, COLOR_INVISIBLE);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Zarva", 5000, 1);
					}
				}

			}
			new garazs = sizeof(GarazsInfo);
			for(new i = 0; i < garazs; i++)
			{
				if (PlayerToPoint(3, playerid,GarazsInfo[i][hEntrancex], GarazsInfo[i][hEntrancey], GarazsInfo[i][hEntrancez]))
				{
					
					if(GarazsInfo[i][hLock] == 0)
					{
						
						
						if(GarazsInfo[i][hBelso] == 1)
							Tele(playerid, -1689.1483,1035.2870,44.3109,true,i+10,0,270.112);
						else if(GarazsInfo[i][hBelso] == 2)
							Tele(playerid,1696.1133,718.6584,10.8203,true,i+10,0,177.450);
						else if(GarazsInfo[i][hBelso] == 3)
							Tele(playerid,1640.7483,699.5726,10.8203,true,i+10,0,358.150);
							
						SetPlayerVirtualWorld(playerid, i+10);
						Hazbanvan[playerid] = 1;
						new zseka = Fbios[playerid];
						//SendFormatMessage(zseka, Pink, "PDA Üzenet: %s bement a %d számú házba.", PlayerName(playerid), i)
						SetPlayerMarkerForPlayer(zseka, playerid, COLOR_INVISIBLE);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Zarva", 5000, 1);
					}
				}

			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if(BizzInfo[i][bVanBelso] || i == BIZ_PB)
				{
					if(!PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ])) continue;

					if(PlayerInfo[playerid][pPbiskey] == i || GetMoney(playerid) >= BizzInfo[i][bEntranceCost])
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							GameTextForPlayer(playerid, "~r~Zarva", 5000, 1);
							return 1;
						}
						if(i == BIZ_LOTER)	
						{
							Msg(playerid,"Lõtér használata: /lõtér");
							return 1;
						}
						if(BizzInfo[i][bProducts] == 0)
						{
							
							GameTextForPlayer(playerid, "~r~Kifogyott", 5000, 1);
							return 1;
						}
						if(i == BIZ_PB)
						{
							Msg(playerid,"Paintball használata: /pb");
							return 1;
						}
						if(i == BIZ_PIGPEN)
						{
						    SetPlayerInterior(playerid, 2);
							SetPlayerPos(playerid, 1205.5602,-11.6379,1000.9219);
							format(string, sizeof(string), "Jó szórakozást kíván: %s", BizzInfo[i][bMessage]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
						if(i == BIZ_CROOKER)
						{
							SetPlayerVirtualWorld(playerid, 102);
							SetPlayerPos(playerid, -1473, -681, 14);
							SetPlayerInterior(playerid, 0);
							Streamer_Update(playerid);
						}
						GiveMoney(playerid,-BizzInfo[i][bEntranceCost]);
						format(string, sizeof(string), "~r~-%dFt", BizzInfo[i][bEntranceCost]);

						BizPenz(i, BizzInfo[i][bEntranceCost]);
						BizzInfo[i][bProducts]--;
					
						BizUpdate(i, BIZ_Products, BIZ_Till);
						GameTextForPlayer(playerid, string, 5000, 3);

						if(i != BIZ_PB && i != BIZ_CROOKER)
						{
							SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
							SetPlayerVirtualWorld(playerid, i);
							SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						}
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(string, sizeof(string), "%s payed %dFt to enter biz %d", dood, BizzInfo[i][bEntranceCost], i);
						printf("%s", string);
						PayLog(string);
						//PlayerInfo[playerid][pLocal] = i;
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Nincs elég pénzed", 5000, 1);
					}
				}
			}
			if (PlayerToPoint(3.0, playerid,1073.0619,-344.5148,73.9922))
			{
			    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			    {
				    SetPlayerInterior(playerid,2);
					SetPlayerPos(playerid,1205.0947,-10.1685,1000.9219);
					PlayerInfo[playerid][pInt] = 2;
					PlayerInfo[playerid][pLocal] = 242;
				}
			}
			else if (PlayerToPoint(3.0, playerid,2695.6235,-1704.6960,11.8438))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the 8ball Track", 5000, 1);
			    SetPlayerInterior(playerid,7);
				SetPlayerPos(playerid,-1404.5299,-259.0602,1043.6563);
			}
			else if (PlayerToPoint(8.0, playerid,-2111.5686,-443.9720,38.7344))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the Dirt Track", 5000, 1);
			    SetPlayerInterior(playerid,4);
				SetPlayerPos(playerid,-1443.0554,-581.1879,1055.0472);
			}
			else if (PlayerToPoint(8.0, playerid,-2080.3079,-406.0309,38.7344))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the Stunting Track", 5000, 1);
			    SetPlayerInterior(playerid,14);
				SetPlayerPos(playerid,-1464.7732,1557.5533,1052.5313);
			}
			else if (GetPlayerState(playerid) == 2 && PlayerToPoint(3, playerid, 979.7841,-1254.8965,16.9473))
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1062.5363,2082.5569,10.8203);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				GameTextForPlayer(playerid, "~h~~g~Raktar", 5000, 3);

			}
			else if(PlayerToPoint(1, playerid, 1204.9697,12.4485,1000.9219))
			{
			    if(PrivatEngedely[playerid] == NINCS) return Msg(playerid, "Nem kaptál engedélyt hogy bemehess...");
				Tele(playerid, 1204.7235,13.6836,1000.9219);
				Msg(playerid, "Üdv a privát szobában!");
			}
           	else if(PlayerToPoint(3, playerid, 1358.230, -1822.510, 14.589))
			{
			    if(GetPlayerState(playerid) == 2)
			    {
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerToPoint(3, i, 1942.548, -2403.351, 13.585))
							{
								SendClientMessage(playerid, COLOR_YELLOW, "Valaki elálja bent az utat!");
								return 1;
							}
						}
					}
					new tmpcar = GetPlayerVehicleID(playerid);
					SetPlayerVirtualWorld(playerid, 109);
					SetVehicleVirtualWorld(tmpcar, 109);
					SetVehiclePos(tmpcar, 1942.548, -2403.351, 13.585);
					SetVehicleZAngle(tmpcar, 90.040);
	        		//LinkVehicleToInterior(kocsi, GetPlayerInterior(playerid));
					Freeze(playerid, 1500);
				} else {
					SetPlayerPos(playerid,1942.548, -2403.351, 13.585);
					SetPlayerVirtualWorld(playerid, 109);
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/exit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			/*for(new a = 0; a < MAXAJTO; a++)
				if(Ajtok[a][Zarva]) return Msg(playerid, "Az ajtó zárva van");*/
			if(PlayerToPoint(2.0, playerid, 2513.154, -1729.182, 778.637) && GetPlayerInterior(playerid) == 1)
			{
				new car = GetPlayerVirtualWorld(playerid);
				if(car > 100000 && car < 120000 && IsVehicleConnected((car -= 100000, car)))
				{
					new m = GetVehicleModel(car);
					if(m == 483 || m == 508 || m == 484 || m == 453 || m == 454)
					{
						new Float:x, Float:y, Float:z;
						new vehicleVW = GetVehicleVirtualWorld(vehicleid);
						GetVehiclePos(car, x, y, z);
						SetPlayerVirtualWorld(playerid, vehicleVW);
						SetPlayerInterior(playerid, 0);
						SetPlayerPos(playerid, x+2, y, z);
						//PutPlayerInVehicle(playerid, k, 1);
						Cselekves(playerid, "kijött a lakókocsiból / hajóból", 1);
					}
				}
			}
			if(PlayerToPoint(2.0, playerid, 1993.103, 1143.598, 8805.083) && GetPlayerInterior(playerid) == 1) //KAMION
			{
				for(new k = 0; k < MAX_VEHICLES; k++)
				{
					new m = GetVehicleModel(k);
					if(m == 435 || m == 591)
					{
						if((k + 100) == GetPlayerVirtualWorld(playerid))
						{
							new Float:x, Float:y, Float:z;
							GetVehiclePos(k, x, y, z);
							SetPlayerVirtualWorld(playerid, 0);
							SetPlayerInterior(playerid, 0);
							SetPlayerPos(playerid, x+2, y, z);
							//PutPlayerInVehicle(playerid, k, 1);
							Cselekves(playerid, "kijött a pótkocsi rakodóterébõl", 1);

						}
					}
				}
			}
			if(PlayerToPoint(3.0, playerid, 1.808619,32.384357,1199.593750) && GetPlayerInterior(playerid) == 1) //Shamal
			{
				for(new k = 0; k < MAX_VEHICLES; k++)
				{
					new m = GetVehicleModel(k);
					if(m == 519)
					{
						if((k + 100) == GetPlayerVirtualWorld(playerid))
						{
							new Float:x, Float:y, Float:z;
							GetVehiclePos(k, x, y, z);
							SetPlayerVirtualWorld(playerid, 0);
							SetPlayerInterior(playerid, 0);
							SetPlayerPos(playerid, x+3, y, z);
							Cselekves(playerid, "kijött a repülõböl", 1);

						}
					}
				}
			}
			if(PlayerToPoint(5.0, playerid, 1416.9039,-1554.0294,13.9759))
			{
				Msg(playerid, "Várunk máskor is a Kerim & John netkávézóba!");
				Tele(playerid, 1423.3461,-1553.3212,13.5391);
				return 1;
			}
			else if(PlayerToPoint(10.0, playerid, -2520.3818,-40.9882,37.3828))
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Lementél a liftel!");
				SetPlayerPos(playerid, -2520.8059,-39.1380,25.6172);
				return 1;
			}
			else if(PlayerToPoint(10, playerid, 958.8598,2074.9353,10.5473)) // ITZRT
			{
				if(GetPlayerState(playerid) == 2)
					SetVehiclePos(GetPlayerVehicleID(playerid), 1345.3436,368.0875,19.1368);
				else SetPlayerPos(playerid, 1345.3436,368.0875,19.1368);
			}
			else if(PlayerToPoint(10, playerid, 2176.7634,-2253.9114,14.0455)) //GSF
			{
				if(GetPlayerState(playerid) == 2)
					SetVehiclePos(GetPlayerVehicleID(playerid), 2179.2317,-2256.0120,14.7734);
				else SetPlayerPos(playerid, 2179.2317,-2256.0120,14.7734);
			}
			else if(PlayerToPoint(2, playerid, 1671.653,-1322.050,17.477)) //Disco
			{
				SetPlayerPos(playerid, 1671.346,-1320.195,16.804);
				//Event(playerid, EVENT_TYPE_DISCO, EVENT_ACTION_EXIT);
			}
			else if(PlayerToPoint(3, playerid, 1726.8728,-1638.0116,20.2230) && GetPlayerVirtualWorld(playerid) == 1006) // Katona fõbázis
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, 154.3915,1903.6664,18.7569);
				return 1;
			}
			else if(PlayerToPoint(3, playerid, -978.2092,1053.2931,1344.9886) && GetPlayerVirtualWorld(playerid) == 1006) // Katonai lõpálya
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, 153.3858,1844.6747,17.6406);
			}
			else if(PlayerToPoint(3.0, playerid, -2158.6450, 642.9626, 1052.3750) && GetPlayerVirtualWorld(playerid) == 1009) // Yakuza
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -2385.8811,2216.0706,4.9844);
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if(PlayerToPoint(3, playerid, -978.2092,1053.2931,1344.9886) && GetPlayerVirtualWorld(playerid) == 1009) // Yakuza
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerPos(playerid, -2434.1033,2258.7627,4.9822);
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if(PlayerToPoint(5, playerid, 1835.8121,-1138.2793,51.8638)) // FBI Tetõ
			{
				SetPlayerPos(playerid, 1832.7106,-1125.8104,24.6721);
				return 1;
			}
			else if(PlayerToPoint(10.0, playerid, 1812.5616,-1540.1208,-81.2067)) // Camorra épület
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Viszlát, jöjjön máskor is!");
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, -2541.3821,-47.4891,16.5329);
				return 1;
			}
			else if(PlayerToPoint(5.0, playerid,2301.484, 2497.554, 2.845)) //Hitman HQ Garázs KI - Ryan
			{
				if(GetPlayerVirtualWorld(playerid) == 9555 && GetPlayerInterior(playerid) == 0)
				{
					if(!IsHitman(playerid)) return 1; // Csak hitman tud kimenni
					if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
						return Msg(playerid, "Ezen az úton csak jármûvel lehet kimenni... Használd a másik kijáratot!");
					Tele(playerid, 2274.349, -1108.054, 37.664, true, 0,0);
					foreach(Jatekosok, x)
					{
						if(!IsPlayerInVehicle(x, GetPlayerVehicleID(playerid))) continue;
						SetPlayerInterior(x, 0);
						SetPlayerVirtualWorld(playerid, 0);
						Msg(playerid, "Ne feledd, sose bukj le! Sok sikert!");
					}
					SetVehicleZAngle(GetPlayerVehicleID(playerid), 154);
				}
			}
			/*else if(PlayerToPoint(5.0, playerid,2301.484, 2497.554, 2.845)) //Hitman HQ Garázs - Ryan
			{
				if(GetPlayerVirtualWorld(playerid) == 9555 && GetPlayerInterior(playerid) == 0)
				{
					if(PlayerInfo[playerid][pHitman] < 1) return 1; // Csak hitman tud kimenni - Ryan
					if(GetPlayerState(playerid) == 2)
					{
						SetVehiclePos(GetPlayerVehicleID(playerid), 2274.349, -1108.054, 37.664);
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
						SetVehicleZAngle(GetPlayerVehicleID(playerid), 154);
					}
					else
					{
						SetPlayerPos(playerid,2274.349, -1108.054, 37.664);
						SetPlayerFacingAngle(playerid, 154);
					}
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid,0);
					Msg(playerid, "Ne feledd, sose bukj le! Sok sikert!");
				}
			}*/
			else if(PlayerToPoint(2.0, playerid, 1773.3752,-1527.5599,-72.4829))//Camorra lépcsõház
			{
				SetPlayerPos(playerid, 1804.5605,-1561.5798,-81.2067);
				return 1;
			}
			else if(PlayerToPoint(2.0, playerid, 1771.1146,-1523.8370,-68.3391))//Camorra gunshop
			{
				SetPlayerPos(playerid, 1771.8864,-1526.5944,-68.2829);
				return 1;
			}
			else if(PlayerToPoint(2.0, playerid, 1787.1317,-1509.7487,-68.3391))//Camorra pálya
			{
				SetPlayerPos(playerid, 1787.2323,-1512.5000,-68.3391);
				return 1;
			}
			else if(PlayerToPoint(2.0, playerid, 1790.9409,-1492.9364,-68.3391))//Camorra doboz
			{
				SetPlayerPos(playerid, 1788.0602,-1492.9620,-68.3391);
				return 1;
			}
			else if(PlayerToPoint(10, playerid, 1058.1696,2087.5898,10.8203)) // Aztecas raktár
			{
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
					SetVehiclePos(GetPlayerVehicleID(playerid), 1766.8898,-2031.8942,13.8273);
				else Msg(playerid, "Itt csak kocsival lehet bemenni!");
				return 1;
			}

			else if(PlayerToPoint(5.0, playerid, 318.5966,1115.7505,1083.8828) && GetPlayerVirtualWorld(playerid) == 1001) // TJG épület
			{
				SetPlayerPos(playerid, 2370.3667,-1034.8651,54.4106);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
			else if(PlayerToPoint(5.0, playerid, -228.1603,1401.0884,27.7656) && GetPlayerVirtualWorld(playerid) == 1001) // TJG épület
			{
				SetPlayerPos(playerid, 2389.3271,-1037.3076,53.5533);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				return 1;
			}
			else if(PlayerToPoint(2.0, playerid, 1292.6230,-0.6250,1001.0198)) // FBI HQ
			{
				new State = GetPlayerState(playerid);
				if(!IsPlayerInAnyVehicle(playerid)) return 1;
		        if(State!=PLAYER_STATE_DRIVER) return 1;
				if(!LMT(playerid, FRAKCIO_FBI)) return 1;
				if(Fbibent == 1) return Msg(playerid, "Épp valaki bent áll az épület elött hogy bejöjjön szóval állj félre de kurvagyorsan!");
				new kocsi = GetPlayerVehicleID(playerid);
				foreach(Jatekosok, player)
				{
					if(IsPlayerInVehicle(player, kocsi))
					{
						SetPlayerInterior(player, 0);
						SetPlayerVirtualWorld(player, 0);
					}
				}
				Tele(playerid, 797.5851,-617.5155,16.3359, true, 0, 0);
				return 1;
			}
			else if(PlayerToPoint(1.0, playerid, -1210.570, -417.099, 14.148)) // szellõzõbõl a bankszéfhez
			{
				Tele(playerid, 2143.198, 1620.651, 1001.338, false, 1555, 1);
				Cselekves(playerid, "kimászott a szellõzõbõl", 1);
				return 1;
			}
			else if(PlayerToPoint(3.0, playerid, -1244.751, -398.654, 15.625)) // szellõzõbõl kintre
			{
				Tele(playerid, -1940.146, 418.298, 35.171, false, 0, 0);
				Cselekves(playerid, "kimászott a szellõzõbõl", 1);
				return 1;
			}
			else if(PlayerToPoint(3, playerid, -2636.2981,1402.4641,906.4609) && GetPlayerVirtualWorld(playerid) == 5)//Triad strip club
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, -2472.2627,2451.2300,17.3230);
			}
			else if(PlayerToPoint(7.5, playerid, 2205.5273,1552.1974,1008.2993))
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetVehicleModel(GetPlayerVehicleID(playerid)) != 428)
					return Msg(playerid, "Ezen az úton csak pénzszállítóval lehet kimenni!");
				Tele(playerid,  -1979.235, 435.348, 26.061, true, 0, 0);
				for(new x = 0; x < MAX_PLAYERS; x++)
				{
					if(!IsPlayerConnected(x) || !IsPlayerInVehicle(x, GetPlayerVehicleID(playerid))) continue;
					SetPlayerInterior(x, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
				SetVehicleZAngle(GetPlayerVehicleID(playerid), 358.0);
			}
			else if(PlayerToPoint(6, playerid, 316.1754,-169.9490,999.5938))//Triad fegyverbolt
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, -2245.1592,2381.9641,5.0748);
			}
			else if(PlayerToPoint(3.0, playerid, 2147.8445,1603.7917,1006.1677))
			{
			    SetPlayerVirtualWorld(playerid, 1555);
				SetPlayerInterior(playerid, 0);
				Tele(playerid, 2315.571044, 0.354859, 26.742187, false);
				return 1;
			}
			else if(PlayerToPoint(3.0, playerid, 1909.59639229, -2436.85037467, 13.9656142578) && GetPlayerVirtualWorld(playerid) == 1555) //LSBank
			{
				SetPlayerVirtualWorld(playerid, 0);
				LsBankban[playerid]=false;
				Tele(playerid, 1465.222900, -1010.950683, 26.843750, false);
				return 1;
			}
			else if(PlayerToPoint(3.0, playerid, 2305.633300, -15.969734, 26.749565)) //SFBank
			{
			    SetPlayerVirtualWorld(playerid, 0);
				Tele(playerid, -1942.973876, 556.252868, 35.171875, false);
				return 1;
			}

			new playerVW = GetPlayerVirtualWorld(playerid), playerInt = GetPlayerInterior(playerid);
			for(new i = 0; i < MAXAJTO; i++)
			{
				if (Ajtok[i][Van] == 1 && PlayerToPoint(3, playerid, Ajtok[i][KiX], Ajtok[i][KiY], Ajtok[i][KiZ]) && playerVW == Ajtok[i][KiVW] && playerInt == Ajtok[i][KiInt])
				{
					if(Ajtok[i][Kocsi] == 1 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
					{
						new kocsi = GetPlayerVehicleID(playerid);
						SetVehiclePos(kocsi, Ajtok[i][BeX], Ajtok[i][BeY], Ajtok[i][BeZ]);
						SetVehicleVirtualWorld(kocsi, Ajtok[i][BeVW]);
						SetVehicleInterior(kocsi,Ajtok[i][BeInt]);
						foreach(Jatekosok, x)
						{
							if(IsPlayerInAnyVehicle(x) && GetPlayerVehicleID(x) == kocsi)
							{
								SetPlayerVirtualWorld(x, Ajtok[i][BeVW]);
								SetPlayerInterior(x,Ajtok[i][BeInt]);
							}
						}
					}
					else
					{
						SetPlayerPos(playerid, Ajtok[i][BeX], Ajtok[i][BeY], Ajtok[i][BeZ]);
						SetPlayerVirtualWorld(playerid, Ajtok[i][BeVW]);
						SetPlayerInterior(playerid,Ajtok[i][BeInt]);
					}
					if(Ajtok[i][Freezel] > 0) Freeze(playerid, Ajtok[i][Freezel]);
				}

			}

			new hazak = sizeof(HouseInfo);
			for(new i = 0; i < hazak; i++)
			{
				//printf("House :%d",i);
				new HazBelso = HouseInfo[i][hBelso];
				if (PlayerToPoint(5, playerid,IntInfo[HazBelso][iExitX], IntInfo[HazBelso][iExitY], IntInfo[HazBelso][iExitZ]) && GetPlayerVirtualWorld(playerid) == i && GetPlayerInterior(playerid) == IntInfo[HazBelso][iNumber])
				{
					if(HouseInfo[i][hLock] != 0) return GameTextForPlayer(playerid, "~r~Zarva", 5000, 1);
					new haz = GetPlayerVirtualWorld(playerid);
					if(HouseInfo[i][hTipus] ==6)
					{
						Msg(playerid,"Spawn védelem sziget miatt");
						Freeze(playerid, 5000);
					}
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
					SetPlayerVirtualWorld(playerid, 0);
					PlayerInfo[playerid][pLocal] = NINCS;
					Hazbanvan[playerid] = 0;
					new zseka = Fbios[playerid];
					SendFormatMessage(zseka, Pink, "PDA Üzenet: %s kiment a %d számú házból.", ICPlayerName(playerid), haz);
					SetPlayerMarkerForPlayer(zseka, playerid, Pink);
					if(GetDistanceBetweenPoints(2143.0840,-101.2796,4.2551, HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]) < 5.0)
						Freeze(playerid, 3000);
				}
			}
			new garazs = sizeof(GarazsInfo);
			for(new i = 0; i < garazs; i++)
			{

				if((PlayerToPoint(5, playerid,-1692.1716,1035.1951,45.2109) || PlayerToPoint(5, playerid,1640.7483,699.5726,12.1220) || PlayerToPoint(5, playerid,1696.1133,718.6584,12.1305)) && GetPlayerVirtualWorld(playerid) == i+10)
				{
					if(GarazsInfo[i][hLock] != 0) return GameTextForPlayer(playerid, "~r~Zarva", 5000, 1);


					SetPlayerInterior(playerid,0);
					Tele(playerid, GarazsInfo[i][hEntrancex],GarazsInfo[i][hEntrancey],GarazsInfo[i][hEntrancez],true,0,0,GarazsInfo[i][hAngle]);
					SetPlayerVirtualWorld(playerid, 0);
					Hazbanvan[playerid] = 0;
					new zseka = Fbios[playerid];
					//SendFormatMessage(zseka, Pink, "PDA Üzenet: %s kiment a %d számú házból.", PlayerName(playerid), haz)
					SetPlayerMarkerForPlayer(zseka, playerid, Pink);
				}
			}
			for(new i = 0; i <  sizeof(BizzInfo); i++)
			{
				//printf("Bizz :%d",i);
				if(PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]) && ((playerInt == BizzInfo[i][bInterior] && playerVW == i) || i == BIZ_CROOKER && playerVW == 102))
				{
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
					PlayerInfo[playerid][pLocal] = NINCS;
				}
				
				else 
				{
					for(new l = 0; l < MaxLoter;l++)
					{
						if(GetPlayerVirtualWorld(playerid) == 5995 && LoterInfo[l][lHasznalo] == playerid && LoterInfo[l][lHasznalva] == true)
						{
							LoterVege(playerid, l, LoterInfo[l][lFegyver]);
						}
					}
				}	
			}
			if(GetPlayerVehicleID(playerid) >= 71 && GetPlayerVehicleID(playerid) <= 77)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
			}
			else if (PlayerToPoint(6.0, playerid,-1404.5299,-259.0602,1043.6563))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,2695.6235,-1704.6960,11.8438);
			}
			else if(PlayerToPoint(3, playerid, -2158.5718,643.0136,1052.3750) && GetPlayerVirtualWorld(playerid) == 1002) //Triad fõépület
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, -2378.9929,2443.9456,10.1694);
			}
			else if (PlayerToPoint(8.0, playerid,-1443.0554,-581.1879,1055.0472))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-2111.5686,-443.9720,38.7344);
			}
			else if (PlayerToPoint(8.0, playerid,-1464.7732,1557.5533,1052.5313))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-2080.3079,-406.0309,38.7344);
			}
            else if (GetPlayerState(playerid) == 2 && PlayerToPoint(3, playerid, 1062.5363,2082.5569,10.8203))
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 979.7841,-1254.8965,16.9473);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			}
			else if(PlayerToPoint(3, playerid, 1942.548, -2403.351, 13.585))
			{
			    if(GetPlayerState(playerid) == 2)
			    {
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerToPoint(3, i, 1358.420, -1820.966, 13.566))
							{
								SendClientMessage(playerid, COLOR_YELLOW, "Valaki elálja kint az utat!");
								return 1;
							}
						}
					}
					new tmpcar = GetPlayerVehicleID(playerid);
					SetPlayerVirtualWorld(playerid, 0);
					SetVehicleVirtualWorld(tmpcar, 0);
					SetVehiclePos(tmpcar, 1358.230, -1822.510, 14.589);
					SetVehicleZAngle(tmpcar, 179.968);
	        		//LinkVehicleToInterior(kocsi, GetPlayerInterior(playerid));
					Freeze(playerid, 1500);
				} else {
					SetPlayerPos(playerid,1358.230, -1822.510, 14.589);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
			/*else if (GetPlayerState(playerid) == 2 && PlayerToPoint(3, playerid, 1643.6934,-1516.3153,13.1927))
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerToPoint(3, i, 1643.5533,-1523.0732,13.5588))
						{
							SendClientMessage(playerid, COLOR_YELLOW, "Van valaki a bejáratnál! Így nem tudsz kimenni...");
							return 1;
						}
					}
				}
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1643.5533,-1523.0732,13.5588);
				TogglePlayerControllable(playerid, 1);
				tuningolo[playerid] = 0;
			}
			else if (GetPlayerState(playerid) == 2 && PlayerToPoint(3, playerid, -2083.9976,95.3304,35.3087))
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(PlayerToPoint(2, i, -2089.8782,95.2754,35.3203))
						{
							SendClientMessage(playerid, COLOR_YELLOW, "Van valaki a bejáratnál! Így nem tudsz kimenni...");
							return 1;
						}
					}
				}
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -2092.5813,95.1218,35.3203);
				TogglePlayerControllable(playerid, 1);
				tuningolo[playerid] = 0;
			}*/
			else if(PlayerToPoint(3, playerid, 2228.3096,-1150.4865,1025.7969))
			{
				if(PlayerInfo[playerid][pPhousekey] == 1000)
				{
				    Tele(playerid, -2425.4722,337.6092,37.0020);
				    SetPlayerVirtualWorld(playerid, 0);
				    GameTextForPlayer(playerid, "~h~~g~Viszlat!", 5000, 3);
				}
			}
			else if(PlayerToPoint(3, playerid, 2228.3096,-1150.4865,1025.7969))
			{
			    if(PlayerInfo[playerid][pPhousekey] == 1001)
				{
				    Tele(playerid, 2232.6213,-1159.8348,25.8906);
				    SetPlayerVirtualWorld(playerid, 0);
				    GameTextForPlayer(playerid, "~h~~g~Viszlat!", 5000, 3);
				}
			}
			else if(PlayerToPoint(1, playerid, 1204.7235,13.6836,1000.9219))
			{
			    if(PrivatEngedely[playerid] == NINCS) return 1;
				Tele(playerid, 1204.9697,12.4485,1000.9219);
			}
		}
		return 1;
	}
//----------------------------------[BIZZ]-----------------------------------------------
	if(strcmp(cmd, "/buybiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if(PlayerInfo[playerid][pPbiskey] != NINCS)
			{
				SendClientMessage(playerid, COLOR_WHITE, "  Már van bizniszed! Ha elakarod adni írd be: /sellbiz");
				return 1;
			}
			if(PlayerInfo[playerid][pBizniszKulcs] != NINCS) return Msg(playerid,"Már másudtulaj vagy egy biznisznél. Nem lehet bized!");
			for(new b = 0; b < sizeof(BizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
				{
					if(GetMoney(playerid) >= BizzInfo[b][bBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b;
						BizzInfo[b][bOwned] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
						GiveMoney(playerid,-BizzInfo[b][bBuyPrice]);
						PlayerPlayMusic(playerid);
						BizzInfo[b][bTulaj] = PlayerInfo[playerid][pID];
						BizzInfo[b][bMTulajID] = NINCS;
						SendClientMessage(playerid, COLOR_WHITE, "Gratulálunk az új bizniszedhez!");
						DestroyDynamicPickup(BizPickup[b]);

						//BizUpdate(b, "Tulaj='%s', Eladva='1'", sendername);
						BizUpdate(b, BIZ_Owner, BIZ_Owned, BIZ_Tulaj);

						format( _tmpString, 128, "UPDATE %s SET Bizz='%d' WHERE ID='%d'", SQL_DB_Player, b, SQLID( playerid ));
						doQuery( _tmpString );
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "Nincs elég pénzed hogy megvedd a bizniszt!");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sellbiz", true) == 0)
	{
		GetPlayerName(playerid, playername, sizeof(playername));
		if(PlayerInfo[playerid][pPbiskey] == NINCS)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Nincs bizniszed.");
			return 1;
		}
		if(PlayerInfo[playerid][pID] == BizzInfo[PlayerInfo[playerid][pPbiskey]][bTulaj])
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			BizzInfo[bouse][bLocked] = 1;
			BizzInfo[bouse][bOwned] = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(BizzInfo[bouse][bOwner], "Kormany", 0, strlen("Kormany"), 255);
			strmid(BizzInfo[bouse][bExtortion], "Nincs", 0, strlen("Nincs"), 255);
			BizzInfo[bouse][bTulaj] = NINCS;
			ConsumingMoney[playerid] = 1;
			GiveMoney(playerid,BizzInfo[bouse][bTill]);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "~w~Siker~n~ Eladtad a bizniszed ~n~~g~%dFT-ert", BizzInfo[bouse][bTill]);
			GameTextForPlayer(playerid, string, 10000, 3);
			BizzInfo[bouse][bTill] = 0;
			PlayerInfo[playerid][pPbiskey] = NINCS;
			//BizUpdate(bouse, "Tulaj='Nincs_Tulaj', Kassza='0', Eladva='%d'", 0);
			BizUpdate(bouse, BIZ_Owner, BIZ_Owned, BIZ_Till);

			format( _tmpString, 128, "UPDATE %s SET Bizz='255' WHERE ID='%d'", SQL_DB_Player, SQLID( playerid ));
			doQuery( _tmpString );
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Nincs bizniszed.");
		}
		return 1;
	}
	if(egyezik(cmd, "/biznisz") || egyezik(cmd, "/biz") || egyezik(cmd, "/business"))
	{
		if(PlayerInfo[playerid][pPbiskey] != NINCS && PlayerInfo[playerid][pBizniszKulcs] != NINCS)
		{
			Msg(playerid, "Hóhó valami nem stimmel. úgy tûnik tulaj is vagy, meg altulaj is, ami nem szabad. Kérlek old meg ezt a problémát");
			return 1;
		}
		if(params < 1)
		{
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
			SendClientMessage(playerid, COLOR_WHITE,"*** /biz [funkciók]*** Választható de ugyan az a funkció példa: [ bizfee | belépõ ]");
			SendClientMessage(playerid, COLOR_GRAD3,"*** Funkciók *** info [bizfee | belépõ] név prodprice open");
			SendClientMessage(playerid, COLOR_GRAD4,"*** Funkciók *** bank withdraw százalék [extortion | másodtulaj]");
		
		
			return 1;
		}
		if(egyezik(param[1], "open") || egyezik(param[1], "zar") || egyezik(param[1], "nyit"))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if(bouse == NINCS) return Msg(playerid,"Nincs bizniszed!");
			if(BizzInfo[bouse][bLocked])
			{
				BizzInfo[bouse][bLocked] = 0;
				Msg(playerid, "Nyitva");
			}
			else
			{
				BizzInfo[bouse][bLocked] = 1;
				Msg(playerid, "Zárva");
			}
		}
		if(egyezik(param[1], "info"))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			new bouse2 = PlayerInfo[playerid][pBizniszKulcs];
			if(bouse == NINCS && bouse2 == NINCS) return Msg(playerid,"Nincs bizniszed és nem vagy másodtulaj sem!");
			if(bouse != NINCS)
			{
				PrintBizInfo(playerid,bouse);
				BizPenzAktivitas(bouse, 0, 1, playerid);
			}
			if(bouse2 != NINCS)
			{
				PrintBizInfo2(playerid,bouse2);
				BizPenzAktivitas(bouse2, 0, 2, playerid);
			}
			return 1;
		}
		if(egyezik(param[1], "prodprice"))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == NINCS)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Nincs bizniszed!");
				return 1;
			}
			if(params < 2) return Msg(playerid,"Használata: /biz prodprice [egy darab prod ára]");
			new szam = strval(param[2]);
			if(szam < 500 || szam > 150000)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Minimum 500 Ft, maximum 150,000Ft!");
				return 1;
			}

			if(szam > BizzInfo[bouse][bTill])
			{
				SendClientMessage(playerid, COLOR_WHITE, "Nincs ennyi a biznisz kasszájában!");
				return 1;
			}
			BizzInfo[bouse][bPriceProd] = szam;
			format(string, sizeof(string), "A biznisz a prodokat mostmár %d forintért fogja venni", BizzInfo[bouse][bPriceProd]);

			//BizUpdate(bouse, "ProdPrice='%d'", BizzInfo[bouse][bPriceProd]);
			BizUpdate(bouse, BIZ_PriceProd);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
		}
		if(egyezik(param[1], "bizfee") || egyezik(param[1], "belépõ"))
		{
			if(IsPlayerConnected(playerid))
			{
				new bouse = PlayerInfo[playerid][pPbiskey];
				if (bouse == NINCS)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Nincs bizniszed!");
					return 1;
				}
				if(params < 2) return Msg(playerid,"Használata: /biz belepõ [ár]");
				new mm = strval(param[2]);
				new maxi = 20000; //Nem emelheted meg nagyobbra.
				switch(bouse)
				{
					case BIZ_HIRDETES: maxi = 300;
					case BIZ_BERLES1, BIZ_BERLES2: maxi = 200000;
				}


				if(mm< 0 || mm > maxi)
				{
					SendFormatMessage(playerid, COLOR_WHITE, "Minimum 0Ft, és max %dFt!", maxi);
					return 1;
				}

				BizzInfo[bouse][bEntranceCost] = mm;
				format(string, sizeof(string), "A belépés ára mostmár %dFt.", BizzInfo[bouse][bEntranceCost]);

				//BizUpdate(bouse, "BelepesAra='%d'", BizzInfo[bouse][bEntranceCost]);
				BizUpdate(bouse, BIZ_EntranceCost);

				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			return 1;
		}
		if(egyezik(param[1], "extortion") || egyezik(param[1], "másodtulaj"))
		{
			if(IsPlayerConnected(playerid))
			{
				new bouse = PlayerInfo[playerid][pPbiskey];
				if (bouse == NINCS)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Nincs bizniszed!");
					return 1;
				}
	
				if(params < 2) return Msg(playerid,"Használata: /biz másodtulaj [id/név]");
				new user=strval(param[2]);
				if(user != 555)
					giveplayerid = ReturnUser(param[2]);
				else
					giveplayerid = 555;

				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerInfo[giveplayerid][pBizniszKulcs] != NINCS) return Msg(playerid,"Õ már másudtulaj egy másik biznisznél");
						if(PlayerInfo[giveplayerid][pPbiskey] != NINCS) return Msg(playerid, "Õ már tulaj egy bizniszbe, nem lehet másodtulaj");
						if(BizzInfo[bouse][bMTulajID] != NINCS) return Msg(playerid, "Van másodtulajdonosod, elobbb rúgd ki!");
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* %s meghívott társtulajnak a bizniszéhez.",sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s meghívtad társtulajnak a bizniszedhez.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pBizniszKulcs] = bouse;
						BizzInfo[bouse][bMTulajID] = PlayerInfo[giveplayerid][pID];
						format(string, sizeof(string), "%s",giveplayer);
						strmid(BizzInfo[bouse][bExtortion], string, 0, sizeof(string), 255);
						//BizUpdate(bouse, "Extortion='%s'", string);
						BizUpdate(bouse, BIZ_Extortion);
						BizUpdate(bouse, BIZ_MTulajID);

						format(string, sizeof(string), "Új társtulaj: %s",BizzInfo[bouse][bExtortion]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				else if(giveplayerid == 555)
				{
					foreach(Jatekosok,x)
					{
						if(BizzInfo[bouse][bMTulajID] == PlayerInfo[x][pID])
						{
							PlayerInfo[x][pBizniszKulcs] = NINCS;
							Msg(x,"Kirúgtak a biznisz másodtulajdoni jogából!");
						}	
					
					}
					format(string, sizeof(string), "No-one");
					strmid(BizzInfo[bouse][bExtortion], string, 0, sizeof(string), 255);
					
					BizUpdate(bouse, BIZ_Extortion);
					BizzInfo[bouse][bMTulajID] = NINCS;
					BizUpdate(bouse, BIZ_MTulajID);
					format(string, sizeof(string), "Új társtulaj: %s",BizzInfo[bouse][bExtortion]);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "  Nincs ilyen játékos a szerveren!");
					return 1;
				}
			}
			return 1;
		}
		if(egyezik(param[1], "név"))
		{
			if(IsPlayerConnected(playerid))
			{
				new bouse = PlayerInfo[playerid][pPbiskey];
				if (bouse == NINCS)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "  Nincs bizniszed!");
					return 1;
				}
				new result[128];
				if(sscanf(pms, "{s[3]}s[128]", result))
					return SendClientMessage(playerid, COLOR_WHITE, "Használat: /biz név [Biznisz neve]");

				if(HibasBizNev(result))
					return Msg(playerid, "Hibás biznisz név! A név nem tartalmazhat | jelet, és vesszõt, pontot sem");

				strmid(BizzInfo[bouse][bMessage], result, 0, 64, 255);
				format(string, sizeof(string), "Biznisz név átírva: %s",BizzInfo[bouse][bMessage]);
				SendClientMessage(playerid, COLOR_WHITE, string);

				//BizUpdate(bouse, "Nev='%s'", result);
				BizUpdate(bouse, BIZ_Message);
			}
			return 1;
		}
		if(egyezik(param[1], "withdraw") || egyezik(param[1], "ki"))
		{
			if(IsPlayerConnected(playerid))
			{
				if(params < 1) return Msg(playerid,"Használata: /biz withdraw összeg");

				new bouse = PlayerInfo[playerid][pPbiskey];
				new bouse2 = PlayerInfo[playerid][pBizniszKulcs];
				if (bouse == NINCS && bouse2 == NINCS)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "  Nincs bizniszed!");
					return 1;
				}
				new szam = strval(param[2]);
				new bizpenz;
				if(bouse != NINCS)
				{
					
					if(!PlayerToPoint(2, playerid,BizzInfo[bouse][bEntranceX],BizzInfo[bouse][bEntranceY],BizzInfo[bouse][bEntranceZ]))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   Túl messze vagy a bizniszedtõl!");
						return 1;
					}
					bizpenz = BizzInfo[bouse][bTill];
				}
				else
				{
					if(!PlayerToPoint(2, playerid,BizzInfo[bouse2][bEntranceX],BizzInfo[bouse2][bEntranceY],BizzInfo[bouse2][bEntranceZ]))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   Túl messze vagy a bizniszedtõl!");
						return 1;
					}					
					bizpenz = BizzInfo[bouse2][bTill2];
				}
				if(params < 2)
				{
					
					format(string, sizeof(string), "  A bizniszben %dFt van", bizpenz);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					SendClientMessage(playerid, COLOR_GRAD2, "Használata: /biz withdraw [összeg]");
					return 1;
				}
				
				if (szam > bizpenz  || szam < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Ennyi nincs benne!");
					return 1;
				}


				GiveMoney(playerid,szam);
			

					
					
				bizpenz -=szam;
				format(string, sizeof(string), "  Kivettél %d forintot a bizniszedbõl, még maradt %dFt ", szam,bizpenz);

				SendClientMessage(playerid, COLOR_YELLOW, string);
				
				if(bouse != NINCS)
					BizzInfo[bouse][bTill]=bizpenz, BizUpdate(bouse, BIZ_Till);
				else
					BizzInfo[bouse2][bTill2]=bizpenz, BizUpdate(bouse2, BIZ_Till2);
				
				
				
				return 1;
	
			}
			return 1;
		}
		if(egyezik(param[1],"szazalek") || egyezik(param[1],"százalék"))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if(bouse == NINCS) return Msg(playerid,"Nincs bizniszed");
			if(params < 2) return Msg(playerid,"Használata:/biz százalék [szám]");
			new szam = strval(param[2]);
			if(szam < 0 || szam > 100) return Msg(playerid," A százalék 0 és 100 között lehet, nullánál semmit nem kap, 100 minden bevételt õ kap");
			BizzInfo[bouse][bSzazalek] = szam;
			SendFormatMessage(playerid, COLOR_LIGHTBLUE,"A másodtulaj részesedése mostantól %d %!",BizzInfo[bouse][bSzazalek]);
			BizUpdate(bouse, BIZ_Szazalek);
		}	
		if(egyezik(param[1], "bank"))
		{
			if(IsPlayerConnected(playerid))
			{
				if(params < 1) return Msg(playerid,"Használata: /biz bank");
				{
	
					new bouse2 = PlayerInfo[playerid][pBizniszKulcs];
					new bouse = PlayerInfo[playerid][pPbiskey];
					if (bouse == NINCS && bouse2 == NINCS)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "  Nincs bizniszed!");
						return 1;
					}
					new bizpenz;
					new szam = strval(param[2]);
					if(bouse != NINCS)
					{
						bizpenz = BizzInfo[bouse][bTill];
						if(!PlayerToPoint(2, playerid,BizzInfo[bouse][bEntranceX],BizzInfo[bouse][bEntranceY],BizzInfo[bouse][bEntranceZ]))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "   Túl messze vagy a bizniszedtõl!");
							return 1;
						}
	
					}
					else
					{
						if(!PlayerToPoint(2, playerid,BizzInfo[bouse2][bEntranceX],BizzInfo[bouse2][bEntranceY],BizzInfo[bouse2][bEntranceZ]))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "   Túl messze vagy a bizniszedtõl!");
							return 1;
						}					
						bizpenz = BizzInfo[bouse2][bTill2];
					}	
					if(params < 2)
					{

						format(string, sizeof(string), "  A bizniszben %dFt van", bizpenz);
						SendClientMessage(playerid, COLOR_GRAD3, string);
						SendClientMessage(playerid, COLOR_GRAD2, "Használata: /biz bank [összeg]");
						return 1;
					}
					if (szam > GetMoney(playerid) || szam < 1)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   Nincs ennyi pénzed!");
						return 1;
					}


					GiveMoney(playerid,-szam);
			
					bizpenz += szam;
		
					
					if(bouse != NINCS)
						BizzInfo[bouse][bTill]=bizpenz, BizUpdate(bouse, BIZ_Till);
					else
						BizzInfo[bouse2][bTill2]=bizpenz, BizUpdate(bouse2, BIZ_Till2);

					format(string, sizeof(string), "  Beraktál %d forintot a bizniszedbe, összesen %dFt van benne", szam,bizpenz);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;

				}	
			}
			return 1;
		}
	}
//-----------------------------------[HEAL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/heal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(!strlen(tmp))
			{
				new x, haz = NINCS, HazBelso;
				for(x = 0; x < sizeof(HouseInfo); x++)
				{
					if(HouseInfo[x][Van] == 1)
					{
						HazBelso = HouseInfo[x][hBelso];
						if(PlayerToPoint(200, playerid, IntInfo[HazBelso][iExitX], IntInfo[HazBelso][iExitY], IntInfo[HazBelso][iExitZ]) && GetPlayerVirtualWorld(playerid) == x && GetPlayerInterior(playerid) == IntInfo[HazBelso][iNumber])
						{
							haz = x;
							break;
						}
					}
				}

				if(haz != NINCS)
				{
					if(HouseInfo[haz][hArm] == 1)
					{
						if(IsACop(playerid))
						{
							format(string, sizeof(string), "* Valaki felvett egy golyóálló mellényt.");
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SetPlayerArmour(playerid, 100.0);
						}
						else Msg(playerid, "Nem vagy rendvédelmis, ezért nem veheted fel a mellényt...");
					}
					else
					{
						format(string, sizeof(string), "Ezen a helyen nincs golyóálló mellény.");
						SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
					}
					if(HouseInfo[haz][hHel] == 1)
					{
						if(HouseInfo[haz][hKaja] >= 1)
							HouseInfo[haz][hKaja]--;
						else
							return SendClientMessage(playerid, COLOR_GREY, "A hûtõ üres...");
						
						Szukseglet(playerid, -100);

						PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "* %s megevett egy szendvicset, amit a hûtõben talált.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
						format(string, sizeof(string), "Ezen a helyen nincs hûtõ.");
						SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
					}
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Használat: /heal [playerid/PartOfName]");
					return 1;
				}
			}
			giveplayerid = ReturnUser(tmp);
			if (GetDistanceBetweenPlayers(playerid, giveplayerid) > 10.0) return Msg(playerid, "Nincs a közeledben!");
			moneys = 10000;

			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new giveambu = GetPlayerVehicleID(giveplayerid);
					new playambu = GetPlayerVehicleID(playerid);
					if(LMT(playerid, FRAKCIO_MENTO) || Onkentesszolgalatban[playerid]) //model
					{
						if(IsAnAmbulance(playambu) && playambu == giveambu || IsMunkaKocsi(playambu) == MUNKA_ONKENTES && playambu == giveambu || IsAt(playerid, IsAt_Korhaz))
						{
							if(LMT(playerid, FRAKCIO_MENTO) && !Munkarang(playerid, 0) && !Onkentesszolgalatban[playerid])	return Msg(playerid, "Rang 0-án nem használhatod");
							
							new Float:tempheal;
							GetPlayerHealth(giveplayerid,tempheal);
							if(tempheal >= (MAXHP - 25.0))
								return SendClientMessage(playerid, TEAM_GREEN_COLOR," Játékos nem szorul ellátásra.");
								
							format(string, sizeof(string), "~y~Meggyogyitottad ~n~~w~%s-t~n~~g~%dFt", giveplayer,moneys);
							GameTextForPlayer(playerid, string, 5000, 1);
							
							GiveMoney(playerid,moneys/2);
							GiveMoney(giveplayerid,-moneys);
							FrakcioSzef(FRAKCIO_MENTO,moneys/2);
							
							SetHealth(giveplayerid, MAXHP);
							Szukseglet(giveplayerid, -100);
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							PlayerPlaySound(giveplayerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "Meggyógyítottak %dFt-ért", moneys);
							SendClientMessage(giveplayerid, TEAM_GREEN_COLOR,string);
							if(STDPlayer[giveplayerid] > 0)
							{
								STDPlayer[giveplayerid] = 0;
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* Már nem vagy fertõzõtt az STD-vel, mert a mentõs ellátott!");
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Mentõs jármûben, vagy a kórházban kell lenned");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Nem használhatod a parancsot.");
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d nem aktív játékos.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//----------------------------------[ADMINADMIN]-----------------------------------------------
	if(strcmp(cmd, "/bigears", true) == 0 && PlayerInfo[playerid][pAdmin] >= 5)
	{
	    if(IsPlayerConnected(playerid))
	    {
			//SendClientMessage(playerid, COLOR_LIGHTRED, "Átmenetileg nem elérhetõ!");
			if (!BigEar[playerid])
			{
				BigEar[playerid] = true;
				SendClientMessage(playerid, COLOR_GRAD2, "   De nagy füleid lettek!");
			}
			else if (BigEar[playerid])
			{
				BigEar[playerid] = false;
				SendClientMessage(playerid, COLOR_GRAD2, "   A füleid újra normál méretûek.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/id", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Használat: /id [játékos]");
			return 1;
		}
		new target;
		target = ReturnUser(tmp);
		new sstring[60];
		if(target == INVALID_PLAYER_ID || IsClint(target) || PlayerInfo[target][pID] == 234) return Msg(playerid, "Nincs ilyen játékos");
		GetPlayerName(target, giveplayer, sizeof(giveplayer));
		format(sstring, sizeof(sstring), "ID: [%d]%s",target,giveplayer);
		SendClientMessage(playerid, COLOR_GRAD1, sstring);
		return 1;
	}
	if(egyezik(cmd, "/engedtv"))
	{
		if(!Admin(playerid, 1)) return 1;
		if(Tvenged[playerid])
		{
			Tvenged[playerid]=false;
			Msg(playerid, "Tíltottad hogy a kisebb adminok tv-zenek téged");
		}
		else
		{
			Msg(playerid, "Engedélyezted hogy a kisebb adminok tv-zenek téged");
			Tvenged[playerid]=true;
		}

	}
	if(strcmp(cmd, "/tv", true) == 0)
	{
	    if(IsAS(playerid) || Admin(playerid))
	    {
	        if(Animban[playerid] == 1) return Msg(playerid, "(( Animban? Talán nem kellene -.- ))");
	        if(GetPVarType(playerid, "FlyMode")) return Msg(playerid, "(( FlyMode-ba vagy! Elõtte lépj ki! /flymode ))");
			tmp = strtok(cmdtext, idx);

			if(strlen(tmp) && egyezik(tmp, "vissza"))
			{
				MostLepettBe[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTRED, "(( Visszarakva az eredeti pozíciódra! ))");
				DontWriteJustLoggedIn[playerid] = true;
				OnPlayerSpawn(playerid);
				return 1;
			}

			giveplayerid = ReturnUser(tmp);
			if(!strlen(tmp) || egyezik(tmp, "off"))
			{
			    if(Tevezik[playerid] != NINCS)
			    {
					TogglePlayerSpectating(playerid, 0);

					GameTextForPlayer(playerid, "~w~                TV~n~~r~                Ki", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if(PlayerInfo[playerid][pTVJog] > UnixTime || IsAS(playerid))
					{
						format(string, sizeof(string), "<< Adminsegéd %s befejezte %s figyelését! >>", sendername, PlayerName(Tevezik[playerid]));
						ABroadCast(COLOR_LIGHTRED, string, 0);
					}
					else if(PlayerInfo[playerid][pAdmin] < 1337 && (PlayerInfo[Tevezik[playerid]][pAdmin] == 0 || PlayerInfo[playerid][pAdmin] <= PlayerInfo[Tevezik[playerid]][pAdmin]))
					{
						format(string, sizeof(string), "<< Admin %s befejezte %s figyelését! >>", AdminName(playerid), PlayerName(Tevezik[playerid]));
						ABroadCast(COLOR_LIGHTRED, string, 1);
					}
					Tevezve[Tevezik[playerid]] = NINCS;
					Tevezik[playerid] = NINCS;
					
					if(PlayerInfo[playerid][pGPS])
						Radar(playerid, true);
					
					DontWriteJustLoggedIn[playerid] = true;
					if(egyezik(param[2], "now"))
						SetTimerEx("Munkavege", 0, false, "ddd", playerid, M_TVVEGE,0);
					else
						SetTimerEx("Munkavege", 1000, false, "ddd", playerid, M_TVVEGE,0);
					
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "(( Használata: /tv [Játékos] | Visszatérés eredeti pozícióra: /tv vissza ))");
				    return 1;
				}
			}

			if(Admin(playerid,1) || PlayerInfo[playerid][pTVJog] > UnixTime || PlayerInfo[playerid][pAS] == NINCS)
			{
				giveplayerid = ReturnUser(tmp);

				if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin] && !Tvenged[giveplayerid])
					{
						SendFormatMessage(giveplayerid, COLOR_GREY, "[TV]%s tévézni akar téged. Ha engedni akarod: /engedtv", PlayerName(playerid));
						SendClientMessage(playerid, COLOR_GREY, "[TV]Admin nem engedélyezi hogy TV-zd!");
						return 1;
					}
					else if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin] || IsTerno(giveplayerid) || IsAllDenaro(giveplayerid)) 
					{
						SendFormatMessage(giveplayerid, COLOR_GREY, "[TV]%s tévéz téged", AdminName(playerid));
					}

					if(Tevezik[playerid] == NINCS)
					{
						// ???!??? fegyverek mentése
						WeaponArm(playerid);
						
						GetPlayerPos(playerid, PlayerInfo[playerid][pCPosX], PlayerInfo[playerid][pCPosY], PlayerInfo[playerid][pCPosZ]);
						PlayerInfo[playerid][pCInt] = GetPlayerInterior(playerid);
						PlayerInfo[playerid][pCVW] = GetPlayerVirtualWorld(playerid);
						GetPlayerHealth(playerid, PlayerInfo[playerid][pCelet]);
						GetPlayerArmour(playerid, PlayerInfo[playerid][pCpajzs]);
					}
					else
						Tevezve[Tevezik[playerid]] = NINCS;

					Tevezik[playerid] = giveplayerid;
					TogglePlayerSpectating(playerid, 1);

					SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
					SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));

					if(!IsPlayerInAnyVehicle(giveplayerid))
						PlayerSpectatePlayer(playerid, giveplayerid);
					else
						PlayerSpectateVehicle(playerid, GetPlayerVehicleID(giveplayerid));

					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

					if(PlayerInfo[playerid][pTVJog] > UnixTime || IsAS(playerid))
					{
						format(string, sizeof(string), "<< Adminsegéd %s megfigyeli %s-t! >>", sendername, giveplayer);
						ABroadCast(COLOR_LIGHTRED, string, 0);
					}
					else
					{
						if(PlayerInfo[playerid][pAdmin] < 1337 && (PlayerInfo[giveplayerid][pAdmin] == 0 || PlayerInfo[playerid][pAdmin] <= PlayerInfo[giveplayerid][pAdmin]))
						{
							format(string, sizeof(string), "<< Admin %s megfigyeli %s-t! >>", AdminName(playerid), giveplayer);
							ABroadCast(COLOR_LIGHTRED, string, 1);
						}
					}

					Tevezik[playerid] = giveplayerid;
					Tevezve[giveplayerid] = playerid;
					TextDrawUpdate(playerid, TD_Info);
					TextDrawUpdate(playerid, TD_Info2);
					TextDrawUpdate(playerid, TD_Info4);
				}
			}
			else
				SendClientMessage(playerid, COLOR_GREEN, "(( Admin még nem engedélyezte számodra a TV-zést. ))");
		}
		return 1;
	}
//----------------------------------[AdminChat]-----------------------------------------------

	if(strcmp(cmd, "/as", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!Admin(playerid, 1) && !IsScripter(playerid) && !IsAS(playerid)) return 1;

			if(noas == 1 && !Admin(playerid, 1) && !IsScripter(playerid))
				return Msg(playerid, "(( Az Adminsegéd Chat jelenleg ki van kapcsolva. ))");

			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /as [Adminsegéd Chat]");

			format(string, sizeof(string), "* %s %s: %s", AdminRangNev(playerid), AdminName(playerid), result);
			
			foreach(Jatekosok, x)
			{
				if(Admin(x, 1) || IsAS(x))
			        SendClientMessage(x, 0xD8FF00FF, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!Admin(playerid, 1) && !IsScripter(playerid) && !IsTerno(playerid)) return 1;
			new result[128];
   			if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /(a)dmin [Admin Chat]");
			format(string, sizeof(string), "%s %s: %s", AdminRangNev(playerid), AdminName(playerid), result);
			SendMessage(SEND_MESSAGE_ADMIN, string, COLOR_GREEN, 1);
		}
		return 1;
	}
	if(egyezik(cmd, "/fa"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!SAdmin(playerid, 1337)) return 1;

			new result[128];
   			if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /fa [FõAdmin Chat]");
			format(string, sizeof(string), "%s %s: %s", AdminRangNev(playerid), AdminName(playerid), result);
			SendMessage(SEND_MESSAGE_ADMIN, string, TEAM_ORANGE_COLOR, 1337);
		}
		return 1;
	}
	if(egyezik(cmd, "/sa"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsScripter(playerid)) return 1;
			new result[128];
   			if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /sa [Scripter Chat]");
			format(string, sizeof(string), "%s %s: %s", AdminRangNev(playerid), AdminName(playerid), result);			
			SendMessage(SEND_MESSAGE_SCRIPTER, string, COLOR_LIGHTBLUE);
		}
		return 1;
	}
	if(egyezik(cmd, "/sc"))//TogElotag friss by Amos
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsSuper(playerid)) return 1;
			new result[128], getadminname[MAX_PLAYER_NAME];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /sc [SuperScripter Chat]");
			format(getadminname, sizeof(getadminname), "%s", AdminName(playerid));
			strrep(getadminname, '_', ' ');
			format(string, sizeof(string), "%s: %s", getadminname, result);
			SendMessage(SEND_MESSAGE_SUPERSCRIPTER, string, Pink2);
		}
		return 1;
	}
//----------------------------------[cnn]-----------------------------------------------
	if(egyezik(cmd, "/cnnn") || egyezik(cmd, "/cnn"))
	{
		if(Admin(playerid, 2))
		{
            new result[128], textid;
			if(sscanf(pms, "ds[128]", textid, result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /cnn [TextID (0-6)] [szöveg ~n~=Új sor ~r~=Piros ~g~=Zöld ~b~=Kék ~w~=Fehér ~y~=Sárga]");

            if(textid == 2 || textid < 0 || textid > 6) return SendClientMessage(playerid, COLOR_LIGHTRED, "Érvénytelen TextID!");
			format(string, sizeof(string), "~w~%s",result);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i) == 1)
				{
					GameTextForPlayer(i, string, 5000, textid);
				}
			}
			return 1;
		}
	}
//----------------------------------[TOD]-----------------------------------------------
    if(egyezik(cmd, "/tod"))
	{
		if(Admin(playerid, 1337))
		{
            new hour;
			if(sscanf(pms, "d", hour))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /tod [Time of Day (0-23)]");

            if(hour < 0 || hour > 23) return SendClientMessage(playerid, COLOR_LIGHTRED, "Érvénytelen érték!");
			IdoAllitas(hour);
			ABroadCastFormat(COLOR_LIGHTBLUE, 1, "<< Admin %s átállította az idõt %d órára >>", AdminName(playerid), hour);
			return 1;
		}
	}
	if(strcmp(cmd, "/startlotto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
	            format(string, sizeof(string), "Lottó hírek: Lottó sorsolás.");
	            SendMessage(SEND_MESSAGE_OOCOFF, string, COLOR_WHITE);
	            Lotto();
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "<< Admin %s elindított egy lottó sorsolást! >>", AdminName(playerid));
				ABroadCast(COLOR_LIGHTRED, string, 1);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Nem használhatod ezt a parancsot !");
	            return 1;
	        }
	    }
		return 1;
	}
	if(egyezik(cmd, "/autoker"))
	{
		if(params < 1) return Msg(playerid, "/autoker [giverank / kulcs / tagok / kirúg / felvesz]");
		new player;
		if(egyezik(param[1], "felvesz") || egyezik(param[1], "invite"))
		{
			if(params < 2) return Msg(playerid, "/autoker felvesz [név/id]");
			if(PlayerInfo[playerid][pAutoker]<7 && !Admin(playerid, 1337)) return Msg(playerid, "Csak az igazgató!!");
			player = ReturnUser(param[2]);
			if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
			if(PlayerInfo[player][pAutoker]>1) return Msg(playerid,"Õ már tagja az autókereskedõnek!");
			PlayerInfo[player][pAutoker]=1;
			format(string, sizeof(string), "%s felvett az autókereskedõkbe!", ICPlayerName(playerid));
			SendClientMessage(player, COLOR_YELLOW, string);
			format(string, sizeof(string), "%s -Felvetted az autókereskedõkbe!", ICPlayerName(player));
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		if(egyezik(param[1], "kirúg") || egyezik(param[1], "uninvite"))
		{
			if(params < 2) return Msg(playerid, "/autoker kirúg [név/id]");
			if(PlayerInfo[playerid][pAutoker]<7 && !Admin(playerid, 1337)) return Msg(playerid, "Csak az igazgató!!");
			player = ReturnUser(param[2]);
			if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
			if(PlayerInfo[player][pAutoker]<1) return Msg(playerid,"Õ nem autókereskedõ");
			PlayerInfo[player][pAutoker]=0;
			format(string, sizeof(string), "%s kirúgott az autókereskedõktõl!", ICPlayerName(playerid));
			SendClientMessage(player, COLOR_YELLOW, string);
			format(string, sizeof(string), "%s -kirúgtad az autókereskedõktõl!", ICPlayerName(player));
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		if(egyezik(param[1], "giverank"))
		{
			if(PlayerInfo[playerid][pAutoker]<7 && !Admin(playerid, 1337)) return Msg(playerid, "Csak az igazgató!!");
			if(params < 3) return Msg(playerid, "/autoker [giverank [id/név] rang");
			player = ReturnUser(param[2]);
			if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
			if(PlayerInfo[player][pAutoker]<1) return Msg(playerid,"Õ nem autókereskedõ");
			new rang=strval(param[3]);
			if (rang < 1 || rang > 12) return Msg(playerid, "Csak 1-12 között!");

			PlayerInfo[player][pAutoker]=rang;
			format(string, sizeof(string), "%s új rangot adott neked! Rang: %d", ICPlayerName(playerid), rang);
			SendClientMessage(player, COLOR_YELLOW, string);
			format(string, sizeof(string), "%s -nek új ragot adtál! Rang: %d", ICPlayerName(player), rang);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		if(egyezik(param[1], "kulcs"))
		{
			if(PlayerInfo[playerid][pAutoker]<2) return Msg(playerid, "Legalább Rang 3-nak kell lenned!");
			if(params < 2) return Msg(playerid, "/autoker kulcs [id/név]");
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
			player = ReturnUser(param[2]);
			if(AutokerKulcs[player]==1)
			{
				AutokerKulcs[player]=0;
				format(string, sizeof(string), "%s elvette tõled a kulcsot!", ICPlayerName(playerid));
				SendClientMessage(player, COLOR_YELLOW, string);
				format(string, sizeof(string), "%s -tõl elvetted a kulcsot!", ICPlayerName(player));
				SendClientMessage(playerid, COLOR_YELLOW, string);
			}
			else
			{
				AutokerKulcs[player]=1;
				format(string, sizeof(string), "%s adott egy kulcsot, hogy kipróbálhasd a kocsit!", ICPlayerName(playerid));
				SendClientMessage(player, COLOR_YELLOW, string);
				format(string, sizeof(string), "%s -nek adtál egy kulcsot!", ICPlayerName(player));
				SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
		if(egyezik(param[1], "tagok"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "========== Autokereskedõk =========");
			for(new x= 0; x < MAX_PLAYERS; x++)
			{
				if(IsPlayerConnected(x))
				{
					if(PlayerInfo[x][pAutoker] > 0)
					SendFormatMessage(playerid, COLOR_GREY, "[%d]%s | rang: %d| Telefonszám: %d", x, ICPlayerName(x), PlayerInfo[x][pAutoker], PlayerInfo[x][pPnumber]);
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, "========== Autokereskedõk ==========");

		}
		if(egyezik(param[1], "szolgálat") || egyezik(param[1], "szolgalat") || egyezik(param[1], "duty"))
		{
		    if(PlayerToPoint(5, playerid, 1358.359,-1523.176,17.085))
		    {
				if(PlayerInfo[playerid][pAutoker]<1) return Msg(playerid, "Te nem vagy autókereskedõ!");
			    if(PlayerInfo[playerid][pSex] == 1)
				{
					if(GetPlayerSkin(playerid) == 187)
					{
						if(PlayerInfo[playerid][pChar] > 0 && OnDuty[playerid] || PlayerInfo[playerid][pChar] > 0 && !LegalisSzervezetTagja(playerid) && !Civil(playerid))
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
						else
							SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);

						Msg(playerid, "Visszaöltöztél a saját ruhádba!");
						Cselekves(playerid, "visszaöltözött a saját ruhájába");

					} else
					{
						SetPlayerSkin(playerid, 187);
						Msg(playerid, "Átöltöztél az autókereskõi ruhádba!");
						Cselekves(playerid, "átöltözött munkaruhába");
						SendClientMessageToAll(COLOR_LIGHTBLUE, "* Autókereskedõk szolgálatban, ha új jármûvet szeretnél keresd fel õket ((/autoker tagok))");
					}
				}
				else if(PlayerInfo[playerid][pSex] == 2)
				{
					if(GetPlayerSkin(playerid) == 233)
					{
						if(PlayerInfo[playerid][pChar] > 0 && OnDuty[playerid] || PlayerInfo[playerid][pChar] > 0 && !LegalisSzervezetTagja(playerid) && !Civil(playerid))
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
						else
							SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);

						Msg(playerid, "Visszaöltöztél a saját ruhádba!");
						Cselekves(playerid, "visszaöltözött a saját ruhájába");

					} else
					{
						SetPlayerSkin(playerid, 233);
						Msg(playerid, "Átöltöztél az autókereskõi ruhádba!");
						Cselekves(playerid, "átöltözött munkaruhába");
						SendClientMessageToAll(COLOR_LIGHTBLUE, "* Autókereskedõk szolgálatban, ha új jármûvet szeretnél keresd fel õket ((/autoker tagok))");
					}
				}
			} else return Msg(playerid, "Itt nem veheted fel a felszerelésed!");
			return true;
		}
	}
	if(egyezik(cmd, "/szerelo") || egyezik(cmd,"/szerelõ"))
	{
		if(params < 1) return Msg(playerid, "/szerelõ [Felvesz / Kirúg / Giverank / Tagok / Szolgálat]");
		new player;
		if(egyezik(param[1], "szolgálat") || egyezik(param[1], "szolgalat") || egyezik(param[1], "duty"))
		{
			if(PlayerInfo[playerid][pSzerelo]<1) return Msg(playerid, "Nem vagy autószerelõ!");
			if(OnDuty[playerid]) return Msg(playerid, "Döntsd elõbb el mit dolgozol! ((frakció dutyba nem!))");
			if(!PlayerToPoint(5, playerid, 2048.4619, -2066.4832, 12.5586) && !PlayerToPoint(3, playerid, -1857.7086, 129.7148, 14.1156)) // Új szerelõ hq LS-SF)
			{
				Msg(playerid, "Nem vagy a HQn! A GPS-ed mutatja.");
				SetPlayerCheckpoint(playerid, 2048.4619, -2066.4832, 12.5586, 2);
				return 1;
			}
			if(JobDuty[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Most már nem vagy szolgálatban mint autószerelõ.");
				JobDuty[playerid] = 0;
				if(PlayerInfo[playerid][pChar] > 0 && OnDuty[playerid] || PlayerInfo[playerid][pChar] > 0 && !LegalisSzervezetTagja(playerid) && !Civil(playerid))
				{
					SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
				}
				else
				{
					SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Szolgáltaba áltál mint autószerelõ.");
				SendClientMessageToAll(COLOR_LIGHTBLUE, "* Autószerelõ szolgálatban(/service mechanic)");
				JobDuty[playerid] = 1;
				if(PlayerInfo[playerid][pSex] == 1)
				{
					SetPlayerSkin(playerid, 50);
				}
				else
				{
					SetPlayerSkin(playerid, 69);
				}
			}
		}
		if(egyezik(param[1], "felvesz") || egyezik(param[1], "invite"))
		{
			if(params < 2) return Msg(playerid, "/szerelõ felvesz [Játékos]");
			if(PlayerInfo[playerid][pSzerelo]<7 && !Admin(playerid, 1337)) return Msg(playerid, "Csak az igazgató!!");
			player = ReturnUser(param[2]);
			if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
			if(PlayerInfo[player][pSzerelo]>0) return Msg(playerid,"Õ már tagja a szerelõknek!");
			PlayerInfo[player][pSzerelo]=1;
			format(string, sizeof(string), "%s felvett a szerelõkhöz!", ICPlayerName(playerid));
			SendClientMessage(player, COLOR_YELLOW, string);
			format(string, sizeof(string), "%s-t felvetted a szerelõkhöz!", ICPlayerName(player));
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		if(egyezik(param[1], "kirúg") || egyezik(param[1], "uninvite"))
		{
			if(params < 2) return Msg(playerid, "/szerelõ kirúg [Játékos]");
			if(PlayerInfo[playerid][pSzerelo]<7 && !Admin(playerid, 1337)) return Msg(playerid, "Csak az igazgató!!");
			player = ReturnUser(param[2]);
			if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
			if(PlayerInfo[player][pSzerelo] >= PlayerInfo[playerid][pSzerelo]) return Msg(playerid, "Nálad magasabb rangút nem!");
			if(PlayerInfo[player][pSzerelo]<1) return Msg(playerid,"Õ nem szerelõ");
			PlayerInfo[player][pSzerelo]=0;
			format(string, sizeof(string), "%s kirúgott a szerelõktõl!", ICPlayerName(playerid));
			SendClientMessage(player, COLOR_YELLOW, string);
			format(string, sizeof(string), "%s -kirúgtad a szerelõktõl!", ICPlayerName(player));
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		if(egyezik(param[1], "giverank"))
		{
			if(PlayerInfo[playerid][pSzerelo] < 7 && !Admin(playerid, 1337)) return Msg(playerid, "Csak az igazgató!!");
			if(params < 3) return Msg(playerid, "/szerelõ giverank [Játékos] [rang]");
			player = ReturnUser(param[2]);
			if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
			if(PlayerInfo[player][pSzerelo]<1) return Msg(playerid,"Õ nem szerelõ");
			if(PlayerInfo[player][pSzerelo] >= PlayerInfo[playerid][pSzerelo] && !Admin(playerid, 1337)) return Msg(playerid, "Nálad magasabb rangút nem!");
			new rang=strval(param[3]);
			if (rang < 1 || rang > 9) return Msg(playerid, "Csak 1-8 között!");

			PlayerInfo[player][pSzerelo]=rang;
			format(string, sizeof(string), "%s új rangot adott neked! Rang: %d", ICPlayerName(playerid), rang);
			SendClientMessage(player, COLOR_YELLOW, string);
			format(string, sizeof(string), "%s -nek új ragot adtál! Rang: %d", ICPlayerName(player), rang);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		if(egyezik(param[1], "tagok"))
		{
			SendClientMessage(playerid, COLOR_WHITE, "============== [ Autószerelõk ] ==============");
			foreach(Jatekosok, x)
			{
				if(PlayerInfo[x][pSzerelo] > 0)
				{
					SendFormatMessage(playerid, COLOR_GREY, "[%d]%s | Rang: %d | Telefonszám: %d | Szerelések: %d", x, ICPlayerName(x), PlayerInfo[x][pSzerelo],PlayerInfo[x][pPnumber], PlayerInfo[x][pSzerelt]);
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, "============== [ Autószerelõk ] ==============");
		}
	}
	if(egyezik(cmd, "/ar"))
	{
	    if(Bortonben(playerid)) return Msg(playerid, "Börtönben nem használhatod!");
		if(PlayerInfo[playerid][pAutoker] == 0) return 1;

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /ar [IC üzeneted]");

		if(SzovegEllenorzes(playerid, result, "/ar", ELLENORZES_HIRDETES)) return 1;
		new szoveg[128];

		if(PlayerInfo[playerid][pAutoker] == 1) format(szoveg, sizeof(szoveg), "Telep Felügyelõ");
		if(PlayerInfo[playerid][pAutoker] == 2) format(szoveg, sizeof(szoveg), "Tanuló Kereskedõ");
		if(PlayerInfo[playerid][pAutoker] == 3) format(szoveg, sizeof(szoveg), "Autókereskedõ");
		if(PlayerInfo[playerid][pAutoker] == 4) format(szoveg, sizeof(szoveg), "Csoportvezetõ Helyettes");
		if(PlayerInfo[playerid][pAutoker] == 5) format(szoveg, sizeof(szoveg), "Csoportvezetõ");
		if(PlayerInfo[playerid][pAutoker] == 6) format(szoveg, sizeof(szoveg), "Igazgatóhelyettes");
		if(PlayerInfo[playerid][pAutoker] == 7) format(szoveg, sizeof(szoveg), "Igazgató");
		if(PlayerInfo[playerid][pAutoker] == 8) format(szoveg, sizeof(szoveg), "Vezérigazgató");

		format(string, sizeof(string), "[Rádió]: %s %s: %s , vége", szoveg, ICPlayerName(playerid), result);

		foreach(Jatekosok, x)
		{
			if(PlayerInfo[x][pAutoker] == 0 || gFam[x] == 1) continue;
			SendClientMessage(x, COLOR_LIGHTGREEN, string);
		}
		format(string, sizeof(string), "[Rádió]%s mondja: %s", ICPlayerName(playerid), result);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	}
	if(egyezik(cmd, "/arb"))
	{
	    if(Bortonben(playerid)) return Msg(playerid, "Börtönben nem használhatod!");
		if(PlayerInfo[playerid][pAutoker] == 0) return 1;

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /arb [OOC üzeneted]");

		if(SzovegEllenorzes(playerid, result, "/arb", ELLENORZES_MINDKETTO)) return 1;
		new szoveg[128];
		if(PlayerInfo[playerid][pAutoker] == 1) format(szoveg, sizeof(szoveg), "Telep Felügyelõ");
		if(PlayerInfo[playerid][pAutoker] == 2) format(szoveg, sizeof(szoveg), "Tanuló Kereskedõ");
		if(PlayerInfo[playerid][pAutoker] == 3) format(szoveg, sizeof(szoveg), "Autókereskedõ");
		if(PlayerInfo[playerid][pAutoker] == 4) format(szoveg, sizeof(szoveg), "Csoportvezetõ Helyettes");
		if(PlayerInfo[playerid][pAutoker] == 5) format(szoveg, sizeof(szoveg), "Csoportvezetõ");
		if(PlayerInfo[playerid][pAutoker] == 6) format(szoveg, sizeof(szoveg), "Igazgatóhelyettes");
		if(PlayerInfo[playerid][pAutoker] == 7) format(szoveg, sizeof(szoveg), "Igazgató");
		if(PlayerInfo[playerid][pAutoker] == 8) format(szoveg, sizeof(szoveg), "Vezérigazgató");

		format(string, sizeof(string), "** [Rádió]%s %s OOC: (( %s )) **", szoveg, PlayerName(playerid), result);

		foreach(Jatekosok, x)
		{
			if(PlayerInfo[x][pAutoker] == 0 || gFam[x] == 1) continue;
			SendClientMessage(x, COLOR_LIGHTGREEN, string);
		}
		format(string, sizeof(string), "[Rádió]%s mondja OOC: (( %s ))", PlayerName(playerid), result);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	}
	if(egyezik(cmd, "/szr"))
	{
	   	if(PlayerInfo[playerid][pSzerelo] == 0) return 1;
		if(Bortonben(playerid)) return Msg(playerid, "Börtönben nem használhatod!");

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /szr [IC üzeneted]");

		if(SzovegEllenorzes(playerid, result, "/szr", ELLENORZES_HIRDETES)) return 1;
		new szoveg[128];
		if(PlayerInfo[playerid][pSzerelo] == 1) format(szoveg, sizeof(szoveg), "Telep Felügyelõ");
		if(PlayerInfo[playerid][pSzerelo] == 2) format(szoveg, sizeof(szoveg), "Karbantartó");
		if(PlayerInfo[playerid][pSzerelo] == 3) format(szoveg, sizeof(szoveg), "Tanuló Szerelõ");
		if(PlayerInfo[playerid][pSzerelo] == 4) format(szoveg, sizeof(szoveg), "Szerelõ Segéd");
		if(PlayerInfo[playerid][pSzerelo] == 5) format(szoveg, sizeof(szoveg), "Szerelõ");
		if(PlayerInfo[playerid][pSzerelo] == 6) format(szoveg, sizeof(szoveg), "Fõszerelõ");
		if(PlayerInfo[playerid][pSzerelo] == 7) format(szoveg, sizeof(szoveg), "Igazgató Helyettes");
		if(PlayerInfo[playerid][pSzerelo] == 8) format(szoveg, sizeof(szoveg), "Igazgató");
		if(PlayerInfo[playerid][pSzerelo] == 9) format(szoveg, sizeof(szoveg), "VezérIgazgató");
		format(string, sizeof(string), "[Rádió]: %s %s: %s , vége", szoveg, ICPlayerName(playerid), result);

		foreach(Jatekosok, x)
		{
			if(PlayerInfo[x][pSzerelo] == 0 || gFam[x] == 1) continue;
			SendClientMessage(x, COLOR_BLUE, string);
		}
		format(string, sizeof(string), "[Rádió]%s mondja: %s", ICPlayerName(playerid), result);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	}
	if(egyezik(cmd, "/szrb"))
	{
	    if(Bortonben(playerid)) return Msg(playerid, "Börtönben nem használhatod!");
		if(PlayerInfo[playerid][pSzerelo] == 0) return 1;

		new result[128];
		if(sscanf(pms, "s[128]", result))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /szrb [OOC üzeneted]");

		if(SzovegEllenorzes(playerid, result, "/szrb", ELLENORZES_MINDKETTO)) return 1;
		new szoveg[128];
		if(PlayerInfo[playerid][pSzerelo] == 1) format(szoveg, sizeof(szoveg), "Telep Felügyelõ");
		if(PlayerInfo[playerid][pSzerelo] == 2) format(szoveg, sizeof(szoveg), "Karbantartó");
		if(PlayerInfo[playerid][pSzerelo] == 3) format(szoveg, sizeof(szoveg), "Tanuló Szerelõ");
		if(PlayerInfo[playerid][pSzerelo] == 4) format(szoveg, sizeof(szoveg), "Szerelõ Segéd");
		if(PlayerInfo[playerid][pSzerelo] == 5) format(szoveg, sizeof(szoveg), "Szerelõ");
		if(PlayerInfo[playerid][pSzerelo] == 6) format(szoveg, sizeof(szoveg), "Fõszerelõ");
		if(PlayerInfo[playerid][pSzerelo] == 7) format(szoveg, sizeof(szoveg), "Igazgató Helyettes");
		if(PlayerInfo[playerid][pSzerelo] == 8) format(szoveg, sizeof(szoveg), "Igazgató");
		if(PlayerInfo[playerid][pSzerelo] == 9) format(szoveg, sizeof(szoveg), "VezérIgazgató");

		format(string, sizeof(string), "** [Rádió]%s %s OOC: (( %s )) **", szoveg, PlayerName(playerid), result);

		foreach(Jatekosok, x)
		{
			if(PlayerInfo[x][pSzerelo] == 0 || gFam[x] == 1) continue;
			SendClientMessage(x, COLOR_BLUE, string);
		}
		format(string, sizeof(string), "[Rádió]%s mondja OOC: (( %s ))", PlayerName(playerid), result);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	}
	if(egyezik(cmd, "/bar"))
	{

		if(Baraktiv[playerid])
		{
			Msg(playerid,"Szükséglet bar-ok elrejtve!");
			HideProgressBarForPlayer(playerid, VizeletBar[playerid]);
			HideProgressBarForPlayer(playerid, EhsegBar[playerid]);
			HideProgressBarForPlayer(playerid, AlmossagBar[playerid]);
			Baraktiv[playerid]=false;
		}
		else
		{
			Msg(playerid,"Szükséglet bar-ok megjelenítve!");
			ShowProgressBarForPlayer(playerid, EhsegBar[playerid]);
			ShowProgressBarForPlayer(playerid, VizeletBar[playerid]);
			ShowProgressBarForPlayer(playerid, AlmossagBar[playerid]);
			Baraktiv[playerid]=true;
		}
	}
//-----------------------------------editstat---------------------------------------

	if(egyezik(cmd, "/munkaid"))
	{
		if(!Admin(playerid, 1337)) return 1;
		if(params < 3)
		{
			SendClientMessage(playerid, COLOR_WHITE,"Használat: /munkaid [Játékos] [1/2] [MunkaID]");
			SendClientMessage(playerid, COLOR_GREEN,"|1 Dedektív |2 Ügyvéd |3 Prostituált|4 Drog Díler");
			SendClientMessage(playerid, COLOR_GREEN,"|5 Autótolvaj | 7 Testor |8 Fegyverkereskedo |9 Pilóta");
			SendClientMessage(playerid, COLOR_GREEN,"|10 Úttisztító |11 PIZZAS |12 Buszsofor |13 Postás |14 Hacker");
			SendClientMessage(playerid, COLOR_GREEN,"|15 Kamion sofor |16 Farmer |17 Funyíró |18 Építész");
			SendClientMessage(playerid, COLOR_GREEN,"|19 Páncélkészíto |20 Kukás-KIVÉVE | 21 Favágó");
			SendClientMessage(playerid, COLOR_GREEN,"|22 Hullaszállíto | 30 Pénzszállíto | 32 Vadász");
			return 1;
		}
		giveplayerid = ReturnUser(param[1]);
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
		new stat;
		stat = strval(param[2]);
		new amount;
		amount = strval(param[3]);
		switch (stat)
		{
			case 1:
			{
				PlayerInfo[giveplayerid][pJob1] = amount;
				format(string, sizeof(string), "   A játékos munkája átírva erre: %d", amount);
			}
			case 2:
			{
				PlayerInfo[giveplayerid][pJob2] = amount;
				format(string, sizeof(string), "   A játékos második munkája átírva erre: %d", amount);
			}
			default:
			{
				format(string, sizeof(string), "Nem jó munka id!");
			}
		}
		SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	if(egyezik(cmd,"/ppont"))
	{
		if(!Admin(playerid, 1337)) return 1;
		if(params < 2) return SendClientMessage(playerid, COLOR_GREEN, "Használat: /ppont [playerid/PartOfName] [DB] ");

		giveplayerid = ReturnUser(param[1]);
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
		new amount;
		amount = strval(param[2]);
		PlayerInfo[giveplayerid][pPremiumPont] = amount;
		format(string, sizeof(string), " A játékos prémiumpontjai: %d", amount);
		SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	if(egyezik(cmd,"/mati"))
	{
		if(!Admin(playerid, 1337)) return 1;
		if(params < 2) return SendClientMessage(playerid, COLOR_GREEN, "Használat: /mati [playerid/PartOfName] [DB] ");

		giveplayerid = ReturnUser(param[1]);
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
		new amount;
		amount = strval(param[2]);
		PlayerInfo[giveplayerid][pMats] = amount;
		format(string, sizeof(string), " A játékos materialsait átírtad erre: %d", amount);
		SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	if(egyezik(cmd,"/házasság"))
	{
		if(!Admin(playerid, 6)) return 1;
		if(params < 2) return SendClientMessage(playerid, COLOR_GREEN, "Használat: /házasság [playerid/PartOfName] [0] ");

		giveplayerid = ReturnUser(param[1]);
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

		ClearMarriage(giveplayerid);
		format(string, sizeof(string), " A játékos élettársa törölve!");
		SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	if(egyezik(cmd,"/kor"))
	{
		if(!Admin(playerid, 6)) return 1;
		if(params < 2) return SendClientMessage(playerid, COLOR_GREEN, "Használat: /kor [playerid/PartOfName] [év] ");

		giveplayerid = ReturnUser(param[1]);
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
		new amount;
		amount = strval(param[2]);
		PlayerInfo[giveplayerid][pAge] = amount;
		format(string, sizeof(string), " A játékos korát átírtad erre: %d", amount);
		SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	if(egyezik(cmd,"/nem"))
	{
		if(!Admin(playerid, 6)) return 1;
		if(params < 2) return SendClientMessage(playerid, COLOR_GREEN, "Használat: /nem [Játékos] [1/2] 1:férfi 2:nõ ");

		giveplayerid = ReturnUser(param[1]);
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
		new amount;
		amount = strval(param[2]);
		PlayerInfo[giveplayerid][pSex] = amount;
		format(string, sizeof(string), "   Játékos neme átírva(1=Férfi | 2=Nõ). %d", amount);
		SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	if(egyezik(cmd,"/arendszám") || egyezik(cmd,"/arendszam") || egyezik(cmd,"/rendszamnez") || egyezik(cmd,"/rendszámnéz"))
	{
	    if(IsPlayerConnected(playerid))
		{
            if(!LMT(playerid, FRAKCIO_SCPD) && !LMT(playerid, FRAKCIO_FBI) && !LMT(playerid, FRAKCIO_CIA) && !LMT(playerid, FRAKCIO_SFPD) && !LMT(playerid, FRAKCIO_NAV) && !LMT(playerid, FRAKCIO_KATONASAG) && !Admin(playerid, 1) && !IsScripter(playerid))
				return Msg(playerid, "Nem használhatod ezt a parancsot!");

			new carid = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, carid) > 5.0)
				return Msg(playerid, "Nincs a közeledben jármû!");

			new id = NINCS, frakcio = 1, kocsi = IsAVsKocsi(carid);
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				for(new kk = 0; kk  <MAX_FRAKCIO; kk++)
				{
					if(!FrakcioKocsi[kk][k][fVan]) continue;

					if(FrakcioKocsi[kk][k][fVan] && FrakcioKocsi[kk][k][fID] == carid)
					{
						frakcio=kk;
						id = k;
						break;
					}
				}
			}
			if(id == NINCS && kocsi == NINCS) return Msg(playerid, "Ez a jármû se nem Frakciós se nem V-s!");
			if(id > NINCS)
				SendFormatMessage(playerid, COLOR_GREEN,"[Info]: JármûID: %d | Tulaj: %s | Frakció ID: %d", carid, Szervezetneve[frakcio-1][1], frakcio);

            if(kocsi > NINCS)
				SendFormatMessage(playerid, COLOR_GREEN,"[Info]: JármûID: %d | Tulaj: %s | V-s Rendszám: %d", carid, CarInfo[kocsi][cOwner], kocsi);
		}
		return 1;
	}
	if(strcmp(cmd, "/flip", true) == 0)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy kocsiban.");
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
		    new currentveh;
		    new Float:angle;
		    currentveh = GetPlayerVehicleID(playerid);
		    GetVehicleZAngle(currentveh, angle);
		    SetVehicleZAngle(currentveh, angle);
		    SendClientMessage(playerid, 0xFFFFFFFF, "Jármûved Felállítva.");
		    return true;
		}

		return 1;
	}
	if(egyezik(cmd,"/teszt"))
	{
		if(!IsScripter(playerid)) return 1;
		CIDBan(playerid, 0, 1, "TESZT");
	
	}
	/*if(egyezik(cmd, "/tesztidõ") || egyezik(cmd, "/tesztido"))
	{
	    if(!Admin(playerid, 1337)) return true;
		if(params < 2) return Msg(playerid, "Használata: /tesztidõ [Játékos] [Óra (0 = Információ)]");
		new jatekos = ReturnUser(param[1]), ido = strval(param[2]);
		if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");
		if(ido == 0)
		{
		    new ido2, uzenet[128];
		    if(PlayerInfo[jatekos][pTut] < UnixTime)
				SendFormatMessage(playerid,COLOR_GREEN, "Játékos: %s | RP-Teszt már nem érvényes!",PlayerName(jatekos));
			else
		    {
			    ido2=floatround( (PlayerInfo[jatekos][pTut]-UnixTime) / 3600);
				format(uzenet, sizeof(uzenet), "Játékos: %s | RP-Teszt még érvényes: %d óráig",PlayerName(jatekos), ido2);
				if(ido2 < 1)
				{
					ido2=floatround( (PlayerInfo[jatekos][pTut]-UnixTime)/ 60);
					format(uzenet, sizeof(uzenet), "Játékos: %s | RP-Teszt még érvényes: %d percig",PlayerName(jatekos), ido2);
				}
				SendClientMessage(playerid,COLOR_GREEN,uzenet);
			}
		} else
		{
		    ido=ido*3600;
			PlayerInfo[jatekos][pTut] = UnixTime+ido;
			ido=ido/3600;
			SendFormatMessage(playerid,COLOR_GREEN, "Játékos: %s | RP-Teszt érvényességi ideje átírva! Még %d óráig érvényes!",PlayerName(jatekos), ido);
		}
	}*/
	/*if(egyezik(cmd, "/setar")) Ryan TT Bolt
	{
		if(!IsRyan(playerid)) return 1;
		if(params < 2)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Használat: /setar [statcode] [Érték]");
			SendClientMessage(playerid, COLOR_GRAD2, "|1 Telefon | 2 Telefonkönyv | 3 GPS | 4 Vontatókötél");
			SendClientMessage(playerid, COLOR_GRAD2, "|5 Kötszer | 6 Kaparós sorsjegy | 7 Dobókocka");
			SendClientMessage(playerid, COLOR_GRAD2, "|8 Csirke| 9 Hamburger | 10 Fagyasztott pizza | 11 Szendvics");
			SendClientMessage(playerid, COLOR_GRAD2, "|12 Szendvics csomag | 13 Cigi(doboz) | 14 Vihargyújtó | 15 Nikotin tapasz | 16 Kis cs. Óvszer");
            SendClientMessage(playerid, COLOR_GRAD2, "|17 Nagy cs. Óvszer | 18 Laptop | 19 Horgászbot | 20 Csali | 21 MP4");
			SendClientMessage(playerid, COLOR_GRAD2, "|22 Csipogó | 23 Virágcsokor | 24 Fejkendõ | 25 Vészhívó | 26 Vészhívó");
			SendClientMessage(playerid, COLOR_GRAD2, "|27 Frakció rádió | 28 Mikulás sapka | 29 Mikulás csomag | 30 Virgács");
			SendClientMessage(playerid, COLOR_GRAD2, "|31 Mobilnet");
			return 1;
		}
		switch(stat) // Egyelõre csak változók miatt
		{
			case 1:
			{
				PlayerInfo[giveplayerid][bTelefon] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos szintje átírva erre: %d", amount);
			}
			case 2:
			{
				if(!Admin(playerid, 1340)) return Msg(playerid, "Ezt a paramétert csak 1340-es Adminszinttõl használhatod!");
			    PlayerInfo[giveplayerid][bTeloKonyv] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos telefonszáma átírva erre: %s", FormatNumber( amount, 0, '-' ));
			}
			case 3:
			{
			    PlayerInfo[giveplayerid][bGPS] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos szintlépési ideje átírva erre: %d", amount);
			}
			case 4:
			{
			    PlayerInfo[giveplayerid][bVontatokotel] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos detektív skillje átírva erre: %d", amount);
			}
			case 5:
			{
			    PlayerInfo[giveplayerid][bKotszer] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos ügyvéd skillje átírva erre: %d", amount);
			}
			case 6:
			{
			    PlayerInfo[giveplayerid][bSorsjegy] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos mentõ skillje átírva erre: %d", amount);
			}
			case 7:
			{
			    PlayerInfo[giveplayerid][bKocka] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos riporter skillje átírva erre: %d", amount);
			}
			case 8:
			{
				PlayerInfo[giveplayerid][bCsirke] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos autótolvaj skillje átírva erre: %d", amount);
			}
			case 9:
			{
				PlayerInfo[giveplayerid][pHambi] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos drogdíler skillje átírva erre: %d", amount);
			}
			case 10:
			{
				PlayerInfo[giveplayerid][bPizza] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos neme átírva átírva erre: %d (1=Férfi | 2=Nõ)", amount);
			}
			case 11:
			{
				PlayerInfo[giveplayerid][bSzendvics] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos játszott órái átírva erre: %d", amount);
			}
			case 12:
			{
				PlayerInfo[giveplayerid][bSzendvicsCsomag] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos életkora átírva erre: %d", amount);
			}
			case 13:
			{
				PlayerInfo[giveplayerid][bCigi] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékosnál lévõ materials száma átírva erre: %d", amount);
			}
			case 14:
			{
			   ClearMarriage(giveplayerid); bGyujto
			   SendClientMessage(playerid, COLOR_GREEN, "Játékos házassága törölve!");
			}
			case 15:
			{
				if(!Admin(playerid, 1340)) return Msg(playerid, "Ezt a paramétert csak 1340-es Adminszinttõl használhatod!");
				PlayerInfo[giveplayerid][bNikotinTapasz] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos prémium pontjai átírva erre: %d", amount);
			}
			case 16:
			{
				PlayerInfo[giveplayerid][bKisOvszer] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos prémium csomagja átírva erre: %d", amount);
			}
			case 17:
			{
				PlayerInfo[giveplayerid][bNagyOvszer] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos prémium ideje átírva erre: %d (UnixTime-ban megadott idõ kell!)", amount);
			}
			case 18:
			{
				if(!Admin(playerid, 1338)) return Msg(playerid, "Ezt a paramétert csak 1338-as Adminszinttõl használhatod!");
				PlayerInfo[giveplayerid][bLaptop] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos bankszámla száma átírva erre: %s", FormatNumber( amount, 0, '-' ));
			}
			case 19:
			{
				PlayerInfo[giveplayerid][bHorgaszbot] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos munkája átírva erre: %d", amount);
			}
			case 20:
			{
			    PlayerInfo[giveplayerid][bCsali] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos második munkája átírva erre: %d", amount);
			}
			case 21:
			{
			    PlayerInfo[giveplayerid][bMP] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos kötelezõ munkaideje (felmondás elõtt) átírva erre: %d", amount);
			}
			case 22:
			{
				PlayerInfo[giveplayerid][bCsipogo] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos második munkájának kötelezõ munkaideje (felmondás elõtt) átírva erre: %d", amount);
			}
			case 23:
			{
				PlayerInfo[giveplayerid][bViragcsokor] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékosnál lévõ heroin száma átírva erre: %d", amount);
			}
			case 24:
			{
				PlayerInfo[giveplayerid][bFejkendo] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékosnál lévõ marihuana átírva erre: %d", amount);
			}
			case 25:
			{
				PlayerInfo[giveplayerid][bVeszhivo] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékosnál lévõ kokain átírva erre: %d", amount);
			}
			case 26:
			{
				PlayerInfo[giveplayerid][pAlma] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékosnál lévõ alma átírva erre: %d", amount);
			}
			case 27:
			{
				PlayerInfo[giveplayerid][bFkRadio] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos hacker skillje átírva erre: %d", amount);
			}
			case 28:
			{
				PlayerInfo[giveplayerid][bMikiSapi] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos halász skillje átírva erre: %d", amount);
			}
			case 29:
			{
				PlayerInfo[giveplayerid][bMikiCsomi] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos betörõ skillje átírva erre: %d", amount);
			}
			case 30:
			{
				PlayerInfo[giveplayerid][bVirgacs] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos fegyvergyártó skillje átírva erre: %d", amount);
			}
			case 31:
			{
				if(!Admin(playerid, 1340)) return Msg(playerid, "Ezt a paramétert csak 1340-es Adminszinttõl használhatod!");
				PlayerInfo[giveplayerid][bMobilnet] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos Kreditjeinek száma átírva erre: %d", amount);
			}
			case 32:
			{
				if(!Admin(playerid, 1340)) return Msg(playerid, "Ezt a paramétert csak 1340-es Adminszinttõl használhatod!");
				PlayerInfo[giveplayerid][pArany] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos Aranyainak száma átírva erre: %d (Zsebében)", amount);
			}
			default:
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Hiba történt! Ellenõrizd a beírt értékeket!");
			}
	}*/
	if(egyezik(cmd, "/setstat"))
	{
		if(!SAdmin(playerid, 1337) && !IsScripter(playerid)) return 1;
		if(params < 3)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Használat: /setstat [Játékos] [statcode] [Érték]");
			SendClientMessage(playerid, COLOR_GRAD2, "|1 Level | 2 Telefonszám | 3 Szintlépési idõ | 4 Detektív skill");
			SendClientMessage(playerid, COLOR_GRAD2, "|5 Ügyvéd skill | 6 Mentõ skill | 7 Riporter skill");
			SendClientMessage(playerid, COLOR_GRAD2, "|8 Autótolvaj skill | 9 Drogdíler skill | 10 Játékos neme | 11 Játszott óra");
			SendClientMessage(playerid, COLOR_GRAD2, "|12 Életkor | 13 Materials | 14 Házasság | 15 Prémium Pont | 16 Prémium Csomag");
            SendClientMessage(playerid, COLOR_GRAD2, "|17 Prémium Idõ | 18 Bankszámlaszám | 19 Munka1 | 20 Munka2 | 21 Munkaidõ");
			SendClientMessage(playerid, COLOR_GRAD2, "|22 Munkaidõ2 | 23 Heroin | 24 Marihuana | 25 Kokain | 26 Alma");
			SendClientMessage(playerid, COLOR_GRAD2, "|27 Hacker skill | 28 Horgász skill | 29 Betörõ skill | 30 Fegyvergyártó");
			SendClientMessage(playerid, COLOR_GRAD2, "|31 Kredit |32 Arany ");
			return 1;
		}
		giveplayerid = ReturnUser(param[1]);
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
		new stat = strval(param[2]), amount = strval(param[3]);
		switch(stat)
		{
			case 1:
			{
				PlayerInfo[giveplayerid][pLevel] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos szintje átírva erre: %d", amount);
			}
			case 2:
			{
				if(!Admin(playerid, 1340)) return Msg(playerid, "Ezt a paramétert csak 1340-es Adminszinttõl használhatod!");
			    PlayerInfo[giveplayerid][pPnumber] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos telefonszáma átírva erre: %s", FormatNumber( amount, 0, '-' ));
			}
			case 3:
			{
			    PlayerInfo[giveplayerid][pExp] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos szintlépési ideje átírva erre: %d", amount);
			}
			case 4:
			{
			    PlayerInfo[giveplayerid][pDetSkill] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos detektív skillje átírva erre: %d", amount);
			}
			case 5:
			{
			    PlayerInfo[giveplayerid][pLawSkill] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos ügyvéd skillje átírva erre: %d", amount);
			}
			case 6:
			{
			    PlayerInfo[giveplayerid][pMechSkill] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos mentõ skillje átírva erre: %d", amount);
			}
			case 7:
			{
			    PlayerInfo[giveplayerid][pNewsSkill] = amount;
			    SendFormatMessage(playerid, COLOR_GREEN, "Játékos riporter skillje átírva erre: %d", amount);
			}
			case 8:
			{
				PlayerInfo[giveplayerid][pJackSkill] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos autótolvaj skillje átírva erre: %d", amount);
			}
			case 9:
			{
				PlayerInfo[giveplayerid][pDrugsSkill] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos drogdíler skillje átírva erre: %d", amount);
			}
			case 10:
			{
				PlayerInfo[giveplayerid][pSex] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos neme átírva átírva erre: %d (1=Férfi | 2=Nõ)", amount);
			}
			case 11:
			{
				PlayerInfo[giveplayerid][pConnectTime] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos játszott órái átírva erre: %d", amount);
			}
			case 12:
			{
				PlayerInfo[giveplayerid][pAge] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos életkora átírva erre: %d", amount);
			}
			case 13:
			{
				PlayerInfo[giveplayerid][pMats] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékosnál lévõ materials száma átírva erre: %d", amount);
			}
			case 14:
			{
			   ClearMarriage(giveplayerid);
			   SendClientMessage(playerid, COLOR_GREEN, "Játékos házassága törölve!");
			}
			case 15:
			{
				if(!Admin(playerid, 1340)) return Msg(playerid, "Ezt a paramétert csak 1340-es Adminszinttõl használhatod!");
				PlayerInfo[giveplayerid][pPremiumPont] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos prémium pontjai átírva erre: %d", amount);
			}
			case 16:
			{
				PlayerInfo[giveplayerid][pPremiumCsomag] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos prémium csomagja átírva erre: %d", amount);
			}
			case 17:
			{
				PlayerInfo[giveplayerid][pPremiumIdo] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos prémium ideje átírva erre: %d (UnixTime-ban megadott idõ kell!)", amount);
			}
			case 18:
			{
				if(!Admin(playerid, 1338)) return Msg(playerid, "Ezt a paramétert csak 1338-as Adminszinttõl használhatod!");
				PlayerInfo[giveplayerid][pBankSzamlaSzam] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos bankszámla száma átírva erre: %s", FormatNumber( amount, 0, '-' ));
			}
			case 19:
			{
				PlayerInfo[giveplayerid][pJob1] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos munkája átírva erre: %d", amount);
			}
			case 20:
			{
			    PlayerInfo[giveplayerid][pJob2] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos második munkája átírva erre: %d", amount);
			}
			case 21:
			{
			    PlayerInfo[giveplayerid][pContractTime] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos kötelezõ munkaideje (felmondás elõtt) átírva erre: %d", amount);
			}
			case 22:
			{
				PlayerInfo[giveplayerid][pContractTime2] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos második munkájának kötelezõ munkaideje (felmondás elõtt) átírva erre: %d", amount);
			}
			case 23:
			{
				PlayerInfo[giveplayerid][pHeroin] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékosnál lévõ heroin száma átírva erre: %d", amount);
			}
			case 24:
			{
				PlayerInfo[giveplayerid][pMarihuana] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékosnál lévõ marihuana átírva erre: %d", amount);
			}
			case 25:
			{
				PlayerInfo[giveplayerid][pKokain] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékosnál lévõ kokain átírva erre: %d", amount);
			}
			case 26:
			{
				PlayerInfo[giveplayerid][pAlma] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékosnál lévõ alma átírva erre: %d", amount);
			}
			case 27:
			{
				PlayerInfo[giveplayerid][pHackingSkill] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos hacker skillje átírva erre: %d", amount);
			}
			case 28:
			{
				PlayerInfo[giveplayerid][pFishSkill] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos halász skillje átírva erre: %d", amount);
			}
			case 29:
			{
				PlayerInfo[giveplayerid][pBetoroSkill] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos betörõ skillje átírva erre: %d", amount);
			}
			case 30:
			{
				PlayerInfo[giveplayerid][pCarSkill] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos fegyvergyártó skillje átírva erre: %d", amount);
			}
			case 31:
			{
				if(!Admin(playerid, 1340)) return Msg(playerid, "Ezt a paramétert csak 1340-es Adminszinttõl használhatod!");
				PlayerInfo[giveplayerid][pKredit] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos Kreditjeinek száma átírva erre: %d", amount);
			}
			case 32:
			{
				if(!Admin(playerid, 1340)) return Msg(playerid, "Ezt a paramétert csak 1340-es Adminszinttõl használhatod!");
				PlayerInfo[giveplayerid][pArany] = amount;
				SendFormatMessage(playerid, COLOR_GREEN, "Játékos Aranyainak száma átírva erre: %d (Zsebében)", amount);
			}
			default:
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Hiba történt! Ellenõrizd a beírt értékeket!");
			}
		}
		return 1;
	}
//----------------------------------[SETINT]-----------------------------------------------
	if(strcmp(cmd, "/setvw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /setvw [virtualworld]");
				return 1;
			}
			new intid;
			intid = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 1 || IsScripter(playerid))
			{
				SetPlayerVirtualWorld(playerid,intid);
				format(string, sizeof(string), "   Virtual World %d.", intid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/setint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /setint [interiorid]");
				return 1;
			}
			new intid;
			intid = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 1 || IsScripter(playerid))
			{
				SetPlayerInterior(playerid,intid);
				PlayerInfo[playerid][pInt] = intid;
				format(string, sizeof(string), "   Interior %d.", intid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod !");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/kocsikulcs"))
	{
		if(!SAdmin(playerid, 1337) && !IsScripter(playerid)) return true;
		new jatekos, slot, jarmu, vs, vid;
		if(sscanf(pms, "udD(-1)", jatekos,slot,jarmu))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /kocsikulcs [Játékos] [Slot(1-3)] [JármûID (Ha nem adsz meg értéket elveszi)]");

		if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");

		if(jarmu == NINCS)
		{
		    if(slot == 1)
				vid = PlayerInfo[jatekos][pPcarkey];
			else if(slot == 2)
			    vid = PlayerInfo[jatekos][pPcarkey2];
			else if(slot == 3)
			    vid = PlayerInfo[jatekos][pPcarkey3];
			else
				return Msg(playerid, "Hibás slot szám! (1-3ig)");

			if(vid == NINCS) return Msg(playerid, "Ezen a sloton nincs jármûve!");

            SendFormatMessage(playerid, COLOR_LIGHTRED, "Elvetted %s %d. jármûvének kulcsát! | JármûID: %d | V-s Rendszám: %d", PlayerName(jatekos), slot, CarInfo[vid][cId], vid);
            SendFormatMessage(jatekos, COLOR_GREEN, "< < Admin %s elvette a(z) %d. jármûved kulcsát! > >", AdminName(playerid), slot);
		    CarInfo[vid][cOwned] = 0;
			strmid(CarInfo[vid][cOwner], "Nincs_Tulaj", 0, strlen("Nincs_Tulaj"), 20);
			CarInfo[vid][cTulaj] = NINCS;
			CarInfo[vid][cDate] = UnixTime;
			CarUpdate(vid, CAR_Owned, CAR_Owner, CAR_Date, CAR_Tulaj);

			if(slot == 1)
				PlayerInfo[jatekos][pPcarkey] = NINCS;
			else if(slot == 2)
			    PlayerInfo[jatekos][pPcarkey2] = NINCS;
			else if(slot == 3)
			    PlayerInfo[jatekos][pPcarkey3] = NINCS;

			return true;

		} else {

		    vs = IsAVsKocsi(jarmu);
		    if(vs == NINCS) return Msg(playerid, "Ez a jármû nem V-s!");

		    if(slot == 1)
				vid = PlayerInfo[jatekos][pPcarkey];
			else if(slot == 2)
			    vid = PlayerInfo[jatekos][pPcarkey2];
			else if(slot == 3)
			    vid = PlayerInfo[jatekos][pPcarkey3];
			else
				return Msg(playerid, "Hibás slot szám! (1-3ig)");

			if(vid != NINCS) return Msg(playerid, "Ezen a sloton már van jármû! Elõtte töröld!");

            SendFormatMessage(playerid, COLOR_LIGHTRED, "Átírtad %s %d. számú jármûvének rendszámát! | JármûID: %d | V-s rendszám: %d", PlayerName(jatekos), slot, jarmu, vs);
            SendFormatMessage(jatekos, COLOR_GREEN, "< < Admin %s átírta a(z) %d. számú jármûved kulcsát! JármûID: %d > >", AdminName(playerid), slot, jarmu);
	        new nev[MAX_PLAYER_NAME];
			GetPlayerName(jatekos, nev, MAX_PLAYER_NAME);
			CarInfo[vs][cOwned] = 1;
			CarInfo[vs][cDate] = UnixTime;
			strmid(CarInfo[vs][cOwner], nev, 0, strlen(nev), MAX_PLAYER_NAME);
			CarInfo[vs][cTulaj] = PlayerInfo[jatekos][pID];
			CarUpdate(vs, CAR_Owner, CAR_Tulaj, CAR_Date, CAR_Owned);

			if(slot == 1)
				PlayerInfo[jatekos][pPcarkey] = vs;
			else if(slot == 2)
			    PlayerInfo[jatekos][pPcarkey2] = vs;
			else if(slot == 3)
			    PlayerInfo[jatekos][pPcarkey3] = vs;

			return true;
		}
	}

	if(egyezik(cmd, "/házkulcs") || egyezik(cmd, "/hazkulcs"))
	{
		if(!SAdmin(playerid, 1337) && !IsScripter(playerid)) return true;
		new jatekos, slot, haz, hid;
		if(sscanf(pms, "udD(-1)", jatekos,slot,haz))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /hazkulcs [Játékos] [Slot(1-3)] [Házszám (Ha nem adsz meg értéket elveszi)]");

		if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");

		if(haz == NINCS)
		{
		    if(slot == 1)
				hid = PlayerInfo[jatekos][pPhousekey];
			else if(slot == 2)
			    hid = PlayerInfo[jatekos][pPhousekey2];
			else if(slot == 3)
			    hid = PlayerInfo[jatekos][pPhousekey3];
			else
				return Msg(playerid, "Hibás slot szám! (1-3ig)");

			if(hid == NINCS) return Msg(playerid, "Ezen a sloton nincs háza!");

            SendFormatMessage(playerid, COLOR_LIGHTRED, "Elvetted %s %d. házának kulcsát! | Házszám: %d", PlayerName(jatekos), slot, hid);
            SendFormatMessage(jatekos, COLOR_GREEN, "< < Admin %s elvette a(z) %d. házad kulcsát! > >", AdminName(playerid), slot);

		    HouseInfo[hid][hTulaj] = NINCS;
			HouseInfo[hid][hOwned] = 0;
			HouseInfo[hid][hLock] = 0;
			strmid(HouseInfo[hid][hOwner], "Nincs_Tulaj", 0, strlen("Nincs_Tulaj"), 20);
			DestroyDynamicPickup(HazPickup[hid]);
			HazPickup[hid] = UjPickup(1273, 23, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez]);
			HouseInfo[hid][hDate] = UnixTime;
			HazUpdate(hid, HAZ_Owned, HAZ_Owner, HAZ_Lock, HAZ_Tulaj,HAZ_Date);

			if(slot == 1)
				PlayerInfo[jatekos][pPhousekey] = NINCS;
			else if(slot == 2)
			    PlayerInfo[jatekos][pPhousekey2] = NINCS;
			else if(slot == 3)
			    PlayerInfo[jatekos][pPhousekey3] = NINCS;

			return true;

		} else {

			if(HouseInfo[haz][hOwned] == 1) return Msg(playerid, "Ez a ház már valaki tulajdonát képezi!");
			if(slot == 1)
				hid = PlayerInfo[jatekos][pPhousekey];
			else if(slot == 2)
			    hid = PlayerInfo[jatekos][pPhousekey2];
			else if(slot == 3)
			    hid = PlayerInfo[jatekos][pPhousekey3];
			else
				return Msg(playerid, "Hibás slot szám! (1-3ig)");

			if(hid != NINCS) return Msg(playerid, "Ezen a sloton már van háza! Elõtte töröld!");

            SendFormatMessage(playerid, COLOR_LIGHTRED, "Átírtad %s %d. házának kulcsát! | Házszám: %d", PlayerName(jatekos), slot, haz);
            SendFormatMessage(jatekos, COLOR_GREEN, "< < Admin %s átírta a(z) %d. házad kulcsát! Házszám: %d > >", AdminName(playerid), slot, haz);

			HouseInfo[haz][hTulaj] = PlayerInfo[jatekos][pID];
			HouseInfo[haz][hOwned] = 1;
			strmid(HouseInfo[haz][hOwner], PlayerName(jatekos), 0, strlen(PlayerName(jatekos)), MAX_PLAYER_NAME);
			DestroyDynamicPickup(HazPickup[haz]);
			HazPickup[haz] = UjPickup(1239, 23, HouseInfo[haz][hEntrancex], HouseInfo[haz][hEntrancey], HouseInfo[haz][hEntrancez]);
			HouseInfo[haz][hDate] = UnixTime;
			HazUpdate(haz, HAZ_Owned, HAZ_Owner, HAZ_Tulaj, HAZ_Date);

			if(slot == 1)
				PlayerInfo[jatekos][pPhousekey] = haz;
			else if(slot == 2)
			    PlayerInfo[jatekos][pPhousekey2] = haz;
			else if(slot == 3)
			    PlayerInfo[jatekos][pPhousekey3] = haz;

			return true;
		}
	}

	if(egyezik(cmd, "/bizniszkulcs"))
	{
		if(!SAdmin(playerid, 1337)) return true;
		new jatekos, biz, pbiz;
		if(sscanf(pms, "uD(-1)", jatekos,biz))
			return SendClientMessage(playerid, COLOR_WHITE, "Használat: /bizniszkulcs [Játékos] [BizniszID (Ha nem adsz meg értéket elveszi)]");

		if(jatekos == INVALID_PLAYER_ID) return Msg(playerid, "Nincs ilyen játékos!");

		if(biz == NINCS)
		{
            pbiz = PlayerInfo[jatekos][pPbiskey];
			if(pbiz == NINCS) return Msg(playerid, "Neki nincs biznisze!");

            SendFormatMessage(playerid, COLOR_LIGHTRED, "Elvetted %s bizniszének kulcsát! | BizniszID: %d", PlayerName(jatekos), pbiz);
            SendFormatMessage(jatekos, COLOR_GREEN, "< < Admin %s elvette a bizniszed kulcsát! > >", AdminName(playerid));

			BizzInfo[pbiz][bLocked] = 0;
			BizzInfo[pbiz][bOwned] = 0;
			BizzInfo[pbiz][bTulaj] = NINCS;
			BizzInfo[pbiz][bMTulajID] = NINCS;

			strmid(BizzInfo[pbiz][bOwner], "Nincs_Tulaj", 0, strlen("Nincs_Tulaj"), 255);
			strmid(BizzInfo[pbiz][bExtortion], "Nincs", 0, strlen("Nincs"), 255);
			BizUpdate(biz, BIZ_Locked, BIZ_Owned, BIZ_Owner, BIZ_Extortion, BIZ_Tulaj);
			PlayerInfo[jatekos][pPbiskey] = NINCS;
			return true;

		} else {

            if(BizzInfo[biz][bOwned] == 1) return Msg(playerid, "Ez a biznisz már valaki tulajdonát képezi!");

            SendFormatMessage(playerid, COLOR_LIGHTRED, "Átírtad %s bizniszének kulcsát! | BizniszID: %d", PlayerName(jatekos), biz);
            SendFormatMessage(jatekos, COLOR_GREEN, "< < Admin %s átírta a bizniszed kulcsát! | BizniszID: %d > >", AdminName(playerid), biz);

            PlayerInfo[jatekos][pPbiskey] = biz;
			BizzInfo[biz][bTulaj] = PlayerInfo[jatekos][pID];
			strmid(BizzInfo[biz][bOwner], PlayerName(jatekos), 0, strlen(PlayerName(jatekos)), MAX_PLAYER_NAME);
			BizzInfo[biz][bOwned] = 1;
			BizUpdate(biz, BIZ_Owner, BIZ_Owned, BIZ_Tulaj);
			return true;
		}
	}
//----------------------------------[SKYDIVE]------------------------------------------------
	if(strcmp(cmd, "/skydive", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				GetPlayerPos(playerid, rx2, ry2, rz2);
				if (IsPlayerConnected(playerid))
				{
					
					WeaponGiveWeapon(playerid, WEAPON_PARACHUTE);
					SetPlayerPos(playerid,rx2, ry2, rz2+1500);
					SendClientMessage(playerid, COLOR_WHITE, "Gyerünk!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			}
		}
		return 1;
	}
//----------------------------------[FOURDIVE]------------------------------------------------
	if(strcmp(cmd, "/fourdive", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /fourdive [playerid1] [playerid2] [playerid3] [playerid4]");
				return 1;
			}
			new para1;
			new para2;
			new para3;
			new para4;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para3 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para4 = strval(tmp);
			GetPlayerPos(para1, rx2, ry2, rz2);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (IsPlayerConnected(para1)){  WeaponGiveWeapon(para1, WEAPON_PARACHUTE); SetPlayerPos(para1,rx2, ry2, rz2+1500);SetPlayerInterior(para1,0);PlayerInfo[para1][pInt] = 0;SendClientMessage(para1, COLOR_WHITE, "Gyerünk!");}
				if ((IsPlayerConnected(para2)) && (para2>0)) {  WeaponGiveWeapon(para2, WEAPON_PARACHUTE); SetPlayerPos(para2,rx2, ry2, rz2+1500);SetPlayerInterior(para2,0);PlayerInfo[para2][pInt] = 0;SendClientMessage(para2, COLOR_RED, "Gyerünk!");}
				if ((IsPlayerConnected(para3)) && (para3>0)) {  WeaponGiveWeapon(para3, WEAPON_PARACHUTE); SetPlayerPos(para3,rx2, ry2, rz2+1500);SetPlayerInterior(para3,0);PlayerInfo[para3][pInt] = 0;SendClientMessage(para3, COLOR_RED, "Gyerünk!");}
				if ((IsPlayerConnected(para4)) && (para4>0)) {  WeaponGiveWeapon(para4, WEAPON_PARACHUTE); SetPlayerPos(para4,rx2, ry2, rz2+1500);SetPlayerInterior(para4,0);PlayerInfo[para4][pInt] = 0;SendClientMessage(para4, COLOR_RED, "Gyerünk!");}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			}
		}
		return 1;
	}
//----------------------------------[MAKEADMIN]------------------------------------------------
	if(strcmp(cmd, "/makeadmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;
			new para1, level;
			if(sscanf(pms, "ud", para1, level))
				return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /makeadmin [Játékos] [AdminSzint]");

			
			if(level < 0 || level > 6 && level < 1337 || level > 1350 && !IsScripter(para1) && !IsScripter(playerid))
				return Msg(playerid, "Hibás Adminszint! Adminszintek: 1, 2, 3, 4, 5, 6, 1337, 1338, 1339, 1340, 1350");

			if(level >= 1337 && level <= 1350 && !IsClint(playerid) && !IsScripter(playerid) && PlayerInfo[playerid][pAdmin] < 1339 && playerid != para1)
				return Msg(playerid, "FõAdmint nem rakhatsz be!");

            if(PlayerInfo[playerid][pAdmin] < PlayerInfo[para1][pAdmin] && !IsScripter(playerid))
				return Msg(playerid, "Nagyobb Admin szintjét nem állíthatod!");

			if(playerid == para1 && !IsScripter(playerid))
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Magadnak nem adhatsz Admint!");

			if(para1 == INVALID_PLAYER_ID) return Msg(playerid, "A játékos nem online!");
			if(PlayerInfo[para1][pID] == 2297 ||PlayerInfo[para1][pID] == 3551) return 1;
			if(level < 1)
				Channel(para1, NINCS, true);

            SendFormatMessage(playerid, COLOR_LIGHTBLUE, " * Kinevezted %s-t %d szintû Adminná!", AdminName(para1), level);
			SendFormatMessage(para1, COLOR_LIGHTBLUE, "* %s Kinevezett %d szintû Adminná!", AdminName(playerid), level);
			PlayerInfo[para1][pAdmin] = level;
			if(playerid != para1 || IsScripter(playerid))
				format(string, sizeof(string), "<< %s kinevezte %s-t %d szintû Adminná! >>", AdminName(playerid), AdminName(para1), level),ABroadCast(COLOR_LIGHTRED, string, 1);
			
			
		}
		return 1;
	}
//----------------------------------[MAKELEADER]------------------------------------------------
	if(egyezik(cmd, "/makeleader"))
	{
		if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;
		

	    if(IsPlayerConnected(playerid))
	    {
			if(params < 2)
			{
			    Msg(playerid, "=================[Leader Osztás]=================");
				Msg(playerid, "Használat: /makeleader [playerid/PartOfName] [Leaderes Meló]");
				Msg(playerid, "Leaderes melók:");
				SendFormatMessage(playerid, COLOR_LIGHTRED, "1. %s 2. %s 3. %s 4. %s 5. %s", Szervezetneve[0][0], Szervezetneve[1][0], Szervezetneve[2][0], Szervezetneve[3][0], Szervezetneve[4][0]);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "6. %s 7. %s 8. %s 9. %s 10. %s", Szervezetneve[5][0], Szervezetneve[6][0], Szervezetneve[7][0], Szervezetneve[8][0], Szervezetneve[9][0]);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "11. %s 12. %s 13. %s 14. %s 15. %s", Szervezetneve[10][0], Szervezetneve[11][0], Szervezetneve[12][0], Szervezetneve[13][0], Szervezetneve[14][0]);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "16. %s 17. %s 18. %s 19. %s 20. %s 21. %s", Szervezetneve[15][0], Szervezetneve[16][0], Szervezetneve[17][0], Szervezetneve[18][0], Szervezetneve[19][0], Szervezetneve[20][0]);
                Msg(playerid,"=================[Leader Osztás]=================");
				return 1;
			}
			new para1 = ReturnUser(param[1]);
			new level = strval(param[2]);

			if(level > sizeof(Rangok) || level < 0) { SendClientMessage(playerid, COLOR_GREY, "   Nincs ilyen leaderes meló!"); return 1; }
            if(Admin(playerid, 1337) || IsScripter(playerid))
			{
				if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						LeaderFrissites();
						if(level != 0)
						{
							if(PlayerInfo[para1][pLeaderTilt]) return Msg(playerid, "Õ nem lehet leader. El van tiltva tõle.");
							if(FrakcioInfo[level][fLeaderekSzama] >= MAX_LEADEREK && !Admin(para1, 1))
								return Msg(playerid, "Itt már nem lehet több leader!");
							FrakcioInfo[level][fLeaderekSzama]++;
							SendClientMessage(para1, COLOR_LIGHTBLUE, "Kineveztek egy csapat vezetõjévé!");
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kinevezted %s-t leaderré!", PlayerName(para1));
							format(string, sizeof(string), "<< %s kinevezte %s-t leaderré! Frakció ID: %d >>", AdminName(playerid), PlayerName(para1), level);
							ABroadCast(COLOR_LIGHTRED, string, 1);
						}
						else
						{
							if(PlayerInfo[para1][pLeader] > 0)
								FrakcioInfo[PlayerInfo[para1][pLeader]][fLeaderekSzama]--;
								
							PlayerInfo[para1][pLeader] = 0;
							PlayerInfo[para1][pMember] = 0;
							SendClientMessage(para1, COLOR_LIGHTBLUE, "Elvették a leaderséged!");
							SendFormatMessage(playerid, COLOR_LIGHTBLUE,"Elvetted %s leaderségét!", PlayerName(para1));
							format(string, sizeof(string), "<< %s elvette %s leaderségét! >>", AdminName(playerid), PlayerName(para1));
							ABroadCast(COLOR_LIGHTRED, string, 1);
							PlayerInfo[para1][pChar] = PlayerInfo[para1][pModel];
							return 1;
						}
						if(PlayerInfo[para1][pLeaderTilt]) return Msg(playerid, "Õ nem lehet leader, el van tiltva.");
						PlayerInfo[para1][pLeader] = level;
						PlayerInfo[para1][pMember] = level;
						
						if(!IsHitman(playerid))
							PlayerInfo[para1][pChar] = LeaderSkinek[level - 1][PlayerInfo[playerid][pSex] - 1];
						else
							PlayerInfo[para1][pChar] = PlayerInfo[para1][pModel];
							
						if(PlayerInfo[para1][pChar] > 0 && OnDuty[para1] || PlayerInfo[para1][pChar] > 0 && !LegalisSzervezetTagja(para1) && !IsHitman(para1))
							SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
						else
							SetPlayerSkin(para1, PlayerInfo[para1][pModel]);
						return true;
					}
				}
			}
		}
		return 1;
	}

	if(egyezik(cmd, "/maketagsag"))
	{
		if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;

	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    Msg(playerid, "=================[Tagság Osztás]=================");
				Msg(playerid, "Használat: /maketagsag [playerid/PartOfName] [Leaderes Meló]");
				Msg(playerid, "Leaderes melók:");
				SendFormatMessage(playerid, COLOR_LIGHTRED, "1. %s 2. %s 3. %s 4. %s 5. %s", Szervezetneve[0][0], Szervezetneve[1][0], Szervezetneve[2][0], Szervezetneve[3][0], Szervezetneve[4][0]);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "6. %s 7. %s 8. %s 9. %s 10. %s", Szervezetneve[5][0], Szervezetneve[6][0], Szervezetneve[7][0], Szervezetneve[8][0], Szervezetneve[9][0]);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "11. %s 12. %s 13. %s 14. %s 15. %s", Szervezetneve[10][0], Szervezetneve[11][0], Szervezetneve[12][0], Szervezetneve[13][0], Szervezetneve[14][0]);
				SendFormatMessage(playerid, COLOR_LIGHTRED, "16. %s 17. %s 18. %s 19. %s 20. %s 21. %s", Szervezetneve[15][0], Szervezetneve[16][0], Szervezetneve[17][0], Szervezetneve[18][0], Szervezetneve[19][0], Szervezetneve[20][0]);
                Msg(playerid,"=================[Leader Osztás]=================");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > sizeof(Rangok) || level < 0) { SendClientMessage(playerid, COLOR_GREY, "   Nincs ilyen meló!"); return 1; }
            if(PlayerInfo[playerid][pAdmin] >= 1337 || IsScripter(playerid))
			{
				if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(level != 0)
						{
							SendClientMessage(para1, COLOR_LIGHTBLUE, "Beraktak egy frakcióba!");
							SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Beraktad %s-t egy frakcióba!", giveplayer);
							format(string, sizeof(string), "<< %s berakta %s-t egy frakcióba! Frakció ID: %d >>", AdminName(playerid), giveplayer, level);
							ABroadCast(COLOR_LIGHTRED, string, 1);
						}
						else
						{
							if(PlayerInfo[para1][pLeader] > 0) FrakcioInfo[PlayerInfo[para1][pLeader]][fLeaderekSzama]--;
							PlayerInfo[para1][pLeader] = 0;
							PlayerInfo[para1][pMember] = 0;
							format(string, sizeof(string), "Kivettek a frakcióból!");
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Kivetted %s-t a frakcióból!", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "<< %s kivette %s-t a frakcióból! >>", AdminName(playerid), giveplayer);
							ABroadCast(COLOR_LIGHTRED, string, 1);
							return 1;
						}
						PlayerInfo[para1][pMember] = level;
						if(level == 0)
							PlayerInfo[para1][pChar] = PlayerInfo[para1][pModel];

						if(!IsHitman(playerid))
							PlayerInfo[para1][pChar] = LeaderSkinek[level][PlayerInfo[playerid][pSex] - 1];
						else
                            PlayerInfo[para1][pChar] = PlayerInfo[para1][pModel];

						if(PlayerInfo[para1][pChar] > 0 && OnDuty[para1] || PlayerInfo[para1][pChar] > 0 && !LegalisSzervezetTagja(para1) && !IsHitman(para1))
							SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
						else
							SetPlayerSkin(para1, PlayerInfo[para1][pModel]);
					}
				}//not connected
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/telefonfeltöltés", true) == 0 || strcmp(cmd, "/telefonfeltoltes", true) == 0)
 	{
		if(IsAt(playerid, IsAt_ATM))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /telefonfeltöltés [összeg]");
				format(string, sizeof(string), "  %dFt  van bankszámládon.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				format(string, sizeof(string), "  %dFt van a telefonodon.", PlayerInfo[playerid][pTeloEgyenleg]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /telefonfeltöltés [összeg]");
				format(string, sizeof(string), "  %dFt van a bankszámládon.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				format(string, sizeof(string), "  %dFt van a telefonodon.", PlayerInfo[playerid][pTeloEgyenleg]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if(cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
			{
				format(string, sizeof(string), "  %dFt van a bankszámládon.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			PlayerInfo[playerid][pAccount] = PlayerInfo[playerid][pAccount]-cashdeposit;
			PlayerInfo[playerid][pTeloEgyenleg] = PlayerInfo[playerid][pTeloEgyenleg] + cashdeposit;
			new ujegyenleg = PlayerInfo[playerid][pTeloEgyenleg];
			new regiegyenleg = PlayerInfo[playerid][pTeloEgyenleg] - cashdeposit;
			format(string, sizeof(string), " [Szolgáltató]SMS: Feltöltöttél %dFt-t. Régi Egyenleg: %dFt, Új Egyenleg: %dFt, Egyenleg lekérés: ('/egyenleglekérés')", cashdeposit, regiegyenleg ,ujegyenleg);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			Cselekves(playerid, "feltöltötte az egyenlegét...");
		    }
			else
			{
	      		SendClientMessage(playerid, COLOR_YELLOW, "Egyenleg feltöltés bank automatáknál lehetséges!(ATM)");
		}
		return 1;
	}

	if(strcmp(cmd, "/egyenleglekérés", true) == 0 || strcmp(cmd, "/egyenleglekeres", true) == 0)
 	{
		new egyenleg = PlayerInfo[playerid][pTeloEgyenleg];
     	format(string, sizeof(string), "[Szolgáltató]SMS: Egyenleged %dFt. Egyenleg feltöltés: ('/telefonfeltöltés')", egyenleg);
	    SendClientMessage(playerid, COLOR_YELLOW, string);
		Cselekves(playerid, "lekérte az egyenlegét...");
 	}
//----------------------------------[GIVERANK]------------------------------------------------
	if(strcmp(cmd, "/giverank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new para1, level, oka[128];
			if(sscanf(pms, "rds[128]", para1, level, oka))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /giverank [Játékos] [Rang] [Oka]");
				return 1;
			}

			if(level < 0 || level > OsszRang[PlayerInfo[playerid][pLeader]])
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: 0-%d", OsszRang[PlayerInfo[playerid][pLeader]]);
				return 1;
			}
			if (PlayerInfo[playerid][pLeader] > 0)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
			            if(PlayerInfo[playerid][pLeader] == PlayerInfo[para1][pMember])
					    {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pRank] = level;
							format(string, sizeof(string), " Új rangot (%d) adtál neki: %s | Oka: %s", level, giveplayer, oka);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s új rangot (%d) adott neked! Oka: %s", sendername, level, oka);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						else
						{
							SendClientMessage(playerid, COLOR_LIGHTRED, "Pff... Nem te vagy a fõnöke, és rangot akarsz neki adni?");
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Nem használahatod ezt a parancsot(Leadereknek csak)!");
			}
		}
		return 1;
	}
//----------------------------------[Bankrob]-----------------------------------------------
	if(strcmp(cmd, "/rob", true) == 0)
 	{

		if(IsPlayerConnected(playerid))
		{
			if(Szint(playerid) < 8) return Msg(playerid, "8as szinttõl!");
			if(ghour < 6) return Msg(playerid, "A bank éjféltõl reggel 6ig zárva van!");
			if(ZsarukOnline() < 3) return Msg(playerid, "Nem rabolhatsz, mert nincs elég online rendõr!");
			if(LegalisSzervezetTagja(playerid)) return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Legális szervezethez tartozol ezért nem rabolhatod ki a bankot!");
			if(WeaponArmed(playerid) == 0) return Msg(playerid, "Fegyver legyen már nálad, ha tényleg rabolni akarsz..");
			if(PlayerToPoint(4, playerid, 2144.5344,1640.4023,993.6882)) //1409.305786, -988.493835, 4780.224609
			{
				if(MikorRabolhato > 0) return SendFormatMessage(playerid,COLOR_LIGHTRED, "Nem rabolhatod ki a bankot! Még kb %d", MikorRabolhato);
				if(Rabol[playerid] != 1)
				{
					if(BankSzef < 50000) return Msg(playerid, "Nem rabolhatod ki a bankot, legalább 50.000Ft-nak kell a széfben lennie.");
					if(JatekosZsak[playerid] == NINCS) return Msg(playerid, "Nincs zsákod! Menj és vegyél ki egyet a pénzszállítóból!");
					if(JatekosZsak[playerid] >= MAXZSAKPENZ) return Msg(playerid, "A zsákod tele van");
					
					if(GetPlayerVirtualWorld(playerid) != 1555) return 1;
					
					Rabol[playerid] = 1;

					Msg(playerid, "Pakolod a pénzt (befejezés: /rob)");
					Cselekves(playerid, "elkezdte pakolni a pénzt");
					Freeze(playerid);
					ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
					return 1;
				}
				else
				{
					Rabol[playerid] = 0;

					Cselekves(playerid, "végzett a pénz pakolással");
					ClearAnimations(playerid);
					UnFreeze(playerid);
					return 1;
				}
			}
	        else if(PlayerToPoint(1, playerid, 1931.01899229, -2438.59397467, 14.1843142578) && GetPlayerVirtualWorld(playerid) == 1555)
			{
				if(Rob >0)
				{
					Msg(playerid, "A bankot nem rég rabolták!");
					return 1;
				}
				
				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s rabolja az LS bankot >>", PlayerName(playerid));
				//format(string, sizeof(string), "** RIADÓ: Los Santos-ban kirabolják a bankot, siess! **");
  				Rob = 3600;
				CopMsg(TEAM_BLUE_COLOR, "** RIADÓ: Los Santos-ban kirabolják a bankot, siess! **");
				robmoney = Rand(300000, 3000000);
				if(BankSzef < robmoney) return Msg(playerid, "Hóhó, elfoggyott a pénz a bankból! Jobb lesz ha tiplizel!");
				
				robpenzido[playerid] = 90;
				robtimer = SetTimerEx("robpenzpakolas", 3050, false, "i", playerid);
				//SetTimerEx("Munkavege", 300000, false, "ddd", playerid, M_LSRABOL,0)
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, "Rabolod, varj...", 3000, 4);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_YELLOW, "Nem vagy bankba!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotosf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2705.837402, 376.239288, 4.968334);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, -2705.837402, 376.239288, 4.968334);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Sikeresen elteleportáltál. !");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod !");
			}
		}
		return 1;
  	}
	if(strcmp(cmd, "/gotols", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1484, -1740, 13);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1484, -1740, 13);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Sikeresen elteleportáltál. !");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod !");
			}
		}
		return 1;
  	}

	if(strcmp(cmd, "/nyerogep", true) == 0 || strcmp(cmd, "/nyerõgép", true) == 0)
	{
		Msg(playerid, "Ideiglenesen kivéve");
		return 1;
	/*	if(!IsAt(playerid, IsAt_Szerencsegep)) return Msg(playerid,"Nem vagy nyerõgépnél!");
	//	if(BizzInfo[BIZ_SZERENCSEJATEK][bTill] < 10000) return Msg(playerid, "A szerencsejáték bizniszbõl elfogyott a pénz.");
		if(PlayerInfo[playerid][pTraderPerk] > 0)
		{

			new skill = 2500 / 100;
			new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
			new payout = 2500 - price;
			if(!BankkartyaFizet(playerid, payout))
			{
				format(string, sizeof(string), "Nincs elég pénzed %d forint kell a játékhoz!", payout);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				return 1;
			}
		//	BizPenz(BIZ_SZERENCSEJATEK, payout);
			format(string, sizeof(string), "~r~-%d Ft", payout);
			GameTextForPlayer(playerid, string, 2500, 1);
		}
		else
		{
			GiveMoney(playerid,-4500);
	//		BizPenz(BIZ_SZERENCSEJATEK, 2500);
			format(string, sizeof(string), "~r~-%d Ft", 1000);
			GameTextForPlayer(playerid, string, 7500, 1);
		}
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		new prize;
		new symb1[32], symb2[32], symb3[32];
		allas1[playerid] = random(10);
		allas2[playerid] = random(10);
		allas3[playerid] = random(10);

		if(allas1[playerid] >= 5)
		{
			format(symb1, sizeof(symb1), "~b~]");
			allas1[playerid] = 1;
		}
		else if(allas1[playerid] <= 4 && allas1[playerid] >= 2)
		{
			format(symb1, sizeof(symb1), "~y~]");
			allas1[playerid] = 2;
		}
		else if(allas1[playerid] < 2)
		{
			format(symb1, sizeof(symb1), "~y~]");
			allas1[playerid] = 3;
		}
		if(allas2[playerid] >= 5)
		{
			format(symb2, sizeof(symb2), "~y~]");
			allas2[playerid] = 1;
		}
		else if(allas2[playerid] <= 4 && allas2[playerid] >= 2)
		{
			format(symb2, sizeof(symb2), "~g~]");
			allas2[playerid] = 2;
		}
		else if(allas2[playerid] < 2)
		{
			format(symb2, sizeof(symb2), "~y~]");
			allas2[playerid] = 3;
		}
		if(allas3[playerid] >= 5)
		{
			format(symb3, sizeof(symb3), "~y~]");
			allas3[playerid] = 1;
		}
		else if(allas3[playerid] <= 4 && allas3[playerid] >= 2)
		{
			format(symb3, sizeof(symb3), "~g~]");
			allas3[playerid] = 2;
		}
		else if(allas3[playerid] < 2)
		{
			format(symb3, sizeof(symb3), "~y~]");
			allas3[playerid] = 3;
		}
		if(allas1[playerid] == allas2[playerid] && allas1[playerid] == allas3[playerid])
		{
		if(allas1[playerid] > 5)
		{
			prize = 7000;
		}
		if(allas1[playerid] <= 4 && allas1[playerid] >= 2)
		{
			prize = 450;
		}
		if(allas1[playerid] < 2)
		{
			prize = 0;
		}
		GiveMoney(playerid,prize);
		format(string, sizeof(string), "%s %s %s ~n~~n~~g~%d Ft",symb1,symb2,symb3, prize);
		}
		else
		{
			format(string, sizeof(string), "%s %s %s ~n~~n~~r~0 Ft",symb1,symb2,symb3);
		}
		GameTextForPlayer(playerid, string, 3000, 3);
		return 1;*/
	}
	if(strcmp(cmd, "/gotolv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Sikeresen elteleportáltál.");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			}
		}
		return 1;
  	}

	if(strcmp(cmd, "/ahegy", true) == 0)
	{
		if(!Admin(playerid, 3) && !IsScripter(playerid)) return 1;

		new melyik = 1;
		if(params > 0)
		{
			melyik = strval(param[1]);
			if(melyik < 1 || melyik > 6)
				melyik = 1;
		}

		if(melyik == 1) Tele(playerid, -372.81, 2128.20, 133.18);
		else if(melyik == 2) Tele(playerid, -340.553, 1985.268, 131.489);
		else if(melyik == 3) Tele(playerid, -319.854, 1945.073, 132.412);
		else if(melyik == 4) Tele(playerid, -483.645, 2114.076, 133.547);
		else if(melyik == 5) Tele(playerid, -427.619, 2503.875, 124.304);
		else Tele(playerid, -459.990, 2371.782, 117.802);

		SendClientMessage(playerid, COLOR_GRAD1, "(( Üdv a hegyen! Itt lehet normálisan beszélgetni másokkal(OOC). ))");
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid, 0);

		return 1;
	}

	/*if(strcmp(cmd, "/testobject", true) == 0)
	{
		if(!Admin(playerid, 3)) return 1;

		new melyik = 1;
		if(params > 0)
		{
			melyik = strval(param[1]);
			if(melyik < 1 || melyik > 5)
				melyik = 1;
		}

		if(melyik == 1) PutRiotShieldOnArm(playerid);
		else if(melyik == 2) PutRiotShieldOnBack(playerid);
		else if(melyik == 3) GiveFlashLight(playerid);
		else if(melyik == 4) GiveTazer(playerid);
		else {
        if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
        if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
		}

		SendFormatMessage(playerid, COLOR_GRAD1, "(( AttachedObject Csatolva! Object: %d ))", melyik);
		return 1;
	}*/

	if(strcmp(cmd, "/entercar", true) == 0 || strcmp(cmd, "/gotocar2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Használat: /entercar [JármûID]");
				return 1;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsScripter(playerid))
			{
				PutPlayerInVehicle(playerid, testcar, 1);
				SendClientMessage(playerid, COLOR_GRAD1, "   Sikeresen a kocsiba teleportáltál.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			}
		}
		Hazbanvan[playerid] = 0;
		return 1;
	}
	if(egyezik(cmd, "/carinfo"))
	{
		if(!SAdmin(playerid, 1)) return 1;

		new car = NINCS;
		sscanf(pms, "D(-1)", car);

		if(car == NINCS)
			car = GetClosestVehicle(playerid, true, NINCS, 5.0);

		if(car == NINCS)
			return Msg(playerid, "Nincs jármû a közeledben - ha konkrét rendszámot akarsz megadni: /carinfo [JármûID]");

		new vs = IsAVsKocsi(car);
		if(vs == NINCS)
			return Msg(playerid, "Ez nem VS jármû");

		SendFormatMessage(playerid, COLOR_YELLOW, "ID: %d, Rendszám: %d, Eladva: %d, Tulaj: %s", vs, car, CarInfo[vs][cOwned], CarInfo[vs][cOwner]);

		return 1;
	}

	if(egyezik(cmd, "/gotocarid"))
	{
		if(!SAdmin(playerid, 3) && !IsScripter(playerid)) return 1;

		new car;
		if(sscanf(pms, "d", car))
			return SendClientMessage(playerid, COLOR_GRAD1, "Használat: /gotocarid [Jármû V-s Rendszáma]");

		if(car < 0 || car >= MAXVSKOCSI || !CarInfo[car][Van] || !IsVehicleConnected(CarInfo[car][cId]))
			return Msg(playerid, "Nem létezõ jármû");

		TeleToCar(playerid, CarInfo[car][cId]);
		Msg(playerid, "Teleportálva");

		return 1;
	}

	if(egyezik(cmd, "/gotocar"))
	{
		if(!SAdmin(playerid, 3) && !IsScripter(playerid)) return 1;

		new car;
		if(sscanf(pms, "d", car))
			return SendClientMessage(playerid, COLOR_GRAD1, "Használat: /gotocar [JármûID]");

		if(!IsVehicleConnected(car))
			return Msg(playerid, "Nem létezõ jármû");

		TeleToCar(playerid, car);
		Msg(playerid, "Teleportálva");

		Hazbanvan[playerid] = 0;
		return 1;
	}

	if(strcmp(cmd, "/mark", true) == 0)
	{
		if(!Admin(playerid,3) && !IsScripter(playerid)) return 1;
		
		if(params < 1)
			SendFormatMessage(playerid, COLOR_GRAD1,"/mark [0 - %d]", MAXGOTOMARK-1);
		new slot;
		sscanf(pms, "d", slot);
		
		if(slot > MAXGOTOMARK-1 || slot < 0)
			slot=0;
			
		GetPlayerPos(playerid, MarkPos[playerid][slot][Markx],MarkPos[playerid][slot][Marky],MarkPos[playerid][slot][Markz]);
		
		MarkPos[playerid][slot][MarkVW] =  GetPlayerVirtualWorld(playerid);
		MarkPos[playerid][slot][MarkINT] = GetPlayerInterior(playerid);
		
		
		
		SendClientMessage(playerid, COLOR_GRAD1, "  Teleportálási pozíció elmentve.");
		SendFormatMessage(playerid, COLOR_GRAD1,"SLOT: %d | POS:%f, %f, %f, VW: %d, INT: %d",slot, MarkPos[playerid][slot][Markx],MarkPos[playerid][slot][Marky],MarkPos[playerid][slot][Markz],MarkPos[playerid][slot][MarkVW],MarkPos[playerid][slot][MarkINT] );
	

		
		return 1;
	}
	if(strcmp(cmd, "/gotomark", true) == 0)
	{
		if(!Admin(playerid,3) && !IsScripter(playerid)) return 1;
			
		new slot;
		sscanf(pms, "d", slot);
		
		if(slot > MAXGOTOMARK-1 || slot < 0)
			slot=0;
			
		Tele(playerid,MarkPos[playerid][slot][Markx], MarkPos[playerid][slot][Marky], MarkPos[playerid][slot][Markz], (GetPlayerState(playerid) == PLAYER_STATE_DRIVER ? true : false), MarkPos[playerid][slot][MarkVW], MarkPos[playerid][slot][MarkINT]);
		
		SendClientMessage(playerid, COLOR_GRAD1, "   Sikeresen odateleportáltál a mentett pozícióhoz.");
		
		SendFormatMessage(playerid, COLOR_GRAD1,"SLOT: %d | POS:%f, %f, %f, VW: %d, INT: %d",slot, MarkPos[playerid][slot][Markx],MarkPos[playerid][slot][Marky],MarkPos[playerid][slot][Markz],MarkPos[playerid][slot][MarkVW],MarkPos[playerid][slot][MarkINT] );
	
		return 1;
	}
	if(strcmp(cmd, "/gotoin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3 || IsScripter(playerid))
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1416.107000,0.268620,1000.926000);
				}
				else
				{
					SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Sikeresen elteleportáltál.");
				SetPlayerInterior(playerid,1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotostad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsScripter(playerid))
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94);
				}
				else
				{
					SetPlayerPos(playerid, -1435.75, -652.664, 1054.94);
				}
				SetPlayerInterior(playerid,4);
				SendClientMessage(playerid, COLOR_GRAD1, "   Sikeresen elteleportáltál.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotojet", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsScripter(playerid))
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34);
				}
				else
				{
					SetPlayerPos(playerid, 1.71875, 30.4062, 1200.34);
				}
				SetPlayerInterior(playerid,1);
				SendClientMessage(playerid, COLOR_GRAD1, "   Sikeresen elteleportáltál.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			}
		}
		return 1;
	}
	if(egyezik(cmd,"/engedgoto"))
	{
		if(!Admin(playerid, 4) && !IsScripter(playerid)) return 1;
		if(GOTOenged[playerid])
		{
			GOTOenged[playerid]=false;
			Msg(playerid, "Tíltottad hogy a kisebb adminokgotozanak hozzád!");
		}
		else
		{
			Msg(playerid, "Engedélyezted hogy a kisebb adminok gotozzanak hozzád!");
			GOTOenged[playerid]=true;
		}

	}
	if(strcmp(cmd, "/goto", true) == 0)
	{
		if(!Admin(playerid, 3) && !IsScripter(playerid))
			return 1;

		if(params != 1)
			return Msg(playerid, "Használata: /goto [név / ID]");

		new jatekos, Float:PosX, Float:PosY, Float:PosZ;
		jatekos = ReturnUser(param[1]);

		if(jatekos == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		if(PlayerInfo[jatekos][pAdmin] > PlayerInfo[playerid][pAdmin] && !GOTOenged[jatekos] && !IsScripter(playerid))
		{
			SendFormatMessage(playerid, COLOR_GREY, "[Goto]%s nem engedélyezi hogy goto-z hozzá!", PlayerName(jatekos));
			return 1;
		}
		else if(PlayerInfo[jatekos][pAdmin] > PlayerInfo[playerid][pAdmin] && !IsScripter(playerid) && !Admin(playerid, 1337))
		{
			SendFormatMessage(jatekos, COLOR_GREY, "[Goto] %s teleportált hozzád!", PlayerName(playerid));
		}

		GetPlayerPos(jatekos, PosX, PosY, PosZ);
		Tele(playerid, PosX-1.0, PosY, PosZ, (GetPlayerState(playerid) == PLAYER_STATE_DRIVER ? true : false), GetPlayerVirtualWorld(jatekos), GetPlayerInterior(jatekos));

		SendClientMessage(playerid, COLOR_GRAD1, "Sikeres teleportálás");
		return 1;
	}
//----------------------------------[GETHERE]-----------------------------------------------
	if(strcmp(cmd, "/gethere", true) == 0)
	{
		if(!Admin(playerid, 3) && !IsScripter(playerid))
			return 1;

		if(params != 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Használat: /gethere [név / ID]");
			return 1;
		}
		new jatekos, Float:PosX, Float:PosY, Float:PosZ;
		jatekos = ReturnUser(param[1]);
		if(jatekos == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos!");

		if(IsPlayerNPC(jatekos)) return Msg(playerid, "NPC?");

		if(PlayerInfo[jatekos][pAdmin] > PlayerInfo[playerid][pAdmin] && !IsScripter(playerid)) 
		{
			Msg(playerid, "Majd õ gotozik hozzád ha akar!");
			return 1;
		}

		GetPlayerPos(playerid, PosX, PosY, PosZ);
		Tele(jatekos, PosX-1.0, PosY, PosZ, (GetPlayerState(jatekos) == PLAYER_STATE_DRIVER ? true : false), GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));

		Hazbanvan[jatekos] = 0;
		return 1;
	}

	if(egyezik(cmd, "/getcar"))
	{
		if(!Admin(playerid,3) && !IsScripter(playerid)) return 1;

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Használat: /getcar [carid]");
			return 1;
		}

		new Float:plocx,Float:plocy,Float:plocz;
		new plo;
		plo = strval(tmp);

		if(!IsVehicleConnected(plo)) return Msg(playerid, "Nincs ilyen jármû");

		GetPlayerPos(playerid, plocx, plocy, plocz);
		SetVehiclePos(plo,plocx,plocy+4, plocz);
		SetVehicleVW(plo, GetPlayerVirtualWorld(playerid));

		return 1;
	}

	if(egyezik(cmd, "/oldcar"))
	{
		if(params < 1)
		{
			if(IsPlayerConnected(playerid))
			{
				format(string, sizeof(string), "Az elõzõ autód rendszáma(amiben ültél): %d", gLastCar[playerid]);
				SendClientMessage(playerid, COLOR_GREY, string);
				return 1;
			}
		}
		else
		{
			if(egyezik(param[1],"közel"))
			{
				if(!Admin(playerid, 1) && !IsScripter(playerid)) return Msg(playerid, "Nem vagy Admin.");

				new car=NINCS;

				if(car == NINCS)
				car = GetClosestVehicle(playerid, true, NINCS, 3.0);

				if(car == NINCS) return Msg(playerid,"Nincs a közeledve a kocsi");

				SendFormatMessage(playerid, COLOR_GREEN, "JármûID: %d | Legutolsó használó: %s!", car, KocsiHasznal[car]);

				return 1;
			}
			else
			{
				if(!Admin(playerid, 1) && !IsScripter(playerid)) return Msg(playerid, "Nem vagy Admin.");
				new kocsi = strval(param[1]);
				if(!IsVehicleConnected(kocsi)) return Msg(playerid, "Nincs ilyen jármû");
				SendFormatMessage(playerid, COLOR_GREEN, "JármûID: %d | Legutolsó használó: %s!", kocsi, KocsiHasznal[kocsi]);
				return 1;
			}
		}
	}
	if(egyezik(cmd, "/fuelcar"))
	{
		if(!Admin(playerid,1337) && !IsScripter(playerid)) return 1;

		if(params < 2)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Használat: /fuelcar [rendszám] [liter]");
			return 1;
		}
		new kocsi = strval(param[1]);
		new liter = strval(param[2]);

		if(!IsVehicleConnected(kocsi)) return Msg(playerid, "Nincs ilyen jármû");
		if(liter > MaxBenzin(kocsi)) return SendFormatMessage(playerid,COLOR_LIGHTRED,"Ez túl sok...a maximum d% liter!",MaxBenzin(kocsi));
		Gas[kocsi] = liter;
		SendFormatMessage(playerid,COLOR_LIGHTRED,"A %d rendszámû kocsi benzinje átírva %d literre!",kocsi, liter);
		return 1;
	}
	if(strcmp(cmd, "/jarmuhp", true) == 0 || strcmp(cmd, "/jármûhp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1337 || IsScripter(playerid))
		    {
				new car, jarmuhp;
				if(sscanf(pms, "dd", car, jarmuhp)) return Msg(playerid, "/jármûhp [jármûid] [jármûhp]");
				if(car == INVALID_VEHICLE_ID) return Msg(playerid, "Nem létezõ jármû");
				if(jarmuhp < 0 || jarmuhp > 100000) return Msg(playerid, "0 és 100 000 közötti érték lehet");

				SetVehicleHealth(car, float(jarmuhp));
				SendFormatMessage(playerid, COLOR_GRAD1, "Figyelem! %s típusú jármû HP-ja átállítva %d -ra/re | Jármû ID: %d", vehName[GetVehicleModel(car) - 400], jarmuhp, car);
			}
		}
		return true;
	}
	if(strcmp(cmd, "/crsid", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1 || IsScripter(playerid))
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					Msg(playerid, "Használat: /crsid [JármûID]");
					return true;
				}
				new jarmuid = strval(tmp);
				if(GetVehicleVirtualWorld(jarmuid) == 66666) return Msg(playerid, "Ez a jármû le van adva!");
				if(!IsVehicleConnected(jarmuid))
					return Msg(playerid, "Nem létezõ jármû");
							
				foreach(Jatekosok, x)
				{
					if(GetPlayerState(x) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(x) == jarmuid)
					{
						if(Biztos[playerid] != 1)
						{
							SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: A jármûben %s ül, mint vezetõ, ha biztosan el akarod resizni, írd be mégegyszer a parancsot", PlayerName(x));
							Biztos[playerid] = 1;
							return 1;
						}
					}
				}	
				ACrs[jarmuid]=true;
				KocsiRespawn(jarmuid);
				KocsiObjectTorol(jarmuid);
				ACrs[jarmuid]=false;
				SendFormatMessage(playerid, COLOR_GRAD1, "Respawnoltál egy %s típusú jármûvet | Jármû ID: %d", vehName[GetVehicleModel(jarmuid) - 400], jarmuid);
			}
		}
		return true;
	}
//----------------------------------[sethp]------------------------------------------------

	if(egyezik(cmd, "/szint"))
	{
		if(!SAdmin(playerid, 1337) && !IsScripter(playerid)) return 1;
		if(params < 2)
			SendClientMessage(playerid, COLOR_GRAD2, "Használat: /szint [játékos] [szint]");

		new kinek = ReturnUser(param[1]);

		if(kinek == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		new mennyi = strval(param[2]);
		if(mennyi < 1 || mennyi > 60) return Msg(playerid, "Minimum 1, maximum 60");

		format(string, sizeof(string), "<< Admin %s átírta %s szintjét - Régi: %d - Új: %d >>", AdminName(playerid), Nev(kinek), PlayerInfo[kinek][pLevel], mennyi);
		ABroadCast(COLOR_LIGHTRED, string, 1);

		PlayerInfo[kinek][pLevel] = mennyi;
		SetPlayerScore(kinek, mennyi);

		return 1;
	}

	if(egyezik(cmd, "/óra"))
	{
		if(!SAdmin(playerid, 1337) && !IsScripter(playerid)) return 1;
		if(params < 2)
			SendClientMessage(playerid, COLOR_GRAD2, "Használat: /óra [játékos] [játszott óra]");

		new kinek = ReturnUser(param[1]);

		if(kinek == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		new mennyi = strval(param[2]);
		if(mennyi < 0 || mennyi > 9999) return Msg(playerid, "Minimum 0, maximum 9999");

		format(string, sizeof(string), "<< Admin %s átírta %s játszott óráját - Régi: %d - Új: %d >>", AdminName(playerid), Nev(kinek), PlayerInfo[kinek][pConnectTime], mennyi);
		ABroadCast(COLOR_LIGHTRED, string, 1);

		PlayerInfo[kinek][pConnectTime] = mennyi;

		return 1;
	}

	if(egyezik(cmd, "/getpos"))
	{
		if(!SAdmin(playerid, 1) && !IsScripter(playerid)) return 1;

		if(!params)
			return Msg(playerid, "Használata: /getpos [játékos]");

		new ki = ReturnUser( param[1] );
		if( ki == INVALID_PLAYER_ID )
			return Msg(playerid, "Nincs ilyen játékos");
		if(PlayerInfo[playerid][pAdmin] < PlayerInfo[ki][pAdmin])
			ki = playerid;

		new Float:pos[3];
		GetPlayerPos(ki, ArrExt(pos));

		SendFormatMessage( playerid, COLOR_YELLOW, "[%d]%s pozíciója: %.1f, %.1f, %.1f - Interior: %d, VW: %d", ki, Nev(ki), ArrExt(pos), GetPlayerInterior( ki ), GetPlayerVirtualWorld( ki ));

		return 1;
	}

	if(egyezik(cmd, "/gethp"))
	{
		if(!SAdmin(playerid, 1) && !IsScripter(playerid)) return 1;

		if(!params)
			return Msg(playerid, "Használat: /gethp [játékos]");

		new ki = ReturnUser(param[1]);
		if( ki == INVALID_PLAYER_ID )
			return Msg(playerid, "Nincs ilyen játékos");

		new Float:hp, Float:armor;
		GetPlayerHealth(ki, hp);
		GetPlayerArmour(ki, armor);

		SendFormatMessage(playerid, COLOR_YELLOW, "[%d]%s - Élet: %.1f / Páncél: %.1f", ki, Nev(ki), hp, armor);

		return 1;
	}

	if(egyezik(cmd, "/sethp") || egyezik(cmd, "/hp") || egyezik(cmd, "/elet") || egyezik(cmd, "/élet"))
	{
		if(!SAdmin(playerid, 4) && !IsScripter(playerid)) return 1;
		if(!params)
			SendClientMessage(playerid, COLOR_GRAD2, "Használat: /hp [Játékos] [Élet (alap: 150)]");

		new kinek = ReturnUser(param[1]);

		if(kinek == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_GRAD2, "Nincs ilyen játékos!");

		new Float:elet;
		if(params > 1) elet = strval(param[2]);
		else elet = 150;

  		if(PlayerInfo[kinek][pAdmin] > PlayerInfo[playerid][pAdmin] && !IsRyan(playerid))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nagyobb Admin HP-ját nem állíthatod át!");

		if(elet == 150)
		{
		    Ehseg[kinek] = 0.0;
		    Vizelet[kinek] = 0.0;
			Almossag[kinek] = 0.0;
			if(EhsegBar[kinek] != INVALID_BAR_ID)
			{
	            SetProgressBarValue( EhsegBar[kinek], 0.0 );
				UpdateProgressBar( EhsegBar[kinek], kinek );
				ShowProgressBarForPlayer(kinek, EhsegBar[kinek]);
			}
			if(VizeletBar[kinek] != INVALID_BAR_ID)
			{
				SetProgressBarValue( VizeletBar[kinek], 0.0 );
				UpdateProgressBar( VizeletBar[kinek], kinek );
				ShowProgressBarForPlayer(kinek, VizeletBar[kinek]);
			}
			if(AlmossagBar[kinek] != INVALID_BAR_ID)
			{
				SetProgressBarValue( AlmossagBar[kinek], 0.0 );
				UpdateProgressBar( AlmossagBar[kinek], kinek );
				ShowProgressBarForPlayer(kinek, AlmossagBar[kinek]);
			}
		}
		new Float:regi;
		GetPlayerHealth(kinek, regi);
		SetHealth(kinek, elet);
		format(_tmpString, 256, "<< Admin %s életet adott neki: %s - Régi: %.1f - Új: %.1f >>", AdminName(playerid), Nev(kinek), regi, elet);
		if(SAdmin(playerid, 1337) && (playerid == kinek)) return SendClientMessage(playerid, COLOR_LIGHTRED, _tmpString);
		else ABroadCast(COLOR_LIGHTRED, _tmpString, 1);
		return true;
	}

	if(egyezik(cmd, "/setarmor") || egyezik(cmd, "/armor") || egyezik(cmd, "/pajzs"))
	{
		if(!SAdmin(playerid, 4) && !IsScripter(playerid)) return 1;
		if(!params)
			SendClientMessage(playerid, COLOR_GRAD2, "Használat: /armor [játékos] [armor (alap: 100)]");

		new kinek = ReturnUser(param[1]);

		if(kinek == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		new Float:armor;
		if(params > 1) armor = strval(param[2]);
		else armor = 100;

		if(PlayerInfo[kinek][pAdmin] > PlayerInfo[playerid][pAdmin] && !IsRyan(playerid))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nagyobb Admin Armour-ját nem állíthatod át!");


		new Float:regi;
		GetPlayerArmour(kinek, regi);
		SetPlayerArmour(kinek, armor);
		format(_tmpString, sizeof(_tmpString), "<< Admin %s pajzsot adott neki: %s - Régi: %.1f - Új: %.1f >>", AdminName(playerid), Nev(kinek), regi, armor);
		SendMessage(SEND_MESSAGE_ADMIN,_tmpString,COLOR_LIGHTRED,PlayerInfo[playerid][pAdmin]);
		return 1;

	}

	if(egyezik(cmd, "/amoney"))
	{
		if(!SAdmin(playerid, 4) && !IsScripter(playerid)) return 1;

		SendClientMessage(playerid, COLOR_WHITE, "=====[ Fõadmini Pénzparancsok ]=====");
		SendClientMessage(playerid, COLOR_WHITE, "/gmoney - x Ft HOZZÁADÁSA a készpénzhez");
		SendClientMessage(playerid, COLOR_WHITE, "/smoney - Készpénz BEÁLLÍTÁSA x értékre");
		SendClientMessage(playerid, COLOR_WHITE, "/gbmoney - x Ft HOZZÁADÁSA a bankban lévõ pénzéhez");
		SendClientMessage(playerid, COLOR_WHITE, "/sbmoney - A bankban lévõ pénzének BEÁLLÍTÁSA x értékre");

		return 1;
	}

	if(egyezik(cmd, "/gmoney"))
	{
		if(!SAdmin(playerid, 4) && !IsScripter(playerid)) return 1;
		if(params < 2) return  SendClientMessage(playerid, COLOR_GRAD2, "Használat: /gmoney [játékos] [ mennyiség ] - info: /amoney");

		new kinek = ReturnUser(param[1]);

		if(kinek == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		new mennyi = strval(param[2]), regi;
		regi = GetMoney(kinek);
		GiveMoney(kinek, mennyi);
		format(string, sizeof(string), "<< Admin %s készpénzt adott neki: %s - Összeg: %dFt - Régi: %d - Új: %d >>", AdminName(playerid), Nev(kinek), mennyi, regi, GetMoney(kinek));
		ABroadCast(COLOR_LIGHTRED, string, 1);

		format(string, 256, "%s készpénzt adott neki: %s - Összeg: %dFt - Régi: %d - Új: %d", Nev(playerid), Nev(kinek), mennyi, regi, GetMoney(kinek)); Log("Admin", string);

		return 1;
	}

	if(egyezik(cmd, "/smoney") || egyezik(cmd, "/money"))
	{
		if(!SAdmin(playerid, 4) && !IsScripter(playerid)) return 1;
		if(params < 2) return  SendClientMessage(playerid, COLOR_GRAD2, "Használat: /smoney [játékos] [ mennyiség ] - info: /amoney");

		new kinek = ReturnUser(param[1]);

		if(kinek == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		new mennyi = strval(param[2]), regi;
		regi = GetMoney(kinek);
		SetMoney(kinek, mennyi);
		format(string, sizeof(string), "<< Admin %s beállította %s készpénzét - Összeg: %dFt - Régi: %d - Új: %d >>", AdminName(playerid), Nev(kinek), mennyi, regi, GetMoney(kinek));
		ABroadCast(COLOR_LIGHTRED, string, 1);

		format(string, 256, "%s beállította %s készpénzét - Összeg: %dFt - Régi: %d - Új: %d >>", Nev(playerid), Nev(kinek), mennyi, regi, GetMoney(kinek)); Log("Admin", string);

		return 1;
	}

	if(egyezik(cmd, "/gbmoney"))
	{
		if(!SAdmin(playerid, 4) && !IsScripter(playerid)) return 1;
		if(params < 2) return  SendClientMessage(playerid, COLOR_GRAD2, "Használat: /gbmoney [játékos] [ mennyiség ] - info: /amoney");

		new kinek = ReturnUser(param[1]);

		if(kinek == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		new mennyi = strval(param[2]), regi;
		regi = PlayerInfo[kinek][pAccount];
		PlayerInfo[kinek][pAccount] += mennyi;
		format(string, sizeof(string), "<< Admin %s banki pénzt adott neki: %s - Összeg: %dFt - Régi: %d - Új: %d >>", AdminName(playerid), Nev(kinek), mennyi, regi, PlayerInfo[kinek][pAccount]);
		ABroadCast(COLOR_LIGHTRED, string, 1);

		format(string, 256, "%s banki pénzt adott neki: %s - Összeg: %dFt - Régi: %d - Új: %d", Nev(playerid), Nev(kinek), mennyi, regi, PlayerInfo[kinek][pAccount]); Log("Admin", string);

		return 1;
	}

	if(egyezik(cmd, "/sbmoney"))
	{
		if(!SAdmin(playerid, 4) && !IsScripter(playerid)) return 1;
		if(params < 2) return  SendClientMessage(playerid, COLOR_GRAD2, "Használat: /sbmoney [játékos] [ mennyiség ] - info: /amoney");

		new kinek = ReturnUser(param[1]);

		if(kinek == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		new mennyi = strval(param[2]), regi;
		regi = PlayerInfo[kinek][pAccount];
		PlayerInfo[kinek][pAccount] = mennyi;
		format(string, sizeof(string), "<< Admin %s beállította %s banki pénzét - Összeg: %dFt - Régi: %d - Új: %d >>", AdminName(playerid), Nev(kinek), mennyi, regi, PlayerInfo[kinek][pAccount]);
		ABroadCast(COLOR_LIGHTRED, string, 1);

		format(string, 256, "%s beállította %s banki pénzét - Összeg: %dFt - Régi: %d - Új: %d", AdminName(playerid), Nev(kinek), mennyi, regi, PlayerInfo[kinek][pAccount]); Log("Admin", string);

		return 1;
	}

	if(strcmp(cmd, "/veh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!Admin(playerid, 6) && !IsScripter(playerid)) return 1;

			if(PlayerState[playerid] != PLAYER_STATE_ONFOOT)
				return Msg(playerid, "Szállj ki a jármûbõl!");
				
			if(params < 1) return Msg(playerid, "Használata: /veh [Jármû neve, vagy ID-je] szin1 szin2");
			
            new car = NINCS;
			if(IsNumeric(param[1]))
				car = strval(param[1]);
			else
				car = GetVehicleModelIDFromName(param[1]);

			if(car < 400 || car > 611)
				return Msg(playerid, "Ilyen jármûtípus nem létezik!");

			new szin1=strval(param[2]), szin2=strval(param[3]);

			if((szin1 < 0 || szin1 > 126 || szin2 < 0 || szin2 > 126))
			    return SendClientMessage(playerid, COLOR_GREY, "A szín 0 és 126 között lehet!");

			new Slot = NINCS;
			for(new x = 0; x < sizeof(CreatedCars); x++)
			{
				if(CreatedCars[x] == 0)
				{
					Slot = x;
					break;
				}
			}
			if(Slot == NINCS)
				return Msg(playerid, "Túl sok van lerakva! Elõször töröld õket! /destroycars");

			new Float:X, Float:Y, Float:Z, Float:A;
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, A);
			
			new carid = UjKocsi(car, X, Y, Z, A, szin1, szin2, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
			
			CreatedCars[Slot] = carid;
			Almaszedeskozbe[carid] = 0;
			PutPlayerInVehicle(playerid, carid, 0);
			ResetCarParts(GetPlayerVehicleID(playerid));
			KocsiObjectTorol(carid);
			//KocsiObjectTorol(carid);
		}
		return 1;
	}

	if(egyezik(cmd, "/fixveh") || egyezik(cmd, "/vr"))
	{
		if(!Admin(playerid, 5) && !IsScripter(playerid)) return 1;
		if(!Admin(playerid, 1337) && !AdminDuty[playerid]) return Msg(playerid, "Csak admin szolgálatban!");
		if(params != 1) return Msg(playerid, "/fixveh [1/2/3] - 1: Alap javítás | 2: Alap javítás + Külsõ javítás | 3: Mindent javít(Hibákat is!)!");

		if(IsPlayerInAnyVehicle(playerid))
		{
		    new kocsi = GetPlayerVehicleID(playerid);
			if(strval(param[1]) == 1)
			{
				if(IsAPancelozottKocsi(vehicleid))
					SetVehicleHealth(vehicleid, 100000);
				else
					SetVehicleHealth(vehicleid, 1000);
			}
			else if(strval(param[1]) == 2)
			{
				RepairVehicle(kocsi);
				if(IsAPancelozottKocsi(vehicleid))
					SetVehicleHealth(vehicleid, 100000);
				else
					SetVehicleHealth(vehicleid, 1000);
			}
			else if(strval(param[1]) == 3)
				KocsiJavit(kocsi);
			
		    Msg(playerid, "Sikeresen javítva!");
		}
		return 1;
	}
	if(egyezik(cmd, "/destroycars"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!Admin(playerid, 6) && !IsScripter(playerid)) return 1;
			new szamolas;
			for(new i = 0; i < sizeof(CreatedCars); i++)
			{
				if(CreatedCars[i] != 0)
				{
			    	DestroyVehicle(CreatedCars[i]);
					CreatedCars[i] = 0;
					szamolas++;
				}
			}
			ABroadCastFormat(COLOR_LIGHTRED, 1, "<< Admin %s törölte az összes lehívott jármûvet [%ddb] >>", AdminName(playerid), szamolas);
			SendClientMessage(playerid, COLOR_GREY, "(( Az összes '/veh'-el lerakott autó eltûntetve! ))");
		}
		return 1;
	}
	if(strcmp(cmd, "/weather", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1337 && !IsScripter(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Használat: /weather [weatherid]");
			    return 1;
			}
			new weather;
			weather = strval(tmp);
			//if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Weather ID can't be below 0 or above 45 !"); return 1; }
			SetPlayerWeather(playerid, weather);
			SendClientMessage(playerid, COLOR_GREY, "   Idõjárás átállítva(csak neked)!");
		}
		return 1;
	}
	if(strcmp(cmd, "/idojarastest", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsScripter(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			    return 1;
			}
			IdojarasValt(NINCS, NINCS);
			IdoJaras[iMost] = NINCS;
		}
		return 1;
	}
	if(strcmp(cmd, "/weatherall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        //if(PlayerInfo[playerid][pAdmin] < 6)
	        if(!Admin(playerid, 1339) && !IsScripter(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Használat: /weatherall [weatherid]");
			    return 1;
			}
			new weather;
			weather = strval(tmp);
			SetWeather(weather);
			SendClientMessage(playerid, COLOR_GREY, "   Idõjárás átállítva !");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "<< Admin %s Idõjárást váltott: %d >>", AdminName(playerid), weather);
			ABroadCast(COLOR_LIGHTRED, string, 1);
		}
		return 1;
	}
//-----------------------------------[Slap]-----------------------------------------------
	if(strcmp(cmd, "/pacsi", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /pacsi [Játékos]");
				return 1;
			}
			new playa;
			new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] >=1 || IsScripter(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(IsPlayerNPC(playa))
							return Msg(playerid, "Ne pacsizd már az NPC-t..");

						if(IsScripter(playa) || PlayerInfo[playerid][pAdmin] < PlayerInfo[playa][pAdmin] && !IsScripter(playerid))
							playa = playerid;
						GetPlayerHealth(playa, shealth);
						SetHealth(playa, shealth-5);
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+5);
						PlayerPlaySound(playa, 1130, slx, sly, slz+5);
						format(string, sizeof(string), "<< %s pacsit adott neki: %s >>", AdminName(playerid), PlayerName(playa));
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/hangszál") || egyezik(cmd, "/mute"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /hangszál [playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2 || IsScripter(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playa][pMuted] == 0)
						{
							PlayerInfo[playa][pMuted] = 1;
							printf("(Némítás) [Admin]%s %s hangszálaival játszik",sendername,  giveplayer);
							format(string, sizeof(string),"(Némítás) [Admin]%s %s hangszálaival játszik",sendername,  giveplayer);
							format(string, sizeof(string), "(Némítás) %s -t elnémította %s",giveplayer ,sendername);
							ABroadCast(COLOR_LIGHTRED,string,1);
						}
						else
						{
							PlayerInfo[playa][pMuted] = 0;
							printf("(Némítás vége) [Admin]%s %s hangszálait a helyére tette",sendername,  giveplayer);
							format(string, sizeof(string),"(Némítás vége) [Admin]%s %s hangszálait a helyére tette",sendername,  giveplayer);
							format(string, sizeof(string), "(Némítás vége) %s -ról/rõl a némítás feloldva %s által",giveplayer ,sendername);
							ABroadCast(COLOR_LIGHTRED,string,1);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ezt a parancsot nem használhatod!");
			}
		}
		return 1;
	}

//----------------------------------[Kick]------------------------------------------------
	if(strcmp(cmd, "/kick", true) == 0)
	{
	    if(!Admin(playerid, 1) && !IsScripter(playerid))
			return 1;
			
        new jatekos, oka[90];
        if(sscanf(pms, "us[90]", jatekos, oka))
            return SendClientMessage(playerid, COLOR_WHITE, "Használata: /kick [Játékos] [Oka]");
            
		if(jatekos == INVALID_PLAYER_ID || IsPlayerNPC(jatekos))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nincs ilyen játékos!");

		if(PlayerInfo[jatekos][pAdmin] && !Admin(playerid, 1339) && !IsScripter(playerid))
			return Msg(playerid, "Admint nem kickelhetsz"), SendFormatMessage(jatekos, COLOR_LIGHTRED, "Kick: %s kickelni akart téged", PlayerName(playerid)), 1;

		if(jatekos == playerid && !IsTerno(playerid) && !IsScripter(playerid))
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Magadat nem fogod kickelni !! 1 óra ban...");
			SeeBan(playerid, (UnixTime + (60*60*1)), NINCS, "Ennyire akarod magadat kickelni? Mi vagy te mazoista?");
			return 1;
		}
		if(IsClint(jatekos) && jatekos != playerid && IsScripter(jatekos))
		{
			SendFormatMessage(jatekos, COLOR_YELLOW, "<< %s ki akar rúgni >>", PlayerName(playerid));
			SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nincs ilyen játékos!");
			return true;
		}

		if(Admin(jatekos, 1) && !Admin(playerid, 1339) && !IsScripter(playerid)) return Msg(playerid, "A-A");
				
		
		if(PlayerInfo[playerid][pAdmin] < PlayerInfo[jatekos][pAdmin] && !IsScripter(playerid))
		{
			SendFormatMessageToAll(COLOR_LIGHTRED, "ClassRPG: %s kirúgva a rendszer által | Oka: Nagyobb admint akarsz kirúgni?", AdminName(playerid));
			Kick(playerid);
			return true;
		}
		
		new year, month,day, ora, perc, mp, uzivds[256];
		getdate(year, month, day);
		gettime(ora, perc, mp);
		format(uzivds, 256, "ClassRPG: %s ki lett rúgva %s által | Oka: %s (%d-%d-%d)", PlayerName(jatekos), PlayerName(playerid), oka ,month, day, year, ora, perc, mp);
		KickLog(uzivds);
		SendFormatMessageToAll(COLOR_LIGHTRED, "ClassRPG: %s ki lett rúgva %s által | Oka: %s", PlayerName(jatekos), AdminName(playerid), oka);
		TKick( jatekos );
		return true;
	}
 	if(strcmp(cmd, "/skick", true) == 0)
	{
	    if(!Admin(playerid, 2) && !IsScripter(playerid)) return true;
        new jatekos;
        if(sscanf(pms, "u", jatekos))
            return SendClientMessage(playerid, COLOR_WHITE, "Használata: /skick [Játékos]");

		if(jatekos == INVALID_PLAYER_ID || IsPlayerNPC(jatekos))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nincs ilyen játékos!");
			
		if(PlayerInfo[jatekos][pAdmin] && !Admin(playerid, 1339))
			return Msg(playerid, "Admint nem kickelhetsz"), SendFormatMessage(jatekos, COLOR_LIGHTRED, "Kick: %s kickelni akart téged", PlayerName(playerid)), 1;

		if(jatekos == playerid)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Magadat nem fogod kickelni !! 1 óra ban...");
			SeeBan(jatekos, (UnixTime + (60*60*1)), NINCS, "Ennyire akarod magadat kickelni? Mi vagy te mazoista?");
			return 1;
		}
		if(IsClint(jatekos) && jatekos != playerid)
		{
			SendFormatMessage(jatekos, COLOR_YELLOW, "<< %s /skick-elni akar >>", PlayerName(playerid));
			SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nincs ilyen játékos!");
			return true;
		}
		if(PlayerInfo[playerid][pAdmin] < PlayerInfo[jatekos][pAdmin] && !IsRyan(playerid))
		{
			SendFormatMessageToAll(COLOR_LIGHTRED, "ClassRPG: %s kirúgva a rendszer által | Oka: Nagyobb admint akarsz kirúgni? -.-", AdminName(playerid));
			TKick( jatekos );
			return true;
		}
		if(PlayerInfo[playerid][pAdmin] < 1337)
		{
			format(_tmpString, 128, "ClassRPG: %s ki lett rúgva %s által | Oka: /skick", PlayerName(jatekos), PlayerName(playerid));
			KickLog(_tmpString);
		}
		TKick( jatekos );
		return true;
	}

	if(strcmp(cmd, "/warn", true) == 0 || strcmp(cmd, "/figyelmeztet", true) == 0)
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid) && !IsAS(playerid))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a parancsot nem használhatod!");
			
        new jatekos, oka[64];
        if(sscanf(pms, "us[64]", jatekos, oka))
            return SendClientMessage(playerid, COLOR_WHITE, "Használata: /warn [Játékos] [Oka]");

		if(jatekos == INVALID_PLAYER_ID || IsPlayerNPC(jatekos))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nincs ilyen játékos!");

		if(jatekos == playerid)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Magadat nem fogod warnolni !! 1 óra ban...");
			SeeBan(playerid, (UnixTime + (60*60*1)), NINCS, "Ennyire akarod magadat kickelni? Mi vagy te mazoista?");
			return 1;
		}
		if(IsClint(jatekos) && jatekos != playerid)
		{
			SendFormatMessage(jatekos, COLOR_YELLOW, "<< %s /warn-olni akar >>", PlayerName(playerid));
			SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nincs ilyen játékos!");
			return true;
		}
		if(PlayerInfo[playerid][pAdmin] < PlayerInfo[jatekos][pAdmin] && !IsRyan(playerid))
		{
			SendFormatMessageToAll(COLOR_LIGHTRED, "ClassRPG: %s kirúgva a rendszer által | Oka: Nagyobb admint akarsz figyelmeztetni? -.-", AdminName(playerid));
			Kick(playerid);
			return true;
		}

		SendFormatMessage(playerid, COLOR_LIGHTRED, "Figyelmeztetted %s-t, Oka: %s", PlayerName(jatekos), oka);
		SendFormatMessage(jatekos, COLOR_LIGHTRED, "[Kick] %s figyelmeztetett | Oka: %s", PlayerName(playerid), oka);
		ABroadCastFormat(COLOR_LIGHTRED, 0, "[Kick] %s figyelmeztette %s-t | Oka: %s", PlayerName(playerid), PlayerName(jatekos), oka);
		PlayerInfo[jatekos][pKWarns] += 1;
		if(PlayerInfo[jatekos][pKWarns] >= 3)
		{
		    PlayerInfo[jatekos][pKWarns] = 0;
		    new year, month, day, uzghtai[256];
			getdate(year, month, day);
			format(uzghtai, sizeof(uzghtai), "ClassRPG: %s kirúgva egy Adminsegéd(%s) által | Oka: %s (%d-%d-%d)", PlayerName(jatekos), PlayerName(playerid), oka, month, day, year);
			KickLog(uzghtai);
			SendFormatMessageToAll(COLOR_LIGHTRED, "ClassRPG: %s kirúgva egy Admin(segéd) által | Oka: %s", PlayerName(jatekos), oka);
			TKick( jatekos );
			return true;
		}
		return true;
	}

	if(strcmp(cmd, "/bwarn", true) == 0)
	{
		if(!Admin(playerid, 1) && !IsScripter(playerid))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ezt a parancsot nem használhatod!");
			
        new jatekos, oka[64];
        if(sscanf(pms, "us[64]", jatekos, oka))
            return SendClientMessage(playerid, COLOR_WHITE, "Használata: /bwarn [Játékos] [Oka] | Ötször figyelmezteti majd tiltja!");
	    
		PlayerInfo[jatekos][pWarns] += 1;
		
		SendFormatMessage(playerid, COLOR_LIGHTRED, "Figyelmeztetted %s-t, Oka: %s", PlayerName(jatekos), oka);
		SendFormatMessage(jatekos, COLOR_LIGHTRED, "[Ban] Admin %s figyelmeztetett | Oka: %s", PlayerName(playerid), oka);
		ABroadCastFormat(COLOR_LIGHTRED, 0, "[Ban] Admin %s figyelmeztette %s-t | Oka: %s", PlayerName(playerid), PlayerName(jatekos), oka);
		
		if(PlayerInfo[jatekos][pWarns] >= 3)
		{
			PlayerInfo[jatekos][pWarns] = 0;
		    new year, month, day, uzfgti[256];
			getdate(year, month, day);
			format(uzfgti, sizeof(uzfgti), "ClassRPG: %s bannolva %s által(5 figyelmeztetése megvolt) | Oka: %s (%d-%d-%d)", PlayerName(jatekos), PlayerName(playerid), oka ,month, day, year);
			BanLog(uzfgti);
			SendFormatMessageToAll(COLOR_LIGHTRED, "ClassRPG: %s bannolva %s által(5 figyelmeztetése megvolt) | Oka: %s", PlayerName(jatekos), PlayerName(playerid), oka);
			
			format(uzfgti, sizeof(uzfgti), "5 figyelmeztetés - Ok: %s", oka);
			SeeBan(jatekos, 0, playerid, uzfgti);
		}
		return 1;
	}
	if(strcmp(cmd, "/ban", true) == 0)
	{
		if(!Admin(playerid, 2)) return 1;
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
				return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /ban [Játékos] [Idõ - óra (0 = Örök)] [oka]");

			giveplayerid = ReturnUser(tmp);
			if(giveplayerid == INVALID_PLAYER_ID) return 1;

			if(IsPlayerNPC(giveplayerid))
				return Msg(playerid, "Ne bannold már ki az NPC-t...");

			if(IsClint(giveplayerid) && giveplayerid != playerid || IsTerno(giveplayerid) && giveplayerid != playerid && !IsAllTerno(giveplayerid))
			{
				SendFormatMessage(giveplayerid, COLOR_YELLOW, "<< %s ki akar bannolni >>", PlayerName(playerid));
				Msg(playerid, "Nincs ilyen játékos");
				return 1;
			}

			if(PlayerInfo[playerid][pAdmin] < PlayerInfo[giveplayerid][pAdmin] && !IsTerno(playerid) && !IsAllTerno(giveplayerid))
			{
				SendFormatMessageToAll(COLOR_LIGHTRED, "ClassRPG: %s kirúgva a rendszer által | Oka: Nagyobb admin bannolási kíréslet... Ne csináld ezt!", PlayerName(playerid));
				Kick(playerid);
				return 1;
			}
			if(playerid == giveplayerid)
			{
				SendFormatMessageToAll(COLOR_LIGHTRED, "ClassRPG: %s ki lett bannolva a rendszer által | Oka: Magadat bannolod? Akkor így is maradsz!", PlayerName(playerid));
				SeeBan(giveplayerid, 0, playerid, "/ban", false);
				return 1;
			}

			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
						new ido;
						ido = strval(strtok(cmdtext, idx));

					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
							return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /ban [játékos] [idõ - óra] [oka]");

						if(!IsNumeric(param[2]) && !egyezik(param[2], "örök") && !egyezik(param[2], "orok") || IsNumeric(param[2]) && strval(param[2]) <= 0)
							return SendClientMessage(playerid, COLOR_GRAD2, "Helyesen kell megadnod az idõtartamot! (Szám vagy \"örök\"!)");

						new meddig[128];
						if(ido < 24) Format(meddig, "%d órára", ido);
						else if(ido >= 24 && ido < (24*7))
						{
							if(ido % 24 == 0)
								Format(meddig, "%d napra", (ido / 24));
							else
								Format(meddig, "%d napra és %d órára", floatround(ido/24, floatround_floor), (ido%24));
						}
						else if(ido >= (24*7))// && ido < (24*7*4))
						{
							if(ido % (24*7) == 0)
								Format(meddig, "%d hétre", (ido/24/7));
							else
							{
								if(ido % 24 == 0)
									Format(meddig, "%d hétre és %d napra", floatround(ido/24/7, floatround_floor), floatround((ido/24)%7, floatround_floor));
								else
									Format(meddig, "%d hétre, %d napra, és %d órára", floatround(ido/24/7, floatround_floor), floatround((ido/24)%7, floatround_floor), (ido%24));
							}
						}

						ido = UnixTime + (60*60*ido);

						if(egyezik(param[2], "örök") || egyezik(param[2], "orok"))
						{
							format(string, sizeof(string), "ClassRPG: %s ki lett bannolva %s által | Oka: %s", giveplayer, AdminName(playerid), result); BanLog(string);
							SendClientMessageToAll(COLOR_LIGHTRED, string);
							ido = 0;
						}
						else
						{
							format(string, sizeof(string), "ClassRPG: %s ki lett bannolva %s által %s", giveplayer, AdminName(playerid), meddig); BanLog(string);
							SendClientMessageToAll(COLOR_LIGHTRED, string);

							format(string, sizeof(string), "ClassRPG: Oka: %s", (result)); BanLog(string);
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}

						SeeBan(giveplayerid, ido, playerid, (result));
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "   %d nincs fent a szerveren.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//----------------------------------[Freeze]------------------------------------------------
	if(strcmp(cmd, "/jégkocka", true) == 0 || strcmp(cmd, "/freeze", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /freeze [Játékos]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if(Admin(playerid,1) || IsAS(playerid) || IsScripter(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						if(PlayerInfo[playa][pAdmin] > PlayerInfo[playerid][pAdmin] && !IsScripter(playerid))
						{
							SendFormatMessage(playerid, COLOR_GREY, "%s -t ne Freezeld, nagyobb admin!", PlayerName(playa));
							return 1;
						}
						TogglePlayerControllable(playa, 0);
						format(string, sizeof(string), "ClassRPG: %s lefagyasztotta %s-t",AdminName(playerid),PlayerName(playa));
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
		}
		return 1;
	}

//----------------------------------[unfreeze]------------------------------------------------
	if(strcmp(cmd, "/unfreeze", true) == 0 || strcmp(cmd, "/uf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /(u)n(f)reeze [Játékos]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if(Admin(playerid,1) || IsAS(playerid) || IsScripter(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 1);
						format(string, sizeof(string), "ClassRPG: %s kiolvasztotta %s-t",AdminName(playerid),giveplayer);
						ABroadCast(COLOR_LIGHTRED,string,1);
						SendFormatMessage(playa,COLOR_LIGHTRED, "%s kiolvasztott téged",AdminName(playerid));
					}
				}
			}
		}
		return 1; 
	}

//----------------------------------[GMX]-----------------------------------------------

	if(egyezik(cmd, "/warvan"))
	{
		if(Admin(playerid,1337) || IsScripter(playerid))
		{
			if(HarcVan)
			{
				new ido=0;
				new vedo,tamado;
				for(new i = 0; i < MAXTERULET; i++)
				{
					if(TeruletInfo[i][tVarakozasIdo]>ido)
					{
						SendFormatMessage(playerid,COLOR_YELLOW, "=== Terület %s ===",TeruletInfo[i][tNev]);
						ido=TeruletInfo[i][tVarakozasIdo];
						vedo=TeruletInfo[i][tHarcolok][0];// Védõk
						tamado=TeruletInfo[i][tHarcolok][1]; // Támadók
						
						
					}
				}
				if(ido==0)
				{
					new szamol=0;
					foreach(Jatekosok, x)
					{
						if(Harcol[x])
						{
							new ttext[32];
							if(PlayerInfo[x][pMember] > 0)
							{
								new szam = PlayerInfo[x][pMember] - 1;
								ttext = Szervezetneve[szam][0];
							}
							else if(PlayerInfo[x][pLeader] > 0)
							{
								new szam = PlayerInfo[x][pLeader] - 1;
								ttext = Szervezetneve[szam][0];
							}
							else
								ttext = "Civil";
							SendFormatMessage(playerid, COLOR_GREY, "[%d]Név: %s Frakció: %s", x,PlayerName(x),ttext);
							szamol++;
						}
					}
					SendFormatMessage(playerid, COLOR_YELLOW,"A war megy, bentlévõk száma: %d ",szamol);
				}
				else
					SendFormatMessage(playerid, COLOR_YELLOW,"Várakozási idõ %d sec Védõk: %s Támadók: %s",ido,Szervezetneve[vedo-1][0],Szervezetneve[tamado-1][0]);
			}
			else
				Msg(playerid, "Nincs war!");
		}
		else
		return Msg(playerid, "Ez a parancs csak szkripternek, restart miatt!");
	}
	if(egyezik(cmd,"/restart"))
	{
		if(!Admin(playerid,5555) && !IsScripter(playerid)) return 1;
	
		if(SzerverResiigCounter > 0 || SzerverResiCounter > 0)
		{
			SzerverResiigCounter=0;
			SzerverResiCounter=0;
			TextDrawHideForAll(resiszerver);
			ResiVan[0] = false;
			ResiVan[1] = false;
			ResiVan[2] = false;
			SendClientMessageToAll(COLOR_LIGHTRED, "<<< ======================================== >>>");
			SendClientMessageToAll(COLOR_LIGHTRED, "<<< ============RESTART ELMARAD!!!========== >>>");
			SendClientMessageToAll(COLOR_LIGHTRED, "<<< ======================================== >>>");
		}				
		return 1;
	}
	if(strcmp(cmd, "/szerver", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Admin(playerid, 1338) || IsScripter(playerid))
			{
				if(strcmp(tmp, "mentes", true) == 0 && params == 1)
				{
					GameTextForPlayer(playerid, "~r~~h~================~n~Minden ments ind¢tva!~n~~r~~h~================", 3000, 5);
					SzerverRestartMentes();
					ResiVan[0] = false;
					ResiVan[1] = false;
					ResiVan[2] = false;
					return 1;
				}
				if(params < 2)
				{
					SendClientMessage(playerid, COLOR_GREY, "Használata: /szerver [Funkció] [Idõ]");
					SendClientMessage(playerid, COLOR_GREY, "Funkciók: gmx, gmx1, mentes stop");
					return 1;
				}


				tmp = GetParam(cmdtext, 1);
				new ido1 = strval(param[2]);

				if(ido1 < 10 || ido1 > 300)
					return Msg(playerid, "Minimum 10 másodperc és maximum 5 perc lehet!");
				
				

				if(strcmp(tmp, "gmx", true) == 0)
				{
					if(params != 3)
					{
						SendClientMessage(playerid, COLOR_GREY, "Használata: /szerver gmx [idõ1] [Idõ2]");
						SendClientMessage(playerid, COLOR_GREY, "idõ1:Restar indulásáig lévõ idõ | idõ2: Restart idõ");
						return 1;
					}
					
					new ido2 = strval(param[3]);
					if(ido2 < 20 || ido2 > 300)
						return Msg(playerid, "Minimum 20 másodperc és maximum 5 perc lehet!");	
						
					SendClientMessageToAll(COLOR_LIGHTRED, "<<< ======================================== >>>");
					SendFormatMessageToAll(COLOR_LIGHTBLUE, "<<< A szerver restart lesz kb. %d másodperc mulva >>>", ido1);
					SendClientMessageToAll(COLOR_LIGHTRED, "<<< ======================================== >>>");
					
					SzerverResiigCounter=ido1;
					SzerverResiCounter=ido2;
					TextDrawShowForAll(resiszerver);
		
					ResiVan[1] = true;
					ResiVan[2] = true;
					
					return 1;
				}
				if(strcmp(tmp, "gmx2", true) == 0)
				{
					if(HarcVan) return Msg(playerid,"Warvan!");
					if(params != 3)
					{
						SendClientMessage(playerid, COLOR_GREY, "Használata: /szerver gmx [idõ1] [Idõ2]");
						SendClientMessage(playerid, COLOR_GREY, "idõ1:Restar indulásáig lévõ idõ | idõ2: Restart idõ");
					}
					new ido2 = strval(param[3]);
					if(ido2 < 60 || ido2 > 300)
						return Msg(playerid, "Minimum 50 másodperc és maximum 5 perc lehet!");	
						
					SendClientMessageToAll(COLOR_LIGHTRED, "<<< ======================================== >>>");
					SendFormatMessageToAll(COLOR_LIGHTBLUE, "<<< A szerver restart lesz kb. %d másodperc mulva >>>", ido1);
					SendClientMessageToAll(COLOR_LIGHTRED, "<<< ======================================== >>>");
					
					SzerverResiigCounter=ido1;
					SzerverResiCounter=ido2;
					TextDrawShowForAll(resiszerver);
					//ResiVan[0] = true;
					ResiVan[1] = true;
					ResiVan[2] = true;
					
					return 1;
				}
				else if(strcmp(tmp, "gmx-clint", true) == 0)
				{
					SendClientMessageToAll(COLOR_LIGHTRED, "<<< ======================================== >>>");
					SendFormatMessageToAll(COLOR_LIGHTBLUE, "<<< A szerver újraindul kb. %d másodperc mulva >>>", ido1);
					SendClientMessageToAll(COLOR_LIGHTRED, "<<< ======================================== >>>");

					GameTextForAll("~r~~h~================~n~Restart!~n~~r~~h~================", 3000, 5);

					SetTimer("Restart", ((ido1*1000)+1000), false);
					SzerverRestartMentes();
				}

				else if(strcmp(tmp, "stop", true) == 0)
				{
					if(!Admin(playerid, 1338)) return SendClientMessage(playerid, COLOR_GREY, "Ezt csak a szerver legfõbb Adminjai használhatják.");

					SendClientMessageToAll(COLOR_LIGHTRED, "<<< ================================= >>>");
					SendFormatMessageToAll(COLOR_LIGHTBLUE, "<<< A szerver leáll %d másodperc mulva >>>", ido1);
					SendClientMessageToAll(COLOR_LIGHTRED, "<<< ================================= >>>");

					GameTextForAll("~r~~h~==============~n~Szerver leallas!~n~~r~~h~==============", 3000, 5);

					SetTimer("Stop", ((ido1*1000)+1000), false);
					SzerverRestartMentes();
				}

				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Használata: /szerver [funkció] [idõ]");
					SendClientMessage(playerid, COLOR_GREY, "Funkciók: gmx, stop");
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/admins", true) == 0)
    {
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
		new count = 0, szint, mindentlat = IsClint(playerid);
		mindentlat = IsTerno(playerid);
		mindentlat = IsScripter(playerid);
		SendClientMessage(playerid, COLOR_GREEN, "==========[Adminok]==========");
		foreach(Jatekosok, i)
		{
			if(Admin(i, 1) && !IsTerno(i) && PlayerInfo[i][pAdminAlnevBe] != 1 || IsTerno(playerid) || mindentlat)
			{
				szint = PlayerInfo[i][pAdmin];
				if(szint >= 1 && szint <= 1337 || szint >= 1340 && Admin(playerid, 1337) || szint > 0 && mindentlat)
				{
					if(!mindentlat)
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[%i]%s (Szint %d)", i, AdminName(i), PlayerInfo[i][pAdmin]);
					else
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "[%i]%s (Szint %d)", i, PlayerName(i), PlayerInfo[i][pAdmin]);
					count++;
				}
			}
		}
		if (count == 0) SendClientMessage(playerid,COLOR_GREY,"Nincs Admin, de Class RPG szeme mindent lát!");
		return 1;
    }

	if(strcmp(cmd, "/adminsegédek", true) == 0 || strcmp(cmd, "/adminsegedek", true) == 0 || strcmp(cmd, "/asek", true) == 0)
    {
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;
		new count = 0;
		SendClientMessage(playerid, COLOR_GREEN, "=====[Adminsegédek]=====");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsAS(i))
				{
					if(PlayerInfo[i][pAS] == NINCS)
						format(string, sizeof(string), "[%i]%s (Örök)", i, PlayerName(i));
					else if(PlayerInfo[i][pAS] >UnixTime)
					{
						new ido;
						ido=floatround( (PlayerInfo[i][pAS]-UnixTime) / 3600);
						format(string, sizeof(string), "[%i]%s (%d IRL óráig)", i, PlayerName(i), ido);
						if(ido < 1)
						{
							ido=floatround( (PlayerInfo[i][pAS]-UnixTime)/ 60);
							format(string, sizeof(string), "[%i]%s (%d IRL percig)", i, PlayerName(i), ido);
						}
					}
					SendClientMessage(playerid,COLOR_LIGHTGREEN, string);
					count++;
				}
			}
		}
		if (count == 0) SendClientMessage(playerid,COLOR_GREY,"Nincs adminsegéd.");
		return 1;
    }

//----------------------------------[HELP]-----------------------------------------------
	if(strcmp(cmd, "/rules", true) == 0)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED,"A szabályzatot a weboldalon találod!");
		return 1;
	}

	if(egyezik(cmd, "/amunka"))
	{	
		if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;	
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Detektív)(3) *** /laptopom find /adat");
		/*SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Ügyvéd)(6) *** /free");*/
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Prostituált)(3) *** /sex");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Drogkereskedõ)(3) *** /szed /készít");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(AutóTolvaj)(6) *** /car /ellop");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(AutóSzerelõ) *** /szerelés /szerelõduty");
		SendClientMessage(playerid,COLOR_YELLOW2,"***Megjegyzés: Az alap kocsik feljavításáért az önkormányzat fizet. PL.: Kamion, úttisztító stb...");
		/*SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Taxi) *** /fare");*/
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Testõr)(3) *** /guard");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(FegyverKereskedõ)(5) *** /felvesz /készít");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(AutóKereskedõ) *** (/k)ereskedõ");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Pizzafutár)(3) *** /pizza");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Postás)(5) ***  /feltölt /postás");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Pilóta)(12) ***  /utasszállítás");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Úttisztító)(1) *** /úttisztítás");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Hacker)(8) *** /hack");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Páncélkészítõ)(12) *** /készít");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Kamionos)(2) *** /kamion /kr(kamionrádió)");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Farmer)(1) *** /farmerkedés /alma /vetes");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Fûnyíró)(1) *** /fûnyírás");
		SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Építész)(10) *** /felújítás");
		//SendClientMessage(playerid,COLOR_YELLOW2,"*** Munka(Kukás)(5) *** /kukás");
	}

	if(egyezik(cmd, "/sahelp") || egyezik(cmd, "/sah"))
	{
	    if(!IsScripter(playerid)) return Msg(playerid, "Nem vagy Scripter!");
		if(params < 1) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /sah [admin szint]");
		new szam = strval(param[1]);
		
		switch(szam)
		{
		case 0:
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Adminsegéd: /as /tv (vissza) /asayn /warn /vá /cvá /report kick /(u)n(f)reeze /freeze");
			SendClientMessage(playerid, COLOR_YELLOW, "Adminsegéd: TV-zés közben a következõket is használhatod: /set /respawn /vhspawn");
		}
		case 1:
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Admin(1): /a(s) /nevek /jail /set /vw /inti /asay(n) /respawn /vhspawn /tele /cheathp /cheatarmor /lista");
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Admin(1): /asegit /cc /rabok /mz /ajailosok /kórházban /admins(egédek) /(b)warn /kick /pacsi /zso /engedély");
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Admin(1): /bid /pmblock /aranks /onduty /get(pos/hp/skin) /arendszám /crs /crsid /ann /setint /setvw /apark");
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Admin(1): /check /up /down /lt /rt /joypad /kivanitt /cnn /rendezvény /carinfo /ash /ondutyskin");
		}
		case 2:
			SendClientMessage(playerid, COLOR_LIGHTRED, "Admin(2): /ban /iban /kban /skick /auncuff /flymode /fly /flip /skydive /mute /objectinfo /clearplayer /clearvehicle");

		case 3:
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Admin(3): /alefoglal /lenyomoz /fourdive /msg /aunshock");
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Admin(3): /goto /gethere /gotocar /getcar /gotopos /mark /gotomark");
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Admin(3): /ahegy /entercar /goto(ls/sf/lv/in/jet)");
		}
		case 4:
			SendClientMessage(playerid, COLOR_LIGHTRED, "Admin(4): /engedgoto /alock /noas /atuning /agl /hp /armor /amoney /idgskin /absz /ölésidõ /parkhely");

		case 5:
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Admin(5): /kocsiba /csendvan /válaszok /helper /tvengedély /tiltás /átnéz /setskin /bigears /tûz stop /gun /ammo /fixveh");

		case 6:
		{
			 SendClientMessage(playerid, COLOR_NAR, "FõAdminSegéd(6): /race /helper2 /acr(30) /ujbelso /ujbejarat /removecar /house /házasság");
			 SendClientMessage(playerid, COLOR_NAR, "FõAdminSegéd(6): /kor /nem /veh /destroycars /statisztika /houseo /abiz");
		}
		case 1337:
		{
			SendClientMessage(playerid, COLOR_DARKYELLOW,"FõAdmin(1337): /anév /unbanip /adminálnév(be) /aterület /ujmodel /warvan");
			SendClientMessage(playerid, COLOR_DARKYELLOW,"FõAdmin(1337): /álnév /atuningolás /robbant /pozmentés /noooc /pmek /fa /tod /setweaponskill");
			SendClientMessage(playerid, COLOR_DARKYELLOW,"FõAdmin(1337): /igénytörlése /ujadatok /ház /háztipus /ip /kormány /kocsikulcs töröl /házkulcs töröl");
			SendClientMessage(playerid, COLOR_DARKYELLOW,"FõAdmin(1337): /garázs /asellbiz /edit /munkaid /jármûhp /desync /weather /ppont /szint /óra");
			SendClientMessage(playerid, COLOR_DARKYELLOW,"FõAdmin(1337): /arcmost /startlotto /makeadmin /makeleader /maketagsag /mati /raktár érték");
			SendClientMessage(playerid, COLOR_DARKYELLOW,"FõAdmin(1337): /kocsikulcs /házkulcs /bizniszkulcs /setstat /fuelcar /aopen /npc /szerelõ /autoker /swat");
		}
		case 1338:
		{
			SendClientMessage(playerid, COLOR_ORANGE,"SuperAdmin(1338): /fegyveranticheat /loadversion /object /goingenyles /szerver /újajtó /válaszok törlés");
			SendClientMessage(playerid, COLOR_ORANGE,"SuperAdmin(1338): /asellcar /asellhouse /benzinkút /ajtó /kapu");
		}

		case 1339:
			SendClientMessage(playerid, COLOR_LIGHTGREEN,"AdminController(1339): /resivan /weatherall");

		case 1340:
			SendClientMessage(playerid, COLOR_GREEN,"FõAdminController(1340): /széf érték /swatleader /kapu /object /pickups /rendel /atm /forgalom");

		case 5555:
		{
			SendClientMessage(playerid, COLOR_BLUE, "Scripter(5555): /sa /sendrcon /resivan /spawn /debug /betölt /mentés /pickups /méreg /bank /objdel /pickdel");
			SendClientMessage(playerid, COLOR_BLUE, "Scripter(5555): /ujpick /ujgarazs /ujhaz /ujkocsi /lowryder /ujbiznev /ujbizhely /igénylések /sduty");
			SendClientMessage(playerid, COLOR_BLUE, "Scripter(5555): /saveint /deleteint /editint /goint /weatherall /kapu /npc /parancsbetöltés /forgalom /alapkocsi");

		}
		default:
		{
			SendClientMessage(playerid, COLOR_BLUE, "/sah 0-5555");
		}
		}
		return 1;
	}
	if(egyezik(cmd, "/törlés") || egyezik(cmd, "/torles"))
	{
		if(!Admin(playerid, 5555)) return Msg(playerid,"Nem-nem...");
		if(params < 1) return Msg(playerid, "/törlés [Ház / Kocsi / Játékos] ");
		if(egyezik(param[1], "ház") || egyezik(param[1], "haz"))
		{
			if(params != 2) return Msg(playerid,"/törlés Ház [Id]");
			new id = strval(param[2]);
			if(id < 0) return Msg(playerid, "A-a!");
			if(HouseInfo[id][Van] != 1) return Msg(playerid, "Nincs ilyen ház!");
			DestroyDynamicPickup(HazPickup[id]);
			HazPickup[id] = NINCS;
			HouseInfo[id][Van] = 0;
			format(string, 128, "DELETE FROM %s WHERE ID='%d'", SQL_DB_Hazak, id);
			doQuery(string);
			ABroadCastFormat(COLOR_LIGHTGREEN, 1, "%s törölt egy házat. Házszám: %d", PlayerName(playerid), id);
			HazakSzamaOsszesen --;
		}
		else if(egyezik(param[1], "kocsi"))
		{
			if(params != 2) return Msg(playerid,"/törlés kocsi [ID]");
			new id = strval(param[2]);
			if(id < 0) return Msg(playerid, "A-a!");
			if(IsVehicleConnected(CarInfo[id][cId])) DestroyVehicle(CarInfo[id][cId]);
			CarInfo[id][Van] = 0;
			format(string, 128, "DELETE FROM %s WHERE ID='%d'", SQL_DB_Kocsik, id);
			doQuery(string);
			ABroadCastFormat(COLOR_LIGHTGREEN, 1, "%s törölt egy kocsit. Rendszám: %d", PlayerName(playerid), id);
		}
		else if(egyezik(param[1], "garazs") || egyezik(param[1],"garázs"))
		{
			if(params != 2) return Msg(playerid,"/törlés garázs [ID]");
			new id = strval(param[2]);
			if(id < 0) return Msg(playerid, "A-a!");
			DestroyDynamicPickup(GarazsPickup[id]);
			GarazsPickup[id] = NINCS;
			GarazsInfo[id][Van] = 0;
			format(string, 128, "DELETE FROM %s WHERE ID='%d'", SQL_DB_Garazs, id);
			doQuery(string);
			ABroadCastFormat(COLOR_LIGHTGREEN, 1, "%s törölt egy garázst. ID: %d", PlayerName(playerid), id);
		}
		else if(egyezik(param[1],"játékos") || egyezik(param[1],"jatekos"))
		{
			if(params != 2) return Msg(playerid,"/törlés Játékos [Jatekos_IG_Neve]");
			//if(!RegisztraltJatekos(param[2])) return Msg(playerid,"Nincs ilyen játékos!");
			Format(string,"DELETE FROM playerek WHERE Nev='%s'",param[2]);
			doQuery(string);
			ABroadCastFormat(COLOR_LIGHTGREEN, 1, "<< %s törölt egy játékost! Név: %s >>", PlayerName(playerid), param[2]);
		}
		else return Msg(playerid, "/törlés [Ház / Kocsi / Játékos] ");
	}
/*	if(egyezik(cmd, "/halloween"))
	{
	    if(!IsSuper(playerid, 1337) && !IsScripter(playerid)) return Msg(playerid, "Csak szeretnéd (:");
		if(!IsHalloWeen)
		{
		SendClientMessageToAll(COLOR_WHITE, "{FCFF00}__________________________ {FF8C00}H A L L O W E E N {FCFF00}__________________________");
		SendClientMessageToAll(COLOR_WHITE, "{FF8C00}A {FCFF00}Hallo{FF8C00}ween-i {FCFF00}event {FF8C00}elindult{FCFF00}! Jó {FF8C00}szórakozást!");
		
		IsHalloWeen = 1;
		RandomPumpkin();
		}
		else
		{
		SendClientMessageToAll(COLOR_WHITE, "{FCFF00}__________________________ {FF8C00}H A L L O W E E N {FCFF00}__________________________");
		SendClientMessageToAll(COLOR_WHITE, "{FF8C00}A Halloween-i {FCFF00}event véget {FF8C00}ért! {FCFF00}Reméljük élveztétek, {FF8C00}további jó játékot!");
		IsHalloWeen = 0;
		}
		return 1;
	}
	if(egyezik(cmd, "/tok") || egyezik(cmd, "/tök"))
	{
		if(!IsHalloWeen) return Msg(playerid, "Majd halloweenkor...");
	    if(params < 1)
		{
		if(IsScripter(playerid) || Admin(playerid, 1337)) return Msg(playerid, "Használat: /tök nyit/debug/teszt");
		else return Msg(playerid, "Használat: /tök nyit");
		}
		if(egyezik(param[1], "nyit"))
		{
		if(IsHalloWeenPumpkin != 1) return Msg(playerid, "Nincs ajándék tök! Várj még egy kicsit!");
		if(!PlayerToPoint(5, playerid, HalloWeenPumpkinPosX, HalloWeenPumpkinPosY, HalloWeenPumpkinPosZ, 5555, 15))
		{
			if(GetPlayerVirtualWorld(playerid) == 5555 && GetPlayerInterior(playerid) == 15)
			{
			new nemjotok = 0;
			for(new x = 0; x < sizeof(PumpkinPos); x++)
			{
				if(PlayerToPoint(5, playerid, PumpkinPos[x][0], PumpkinPos[x][1], PumpkinPos[x][2], 5555, 15) && !PlayerToPoint(5, playerid, HalloWeenPumpkinPosX, HalloWeenPumpkinPosY, HalloWeenPumpkinPosZ, 5555, 15)) 
				{
				nemjotok = 1;
				break;
				}
			}
		
			if(nemjotok)
			{
			new Float:X, Float:Y, Float:Z, Float:Distance = 1.0;
			GetPlayerPos(playerid, X, Y, Z);
			new randomzene = random(9);
			switch(randomzene)
			{
				case 0: PlayAudioStreamForPlayer(playerid, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/Screams/psychowithscream.wav", X, Y, Z, Distance, 1);
				case 1: PlayAudioStreamForPlayer(playerid, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/ghost/Ghost%2002.wav", X, Y, Z, Distance, 1);
				case 2: PlayAudioStreamForPlayer(playerid, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/Screams/AAAGH1.WAV", X, Y, Z, Distance, 1);
				case 3: PlayAudioStreamForPlayer(playerid, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/Screams/woscream4.wav", X, Y, Z, Distance, 1);
				case 4: PlayAudioStreamForPlayer(playerid, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/witch/wlaugh.wav", X, Y, Z, Distance, 1);
				case 5: PlayAudioStreamForPlayer(playerid, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/witch/lach01.WAV", X, Y, Z, Distance, 1);
				case 6: PlayAudioStreamForPlayer(playerid, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/monster/m_okay.wav", X, Y, Z, Distance, 1);
				case 7: PlayAudioStreamForPlayer(playerid, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/ghost/Spooked.wav", X, Y, Z, Distance, 1);
				case 8: PlayAudioStreamForPlayer(playerid, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/monster/moan01.wav", X, Y, Z, Distance, 1);
			}
			SetPlayerPos(playerid, 1109.954, -968.523, 42.764);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			Msg(playerid, "Sajnos ez nem az a tök, és feldühítetted a szellemeket akik ezért kidobtak a házból!");
			Msg(playerid, "Menj vissza és próbálj egy másik tököt!");
			}
			else Msg(playerid, "Nem vagy tök közelében!");
		
			return 1;
			}
			else return Msg(playerid, "Nem vagy a kísértet házban!");
		}
		IsHalloWeenPumpkin = 0;
		RandomTokAjandek(playerid);
		HalloWeenPumpkinTimer = SetTimer("TimeToSpawnPumpkin", TimeToOpenPumpkin*60*1000, false);
		}
		if(egyezik(param[1], "debug"))
		{
		if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;
		KillTimer(HalloWeenPumpkinTimer);
		RandomPumpkin();
		new halloweenstring[200];
		format(halloweenstring, sizeof(halloweenstring), "<< %s debugolta a halloween-i tököt! >>", AdminName(playerid));
		ABroadCast(COLOR_LIGHTRED,halloweenstring,1);
		}
		if(egyezik(param[1], "teszt"))
		{
		if(!Admin(playerid, 1337) && !IsScripter(playerid)) return 1;
		RandomTokAjandek(playerid);
		new halloweenstring[200];
		format(halloweenstring, sizeof(halloweenstring), "<< %s teszteli a halloween-i tök random ajándékait! >>", AdminName(playerid));
		ABroadCast(COLOR_LIGHTRED,halloweenstring,1);
		}
		
		
		return 1;
	}
	if(egyezik(cmd, "/ijeszt"))
	{
	    if(!Admin(playerid, 1) && !IsScripter(playerid))  return Msg(playerid, "Csak szeretnéd (:");
		if(!IsHalloWeen) return Msg(playerid, "Majd halloweenkor...");
		new jatekos, ijesztszam;
        if(sscanf(pms, "ui", jatekos, ijesztszam)) return Msg(playerid, "Használat: /ijeszt [játékos] [szám]");
            
		if(jatekos == INVALID_PLAYER_ID || IsPlayerNPC(jatekos))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nincs ilyen játékos!");
		
		new Float:X, Float:Y, Float:Z, Float:Distance = 1.0;
        GetPlayerPos(playerid, X, Y, Z);
		switch(ijesztszam)
		{
				case 0: PlayAudioStreamForPlayer(jatekos, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/Screams/psychowithscream.wav", X, Y, Z, Distance, 1);
				case 1: PlayAudioStreamForPlayer(jatekos, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/ghost/Ghost%2002.wav", X, Y, Z, Distance, 1);
				case 2: PlayAudioStreamForPlayer(jatekos, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/Screams/AAAGH1.WAV", X, Y, Z, Distance, 1);
				case 3: PlayAudioStreamForPlayer(jatekos, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/Screams/woscream4.wav", X, Y, Z, Distance, 1);
				case 4: PlayAudioStreamForPlayer(jatekos, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/witch/wlaugh.wav", X, Y, Z, Distance, 1);
				case 5: PlayAudioStreamForPlayer(jatekos, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/witch/lach01.WAV", X, Y, Z, Distance, 1);
				case 6: PlayAudioStreamForPlayer(jatekos, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/monster/m_okay.wav", X, Y, Z, Distance, 1);
				case 7: PlayAudioStreamForPlayer(jatekos, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/ghost/Spooked.wav", X, Y, Z, Distance, 1);
				case 8: PlayAudioStreamForPlayer(jatekos, "http://www.partnersinrhyme.com/soundfx/scary_halloween_sounds/monster/moan01.wav", X, Y, Z, Distance, 1);
		}
		new halloweenstring[200];
		format(halloweenstring, sizeof(halloweenstring), "<< %s megijesztette %s-t >>", AdminName(playerid), PlayerName(jatekos));
		ABroadCast(COLOR_LIGHTRED,halloweenstring,1);
		
		return 1;
	}*/
	if(egyezik(cmd, "/adminzene"))
	{
	    if(!Admin(playerid, 1) && !IsScripter(playerid))  return Msg(playerid, "Csak szeretnéd (:");
        new adminzene[500];
        if(sscanf(pms, "s[500]", adminzene)) return Msg(playerid, "Használat: /adminzene [Zene url címe]");
		
		foreach(Jatekosok, p)
		{
			if(Logged(p))
			{
				PlayAudioStreamForPlayer(p, adminzene);
			}

		}
		new halloweenstring[200];
		format(halloweenstring, sizeof(halloweenstring), "<< %s zenét játszik le >>", AdminName(playerid));
		ABroadCast(COLOR_LIGHTRED,halloweenstring,1);
		
		return 1;
	}
	/*if(egyezik(cmd, "/openpumpkin"))
	{
	    if(!Admin(playerid, 1337) && !IsScripter(playerid))  return Msg(playerid, "Csak szeretnéd (:");
        if(params < 1) return Msg(playerid, "Használat: /openpumpkin [idõ(percben)]");
		if(!IsNumeric(param[1])) return 1;
		
		new szam = strval(param[1]);
		TimeToOpenPumpkin = szam;
		new halloweenstring[200];
		format(halloweenstring, sizeof(halloweenstring), "<< HalloWeen: %s átállította: TimeToOpenPumpkin[%d] >>", AdminName(playerid), szam);
		ABroadCast(COLOR_LIGHTRED,halloweenstring,1);
		
		return 1;
	}*/
	
//----------------------------- Gravity -------------------------------------------
	if(egyezik(cmd,"/gravity"))
	{
		if(!IsClint(playerid)) return 1;

        if(params < 1) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /gravity [alapértelmezett: 0.008]");

		new Float:gravity;
		if(egyezik(tmp, "alap")) gravity = 0.008;
		else gravity = floatstr(tmp);

		SetGravity(gravity);
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Gravitáció átállítva: %f",gravity);
		return 1;
	}
	if(egyezik(cmd,"/stopani"))
	{
		new szamol=0;
		foreach(Jatekosok, x)
		{
			if(Admin(x, 1) || IsAS(x))
				szamol++;
		}
		if(szamol > 0) return Msg(playerid, "Van fent admin/segéd tõle kérj segítséget!");
		
		if(NemMozoghat(playerid)) return Msg(playerid, "Ne használj ki bugot!");
		if(FloodCheck(playerid)) return 1;
        ClearAnimations(playerid);
		Cselekves(playerid, "használta a /stopani parancsot", 0, true);
	    return 1;
	}
	if(egyezik(cmd,"/skill"))
	{
		if(params < 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Skill Információ __________________|");
			SendClientMessage(playerid, COLOR_WHITE, "Használat: /skill [szám]");
			if(Admin(playerid,5555)) SendClientMessage(playerid, COLOR_WHITE, "Használat: /skill [szám] [ertek]");
	  		SendClientMessage(playerid, COLOR_GREY, "| 1: Detektív            7: Mentõ");
	  		SendClientMessage(playerid, COLOR_GREY, "| 2: Ügyvéd               8: Fegyvergyártó");
	  		SendClientMessage(playerid, COLOR_GREY, "| 3: Prostituált                9: Betörõ");
	  		SendClientMessage(playerid, COLOR_GREY, "| 4: Drog dealer		  10: Horgász");
	  		SendClientMessage(playerid, COLOR_GREY, "| 5: Autótolvaj			11:Hacker");
	  		SendClientMessage(playerid, COLOR_GREY, "| 6: Riporter               12:Fegyverek");
	  		SendClientMessage(playerid, COLOR_GREY, "| 13: Skill levonás      ");			
			SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
			return 1;
		}

		new szam = strval(param[1]);
		new ertek= NINCS;
		
		if(Admin(playerid,1337))
			ertek = strval(param[2]);
			
		if(params != 2) ertek = NINCS;
		
		if(szam == 1)
		{
			if(ertek != NINCS) PlayerInfo[playerid][pDetSkill] = ertek;
		    new level = PlayerInfo[playerid][pDetSkill];
			if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Detektív skilled: 1."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell megkeresned a következõ szinthez!", 50 - level); }
			else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Detektív skilled: 2."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell megkeresned a következõ szinthez!", 100 - level); }
			else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Detektív skilled: 3."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell megkeresned a következõ szinthez!", 200 - level); }
			else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Detektív skilled: 4."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell megkeresned a következõ szinthez!", 400 - level); }
			else if(level >= 401) SendClientMessage(playerid, COLOR_YELLOW, "Detektív skilled: 5.");
		}
		else if(szam == 2)
		{
			if(ertek != NINCS) PlayerInfo[playerid][pDetSkill] = ertek;
		    new level = PlayerInfo[playerid][pLawSkill];
			if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Ügyvéd skilled: 1."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell kihoznod a börtönbõl a következõ szinthez.", 50 - level); }
			else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Ügyvéd skilled: 2."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell kihoznod a börtönbõl a következõ szinthez.", 100 - level); }
			else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Ügyvéd skilled: 3."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell kihoznod a börtönbõl a következõ szinthez.", 200 - level); }
			else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Ügyvéd skilled: 4."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell kihoznod a börtönbõl a következõ szinthez.", 400 - level); }
			else if(level >= 401) SendClientMessage(playerid, COLOR_YELLOW, "Ügyvéd skilled: 5.");
		}
		else if(szam == 3)
		{
			if(ertek != NINCS) PlayerInfo[playerid][pSexSkill] = ertek;
			SkillNezz(playerid, 2);
		}
		else if(szam == 4)
		{
			if(ertek != NINCS) PlayerInfo[playerid][pDrugsSkill] = ertek;
			SkillNezz(playerid, 3);
		}
		else if(szam == 5)
		{
			if(ertek != NINCS) PlayerInfo[playerid][pJackSkill] = ertek;
		    SkillNezz(playerid, 4);
			
			Msg(playerid,"Ellopható kocsik szintenként: /ellop lista [level]");
			
		}
		else if(szam == 6)
		{
			if(ertek != NINCS) PlayerInfo[playerid][pNewsSkill] = ertek;
		    new level = PlayerInfo[playerid][pNewsSkill];
			if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Riporter skilled: 1."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d közleményt kell bemondanod a következõ szinthez", 50 - level); }
			else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Riporter skilled: 2."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d közleményt kell bemondanod a következõ szinthez", 100 - level); }
			else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Riporter skilled: ."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d közleményt kell bemondanod a következõ szinthez", 200 - level); }
			else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Riporter skilled: 4."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d közleményt kell bemondanod a következõ szinthez", 400 - level); }
			else if(level >= 401) SendClientMessage(playerid, COLOR_YELLOW, "Riporter skilled: 5.");
		}
		else if(szam == 7)
		{
			if(ertek != NINCS) PlayerInfo[playerid][pMechSkill] = ertek;
		    new level = PlayerInfo[playerid][pMechSkill];
			if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Mentõ skilled: 1."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell megmûtened a következõ szinthez.", 50 - level);  }
			else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Mentõ skilled: 2."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell megmûtened a következõ szinthez.", 100 - level); }
			else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Mentõ skilled: 3."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell megmûtened a következõ szinthez.", 200 - level); }
			else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Mentõ skilled: 4."); SendFormatMessage(playerid, COLOR_YELLOW, "Még %d embert kell megmûtened a következõ szinthez.", 400 - level); }
			else if(level >= 401) SendClientMessage(playerid, COLOR_YELLOW, "Mentõ skilled: 5.");
		}
		else if(szam == 8)
		{
			if(ertek != NINCS) PlayerInfo[playerid][pCarSkill] = ertek;
		    new level = PlayerInfo[playerid][pCarSkill];
			if(level >= 0 && level <= 15) { SendClientMessage(playerid, COLOR_YELLOW, "Fegyvergyártó skilled = 1."); format(string, sizeof(string), "Még %d fegyvert kell összeraknod vagy szétszedned a következõ szinthez.", 15 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 16 && level <= 85) { SendClientMessage(playerid, COLOR_YELLOW, "Fegyvergyártó skilled = 2."); format(string, sizeof(string), "Még %d fegyvert kell összeraknod vagy szétszedned a következõ szinthez.", 85 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 86 && level <= 125) { SendClientMessage(playerid, COLOR_YELLOW, "Fegyvergyártó skilled = 3."); format(string, sizeof(string), "Még %d fegyvert kell összeraknod vagy szétszedned a következõ szinthez.", 125 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 126 && level <= 185) { SendClientMessage(playerid, COLOR_YELLOW, "Fegyvergyártó skilled = 4."); format(string, sizeof(string), "Még %d fegyvert kell összeraknod vagy szétszedned a következõ szinthez.", 185 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 186) { SendClientMessage(playerid, COLOR_YELLOW, "Fegyvergyártó skilled = 5."); }
		}// pCarSkill
		else if(szam == 9)
		{
			if(ertek != NINCS) PlayerInfo[playerid][pBetoroSkill] = ertek;
		    SkillNezz(playerid, 5);
		}
		else if(szam == 10)
		{
			if(ertek != NINCS) PlayerInfo[playerid][pFishSkill] = ertek;
		    new level = PlayerInfo[playerid][pFishSkill];
			if(level >= 0 && level < 50) { SendClientMessage(playerid, COLOR_YELLOW, "Horgász skilled = 1."); format(string, sizeof(string), "Még %d halat kell kifognod a következõ szinthez.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 51 && level < 250) { SendClientMessage(playerid, COLOR_YELLOW, "Horgász skilled = 2."); format(string, sizeof(string), "Még %d halat kell kifognod a következõ szinthez.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 251 && level < 500) { SendClientMessage(playerid, COLOR_YELLOW, "Horgász skilled = 3."); format(string, sizeof(string), "Még %d halat kell kifognod a következõ szinthez.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 501 && level < 1000) { SendClientMessage(playerid, COLOR_YELLOW, "Horgász skilled = 4."); format(string, sizeof(string), "Még %d halat kell kifognod a következõ szinthez.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW, "Horgász skilled = 5."); }
		}
		else if(szam == 11)
		{
			if(ertek != NINCS) PlayerInfo[playerid][pHackingSkill] = ertek;
			SkillNezz(playerid, 1);
		}
		else if(szam == 12)
		{
			SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Pisztoly skilled: %d/%d", PlayerInfo[playerid][pFegyverSkillek][0],MAX_SKILLFEGYVER);
			SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Silenced Pisztoly skilled: %d/%d", PlayerInfo[playerid][pFegyverSkillek][1],MAX_SKILLFEGYVER);
			SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Deagle skilled: %d/%d", PlayerInfo[playerid][pFegyverSkillek][2],MAX_SKILLFEGYVER);
			SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Shotgun skilled: %d/%d", PlayerInfo[playerid][pFegyverSkillek][3],MAX_SKILLFEGYVER);
			SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Combat skilled: %d/%d", PlayerInfo[playerid][pFegyverSkillek][5],MAX_SKILLFEGYVER);
			SendFormatMessage(playerid,COLOR_LIGHTBLUE,"MP5 skilled: %d/%d", PlayerInfo[playerid][pFegyverSkillek][7],MAX_SKILLFEGYVER);
			SendFormatMessage(playerid,COLOR_LIGHTBLUE,"AK47 skilled: %d/%d", PlayerInfo[playerid][pFegyverSkillek][8],MAX_SKILLFEGYVER);
			SendFormatMessage(playerid,COLOR_LIGHTBLUE,"M4 skilled: %d/%d", PlayerInfo[playerid][pFegyverSkillek][9],MAX_SKILLFEGYVER);
			SendFormatMessage(playerid,COLOR_LIGHTBLUE,"Sniper skilled: %d/%d", PlayerInfo[playerid][pFegyverSkillek][10],MAX_SKILLFEGYVER);
		}
		else if(szam == 13)
		{
				
			new maxskillje = SkillLevel(PlayerInfo[playerid][pHackingSkill]) + SkillLevel(PlayerInfo[playerid][pDrugsSkill])+ SkillLevel(PlayerInfo[playerid][pJackSkill]) + SkillLevel(PlayerInfo[playerid][pBetoroSkill]);
			new levonas = 0;
			
			if(0 <= maxskillje < 5)
				levonas = 0;
			else if(5 <= maxskillje < 9)
				levonas =1;
			else if(9 <= maxskillje < 15)
				levonas =2;	
			else if(15 <= maxskillje < 20)
				levonas =3;
			else if(20 <= maxskillje < 30)
				levonas =4;	
			else if(30 <= maxskillje < 35)
				levonas =10;	
			else if(30 <= maxskillje < 45)
				levonas =20;	
			else if(45 <= maxskillje)
				levonas =25;	
			else 
				levonas =30;	
			
			new osszskill= 0;
			for(new x = 0; x <= 10; x++)
				osszskill += PlayerInfo[playerid][pFegyverSkillek][x]; 
			
		
			

			SendFormatMessage(playerid,COLOR_YELLOW,"[SKILL illegális] Óránkénti skill fogyás: Összes LEVEL %d - Pont fogyás: %d",maxskillje,levonas);
			/*switch(osszskill)
			{
				case 0..500: levonas = 15;
				case 501..2000: levonas = 30;
				case 2001..3000: levonas = 45;
				case 3001..4000: levonas = 60;
				case 4001..5000: levonas = 75;
				case 5001..6000: levonas = 90;
				case 6001..7000: levonas = 120;
				case 7001..8000: levonas = 150;
				case 8001..9000: levonas = 180;
				case 9001..10000: levonas = 240;
				case 10001..11000: levonas = 270;
				default: levonas = 300;
			}
			SendFormatMessage(playerid,COLOR_YELLOW,"[SKILL fegyver] Halál(megöltek) skill fogyás: Összes SKILL pontod %d - Pont fogyás: %d",osszskill,levonas);*/
		}
		else return SendClientMessage(playerid, COLOR_GREY, "1-13!");
	    return 1;
	}

	if(egyezik(cmd, "/árak") || egyezik(cmd, "/arak"))
	{
		if(!IsPlayerConnected(playerid)) return 1;
		if(params < 1)
		{
			if(MunkaLeader(playerid, FRAKCIO_OKTATO)) Msg(playerid, "/árak [jogosítványnév] [Ár]");
			SendClientMessage(playerid,COLOR_LIGHTRED,"Jogosítványok: Autó, Motor, Kamion, Repülõ, Hajó, Fegyver, Horgász");
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Auto Jogosítvány : %s Ft.", FormatNumber( Autojogsi, 0, ',' ));
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Motor Jogosítvány : %s Ft.", FormatNumber( Motorjogsi, 0, ',' ));
			SendFormatMessage(playerid,COLOR_LIGHTRED,"Hajó Jogosítvány : %s Ft.", FormatNumber( Hajojogsi, 0, ',' ));
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Kamion Jogosítvány : %s Ft.", FormatNumber(Kamionjogsi, 0, ',' ));
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Adr Jogosítvány : %s Ft.",  FormatNumber( Adrjogsi, 0, ',' ));
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Repülõ Jogosítvány : %s Ft.", FormatNumber( Repulojogsi, 0, ',' ));
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Helikopter Jogosítvány : %s Ft.", FormatNumber( Helijogsi, 0, ',' ));
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Fegyverengedély : %s Ft.", FormatNumber( Fegyverjogsi, 0, ',' ));
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Horgászengedély : %s Ft.", FormatNumber( Horgaszjogsi, 0, ',' ));
			return 1;
		}
		if(PlayerInfo[playerid][pLeader] != FRAKCIO_OKTATO) return Msg(playerid, "Csak Oktató Leader.");
		if(egyezik(param[1], "autó") || egyezik(param[1], "auto"))
		{
			if(params < 2) return Msg(playerid, "/árak Autó [ár]");
			new ar = strval(param[2]);
			if(ar < 1) return Msg(playerid, "NADEMICSINÁLSZ!!0.0");
			Autojogsi = ar;
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Sikeresen átírtad a jogosítvány árát erre: %s Ft.", FormatNumber( ar, 0, ',' ));

		}
		else if(egyezik(param[1], "motor"))
		{
			if(params < 2) return Msg(playerid, "/árak Motor [ár]");
			new ar = strval(param[2]);
			if(ar < 1) return Msg(playerid, "NADEMICSINÁLSZ!!0.0");
			Motorjogsi = ar;
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Sikeresen átírtad a jogosítvány árát erre: %s Ft.", FormatNumber( ar, 0, ',' ));
		}
		else if(egyezik(param[1], "kamion"))
		{
			if(params < 2) return Msg(playerid, "/árak Kamion [ár]");
			new ar = strval(param[2]);
			if(ar < 1) return Msg(playerid, "NADEMICSINÁLSZ!!0.0");
			Kamionjogsi = ar;
			SendFormatMessage(playerid,COLOR_LIGHTRED,"Sikeresen átírtad a jogosítvány árát erre: %s Ft.", FormatNumber( ar, 0, ',' ));
		}
		else if(egyezik(param[1], "adr"))
		{
			if(params < 2) return Msg(playerid, "/árak adr [ár]");
			new ar = strval(param[2]);
			if(ar < 1) return Msg(playerid, "NADEMICSINÁLSZ!!0.0");
			Adrjogsi = ar;
			SendFormatMessage(playerid,COLOR_LIGHTRED,"Sikeresen átírtad a jogosítvány árát erre:%s Ft.", FormatNumber( ar, 0, ',' ));
		}
		else if(egyezik(param[1], "repülõ") || egyezik(param[1], "repulo") || egyezik(param[1], "repülö"))
		{
			if(params < 2) return Msg(playerid, "/árak Repülõ [ár]");
			new ar = strval(param[2]);
			if(ar < 1) return Msg(playerid, "NADEMICSINÁLSZ!!0.0");
			Repulojogsi = ar;
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Sikeresen átírtad a jogosítvány árát erre:%s Ft.", FormatNumber( ar, 0, ',' ));
		}
		else if(egyezik(param[1], "helikopter") || egyezik(param[1], "heli"))
		{
			if(params < 2) return Msg(playerid, "/árak heli [ár]");
			new ar = strval(param[2]);
			if(ar < 1) return Msg(playerid, "NADEMICSINÁLSZ!!0.0");
			Helijogsi = ar;
			SendFormatMessage(playerid,COLOR_LIGHTRED, "Sikeresen átírtad a jogosítvány árát erre:%s Ft.", FormatNumber( ar, 0, ',' ));
		}
		else if(egyezik(param[1], "fegyver"))
		{
			if(params < 2) return Msg(playerid, "/árak Fegyver [ár]");
			new ar = strval(param[2]);
			if(ar < 1) return Msg(playerid, "NADEMICSINÁLSZ!!0.0");
			Fegyverjogsi = ar;
			SendFormatMessage(playerid, COLOR_LIGHTRED, "Sikeresen átírtad az engedély árát erre:%s Ft.", FormatNumber( ar, 0, ',' ));
		}
		else if(egyezik(param[1], "horgász") || egyezik(param[1], "horgasz"))
		{
			if(params < 2) return Msg(playerid, "/árak Horgász [ár]");
			new ar = strval(param[2]);
			if(ar < 1) return Msg(playerid, "NADEMICSINÁLSZ!!0.0");
			Horgaszjogsi = ar;
			SendFormatMessage(playerid, COLOR_LIGHTRED, "Sikeresen átírtad a engedély árát erre: %s Ft.", FormatNumber( ar, 0, ',' ));
		}
		else if(egyezik(param[1], "hajó") || egyezik(param[1], "hajo"))
		{
			if(params < 2) return Msg(playerid, "/árak Hajó [ár]");
			new ar = strval(param[2]);
			if(ar < 1) return Msg(playerid, "NADEMICSINÁLSZ!!0.0");
			Hajojogsi = ar;
			SendFormatMessage(playerid, COLOR_LIGHTRED, "Sikeresen átírtad a jogosítvány árát erre: %s Ft.", FormatNumber( ar, 0, ',' ));
		}
		else
		{
			Msg(playerid, "Ilyen Jogosítványról még nem hallotam..ellenõrizd hogy jól irtad be!");
			return 1;
		}
		SaveStuff();
	}

	if(egyezik(cmd, "/ram"))
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(IsACop(playerid) || Admin(playerid, 1337))
            {
	            new hazak = sizeof(HouseInfo);
                for(new i = 0; i < hazak; i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
						
						
					    new HazBelso = HouseInfo[i][hBelso];
					    SetPlayerInterior(playerid,IntInfo[HazBelso][iNumber]);
						SetPlayerVirtualWorld(playerid, i);

						SetPlayerPos(playerid,IntInfo[HazBelso][iExitX],IntInfo[HazBelso][iExitY],IntInfo[HazBelso][iExitZ]);
						GameTextForPlayer(playerid, "~r~Betortel a hazba", 5000, 1);
						Cselekves(playerid, "betörte a ház ajtaját", 1);
						PlayerInfo[playerid][pLocal] = i;
						HouseInfo[i][hLock] = 0;
						Format(_tmpString, "[/ram] %s - %d-s ház", PlayerName(playerid), i);
						EgyebLog(_tmpString);
						SendRadioMessageFormat(FRAKCIO_FBI, TEAM_AZTECAS_COLOR, "** [Figyelem] %s behatolt Class út %d házba!", PlayerName(playerid), i);
						//SendRadioMessageFormat(FRAKCIO_CIA, TEAM_AZTECAS_COLOR, "** [Figyelem] %s behatolt Class út %d házba!", PlayerName(playerid), i);
					}
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Nem vagy rendõr!");
			    return 1;
            }
		}
		return 1;
	}
	/*if(egyezik(cmd, "/camera"))
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(IsACop(playerid))
            {
                if(!PlayerToPoint(8.0,playerid,211.6222,1811.9565,21.8594)) return SendClientMessage(playerid, COLOR_GREY, "   You are not at the Area51 Security Panel !");
				if(params < 1) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /camera [number 1 - 6]  (6 = OFF)");
				new number = strval(param[1]);
				if(number < 1 || number > 6) return SendClientMessage(playerid, COLOR_GREY, "   Camera Number can't be below 1 or above 6 !");
				TogglePlayerControllable(playerid, 0);
				GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
				if(number == 1) { SetPlayerCameraPos(playerid, 118.1011,1931.3221,22.5527); SetPlayerCameraLookAt(playerid, 98.9656,1920.9819,18.2180); }
				else if(number == 2) { SetPlayerCameraPos(playerid, 213.5340,1875.3075,17.6406); SetPlayerCameraLookAt(playerid, 213.8679,1884.1714,13.8945); }
				else if(number == 3) { SetPlayerCameraPos(playerid, 266.0640,1894.8856,38.6459); SetPlayerCameraLookAt(playerid, 224.0039,1887.1532,17.6406); }
				else if(number == 4) { SetPlayerCameraPos(playerid, 260.8112,1808.0175,38.6303); SetPlayerCameraLookAt(playerid, 227.5645,1818.4778,17.6406); }
				else if(number == 5) { SetPlayerCameraPos(playerid, 114.5196,1814.3483,38.6029); SetPlayerCameraLookAt(playerid, 123.6176,1846.4792,17.6549); }
				else if(number == 6)
				{
				    KorhazIdo[playerid] = NINCS;
					TogglePlayerControllable(playerid, 1);
					SetSpawnInfo(playerid, SPAWNID, PlayerInfo[playerid][pModel], Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(playerid);
				}
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Nem vagy rendõr");
		}
		return 1;
	}*/
	if(egyezik(cmd,"/divorce") || egyezik(cmd,"/elválás") || egyezik(cmd,"/elvalas"))
	{
		if(PlayerInfo[playerid][pMarried] < 1) return SendClientMessage(playerid, COLOR_GREY, "   Nem vagy házas !");
		if(params < 1) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /elválás [Játékos]");
		giveplayerid = ReturnUser(param[1]);
		if(IsPlayerConnected(giveplayerid))
		{
		    if(giveplayerid != INVALID_PLAYER_ID)
		    {
		        if (GetDistanceBetweenPlayers(playerid, giveplayerid) < 8.0)
				{
				    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Nem válhatsz el magadtól!"); return 1; }
				    new dstring[MAX_PLAYER_NAME];
					new wstring[MAX_PLAYER_NAME];
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s", giveplayer);
					strmid(wstring, string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
					strmid(dstring, string, 0, strlen(string), 255);
					if(egyezik(dstring ,wstring))
					{
					    SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elküldted a válási papírokat neki: %s.", giveplayer);
						SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s elküldte a válási papírokat. Ha el akarsz válni: /accept divorce.", sendername);
				        DivorceOffer[giveplayerid] = playerid;
				        return 1;
					}
					else return SendClientMessage(playerid, COLOR_GREY, "   Nem is ismered!");
				}
				else return SendClientMessage(playerid, COLOR_GREY, "   A játékos nincs a közeledben !");
		    }
		}
		else return SendClientMessage(playerid, COLOR_GREY, "   A játékos nincs a szerveren!");
		return 1;
	}

	if(egyezik(cmd,"/propose") || egyezik(cmd,"/házasság") || egyezik(cmd,"/hazassag"))
	{
        if(GetMoney(playerid) < 100000) return SendClientMessage(playerid, COLOR_GREY, "   A házasság költségei 100000Ft !");
        if(PlayerInfo[playerid][pMarried] > 0) return SendClientMessage(playerid, COLOR_GREY, "   Már házas vagy !");
		if(params < 1) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /házasság [Játékos]");
		giveplayerid = ReturnUser(param[1]);
	    if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "   A játékos nincs a szerveren!");
		if(PlayerInfo[giveplayerid][pMarried] > 0) return SendClientMessage(playerid, COLOR_GREY, "   Ez a játékos már házas !");
		if(GetDistanceBetweenPlayers(playerid, giveplayerid) > 8.0) return SendClientMessage(playerid, COLOR_GREY, "   A játékos nincs a közeledben !");
		if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Nem veheted el magad!");
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Megkérdted %s kezét.", ICPlayerName(giveplayerid));
		SendFormatMessage(giveplayerid, COLOR_LIGHTBLUE, "* %s megkérte a kezed (írd /accept marriage) hogy elfogadd.", ICPlayerName(playerid));
		ProposeOffer[giveplayerid] = playerid;
		return 1;
	}
	if(egyezik(cmd,"/witness") || egyezik(cmd,"/tanu"))
	{
		if(params < 1) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /tanu [Játékos]");
		giveplayerid = ReturnUser(param[1]);
	    if(IsPlayerConnected(giveplayerid))
		{
		    if(giveplayerid != INVALID_PLAYER_ID)
		    {
		        if (GetDistanceBetweenPlayers(playerid, giveplayerid) < 8.0)
				{
				    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Nem lehetsz a saját tanud!");
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Megkérted %s-t hogy legyen a tanud.", ICPlayerName(giveplayerid));
					SendFormatMessage(giveplayerid, COLOR_LIGHTBLUE, "* %s megkért hogy legyél a tanuja (írd /accept witness) hogy elfogadd.", sendername);
			        MarryWitnessOffer[giveplayerid] = playerid;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "   Ez a játékos nincs melleted !");
		    }
		}
		else return SendClientMessage(playerid, COLOR_GREY, "   Ez a játékos nincs fent !");
	    return 1;
	}
	if(egyezik(cmd,"/irc"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			Msg(playerid, "Az IRC IC RÁDIÓ! OOC célokra nem használható!");
			if(params < 1)
			{
				SendClientMessage(playerid,  COLOR_UJIRC, "Használat: (/irc join [csatorna] vagy /irc join [csatorna] [jelszó])  (/irc kilép)  (/irc tulaj)");
				SendClientMessage(playerid,  COLOR_UJIRC, "Használat: /irc [csatorna] [funkció]");
				SendClientMessage(playerid, COLOR_UJIRC, "Bérlés: bérel hosszabít idõ");
				SendClientMessage(playerid, COLOR_UJIRC, "Választható: felirat, jelszó, jelszókell, zár, kirúg, stat, kitilt");
				return 1;
			}
		    if(egyezik(param[1], "join") || egyezik(param[1], "csatlakozás") || egyezik(param[1], "csatlakozas") || egyezik(param[1], "belep") || egyezik(param[1], "belép"))
			{
				new van = NINCS;
				for(new i = 0; i < MAXIRC; i++)
				{
					if(IRCInfo[i][iAdminID] == SQLID(playerid)) van = i;
				}

				new channel, pass[128];
			    if(sscanf(pms, "{s[32]}D(-1)S()[128]", channel, pass))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc join [csatorna (opcionális)] [jelszó (opcionális)]");
				    return 1;
				}

				if(channel == NINCS)
				{
					if(van != NINCS) channel = van;
					else return SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc join [csatorna (opcionális)] [jelszó (opcionális)]");
				}

				if(channel < 0 || channel >= MAXIRC)
					return Msg(playerid, "Nincs ilyen channel");
					
				if(IRCBanRoom[playerid] == channel)
					return SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Te ebbõl a csatornáról bannolva vagy még %d másodpercig", IRCBanTime[playerid]-UnixTime);

			    if(IRCInfo[channel][iLock] == 0)
			    {
			        if(IRCInfo[channel][iNeedPass] == 0)
			            JoinChannelNr(playerid, channel);
				    else
				    {
						if(strlen(pass) && strlen(IRCInfo[channel][iPassword]) && egyezik(pass, IRCInfo[channel][iPassword]))
							JoinChannelNr(playerid, channel);
						else
							Msg(playerid, "Rossz jelszó!");
				    }
			    }
			    else return SendClientMessage(playerid, COLOR_GREY, "  Ez levan zárva, használj egy másikat");
			}
			/*else if(egyezik(param[1], "status"))
			{
			    for(new i = 0; i < MAXIRC; i++)
			        SendFormatMessage(playerid, COLOR_WHITE, "Channel %d: %d játékos kapcsolódva.", i, IRCInfo[i][iPlayers]);
			    return 1;
			}*/
			else if(egyezik(param[1], "status") || egyezik(param[1], "allapot") || egyezik(param[1], "állapot") || egyezik(param[1], "st") || egyezik(param[1], "stat"))
			{
				new channel;
				if(params < 2)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc status [irc szám]");
					return 1;
				}
			    if(sscanf(pms, "{s[32]}D(-1)", channel))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc status [irc szám]");
				    return 1;
				}
				SendFormatMessage(playerid, COLOR_WHITE, "Channel %d: %d játékos kapcsolódva.", channel, IRCInfo[channel][iPlayers]);
				
			    return 1;
			}
			else if(egyezik(param[1],"password") || egyezik(param[1],"pass") || egyezik(param[1],"jelszo") || egyezik(param[1],"jelszó") || egyezik(param[1],"pw"))
			{
				new van = NINCS;
				for(new i = 0; i < MAXIRC; i++)
				{
					if(IRCInfo[i][iAdminID] == SQLID(playerid)) van = i;
				}

				new channel, pass[128];
			    if(sscanf(pms, "{s[32]}D(-1)s[128]", channel, pass))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc password [csatorna (opcionális)] [jelszó]");
				    return 1;
				}

				if(channel == NINCS)
				{
					if(van != NINCS) channel = van;
					else return SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc password [csatorna (opcionális)] [jelszó]");
				}

				if(channel < 0 || channel >= MAXIRC)
					return Msg(playerid, "Nincs ilyen csatorna");

				if(IRCInfo[channel][iAdminID] == SQLID(playerid) || Admin(playerid, 3))
				{
					if(strfind(pass, "|") != NINCS)
						return Msg(playerid, "Hibás karakterek a szövegben");

					strmid(IRCInfo[channel][iPassword], pass, 0, strlen(pass), 255);
					format(string, sizeof(string), " Átírtad az IRC csatorna jelszavát erre: %s",IRCInfo[channel][iPassword]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Nem vagy IRC admin");
				    return 1;
				}
			}
			else if(egyezik(param[1], "info"))
			{
				new van = NINCS;
				for(new i = 0; i < MAXIRC; i++)
				{
					if(IRCInfo[i][iAdminID] == SQLID(playerid)) van = i;
				}

				new channel;
			    if(sscanf(pms, "{s[32]}D(-1)", channel))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc info [csatorna (opcionális)]");
				    return 1;
				}

				if(channel == NINCS)
				{
					if(van != NINCS) channel = van;
					else return SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc info [csatorna (opcionális)]");
				}

				if(channel < 0 || channel >= MAXIRC)
					return Msg(playerid, "Nincs ilyen csatorna");

				SendFormatMessage(playerid, COLOR_WHITE, "=====[ %d. csatorna ]=====", van);
				SendFormatMessage(playerid, COLOR_WHITE, "- Admin: %s", IRCInfo[channel][iAdmin]);
				SendFormatMessage(playerid, COLOR_WHITE, "- Felirat: %s", IRCInfo[channel][iMOTD]);
				if(IRCInfo[channel][iLock]) Msg(playerid, "- Zárolt csatorna", false, COLOR_WHITE);
				if(IRCInfo[channel][iNeedPass])
				{
					if(channel == van) SendFormatMessage(playerid, COLOR_WHITE, "- Jelszóval lezárt csatorna: \"%s\"", IRCInfo[channel][iPassword]);
					else Msg(playerid, "- Jelszóval lezárt csatorna", false, COLOR_WHITE);
				}

				return 1;
			}
			else if(egyezik(param[1],"idõ") || egyezik(param[1],"ido"))
			{
				new id = NINCS;
				for(new i = 0; i < MAXIRC; i++)
				{
					if(IRCInfo[i][iAdminID] == SQLID(playerid)) 
						id = i;
					
				}
				if(id == NINCS)
					return Msg(playerid, "Neked nincs bérelt csatornád!");

				new regiido = floatround(float((IRCInfo[id][iIdo] - UnixTime)) / 86400.0);
				
				if(IsTerno(playerid))
					SendFormatMessage(playerid,COLOR_YELLOW,"%d - %d = %d [%d]",IRCInfo[id][iIdo],UnixTime,regiido,id);
					
				SendFormatMessage(playerid, COLOR_WHITE, "Hátra maradt idõ: %d nap",regiido);
				return 1;
				
			
			}
			else if(egyezik(param[1], "hosszabít") || egyezik(param[1],"hosszabit"))
			{
				new id = NINCS;
				for(new i = 0; i < MAXIRC; i++)
				{
					if(IRCInfo[i][iAdminID] == SQLID(playerid)) id = i;
					
				}
				if(id == NINCS)
					return Msg(playerid, "Neked nincs bérelt csatornád!");
			
				
				
				new regiido = floatround(float((IRCInfo[id][iIdo] - UnixTime)) / 86400.0);
				
				if(IsTerno(playerid))
					SendFormatMessage(playerid,COLOR_YELLOW,"%d - %d = %d",IRCInfo[id][iIdo],UnixTime,regiido);
					
				new ido;
				if(sscanf(pms, "{s[32]}d", ido))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc hosszabít idõ");
					SendClientMessage(playerid, COLOR_WHITE, "* idõ = nap, Ára: 10.000 / nap");
					SendFormatMessage(playerid, COLOR_WHITE, "Hátra maradt idõ: %d nap",regiido);
				    return 1;
				}
				
			
				if(1 < ido+regiido > 60) return Msg(playerid, "1 - 60 nap-ra bérelhetõ a jelenlegi napokkal együtt");
				
				if(!PenzLevesz(playerid, ido*10000)) return SendFormatMessage(playerid, COLOR_LIGHTRED, "A bérlés ára 10.000 ft / nap. %d nap %s Ft!",ido, FormatInt(ido*10000));
				
				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Sikeresen hosszabítottad a %d. számú channelt %d napal %s Ft-ért. Hátralévõ napok %d nap. A channel kezelése: /irc", id, ido,FormatInt(ido*10000), ido+regiido);
				Cselekves(playerid, "hosszabított egy channelt");
				IRCInfo[id][iIdo] = UnixTime + (86400 * (ido+regiido));
				
				SaveIRC();
			}
			else if(egyezik(param[1], "bérel") || egyezik(param[1], "berel"))
			{
				new van = NINCS, id = NINCS;
				for(new i = 0; i < MAXIRC; i++)
				{
					if(IRCInfo[i][iAdminID] == SQLID(playerid)) van = i;
					if(IRCInfo[i][iAdminID] <= 0) id = i;
				}
				if(van != NINCS)
					return Msg(playerid, "Neked már van egy bérelt channeled");

				if(id == NINCS) return Msg(playerid, "Jelenleg nincs szabad channel");
				
				new ido;
				if(sscanf(pms, "{s[32]}D", ido))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc bérel idõ");
					SendClientMessage(playerid, COLOR_WHITE, "* idõ = nap, Ára: 10.000 / nap");
				    return 1;
				}
				
				if(1 < ido > 60) return Msg(playerid, "1 - 60 nap-ra bérelhetõ");
				
				if(!PenzLevesz(playerid, ido*10000)) return SendFormatMessage(playerid, COLOR_LIGHTRED, "A bérlés ára 10.000 ft / nap. %d nap %s Ft!",ido, FormatInt(ido*10000));

				strmid(IRCInfo[id][iAdmin], PlayerName(playerid), 0, strlen(PlayerName(playerid)), 24);
				IRCInfo[id][iAdminID] = SQLID(playerid);
				strmid(IRCInfo[id][iMOTD], "Nem rég bérelt channel", 0, 22, 128);

				IRCInfo[id][iPassword][0] = EOS;
				IRCInfo[id][iNeedPass] = 0;
				IRCInfo[id][iLock] = 1;
				IRCInfo[id][iIdo] = UnixTime + (86400 * ido);

				SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Sikeresen kibérelted a %d. számú channelt %d napra %s Ft-ért. A channel kezelése: /irc", id, ido,FormatInt(ido*10000));
				Cselekves(playerid, "bérelt egy channelt");

				SaveIRC();
				return 1;
			}
			else if(egyezik(param[1], "reset") || egyezik(param[1], "nullaz") || egyezik(param[1], "nulláz") && (Admin(playerid, 1337) || IsScripter(playerid)))
			{
				if(params < 2)
					return Msg(playerid, "Használat: /irc reset [channel]");

				new channel = strval(param[2]);
				if(channel < 0 || channel >= MAXIRC)
					return Msg(playerid, "Nincs ilyen IRC channel");

				strmid(IRCInfo[channel][iAdmin], "Nincs", 0, 5, 24);
				IRCInfo[channel][iAdminID] = 0;
				strmid(IRCInfo[channel][iMOTD], "Üres channel", 0, 12, 128);

				IRCInfo[channel][iPassword][0] = EOS;
				IRCInfo[channel][iNeedPass] = 0;
				IRCInfo[channel][iLock] = 1;
				IRCInfo[channel][iIdo] = NINCS;

				Msg(playerid, "Resetelve");
				SaveIRC();
				return 1;
			}
			else if(egyezik(param[1],"needpass") || egyezik(param[1],"jelszókell") || egyezik(param[1],"jelszokell"))
			{
				new van = NINCS;
				for(new i = 0; i < MAXIRC; i++)
				{
					if(IRCInfo[i][iAdminID] == SQLID(playerid)) van = i;
				}

				new channel;
			    if(sscanf(pms, "{s[32]}D(-1)", channel))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc needpass [channel (opcionális)]");
				    return 1;
				}

				if(channel == NINCS)
				{
					if(van != NINCS) channel = van;
					else return SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc needpass [channel (opcionális)]");
				}

				if(channel < 0 || channel >= MAXIRC)
					return Msg(playerid, "Nincs ilyen channel");

				if(IRCInfo[channel][iAdminID] == SQLID(playerid) || Admin(playerid, 3))
				{
				    if(IRCInfo[channel][iNeedPass] != 0)
				    {
				        IRCInfo[channel][iNeedPass] = 0;
				        SendClientMessage(playerid, COLOR_YELLOW, " A szobához már nem kell jelszó");
				    }
					else
					{
					    IRCInfo[channel][iNeedPass] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, " A szobához most már jelszó kell");
					}
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Nem vagy IRC admin");
				    return 1;
				}
			}
			else if(egyezik(param[1],"lock") || egyezik(param[1],"zar") || egyezik(param[1],"zár"))
			{
				new van = NINCS;
				for(new i = 0; i < MAXIRC; i++)
				{
					if(IRCInfo[i][iAdminID] == SQLID(playerid)) van = i;
				}

				new channel;
			    if(sscanf(pms, "{s[32]}D(-1)", channel))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc lock [channel (opcionális)]");
				    return 1;
				}

				if(channel == NINCS)
				{
					if(van != NINCS) channel = van;
					else return SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc lock [channel (opcionális)]");
				}

				if(channel < 0 || channel >= MAXIRC)
					return Msg(playerid, "Nincs ilyen channel");

				if(IRCInfo[channel][iAdminID] == SQLID(playerid) || Admin(playerid, 3))
				{
				    if(IRCInfo[channel][iLock] != 0)
				    {
				        IRCInfo[channel][iLock] = 0;
				        SendClientMessage(playerid, COLOR_YELLOW, " Feloldottad az IRC csatornát");
				    }
					else
					{
					    IRCInfo[channel][iLock] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, " Lezártad az IRC csatornát");
					}
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Nem vagy IRC admin");
				    return 1;
				}
			}
			else if(egyezik(param[1], "motd") || egyezik(param[1], "felirat"))
			{
				new van = NINCS;
				for(new i = 0; i < MAXIRC; i++)
				{
					if(IRCInfo[i][iAdminID] == SQLID(playerid)) van = i;
				}

				new channel, motd[128];
			    if(sscanf(pms, "{s[32]}D(-1)s[128]", channel, motd))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc motd [channel (opcionális)] [motdtext]");
				    return 1;
				}

				if(channel == NINCS)
				{
					if(van != NINCS) channel = van;
					else return SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc motd [channel (opcionális)] [motdtext]");
				}

				if(channel < 0 || channel >= MAXIRC)
					return Msg(playerid, "Nincs ilyen channel");

				if(IRCInfo[channel][iAdminID] == SQLID(playerid) || Admin(playerid, 3))
				{
					if(strfind(motd, "|") != NINCS)
						return Msg(playerid, "Hibás karakterek a szövegben");

					strmid(IRCInfo[channel][iMOTD], motd, 0, strlen(motd), 255);
					SendClientMessage(playerid, COLOR_YELLOW, " Átirtad az IRC üdvözlõüzenetet");
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Nem vagy IRC admin");
				    return 1;
				}
			}
			else if(egyezik(param[1],"leave") || egyezik(param[1],"kilépés")|| egyezik(param[1],"kilepes"))
			{
			    if(PlayersChannel[playerid] < 999)
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        format(string, sizeof(string), "* %s kilépett a channelrõl.", sendername);
			        SendMessage(SEND_MESSAGE_IRC, string, COLOR_GREEN, PlayersChannel[playerid]);
			        IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
			        PlayersChannel[playerid] = 999;
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Nem vagy IRC csatornán!");
			        return 1;
			    }
			}
			/*else if(egyezik(param[1],"admins"))
			{
				for(new i = 0; i < sizeof(IRCInfo); i++)
			    {
				    format(string, sizeof(string), "Channel %d: %s.", i + 1, IRCInfo[i][iAdmin]);
				    SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			    return 1;
			}*/
			else if(egyezik(param[1],"admins") || egyezik(param[1],"admin") || egyezik(param[1],"tulaj") || egyezik(param[1],"tulajok"))
			{
				new channel;
				if(params < 2)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc admin(s) [irc szám]");
					return 1;
				}
			    if(sscanf(pms, "{s[32]}D(-1)", channel))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc admin(s) [irc szám]");
				    return 1;
				}
				format(string, sizeof(string), "Catorna: %d: %s.", channel, IRCInfo[channel][iAdmin]);
				SendClientMessage(playerid, COLOR_WHITE, string);
			    return 1;
			}
			else if(egyezik(param[1],"kick") || egyezik(param[1],"kirúg") || egyezik(param[1],"kirug"))
			{
			    if(PlayersChannel[playerid] == 999)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Nem vagy IRC csatornán!");
			        return 1;
			    }

				if(IRCInfo[PlayersChannel[playerid]][iAdminID] == SQLID(playerid) || Admin(playerid, 3))
				{
				    if(params < 2)
					{
					    SendClientMessage(playerid, COLOR_WHITE, "Használat: /irc kirug [playerid/névrészlet]");
					    return 1;
					}
					giveplayerid = ReturnUser(param[2]);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayersChannel[giveplayerid] == PlayersChannel[playerid])
					        {
					            GetPlayerName(playerid, sendername, sizeof(sendername));
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "* Kirúgtad az IRC channelrõl: %s",giveplayer);
					            SendClientMessage(playerid, COLOR_YELLOW, string);
					            format(string, sizeof(string), "* Kirúgtak az IRC channelrõl: %s.",sendername);
					            SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					            format(string, sizeof(string), "* %s kilépett (Kirúgva).", giveplayer);
						        SendMessage(SEND_MESSAGE_IRC, string, COLOR_GREEN, PlayersChannel[playerid]);
					            IRCInfo[PlayersChannel[giveplayerid]][iPlayers] -= 1;
					            PlayersChannel[giveplayerid] = 999;
					        }
					        else
					        {
					            SendClientMessage(playerid, COLOR_GREY, "  A játékos nincs az IRC channelen");
							    return 1;
					        }
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Nincs ilyen játékos");
					    return 1;
					}
                }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Nem vagy IRC admin!");
				    return 1;
				}
			}
			elseif(egyezik(param[1], "ban") || egyezik(param[1], "kitilt"))
			{
				new kit, ido;
				if(PlayersChannel[playerid] == 999) return Msg(playerid, "Nem vagy IRC channelen!");
				if(IRCInfo[PlayersChannel[playerid]][iAdminID] != SQLID(playerid) && !Admin(playerid, 3)) return Msg(playerid, "Nem vagy IRC admin!");
				if(sscanf(pms, "{s[32]}rd", kit, ido)) return Msg(playerid, "/irc ban [Játékos/ID] [Idõ, percben (1-15)]");
				if(kit == INVALID_PLAYER_ID) return Msg(playerid, "Nem létezõ játékosnév/id");
				if(ido < 1 || ido > 15) return Msg(playerid, "Az idõt percben kell megadni, és 1-15 perc között lehet!");
				if(IRCBanRoom[kit] != NINCS) return Msg(playerid, "Õ már banned valahonnan!");
				if(PlayersChannel[kit] != PlayersChannel[playerid]) return Msg(playerid, "A játékos nem a te IRC csatornádon van!");
				SendFormatMessage(playerid, COLOR_YELLOW, "* Kibannoltad %s-t %d percre az IRC channelrõl.", ICPlayerName(kit), ido);
				SendFormatMessage(kit, COLOR_YELLOW, "* %s kibannolt %d percre az IRC channelérõl.", ICPlayerName(playerid), ido);
				format(string, sizeof(string), "* %s bannolva lett %d percre %s által.", ICPlayerName(kit), ido, ICPlayerName(playerid));
				SendMessage(SEND_MESSAGE_IRC, string, COLOR_GREEN, PlayersChannel[playerid]);
				IRCInfo[PlayersChannel[kit]][iPlayers] -= 1;
				IRCBanRoom[kit] = PlayersChannel[kit];
				IRCBanTime[kit] = UnixTime+ido*60;
				PlayersChannel[kit] = 999;
			}
			elseif(egyezik(param[1], "unban"))
			{
				new kit;
				if(PlayersChannel[playerid] == 999) return Msg(playerid, "Nem vagy IRC csatornán!");
				if(IRCInfo[PlayersChannel[playerid]][iAdminID] != SQLID(playerid) && !Admin(playerid, 3)) return Msg(playerid, "Nem vagy IRC admin!");
				if(sscanf(pms, "{s[32]}r", kit)) return Msg(playerid, "/irc unban [Játékos/ID]");
				if(kit == INVALID_PLAYER_ID) return Msg(playerid, "Nem létezõ játékosnév/id");
				if(IRCBanRoom[kit] != PlayersChannel[playerid]) return Msg(playerid, "Nem a te csatonádról van tiltva!");
				SendFormatMessage(playerid, COLOR_YELLOW, "* Feloldottad %s tiltását.", ICPlayerName(kit));
				SendFormatMessage(kit, COLOR_YELLOW, "* %s Feloldotta az IRC csatona tiltásod.", ICPlayerName(playerid));
				format(string, sizeof(string), "* %s csatorna tiltása feloldva %s által.", ICPlayerName(kit), ICPlayerName(playerid));
				SendMessage(SEND_MESSAGE_IRC, string, COLOR_GREEN, PlayersChannel[playerid]);
				IRCBanRoom[kit] = NINCS;
				IRCBanTime[kit] = NINCS;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Hibás IRC channel!");
			    return 1;
			}
		}
		return 1;
 	}
 	if(strcmp(cmd,"/i",true)==0)
	{
		if(PlayerCuffed[playerid] || Leutve[playerid] || PlayerTied[playerid]) return Msg(playerid, "Ilyenkor hogy akarsz a rádióba beszélni?");
		if(PlayerInfo[playerid][pMuted] == 1) return SendClientMessage(playerid, TEAM_CYAN_COLOR, "Nem beszélhetsz, néma vagy!");
		 
		if(Bortonben(playerid)) return Msg(playerid, "Börtönben nem lehet!");
            
		if(KorhazIdo[playerid] > 0) return Msg(playerid, "Nem vagy eszméletednél!");
		
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayersChannel[playerid] == 999) return SendClientMessage(playerid, COLOR_GREY, "   Nem vagy IRC csatornán!");
	       
		   
		   
			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /i [IC Rádió üzeneted]");

			if(SzovegEllenorzes(playerid, result, "/i", ELLENORZES_MINDKETTO))
				return 1;

			if(PlayerInfo[playerid][pHamisNev] == 0)
				format(string, sizeof(string), "** [IRC]%s: %s. **", ICPlayerName(playerid), result);
			else
				format(string, sizeof(string), "** [IRC]%s: %s. **", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]), result);
			SendMessage(SEND_MESSAGE_IRC, string, COLOR_UJIRC, PlayersChannel[playerid]);
			format(string, sizeof(string), "[IRC]Valaki mondja: %s", result);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	    }
	    return 1;
	}


	
	if(egyezik(cmd,"/setfactiontax") || egyezik(cmd,"/frakcióadó"))
    {
		Msg(playerid, "/kormány");
	
		return 1;
	}
	if(strcmp(cmd,"/givetax",true)==0)
    {
		Msg(playerid, "/kormány");
	
		return 1;
	}

	if(egyezik(cmd, "/rabok") || egyezik(cmd, "/fegyencek"))
	{
		if(!IsACop(playerid) && !Admin(playerid, 1) && !IsScripter(playerid)) return Msg(playerid, "Nem vagy rendvédelmi szervezet tagja.");
		SendClientMessage(playerid, COLOR_GREEN, "=====[ Rablista ]=====");
		new rabok; foreach(Jatekosok, p)
		{
			if(PlayerInfo[p][pJailed] == 7 && PlayerInfo[p][pJailTime] > 0)
			{
				if(PlayerInfo[p][pOvadek] > 0)
					SendFormatMessage(playerid, COLOR_WHITE, "Név: %s | Idõ: %dmp(~%dp) | Óvadék: %s | Vád: %s", ICPlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)), FormatNumber( PlayerInfo[p][pOvadek], 0, ',' ), PlayerInfo[p][pJailOK]);
				else
					SendFormatMessage(playerid, COLOR_WHITE, "Név: %s | Idõ: %dmp(%dp) | Óvadék: Nincs | Vád: %s", ICPlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)), PlayerInfo[p][pJailOK]);
				rabok++;
			}
		}
		if(rabok == 0) Msg(playerid, "Nincsen egyetlen rab sem lecsukva.", false, COLOR_WHITE);
		else SendClientMessage(playerid, COLOR_GREEN, "=====[ Rablista ]=====");
		/*if(params != 1) return Msg(playerid, "/rabok [LSPD / NAV / FBI / Fegyenctelep]");
		if(egyezik(param[1], "lspd"))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "========== Rabok LSPD börtönben ==========");
	        for(new p = 0; p < MAX_PLAYERS; p++)
	        {
				if(!IsPlayerConnected(p) || !Logged(p)) continue;
	            if(PlayerInfo[p][pJailed] == 1 && PlayerInfo[p][pJailTime] > 0)
	            {
	                if(PlayerInfo[p][pOvadek] > 0)
		                format(string, sizeof(string), "Név: %s | Idõ: %dmp(%dp) | Óvadék:%s | Oka: %s", ICPlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)), FormatNumber( PlayerInfo[p][pOvadek], 0, ',' ), PlayerInfo[p][pJailOK]);
					else
					    format(string, sizeof(string), "Név: %s | Idõ: %dmp(%dp) | Óvadék:Nincs | Oka: %s", ICPlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)), PlayerInfo[p][pJailOK]);
	                SendClientMessage(playerid, COLOR_YELLOW, string);
	            }
	        }
		}
		else if(egyezik(param[1], "nav"))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "========== Rabok NAV börtönben ==========");
	        for(new p = 0; p < MAX_PLAYERS; p++)
	        {
				if(!IsPlayerConnected(p) || !Logged(p)) continue;
	            if(PlayerInfo[p][pJailed] == 4 && PlayerInfo[p][pJailTime] > 0)
	            {
	                if(PlayerInfo[p][pOvadek] > 0)
		                format(string, sizeof(string), "Név: %s | Idõ: %dmp(%dp) | Óvadék:%s | Oka: %s", ICPlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)),  FormatNumber( PlayerInfo[p][pOvadek], 0, ',' ), PlayerInfo[p][pJailOK]);
					else
					    format(string, sizeof(string), "Név: %s | Idõ: %dmp(%dp) | Óvadék:Nincs | Oka: %s", ICPlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)), PlayerInfo[p][pJailOK]);
	                SendClientMessage(playerid, COLOR_YELLOW, string);
	            }
	        }
		}
		else if(egyezik(param[1], "fbi"))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "========== Rabok FBI börtönben ==========");
	        for(new p = 0; p < MAX_PLAYERS; p++)
	        {
				if(!IsPlayerConnected(p) || !Logged(p)) continue;
	            if(PlayerInfo[p][pJailed] == 5 && PlayerInfo[p][pJailTime] > 0)
	            {
	                if(PlayerInfo[p][pOvadek] > 0)
		                format(string, sizeof(string), "Név: %s | Idõ: %dmp(%dp) | Óvadék:%s | Oka: %s", ICPlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)),  FormatNumber( PlayerInfo[p][pOvadek], 0, ',' ), PlayerInfo[p][pJailOK]);
					else
					    format(string, sizeof(string), "Név: %s | Idõ: %dmp(%dp) | Óvadék:Nincs | Oka: %s", ICPlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)), PlayerInfo[p][pJailOK]);
	                SendClientMessage(playerid, COLOR_YELLOW, string);
	            }
	        }
		}
		else if(egyezik(param[1], "fegyenctelep"))
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "========== Rabok a Class City fegyenctelepen ==========");
	        foreach(Jatekosok, p)
	        {
	            if(PlayerInfo[p][pJailed] == 7 && PlayerInfo[p][pJailTime] > 0)
				{
					if(PlayerInfo[p][pOvadek] > 0)
						SendFormatMessage(playerid, COLOR_YELLOW, "Név: %s | Idõ: %dmp(~%dp) | Óvadék: %s | Vád: %s", ICPlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)), FormatNumber( PlayerInfo[p][pOvadek], 0, ',' ), PlayerInfo[p][pJailOK]);
					else
					   SendFormatMessage(playerid, COLOR_YELLOW, "Név: %s | Idõ: %dmp(%dp) | Óvadék: Nincs | Vád: %s", ICPlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)), PlayerInfo[p][pJailOK]);
				}
	        }
		}*/
		return true;
	}

	if(strcmp(cmd, "/ajailosok", true) == 0)
	{
    	if(IsPlayerConnected(playerid))
	    {
	        if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;

	        SendClientMessage(playerid, COLOR_LIGHTBLUE, "========== Admin Jailosok ==========");
	        for(new p = 0; p < MAX_PLAYERS; p++)
	        {
				if(!IsPlayerConnected(p) || !Logged(p)) continue;
	            if(PlayerInfo[p][pJailed] == 3 && PlayerInfo[p][pJailTime] > 0)
	            {
	                format(string, sizeof(string), "Név: %s | Idõ: %dmp(~%dp) | %s", PlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)), PlayerInfo[p][pJailOK]);
	                SendClientMessage(playerid, COLOR_YELLOW, string);
	            }
	        }
	    }
	    return 1;
 	}

	if(egyezik(cmd, "/magánzárkások") || egyezik(cmd, "/mz"))
	{
        if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;

        SendClientMessage(playerid, COLOR_LIGHTBLUE, "========== Magánzárkások ==========");
        foreach(Jatekosok, p)
        {
            if(PlayerInfo[p][pJailed] == 6 || PlayerInfo[p][pJailed] == 8 && PlayerInfo[p][pJailTime] > 0)
                SendFormatMessage(playerid, COLOR_YELLOW, "%s | Név: %s | Idõ: %dmp(~%dp) | Oka: %s", BortonNev(PlayerInfo[p][pJailed]), PlayerName(p), PlayerInfo[p][pJailTime], floatround(float(PlayerInfo[p][pJailTime] / 60)), PlayerInfo[p][pJailOK]);
        }
		return 1;
 	}

	if(strcmp(cmd, "/kórházban", true) == 0 || egyezik(cmd, "/korhazban"))
	{
    	if(IsPlayerConnected(playerid))
	    {
	        if(!Admin(playerid, 1) && !IsScripter(playerid)) return 1;

	        SendClientMessage(playerid, COLOR_LIGHTBLUE, "========== Kórházban ==========");
	        for(new p = 0; p < MAX_PLAYERS; p++)
	        {
				if(!IsPlayerConnected(p) || !Logged(p)) continue;
	            if(KorhazIdo[p] > 0)
	            {
	                format(string, sizeof(string), "Név: %s | Idõ: %dmp(~%dp)", PlayerName(p), KorhazIdo[p], floatround(float((KorhazIdo[p]) / 60)));
	                SendClientMessage(playerid, COLOR_YELLOW, string);
	            }
	        }
	    }
	    return 1;
 	}

	if(egyezik(cmd, "/átszállít") || egyezik(cmd, "/atszallit"))
	{
	
		if(params < 1) return Msg(playerid,"/átszállít [kezd / vége]");
		
		if(!IsACop(playerid) && !Admin(playerid, 1337)) return Msg(playerid, "Nem vagy rendõr!");
		
		if(egyezik(param[1],"kezd"))
		{
			if(!PlayerToPoint(10, playerid, 1526.7133,-1675.2483,5.8906) && !PlayerToPoint(10, playerid, 1979.5084,-2384.1533,13.6226) && !PlayerToPoint(10, playerid, -1380.4196,-179.4063,14.2582) && !PlayerToPoint(10, playerid, -1279.2612,-36.9582,14.5030))
			
				return SendClientMessage(playerid, COLOR_GREY, "   Nem vagy a rabfelvevõhelyen! ( LSPD / Sheriff Department / FBI Garázs csillag jelénél vagy)");
			if(params < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Használat: /átszállít [playerid/PartOfName]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
			if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "   Magadat akarod átszállitani a fegyenctelepre? :D");
			if(PlayerInfo[giveplayerid][pJailed] < 1) return SendClientMessage(playerid, COLOR_GREY, "   Ez az ember nincs börtönben!");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "   Persze majd a hátadon fogod elvinni...");
			new vehid = GetPlayerVehicleID(playerid);
			if(GetVehicleModel(vehid) != 427) return SendClientMessage(playerid, COLOR_GREY, "   Nem vagy a páncélkocsiban (Enforcer)");
			if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, COLOR_GREY, "   Sofõrnek kell lenned!");
			
			new vw = 0;
			if(PlayerInfo[giveplayerid][pJailTime] < 20*60) return Msg(playerid, "Csak 20 perc felett!!!");
			if(PlayerToPoint(10, playerid, 1526.7133,-1675.2483,5.8906) && PlayerInfo[giveplayerid][pJailed] != 1)
				return Msg(playerid, "Ez a játékos nem az LSPD Börtönébe van.");

			if(PlayerToPoint(10, playerid, 1979.5084,-2384.1533,13.6226) && PlayerInfo[giveplayerid][pJailed] != 4)
				return Msg(playerid, "Ez a játékos nem a NAV Börtönébe van");

			if(PlayerToPoint(10, playerid, -1380.4196,-179.4063,14.2582) && PlayerInfo[giveplayerid][pJailed] != 5)
				return Msg(playerid, "Ez a játékos nem az FBI Börtönébe van");
			
			if(PlayerToPoint(10, playerid, -1279.2612,-36.9582,14.5030)) vw = 133;
			if(PlayerToPoint(10, playerid, -1380.4196,-179.4063,14.2582)) vw = 123;
			if(PlayerToPoint(10, playerid, 1979.5084,-2384.1533,13.6226)) vw = 127;
			PutPlayerInVehicle(giveplayerid, vehid, 2);
			SetPlayerInterior(giveplayerid, 0);
			SetPlayerVirtualWorld(giveplayerid, vw);
			TogglePlayerControllable(giveplayerid, false);
			SendFormatMessageToAll(COLOR_LIGHTRED, "<< %s átszállítása folyamatban a Class City LS fegyenctelepre >>", PlayerName(giveplayerid));
			PlayerInfo[giveplayerid][pJailed] = 0;
			return 1;
		}
		if(egyezik(param[1],"vége"))
		{
		
			if(!PlayerToPoint(15, playerid, 1938.7787,-2378.4487,13.5559)) return SendClientMessage(playerid, COLOR_GREY, "   Nem vagy a Class City LS fegyenctelep rabterületén.");
			if(params < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Használat: /átszállításvége [playerid/PartOfName]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");
			if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "   Magadat akarod átszállitani a fegyenctelepre? :D");
			if(GetDistanceBetweenPlayers(playerid, giveplayerid) > 8.0) return Msg(playerid, "Nincs a közeledben!");
			SendFormatMessageToAll(COLOR_LIGHTRED, "<< %s átszállítva a  Class City LS fegyenctelepre >>", PlayerName(giveplayerid));
			GameTextForPlayer(giveplayerid, "~w~Udv itthon!~n~~r~Class City LS fegyenctelep", 5000, 3);
			WantedLevel[giveplayerid] = 0;
			PlayerInfo[giveplayerid][pJailed] = 7;
			PlayerInfo[giveplayerid][pJailTime] += 300;
			RemovePlayerFromVehicle(giveplayerid);
			Bilincs(giveplayerid, 2);
			return 1;
		
		}
	}
	if(egyezik(cmd, "/lotto") || egyezik(cmd, "/lottó"))
	{
		if(!PlayerToPoint(10.0, playerid, 830.5727,3.6759,1004.1797)) return Msg(playerid, "Nem vagy lottózóban!");
		
		if(params < 1) return SendClientMessage(playerid, COLOR_WHITE,"Használata: /lotto [infó/megvesz]");
		
		if(egyezik(param[1], "info") || egyezik(param[1], "infó"))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "==================== Lottózó ====================");
			SendClientMessage(playerid, COLOR_GREY, "Lottósorolás minden órában szokott zajlani.");
			SendClientMessage(playerid, COLOR_GREY, "Egy lottószelvény ára 1500 Ft.");
			if(PInfo(playerid,LottoNr) > 0)
				SendFormatMessage(playerid, COLOR_WHITE,"A szelvényed a következõ számot tartalmazza: %d", PlayerInfo[playerid][pLottoNr]);
			SendFormatMessage(playerid, COLOR_YELLOW, "Elõzõ nyerõszám: %d.", Nyeroszam);
			SendFormatMessage(playerid, COLOR_YELLOW, "A várható fõnyeremény: %s Ft.", FormatNumber( Jackpot, 0, ',' ));
			SendClientMessage(playerid, COLOR_GRAD2, "==================== Lottózó ====================");
		}
		if(egyezik(param[1], "megvesz"))
		{
		if(PlayerInfo[playerid][pLottoNr] > 0) return SendClientMessage(playerid, COLOR_GREY, "Már van 1 lottószelvényed!");
		new lottonr = strval(param[2]);
		if(lottonr < 1 || lottonr > 80) return SendClientMessage(playerid, COLOR_GREY, " 1 és 80 között kell választanod!");
		if(!BankkartyaFizet(playerid, 1500)){ Msg(playerid, "Nincs elég pénzed 1 500 Ft kell!"); return 1; }
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Vettél egy lottót, a következõ számmal: %d", lottonr);
		Jackpot += 1500;
		PlayerInfo[playerid][pLottoNr] = lottonr;
		}
	    return 1;
	}

	if(egyezik(cmd, "/take"))
	{
        if(!IsACop(playerid) && PlayerInfo[playerid][pAdmin] < 1337 && !PlayerInfo[playerid][pSwattag]) return Msg(playerid, "Nem vagy rendõr!");

		if(PlayerInfo[playerid][pJailed] != 0) return 1;

		if(NemMozoghat(playerid))
			return Msg(playerid, "Leütve / megkötözve / animban nem lehet!");

		if(params < 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Elvehetõ dolgok __________________|");
			SendClientMessage(playerid, COLOR_WHITE, "Használat: /take [mit] [playerid/PartOfName]");
			SendClientMessage(playerid, COLOR_GREY, "Engedélyek: Autó, Motor, Kamion, Repülõ, Hajó, Fegyverengedély, Adr, helikopter");
	 		SendClientMessage(playerid, COLOR_GREY, "|--------------------Tárgyaknál nem kell név------------|");
	 		SendClientMessage(playerid, COLOR_GREY, "Tárgyak: Fegyver, Drog(Heroin,Kokain, Marihuana), Mati, Laptop, Ruha, Jelvény");
			SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________________|");
			return 1;
		}
	    if(egyezik(param[1],"autó") || egyezik(param[1],"auto"))
		{
			if(params < 2) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /take autó [playerid/PartOfName]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s autó jogositványát", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elvették az autó jogsid. Vizsgázni 5 hónap(óra) múlva fogsz tudni!");
			PlayerInfo[giveplayerid][pCarLic] = 0;
			strmid(PlayerInfo[playerid][pJogsiTiltOk], "Rendõrség: jogosítvány elvétel", 0, strlen("Rendõrségi tíltás"), 128);
			PlayerInfo[playerid][pJogsiTiltIdo]=5;
			return 1;
		}
		else if(egyezik(param[1],"Motor"))
		{
			if(params < 2) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /take motor [playerid/PartOfName]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s motor jogositványát", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elvették a motor jogsid.  Vizsgázni 5 hónap(óra) múlva fogsz tudni!");
			PlayerInfo[giveplayerid][pMotorJogsi] = 0;
			strmid(PlayerInfo[playerid][pJogsiTiltOk], "Rendõrség: jogosítvány elvétel", 0, strlen("Rendõrségi tíltás"), 128);
			PlayerInfo[playerid][pJogsiTiltIdo]=5;
			return 1;
		}
		else if(egyezik(param[1],"kamion"))
		{
			if(params < 2) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /take kamion [playerid/PartOfName]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s kamion jogositványát", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elvették a kamion jogsid.  Vizsgázni 5 hónap(óra) múlva fogsz tudni!");
			PlayerInfo[giveplayerid][pKamionJogsi] = 0;
			strmid(PlayerInfo[playerid][pJogsiTiltOk], "Rendõrség: jogosítvány elvétel", 0, strlen("Rendõrségi tíltás"), 128);
			PlayerInfo[playerid][pJogsiTiltIdo]=5;
			return 1;
		}
		else if(egyezik(param[1],"adr"))
		{
			if(params < 2) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /take adr [playerid/PartOfName]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s az ADR jogositványát", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elvették az ADR  jogsid.  Vizsgázni 5 hónap(óra) múlva fogsz tudni!");
			PlayerInfo[giveplayerid][pAdrJogsi] = 0;
			strmid(PlayerInfo[playerid][pJogsiTiltOk], "Rendõrség: jogosítvány elvétel", 0, strlen("Rendõrségi tíltás"), 128);
			PlayerInfo[playerid][pJogsiTiltIdo]=5;
			return 1;
		}
		else if(egyezik(param[1],"repülõ") || egyezik(param[1],"repulo"))
		{
			if(params < 2) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /take repülõ [playerid/PartOfName]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s repülõengedélyét", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elvették a repülõengedélyed.  Vizsgázni 5 hónap(óra) múlva fogsz tudni!");
			PlayerInfo[giveplayerid][pFlyLic] = 0;
			strmid(PlayerInfo[playerid][pJogsiTiltOk], "Rendõrség: jogosítvány elvétel", 0, strlen("Rendõrségi tíltás"), 128);
			PlayerInfo[playerid][pJogsiTiltIdo]=5;
			return 1;
		}
		else if(egyezik(param[1],"helikopter") || egyezik(param[1],"heli"))
		{
			if(params < 2) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /take heli [playerid/PartOfName]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s helikopter engedélyét", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elvették a helikopter engedélyét.  Vizsgázni 5 hónap(óra) múlva fogsz tudni!");
			PlayerInfo[giveplayerid][pHeliLic] = 0;
			strmid(PlayerInfo[playerid][pJogsiTiltOk], "Rendõrség: jogosítvány elvétel", 0, strlen("Rendõrségi tíltás"), 128);
			PlayerInfo[playerid][pJogsiTiltIdo]=5;
			return 1;
		}
		else if(egyezik(param[1],"fegyverengedély") || egyezik(param[1],"fegyverengedely"))
		{
			if(params < 2) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /take fegyverengedély [playerid/PartOfName]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s fegyverengedélyét", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elvették a fegyverengedélyed.  Vizsgázni 5 hónap(óra) múlva fogsz tudni!");
			PlayerInfo[giveplayerid][pGunLic] = 0;
			strmid(PlayerInfo[playerid][pJogsiTiltOk], "Rendõrség: jogosítvány elvétel", 0, strlen("Rendõrségi tíltás"), 128);
			PlayerInfo[playerid][pJogsiTiltIdo]=5;
			return 1;
		}
		else if(egyezik(param[1],"hajó") || egyezik(param[1],"hajo"))
		{
			if(params < 2) return SendClientMessage(playerid, COLOR_WHITE, "Használat: /take hajó [playerid/PartOfName]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");

			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s hajóengedélyét", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elvették a hajóengedélyed.  Vizsgázni 5 hónap(óra) múlva fogsz tudni!");
			PlayerInfo[giveplayerid][pBoatLic] = 0;
			strmid(PlayerInfo[playerid][pJogsiTiltOk], "Rendõrség: jogosítvány elvétel", 0, strlen("Rendõrségi tíltás"), 128);
			PlayerInfo[playerid][pJogsiTiltIdo]=5;
			return 1;
		}
		else if(egyezik(param[1],"fegyver"))
		{
			giveplayerid = GetClosestPlayer(playerid);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");


			if(Paintballozik[playerid] || Paintballozik[giveplayerid])
				return Msg(playerid, "Paintballon nem lehet!");

			if(HitmanDuty[giveplayerid] == 1)
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s fegyvereit", PlayerInfo[playerid][pHitmanNev]);
			else
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s fegyvereit", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elvették a fegyvereidet");
			//ResetWeapon(giveplayerid);
			WeaponResetAll(giveplayerid);
			return 1;
		}
		else if(egyezik(param[1],"drog"))
		{
			giveplayerid = GetClosestPlayer(playerid);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");


			if(Paintballozik[playerid] || Paintballozik[giveplayerid])
				return Msg(playerid, "Paintballon nem lehet!");

		    if(PlayerInfo[giveplayerid][pKokain] == 0 && PlayerInfo[giveplayerid][pHeroin] == 0 && PlayerInfo[giveplayerid][pMarihuana] == 0) return Msg(playerid, "Semmilyen drog nincs nála!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s összes drogját (kokain/heroin/marihuana)", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elvették a drogjaid (kokain/heroin/marihuana)");
			PlayerInfo[giveplayerid][pKokain] = 0;
			PlayerInfo[giveplayerid][pHeroin] = 0;
			PlayerInfo[giveplayerid][pMarihuana] = 0;
			return 1;
		}
		else if(egyezik(param[1],"mati"))
		{
			giveplayerid = GetClosestPlayer(playerid);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");


			if(Paintballozik[playerid] || Paintballozik[giveplayerid])
				return Msg(playerid, "Paintballon nem lehet!");

			if(PlayerInfo[giveplayerid][pMats] == 0) return Msg(playerid,"Nincs nála material!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elvetted %s minden matiját", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elvették a matijaid");
			PlayerInfo[giveplayerid][pMats] = 0;
			return 1;
		}
		else if(egyezik(param[1],"laptop"))
		{
			giveplayerid = GetClosestPlayer(playerid);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");


			if(Paintballozik[playerid] || Paintballozik[giveplayerid])
				return Msg(playerid, "Paintballon nem lehet!");
			if(PlayerInfo[giveplayerid][pLaptop] == 0) return Msg(playerid, "Nincs laptopod!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elkoboztad %s laptopját", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elkobozták a laptopod");
			PlayerInfo[giveplayerid][pLaptop] = 0;
			return 1;
		}
		else if(egyezik(param[1], "ruha"))
		{
			giveplayerid = GetClosestPlayer(playerid); new skin = GetPlayerSkin(giveplayerid);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) 
				return Msg(playerid, "Nincs senki a közelben");


			if(Paintballozik[playerid] || Paintballozik[giveplayerid])
				return Msg(playerid, "Paintballon nem lehet!");
			if(skin == 252)
				return Msg(playerid, "Rajta nincs ruha");

			SetTimerEx("Munkavege", MunkaIdo[9], 0, "ddd", playerid, M_RUHAELVESZ, giveplayerid);
			Cselekves(playerid, "elkobozza valaki ruháját");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Elkobzod %s ruháit", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elkobozzák a ruháidat");
			Freeze(playerid);
			Freeze(giveplayerid);
			MunkaFolyamatban[playerid] = 1;
			if(!IsPlayerInAnyVehicle(playerid))
				ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0);
		}
		elseif(egyezik(param[1], "jelvény") || egyezik(param[1], "jelveny"))
		{
			giveplayerid = GetClosestPlayer(playerid);
			if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nem online játékos!");

			new kozelben = KozelbenValaki(giveplayerid, 2.0);
			if(kozelben == NINCS) return Msg(playerid, "Nincs senki a közelben");
			if(!Jelvenytlopott[giveplayerid]) return Msg(playerid, "Õ nem lopott jelvényt!");
			if(Paintballozik[playerid] || Paintballozik[giveplayerid]) return Msg(playerid, "Paintballon nem lehet!");
			Cselekves(playerid, "elkobozta valaki jelvényét");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Elkobzod %s lopott jelvényét", ICPlayerName(giveplayerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Elkobozzák a lopott jelvényed");
			/*if(JelvenyID[giveplayerid] == playerid)
				JelvenytLopta[playerid] = NINCS, PlayerInfo[playerid][pJelveny] = 1;*/
			
			Jelvenytlopott[giveplayerid] = false;
			JelvenyNeve[giveplayerid] = "Ismeretlen";
			JelvenySzervezet[giveplayerid] = NINCS;
			JelvenyRangnev[giveplayerid] = NINCS;
		}
		else return SendClientMessage(playerid, COLOR_GREY, "   Szerintem elírtál valamit !");
	}
	if(egyezik(cmd, "/mikrofon"))
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Mikrofon[playerid] == 0 && PlayerInfo[playerid][pPbiskey] != BIZ_DISCO) return Msg(playerid,"Neked nincs engedélyed a mikrofon használatához! A Disco tulaja tud adni!");
			if(Csendvan && PlayerInfo[playerid][pAdmin] == 0) return Msg(playerid, "Most nem beszélhetsz!");
			new result[128];
   			if(sscanf(pms, "s[128]", result))
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /mikrofon [Szöveg]");

			if(SzajBekotve[playerid] == 1) return Msg(playerid, "A szád bevan kötve, így nem tudsz beszélni.");
			if(PlayerToPoint(2.0, playerid,1657.8412,-1349.8939,19.2059))
			{

				format(string, sizeof(string), "***Mikrofon***%s: %s***",ICPlayerName(playerid), result);

				ProxDetector(B_Tavol2, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);

				Format(result, "o< %s", result);
				SetPlayerChatBubble(playerid, result, COLOR_YELLOW, B_Tavol2, 5000);
				ChatLog(string);
			}
			else
			{
			    Msg(playerid,"Közeledben nincs mikrofon");
				return 1;
			}
		}
		return 1;
	}
	
	if(egyezik(cmd, "/mikrofonengedély") || egyezik(cmd, "/mikrofonengedely"))
	{
		new neve[MAX_PLAYER_NAME];
		neve = PlayerName(playerid);

		if(PlayerInfo[playerid][pPbiskey] != BIZ_DISCO) return Msg(playerid, "Csak a biznisz tulaja adhat engedélyt!");

		new akcio[256];

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Használata: /mikrofonengedély [ad/elvesz] [név/id]");

		akcio = tmp;
		if(!egyezik(akcio, "ad") && !egyezik(akcio, "elvesz"))
			return SendClientMessage(playerid, COLOR_GREY, "Használata: /mikrofonengedély [ad/elvesz] [név/id]");

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Használata: /mikrofonengedély [ad/elvesz] [név/id]");

		new kinek = ReturnUser(tmp);
		if(IsPlayerConnected(kinek) && kinek != INVALID_PLAYER_ID)
		{
			if(egyezik(akcio, "ad"))
			{
				if(Mikrofon[kinek] == 1)
					return SendClientMessage(playerid, COLOR_GREY, "Neki már van engedélye a mikrofonhoz!");

				Mikrofon[kinek] = 1;
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Adtál neki engedélyt, hogy használhassa a mikrofont: %s", ICPlayerName(kinek));
				SendClientMessage(kinek, COLOR_LIGHTBLUE, "Kaptál engedélyt a mikrofon használathoz!");
			}
			else if(egyezik(akcio, "elvesz"))
			{
				if(Mikrofon[kinek] == 0)
					return SendClientMessage(playerid, COLOR_GREY, "Neki nincs engedélye!");

				Mikrofon[kinek] = 0;
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Elvetted %s mikrofon engedélyét", ICPlayerName(kinek));
				SendClientMessage(kinek, COLOR_LIGHTBLUE, "Elvették a mikrofon engedélyedet!");
			}
		}

		return 1;
	}
	if(egyezik(cmd, "/zeneengedély") || egyezik(cmd, "/zeneengedely"))
	{
		if(PlayerInfo[playerid][pPbiskey] != BIZ_DISCO) return Msg(playerid, "Csak a biznisz tulaja adhat engedélyt!");
		if(params < 2)	return Msg(playerid,"Használata: /zeneengedély [ad/elvesz] [név/id]");
		
		new kinek = ReturnUser(param[2]);
		if(IsPlayerConnected(kinek) && kinek != INVALID_PLAYER_ID)
		{
			if(egyezik(param[1], "ad"))
			{
				if(Zeneenged[kinek] > UnixTime) return Msg(playerid,"Neki már van engedélye a zenéléshez!");
				if(params < 2)	return Msg(playerid,"Használata: /zeneengedély ad [név/id] [Idõ]");
				new ido = strval(param[2]);
				if(ido < 1 || ido > 10) return Msg(playerid, "Minimum 1 és maximum 10 óra lehet!");
				ido = ido*3600;
				Zeneenged[kinek] = UnixTime+ido;
				ido = ido/3600;
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Adtál neki engedélyt %d órára, hogy zenélhessen: %s.",ido, ICPlayerName(kinek));
				SendFormatMessage(kinek, COLOR_LIGHTBLUE, "Kaptál a zenéléshez engedélyt %d órára.",ido, ICPlayerName(kinek));
			}
			else if(egyezik(param[1], "elvesz"))
			{
				if(Zeneenged[kinek] < UnixTime) return Msg(playerid,"Neki nincs engedélye!");

				Zeneenged[kinek] = 0;
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Elvetted %s a zenélési engedélyét", ICPlayerName(kinek));
				Msg(kinek,"Elvették a zenélési engedélyét!");
			}
		}

		return 1;
	}

	if(egyezik(cmd, "/drink"))
	{
        if(IsAtBar(playerid))
        {
			if(PlayerDrunk[playerid] >= 5) return SendClientMessage(playerid, COLOR_GREY, "   Ehh, ez kicsit sok lesz !");
           
			if(params < 1)
			{
				SendFormatMessage(playerid, COLOR_WHITE, "|__________________ %s(Italok) __________________|", BizzInfo[BIZ_KOCSMA][bMessage]);
				SendClientMessage(playerid, COLOR_WHITE, "Használat: /drink [Ital]");
		  		SendClientMessage(playerid, COLOR_GREY, "Italok: Sör (450FT), Vodka (600FT), Whiskey (1000FT), Pálinka (700FT), Víz (100FT), Kristályvíz (300FT), CocaCola (350Ft)");
				SendClientMessage(playerid, COLOR_GREY, "Ételek: Chips(450Ft), Ropi(150Ft), Mogyoró(350Ft)");
				SendFormatMessage(playerid, COLOR_WHITE, "|__________________ %s(Italok) __________________|", BizzInfo[BIZ_KOCSMA][bMessage]);
				return 1;
			}
			if(egyezik(param[1],"chips"))
			{
				if(!BankkartyaFizet(playerid, 450)){ Msg(playerid, "Nincs elég pénzed 450 Ft kell"); return 1; }
				if(PlayerToPoint(10.0, playerid,-224.8074,1406.1986,27.7734)){BizPenz(BIZ_VLA ,450);} else { BizPenz(BIZ_KOCSMA, 450);}
				
				Szukseglet(playerid, -5.0, 5.0);
				Cselekves(playerid, "evett egy kis chipset");
			}
			else if(egyezik(param[1],"ropi"))
			{
				if(!BankkartyaFizet(playerid, 150)){ Msg(playerid, "Nincs elég pénzed 150 Ft kell"); return 1; }
				if(PlayerToPoint(10.0, playerid,-224.8074,1406.1986,27.7734)){BizPenz(BIZ_VLA ,150);} else { BizPenz(BIZ_KOCSMA, 150);}
				
				Szukseglet(playerid, -5.0, 5.0);
				Cselekves(playerid, "evett egy kis ropit");
			}
			else if(egyezik(param[1],"mogyoro") || egyezik(param[1],"mogyoró"))
			{
				if(!BankkartyaFizet(playerid, 350)){ Msg(playerid, "Nincs elég pénzed 350 Ft kell"); return 1; }
				if(PlayerToPoint(10.0, playerid,-224.8074,1406.1986,27.7734)){BizPenz(BIZ_VLA ,350);} else { BizPenz(BIZ_KOCSMA, 350);}
				
				Szukseglet(playerid, -5.0, 7.0);
				Cselekves(playerid, "evett egy kis mogyorót");
			}
			Cselekves(playerid, "ivott valamit...");
			if(egyezik(param[1],"sör") || egyezik(param[1], "sor"))
			{
				if(PlayerInfo[playerid][pAge] < 18) return SendClientMessage(playerid, COLOR_WHITE, "Csapos: Csak 18 éven felül adunk szeszes italt!");
				if(!BankkartyaFizet(playerid, 450))
				{
					Msg(playerid, "Nincs elég pénzed 450 Ft kell");
					return 1;
				}
				if(PlayerToPoint(10.0, playerid,-224.8074,1406.1986,27.7734)){BizPenz(BIZ_VLA, 450);}else {BizPenz(BIZ_KOCSMA, 450);}
			    PlayerDrunk[playerid] += 1;
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
				if(PlayerDrunk[playerid] >= 5) GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1);
				
			}
			else if(egyezik(param[1],"vodka"))
			{
			    if(PlayerInfo[playerid][pAge] < 18) return SendClientMessage(playerid, COLOR_WHITE, "Csapos: Csak 18 éven felül adunk szeszes italt!");
				if(!BankkartyaFizet(playerid, 600)){ Msg(playerid, "Nincs elég pénzed 600 Ft kell"); return 1; }
				if(PlayerToPoint(10.0, playerid,-224.8074,1406.1986,27.7734)){BizPenz(BIZ_VLA ,600);} else { BizPenz(BIZ_KOCSMA, 600);}
			    PlayerDrunk[playerid] += 2;
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1); }
				
			}
			else if(egyezik(param[1],"whiskey"))
			{
			    if(PlayerInfo[playerid][pAge] < 18) return SendClientMessage(playerid, COLOR_WHITE, "Csapos: Csak 18 éven felül adunk szeszes italt!");
				if(!BankkartyaFizet(playerid, 1000)){ Msg(playerid, "Nincs elég pénzed 1000 Ft kell"); return 1; }
				if(PlayerToPoint(10.0, playerid,-224.8074,1406.1986,27.7734)){BizPenz(BIZ_VLA, 1000);} else { BizPenz(BIZ_KOCSMA, 1000);}
			    PlayerDrunk[playerid] += 3;
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1); }
				
			}
			else if(egyezik(param[1],"pálinka") || egyezik(param[1],"palinka"))
			{
			    if(PlayerInfo[playerid][pAge] < 18) return SendClientMessage(playerid, COLOR_WHITE, "Csapos: Csak 18 éven felül adunk szeszes italt!");
				if(!BankkartyaFizet(playerid,700)){ Msg(playerid, "Nincs elég pénzed 700 Ft kell"); return 1; }
				if(PlayerToPoint(10.0, playerid,-224.8074,1406.1986,27.7734)){BizPenz(BIZ_VLA, 700);} else { BizPenz(BIZ_KOCSMA, 700);}
			    PlayerDrunk[playerid] += 3;
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1); }
				
			}
			else if(egyezik(param[1],"víz") || egyezik(param[1],"viz"))
			{
				if(!BankkartyaFizet(playerid, 100)){ Msg(playerid, "Nincs elég pénzed 100 Ft kell"); return 1; }
				if(PlayerToPoint(10.0, playerid,-224.8074,1406.1986,27.7734)){BizPenz(BIZ_VLA, 100);} else { BizPenz(BIZ_KOCSMA, 100);}
				
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			 
			}
			else if(egyezik(param[1],"cocacola"))
			{
				if(!BankkartyaFizet(playerid, 350)){ Msg(playerid, "Nincs elég pénzed 50 Ft kell"); return 1; }
				if(PlayerToPoint(10.0, playerid,-224.8074,1406.1986,27.7734)){BizPenz(BIZ_VLA, 350);} else { BizPenz(BIZ_KOCSMA, 350);}
				
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			   
			}
			else if(egyezik(param[1],"Kristályvíz") || egyezik(param[1],"Kristalyviz"))
			{
				if(!BankkartyaFizet(playerid, 180)){ Msg(playerid, "Nincs elég pénzed 180 Ft kell"); return 1; }
				if(PlayerToPoint(10.0, playerid,-224.8074,1406.1986,27.7734)){BizPenz(BIZ_VLA, 180);} else { BizPenz(BIZ_KOCSMA, 180);}
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			  
			}
			else return SendClientMessage(playerid, COLOR_WHITE, "Pultos: Bocs haver, de nem ismerek ilyen italt.");
		}
		else if(PlayerToPoint(5, playerid, 2139.4827,-2287.6602,14.7801))
		{
			if(params < 1) return Msg(playerid, "/drink [sör/vodka/whiskey/víz]");
			if(egyezik(param[1], "sör") || egyezik(param[1], "sor"))
			{
				PlayerDrunk[playerid] += 1;
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
				if(PlayerDrunk[playerid] >= 5) GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1);
				
				if(!BankkartyaFizet(playerid, 300))
				{
					Msg(playerid, "Nincs elég pénzed 300 Ft kell");
					return 1;
				}
				Cselekves(playerid, "ivott egy sört.");
				return 1;
			}
			else if(egyezik(param[1], "vodka"))
			{
				PlayerDrunk[playerid] += 2;
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
				if(PlayerDrunk[playerid] >= 5) GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1);
			
				if(!BankkartyaFizet(playerid, 400))
				{
					Msg(playerid, "Nincs elég pénzed 400 Ft kell");
					return 1;
				}
				Cselekves(playerid, "ivott egy vodkát.");
				return 1;
			}
			else if(egyezik(param[1], "whiskey"))
			{
				PlayerDrunk[playerid] += 3;
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
				if(PlayerDrunk[playerid] >= 5) GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1);
				
				if(!BankkartyaFizet(playerid, 500))
				{
					Msg(playerid, "Nincs elég pénzed 500 Ft kell");
					return 1;
				}
				Cselekves(playerid, "ivott egy whiskeyt.");
				return 1;
			}
			else if(egyezik(param[1], "víz"))
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
				
				if(!BankkartyaFizet(playerid, 100))
				{
					Msg(playerid, "Nincs elég pénzed 100 Ft kell");
					return 1;
				}
				Cselekves(playerid, "ivott egy vizet.");
				return 1;
			}
			else return Msg(playerid, "Nálunk nincs ilyen ital!");
		}
		else if(PlayerToPoint(5.0, playerid, 1678.1423,-1344.4899,17.4059)) // új disco
		{
			if(PlayerDrunk[playerid] >= 10) return SendClientMessage(playerid, COLOR_GREY, "Ehh, ez kicsit sok lesz !");
			if(params < 1)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED,"=========================Club Rio Itallap=========================");
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"=========================Üdítõk=========================");
				SendClientMessage(playerid, COLOR_YELLOW,"Natur Aqua - 250ft ||| Coca Cola - 300ft ||| Fanta - 300ft ||| Sprite - 300ft");
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"=========================Sörök=========================");
				SendClientMessage(playerid, COLOR_YELLOW,"Soproni - 350Ft ||| Kozel - 340Ft ||| Dreher - 360Ft");
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"=========================Long Drink=========================");
				SendClientMessage(playerid, COLOR_YELLOW,"Bacardi Breezer - 430Ft ||| Summers By - 380Ft ||| Acapulco - 400Ft ||| Benedict - 400Ft");
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"=========================Rövid Italok=========================");
				SendClientMessage(playerid, COLOR_YELLOW,"Jack Daniels - 360Ft ||| Whiskey Cola - 450Ft ||| Vodka Narancs - 450Ft");
				SendClientMessage(playerid, COLOR_YELLOW,"Vodka Sprite - 450Ft ||| Vodka Redbull - 500Ft ||| Bacardi Apple - 500Ft");
				SendClientMessage(playerid, COLOR_YELLOW,"Fütyülõs Barack - 500Ft ||| Unicum - 370Ft ||| Jager - 460Ft");
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"=========================Koktélok=========================");
				SendClientMessage(playerid, COLOR_YELLOW,"Blue Arrow - 670Ft ||| Bronx - 700Ft ||| California Dream - 700Ft");
				SendClientMessage(playerid, COLOR_YELLOW,"Daiquiri - 730Ft ||| Bloody Mary - 670Ft ||| Sex On The Beach - 750Ft");
				SendClientMessage(playerid, COLOR_LIGHTRED,"=========================Club Rio Itallap=========================");
				Msg(playerid,"Az italokat egybe írjátok ne külön!(pl: BloodyMary)");
				return 1;
			}
			else if(egyezik(param[1], "NaturAqua") || egyezik(param[1], "CocaCola") || egyezik(param[1], "Fanta") || egyezik(param[1], "Sprite"))
			{
				if(!BankkartyaFizet(playerid, 300)){ Msg(playerid,"Nincs elég pénzed!"); return 1; }
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
				
				Cselekves(playerid, "ivott egy üdítõt");
				BizPenz(BIZ_DISCO, 300);
				BizzInfo[BIZ_DISCO][bProducts] -= 1;
				return 1;
			}
			else if(egyezik(param[1], "Kozel") || egyezik(param[1], "Dreher") || egyezik(param[1], "Soproni"))
			{
				if(!BankkartyaFizet(playerid, 350)){ Msg(playerid,"Nincs elég pénzed!"); return 1; }
				PlayerDrunk[playerid] += 1;
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(PlayerDrunk[playerid] >= 5) GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1);
				
				if(!BankkartyaFizet(playerid, 350))
				Cselekves(playerid, "ivott egy sört");
				BizPenz(BIZ_DISCO, 350);
				BizzInfo[BIZ_DISCO][bProducts] -= 1;
				return 1;
			}
			else if(egyezik(param[1], "BacardiBreezer") || egyezik(param[1], "SummersBy") || egyezik(param[1], "Acapulco") || egyezik(param[1], "Benedict"))
			{
				if(!BankkartyaFizet(playerid, 430)){ Msg(playerid,"Nincs elég pénzed!"); return 1; }
				PlayerDrunk[playerid] += 2;
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(PlayerDrunk[playerid] >= 5) GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1);
				
				if(!BankkartyaFizet(playerid, 430))
				Cselekves(playerid, "ivott egy Long Drinket");
				BizPenz(BIZ_DISCO, 430);
				BizzInfo[BIZ_DISCO][bProducts] -= 1;
				return 1;
			}
			else if(egyezik(param[1], "JackDaniels") || egyezik(param[1], "Unicum") || egyezik(param[1], "Jager") || egyezik(param[1], "WhiskeyCola") || egyezik(param[1], "BacardiApple") || egyezik(param[1], "FütyülõsBarack"))
			{
				if(!BankkartyaFizet(playerid, 500)){ Msg(playerid,"Nincs elég pénzed!"); return 1; }
				PlayerDrunk[playerid] += 3;
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(PlayerDrunk[playerid] >= 5) GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1);
				
				Cselekves(playerid, "ivott egy rövidet");
				BizPenz(BIZ_DISCO, 500);
				BizzInfo[BIZ_DISCO][bProducts] -= 1;
				return 1;
			}
			else if(egyezik(param[1], "VodkaNarancs") || egyezik(param[1], "VodkaSprite") || egyezik(param[1], "VodkaRedbull"))
			{
				if(!BankkartyaFizet(playerid, 500)){ Msg(playerid,"Nincs elég pénzed!"); return 1; }
				PlayerDrunk[playerid] += 3;
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(PlayerDrunk[playerid] >= 5) GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1);
				
				Cselekves(playerid, "ivott egy rövidet");
				BizPenz(BIZ_DISCO, 500);
				BizzInfo[BIZ_DISCO][bProducts] -= 1;
				return 1;
			}
			else if(egyezik(param[1], "BlueArrow") || egyezik(param[1], "Bronx") || egyezik(param[1], "CaliforniaDream") || egyezik(param[1], "Daiquiri") || egyezik(param[1], "BloodyMary") || egyezik(param[1], "SexOnTheBeach"))
			{
				if(!BankkartyaFizet(playerid, 750)){ Msg(playerid,"Nincs elég pénzed!"); return 1; }
				PlayerDrunk[playerid] += 5;
				if(GetPlayerDrunkLevel(playerid) < 1900)
					SetPlayerDrunkLevel(playerid, 1900);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
				if(PlayerDrunk[playerid] >= 5) GameTextForPlayer(playerid, "~p~Rszeg~n~~w~vagy", 3500, 1);
				
				Cselekves(playerid, "ivott egy koktélt");
				BizPenz(BIZ_DISCO, 750);
				BizzInfo[BIZ_DISCO][bProducts] -= 1;
				return 1;
			}
			else return Msg(playerid, "Nálunk nincs ilyen ital!");
		}
	    else return SendClientMessage(playerid, COLOR_GREY, "Nem vagy bárba!");
	    return 1;
	}
	if(strcmp(cmd, "/service", true) == 0)
	{
		if(FloodCheck(playerid)) return 1;
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[128];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Szolgálatok __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Használat: /service [name]");
		  		SendClientMessage(playerid, COLOR_GREY, "Használhatóak: Taxi, Bus, Medic, Mechanic");
				SendClientMessage(playerid, COLOR_GREY, "/service taxi  | /service taxi id");
				SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
				return 1;
			}
			//taxi
		    if(egyezik(param[1],"taxi"))
			{
				if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid) != 0) return Msg(playerid, "Hova hívnád be a házba? ((vw és int 0 kell legyen)");
				
				
			    if(TaxiOnline() < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "Nincsenek Taxi sofõrök, próbáld meg késõbb!");
		            return 1;
		        }
				

				if(TaxiHivas[playerid] > 0)
					return Msg(playerid, "Már hívtál taxit, várj türelmesen!");

				if(Taxi[playerid][tDuty]) return Msg(playerid, "Hóhó nem éppen taxis vagy?");
				
				if(params > 1)
				{
					new jatekos = ReturnUser(param[2]);
					if(jatekos == INVALID_PLAYER_ID || IsPlayerNPC(jatekos))
						return Msg(playerid, "Nincs ilyen játékos!");
						
					if(!Taxi[jatekos][tDuty]) return Msg(playerid, "Õ nincs szolgálatban! /taxisok");
					if(Taxi[jatekos][tUtas] != NINCS) return Msg(playerid, "Õ jelenleg foglalt! /taxisok");
					if(Taxi[jatekos][tHivas]) return Msg(playerid, "Õ már fogadott egy hívást, arra megy!");
					
					format(string, sizeof(string), "**[Privát] %s téged hívott, ahhoz, hogy elfogadd: /accept taxi %d", ICPlayerName(playerid), playerid);
					SendClientMessage(jatekos, COLOR_YELLOW, string);
				}
				else
				{
					format(string, sizeof(string), "** %s taxit hívott, ahhoz, hogy elfogadd: /accept taxi %d", ICPlayerName(playerid), playerid);
					foreach(Jatekosok, x)
					{
						if(Taxi[x][tDuty])
						{
							SendClientMessage(x, COLOR_LIGHTBLUE, string);
						}
					}
				}
		      
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Hívtál taxit, várj a válaszra.");
				TaxiHivas[playerid] = 1;
		    	return 1;
			}
			else if(egyezik(x_nr,"medic"))
			{
				if(playerid != NINCS) return Msg(playerid, "/call 104");
			    if(Medics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Nincs mentõs szolgálatba, próbáld késõbb !");
		            return 1;
		        }

				if(MentoHivas[playerid] > 0)
					return Msg(playerid, "Már hívtál mentõst, várj türelmesen!");
			    //format(string, sizeof(string), "** %s mentõt hívott - Ahhoz hogy elfogadd, /accept medic %d", PlayerName(playerid), playerid);
				tformat(128, "** %s mentõt hívott - Ahhoz hogy elfogadd, /accept medic %d", ICPlayerName(playerid), playerid);
		    	SendMessage(SEND_MESSAGE_FRACTION, _tmpString, TEAM_AZTECAS_COLOR, FRAKCIO_MENTO);
				if(FrakcioOnline(FRAKCIO_MENTO) < 1)
					SendMessage(SEND_MESSAGE_ONKENTES, _tmpString, TEAM_AZTECAS_COLOR);
				MentoHivas[playerid] = 1;
		    	return 1;
			}
			else if(strcmp(x_nr,"bus",true) == 0)
			{
			    if(BusOnline() < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Nincsenek Busz sofõrök, próbáld meg késõbb !");
		            return 1;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Most nem hívhatsz buszt !");
		            return 1;
		        }

		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Buszt hívott. ('/accept bus', hogy elfogadd)", sendername);
		    	SendMessage(SEND_MESSAGE_JOB, string, TEAM_AZTECAS_COLOR, 12);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Hívtál egy busz sofõrt, várj a válaszra.");
		    	BusCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"mechanic",true) == 0)
			{
				if(SzereloHiv[playerid] == 1)  return Msg(playerid, "Már hívtál szerelõt várj!");
				if(Mechanics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Nincs autószerelõ, próbáld késõbb!");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Autószerelõt hívott. ('/accept mechanic [%d]', hogy elfogadd)", sendername, playerid);
				foreach(Jatekosok, x)
				{
					if(PlayerInfo[x][pSzerelo] > 0)
					{
						SendClientMessage(x, COLOR_LIGHTGREEN, string);
					}
				}
				SzereloHiv[playerid]=1;
		    	SendMessage(SEND_MESSAGE_JOB, string, TEAM_AZTECAS_COLOR, 6);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Hívtál autószerelõt, várj a válaszra.");
		    	//MechanicCall = playerid;
		    	return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Elírtál valamit !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tie", true) == 0 || strcmp(cmd, "/megkötöz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!params)
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /tie [Playerid/PartOfName]");

			if(NemMozoghat(playerid))
				return Msg(playerid, "Animban / megkötözve / leütve nem lehet!");

			giveplayerid = ReturnUser(param[1]);
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(PlayerTied[giveplayerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Már meg van kötözve!");
					return 1;
				}
				if (GetDistanceBetweenPlayers(playerid, giveplayerid) < 8.0)
				{
					new car = GetPlayerVehicleID(playerid);
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "A-A ennyire ügyes nem vagy!"); return 1; }
					if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Megkötözted %s-t", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Valaki megkötözött");
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Valakit megkötöztek a közelbe...");
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(giveplayerid, "~r~Megkotoztek", 2500, 3);
						TogglePlayerControllable(giveplayerid, 0);
						PlayerTied[giveplayerid] = 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Ez a játékos nincs a kocsiban, vagy nem te vagy a sofõr!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Nincs hozzád közel!");
					return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Offline");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/untie", true) == 0 || strcmp(cmd, "/eloldozás", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmp = strtok(cmdtext, idx);
			if(!params)
				return SendClientMessage(playerid, COLOR_WHITE, "Használat: /untie [Playerid/PartOfName]");

			if(NemMozoghat(playerid))
				return Msg(playerid, "Animban / megkötözve / leütve nem lehet!");

			giveplayerid = ReturnUser(param[1]);
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if (GetDistanceBetweenPlayers(playerid, giveplayerid) < 8.0)
				{
					if(giveplayerid == playerid)
						return SendClientMessage(playerid, COLOR_GREY, "Magadat akarod kötözni? Ne perverzkedjél már...");

					if(PlayerTied[giveplayerid])
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Kikötözted %s-t!", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Kikötöztek!");
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(giveplayerid, "~g~Kikotozve", 2500, 3);
						TogglePlayerControllable(giveplayerid, 1);
						PlayerTied[giveplayerid] = 0;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Õ nincs megkötözve");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Nincs közel hozzád!");
					return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Offline");
			    return 1;
			}
		}//not connected
		return 1;
	}

	if(strcmp(cmd, "/elad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Eladás __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Használat: /elad [Név]");
		  		SendClientMessage(playerid, COLOR_GREY, "Engedélyezettt Nevek: Hal, Sült");
				SendClientMessage(playerid, COLOR_WHITE, "|_____________________________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"Hal",true) == 0)
			{
			    if (!PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53))//centerpoint 24-7
				{
					SendClientMessage(playerid, COLOR_GRAD2, "  Nem vagy 24/7-ben! ");
					return 1;
				}
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "Használat: /elad Hal [hal]");
					return 1;
				}
				new price;
				new fishid = strval(tmp);
				if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "  A halak száma nem lehet 1 alatt vagy 5 fölött! "); return 1; }
				else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Nincs hal az 1-es helyen !"); return 1; }
				else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Nincs hal a 2-es helyen !"); return 1; }
				else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Nincs hal a 3-as helyen !"); return 1; }
				else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Nincs hal a 4-es helyen !"); return 1; }
				else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Nincs hal a 5-ös helyen !"); return 1; }
				ConsumingMoney[playerid] = 1;
				switch (fishid)
				{
				    case 1:
				    {
				        if(Fishes[playerid][pWeight1] < 5)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Minket csak 5 kg súlyú vagy annál nagyobb halak érdekelnek ! ");
				            return 1;
				        }
                        price = FishCost(playerid, Fishes[playerid][pFid1]);
                        price = price * Fishes[playerid][pWeight1];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Hal~n~~r~Eladva", 3000, 1);
                        format(string, sizeof(string), "* Eladtad %s a %d kg súlyú haladat, ennyiért: %dFt.", Fishes[playerid][pFish1],Fishes[playerid][pWeight1],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GiveMoney(playerid, price);
						ClearFishID(playerid, 1);
				    }
				    case 2:
				    {
				        if(Fishes[playerid][pWeight2] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Minket csak 20 KG súlyú vagy annál nagyobb halak érdekelnek !");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid2]);
                        price = price * Fishes[playerid][pWeight2];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Hal~n~~r~Eladva", 3000, 1);
                        format(string, sizeof(string), "* Eladtad %s a %d kg súlyú haladat, ennyiért: %dFt.", Fishes[playerid][pFish2],Fishes[playerid][pWeight2],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GiveMoney(playerid, price);
						ClearFishID(playerid, 2);
				    }
				    case 3:
				    {
				        if(Fishes[playerid][pWeight3] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Minket csak 20 KG súlyú vagy annál nagyobb halak érdekelnek !");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid3]);
                        price = price * Fishes[playerid][pWeight3];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Hal~n~~r~Eladva", 3000, 1);
                        format(string, sizeof(string), "* Eladtad %s a %d kg súlyú haladat, ennyiért: %dFt.", Fishes[playerid][pFish3],Fishes[playerid][pWeight3],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GiveMoney(playerid, price);
						ClearFishID(playerid, 3);
				    }
				    case 4:
				    {
				        if(Fishes[playerid][pWeight4] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Minket csak 20 KG súlyú vagy annál nagyobb halak érdekelnek !");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid4]);
                        price = price * Fishes[playerid][pWeight4];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Hal~n~~r~Eladva", 3000, 1);
                        format(string, sizeof(string), "* Eladtad %s a %d kg súlyú haladat, ennyiért: %dFt.", Fishes[playerid][pFish4],Fishes[playerid][pWeight4],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GiveMoney(playerid, price);
						ClearFishID(playerid, 4);
				    }
				    case 5:
				    {
				        if(Fishes[playerid][pWeight5] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Minket csak 20 KG súlyú vagy annál nagyobb halak érdekelnek !");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid5]);
                        price = price * Fishes[playerid][pWeight5];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Hal~n~~r~Eladva", 3000, 1);
                        format(string, sizeof(string), "* Eladtad %s a %d kg súlyú haladat, ennyiért: %dFt.", Fishes[playerid][pFish5],Fishes[playerid][pWeight5],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GiveMoney(playerid, price);
						ClearFishID(playerid, 5);
				    }
				}
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
				return 1;
			}
			else if(strcmp(x_nr,"cooked",true) == 0 || strcmp(x_nr,"sültek",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "Használat: /elad Sült [Sült száma!] [JátékosID/NévRészlet]");
					return 1;
				}
				new cookid = strval(tmp);
				if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Cook number cant be below 1 or above 5 !"); return 1; }
				else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Még nem sütötted meg az 1-es számú halat! "); return 1; }
				else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Még nem sütötted meg az 2-es számú halat!"); return 1; }
				else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Még nem sütötted meg az 3-as számú halat!"); return 1; }
				else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Még nem sütötted meg az 4-es számú halat!"); return 1; }
				else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Még nem sütötted meg az 5-ös számú halat!"); return 1; }
				tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "Használat: /elad Sült [Sült száma!] [JátékosID/NévRészlet]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
				        switch(cookid)
				        {
							case 1:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "*  %s adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "*  %s adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Ennek a játékosnak nincs több üres helye a listán!");
							        return 1;
							    }
							}
							case 2:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s..",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Ennek a játékosnak nincs több üres helye a listán!");
							        return 1;
							    }
							}
							case 3:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Ennek a játékosnak nincs több üres helye a listán!");
							        return 1;
							    }
							}
							case 4:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Ennek a játékosnak nincs több üres helye a listán!");
							        return 1;
							    }
							}
							case 5:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* adott neked %s súly: %d (használd: /cooked hogy megnézd).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Adtál %s Súly: %d neki: %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Ennek a játékosnak nincs több üres helye a listán!");
							        return 1;
							    }
							}
				        }//switch
				        ClearCookingID(playerid, cookid);
				    }//invalid giveplayerid
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ez a játékos nincs fent!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Ismeretlen név!");
			    return 1;
			}
		}
		return 1;
	}
	if(egyezik(cmd,"/fare"))
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pTaxiEngedely] > 0 || AMT(playerid, MUNKA_BUS))
			{
				
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "Nem vagy jármûben!");
					
				new kocsi = GetPlayerVehicleID(playerid);
				new Veh = GetVehicleModel(kocsi);
				
				if(TransportDuty[playerid] > 0 || Taxi[playerid][tDuty])
				{
				
					
				    if(Taxi[playerid][tDuty])
				    {
						Taxi[playerid][tDuty] = false;
						if(Taxi[playerid][tFizetes] > 0)
						{
							
							
							FrakcioSzef(FRAKCIO_ONKORMANYZAT,-Taxi[playerid][tFizetes]);
							FrakcioSzef(FRAKCIO_TAXI,floatround(Taxi[playerid][tFizetes]/2.0));
							PlayerInfo[playerid][pPayCheck] += floatround(Taxi[playerid][tFizetes]/2.0);
							SendFormatMessage(playerid,COLOR_YELLOW,"[TAXI]Szolgálati fizetség: %s Ft",FormatInt(Taxi[playerid][tFizetes]));
							Taxi[playerid][tFizetes] = 0;
						
						}
				    }
				    else if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				   
					if(IsValidDynamic3DTextLabel(TAXITEXT[kocsi])) DestroyDynamic3DTextLabel(TAXITEXT[kocsi]), TAXITEXT[kocsi]=INVALID_3D_TEXT_ID;
					SendClientMessage(playerid, COLOR_LIGHTBLUE," * Kiléptél a szolgálatból!");

					return 1;
				}
				else if(Veh == 431 || Veh == 437)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "Használat: /fare [price]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 500 || moneys > 1000) { SendClientMessage(playerid, COLOR_GREY, "Min 500 és max 1000"); return 1; }
					    BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid]= moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "Busz sofõr %s szolgálatban van, viteldíj: %dFT. ((/service bus))", sendername, TransportValue[playerid]);
	    				SendClientMessageToAll(TEAM_GROVE_COLOR,string);
					}
				}
			}
	    }
	    return 1;
 	}
 	if(strcmp(cmd,"/enni",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "Használat: /enni [1-5]");
				return 1;
			}
			new cookid = strval(tmp);
			if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "1-5"); return 1; }
			else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "Nincs kajád az 1es zsebedben!"); return 1; }
			else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "Nincs kajád az 2es zsebedben!"); return 1; }
			else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "Nincs kajád az 3as zsebedben!"); return 1; }
			else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "Nincs kajád az 4es zsebedben!"); return 1; }
			else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "Nincs kajád az 5ös zsebedben!"); return 1; }
            GetPlayerName(playerid, sendername, sizeof(sendername));
			
			
			new hp = 0;
			switch (cookid)
			{
				case 1:
				{
					if(Cooking[playerid][pCookID1] == 16 || Cooking[playerid][pCookID1] == 18)
						SetPlayerCriminal(playerid,255, "Veszélyeztetett fajú hal evése");
						
					
					SzuksegletAra(playerid,1,1000);
					hp = Cooking[playerid][pCWeight1];
					format(string, sizeof(string), "* Valaki evett %s.", Cooking[playerid][pCook1]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "* Megetted ezt: %s súllya: %d, kicsit jobban érzed magad tõle.",Cooking[playerid][pCook1], hp);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
				case 2:
				{
					if(Cooking[playerid][pCookID2] == 16 || Cooking[playerid][pCookID2] == 18)
						SetPlayerCriminal(playerid,255, "Veszélyeztetett fajú hal evése");
					
					SzuksegletAra(playerid,1,1000);
					hp = Cooking[playerid][pCWeight2];
					format(string, sizeof(string), "* Valaki evett %s.", Cooking[playerid][pCook2]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "* Megetted ezt: %s súllya: %d, kicsit jobban érzed magad tõle.",Cooking[playerid][pCook2], hp);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
				case 3:
				{
					if(Cooking[playerid][pCookID3] == 16 || Cooking[playerid][pCookID3] == 18)
						SetPlayerCriminal(playerid,255, "Veszélyeztetett fajú hal evése");
					
					SzuksegletAra(playerid,1,1000);
					hp = Cooking[playerid][pCWeight3];
					format(string, sizeof(string), "* Valaki evett %s.", Cooking[playerid][pCook3]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "* Megetted ezt: %s súllya: %d, kicsit jobban érzed magad tõle.",Cooking[playerid][pCook3], hp);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
				case 4:
				{
					if(Cooking[playerid][pCookID4] == 16 || Cooking[playerid][pCookID4] == 18)
						SetPlayerCriminal(playerid,255, "Veszélyeztetett fajú hal evése");
					
					SzuksegletAra(playerid,1,1000);
					hp = Cooking[playerid][pCWeight4];
					format(string, sizeof(string), "* Valaki evett %s.", Cooking[playerid][pCook4]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "* Megetted ezt: %s súllya: %d, kicsit jobban érzed magad tõle.",Cooking[playerid][pCook4], hp);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
				case 5:
				{
					if(Cooking[playerid][pCookID5] == 16 || Cooking[playerid][pCookID5] == 18)
						SetPlayerCriminal(playerid,255, "Veszélyeztetett fajú hal evése");
					
					SzuksegletAra(playerid,1,1000);
					hp = Cooking[playerid][pCWeight5];
					format(string, sizeof(string), "* Valaki evett %s.", Cooking[playerid][pCook5]);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					format(string, sizeof(string), "* Megetted ezt: %s súllya: %d, kicsit jobban érzed magad tõle.",Cooking[playerid][pCook5], hp);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
			}
			ClearCookingID(playerid, cookid);
			
	    }
	    return 1;
	}

  	if(egyezik(cmd,"/fõzés") || egyezik(cmd,"/cook"))
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(IsAtCookPlace(playerid))
	        {
	            new x_nr[256];
	            x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "Használat: /fõzés [típus]");
					SendClientMessage(playerid, COLOR_WHITE, "Használható nevek: utolsóhal, Hal, Csirke, Hamburger, Pizza.");
					return 1;
				}
				if(strcmp(x_nr,"utolsóhal",true) == 0)
				{
				    if(Fishes[playerid][pLastFish] > 0)
	        		{
					    new found = 0;
					    if(Cooking[playerid][pCWeight1] == 0)
					    {
						    format(string, sizeof(string), "Fõztél %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight2] == 0)
					    {
						    format(string, sizeof(string), "Fõztél %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight3] == 0)
					    {
						    format(string, sizeof(string), "Fõztél %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight3] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID3] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight4] == 0)
					    {
						    format(string, sizeof(string), "Fõztél  %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight4] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID4] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight5] == 0)
					    {
						    format(string, sizeof(string), "Fõztél  %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight5] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID5] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "  Üres a fõzés listád !");
					        return 1;
					    }
					    if(found)
					    {
					        ClearFishID(playerid, Fishes[playerid][pLastFish]);
				            Fishes[playerid][pLastFish] = 0;
				            Fishes[playerid][pFishID] = 0;
					    }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Nincs halad !");
				        return 1;
				    }
				}
				else if(strcmp(x_nr,"Hal",true) == 0)
				{
				    new found = 0;
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "Használat: /fõzés hal [id]");
						return 1;
					}
					new fishid = strval(tmp);
					if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Válaszd ki melyiked sütöd meg. ((1 és 5 között !))"); return 1; }
					else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Nincsen hall ebben (1) !"); return 1; }
					else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Nincsen hall ebben (2) !"); return 1; }
					else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Nincsen hall ebben (3) !"); return 1; }
					else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Nincsen hall ebben (4) !"); return 1; }
					else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Nincsen hall ebben (5) !"); return 1; }
					if(Cooking[playerid][pCWeight1] == 0)
					{
					    if(fishid == 1)
					    {
						    format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish1]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight1];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid1];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
					    	SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
					    }
						else if(fishid == 2)
					 	{
						    format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight2] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
						    format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight3] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
    					}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						found = 1;
   					}
					else if(Cooking[playerid][pCWeight4] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
    					}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight5] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "Fõztél%s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						found = 1;
   					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Üres a fõzés listád!");
					    return 1;
		    		}
					if(found)
					{
					    ClearFishID(playerid, fishid);
						Fishes[playerid][pLastFish] = 0;
			   			Fishes[playerid][pFishID] = 0;
					}
				}
				else if(strcmp(x_nr,"Csirke",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
				    {//Cluckin Bell
				        if(Groceries[playerid][pChicken] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "csirkét");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "csirkét");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "csirkét");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "csirkét");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "csirkét");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Üres a fõzés litád !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Nincsen csirkéd !");
				            return 1;
				        }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   A Cluckin Bell kell lenned, hogy tudj fõzni !");
					    return 1;
				    }
				}
				else if(strcmp(x_nr,"hamburger",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078))
					{//Burgershot
					    if(Groceries[playerid][pHamburger] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "Készítettél egy Hamburgert");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "Készítettél egy Hamburgert");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "Készítettél egy Hamburgert");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "Készítettél egy Hamburgert");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "Készítettél egy Hamburgert");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Üres a fõzés listád !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Nincs nálad Hamburger !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Burger Shot-be kell lenned, hogy megcsinálhasd !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"pizza",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
					{//Well Stacked Pizza
					    if(Groceries[playerid][pPizza] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "Készítettél egy Pizza-t");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "Készítettél egy Pizza-t");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "Készítettél egy Pizza-t");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "Készítettél egy Pizza-t");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "Készítettél egy Pizza-t");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Készítettél egy  %s, súlya: %d  LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Üres a fõzés listád !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Nincsen pizza-d !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Well Stacked-be kell lenned, hogy megcsinálhasd !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Rosz fõzési név !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Itt nem tudsz Fõzni menj valameik étterembe:(Cluckin Bell / Burger Shot / Well Stacked Pizza).");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(egyezik(cmd,"/megfõzve") || egyezik(cmd,"/cooked"))
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Megfõzve__________________|");
	        format(string, sizeof(string), "** (1) Sütve: %s.   Tömege: %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2) Sütve: %s.   Tömege: %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3) Sütve: %s.   Tömege: %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4) Sütve: %s.   Tömege: %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5) Sütve: %s.   Tömege: %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		}
	    return 1;
 	}
	if(strcmp(cmd,"/fish",true)==0)// /fish helyére
    {
        if(IsPlayerConnected(playerid))
	    {
			if(!PlayerInfo[playerid][pHorgaszBot])
			{
	            SendClientMessage(playerid, COLOR_GREY, "Nincs nálad horgász bot!");
				return 1;
			}
			if(!PlayerInfo[playerid][pCsali])
			{
				SendClientMessage(playerid, COLOR_GREY, "Nincs nálad csali!");
				return 1;
			}

			if(FloodCheck(playerid)) return 1;

			if(Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Már van 5db halad! Add el / süsd meg / dobd vissza!");
	            return 1;
	        }
			new Tud;
			new car = GetClosestVehicle(playerid);
			if(GetPlayerDistanceFromVehicle(playerid, car) < 5.5 && IsABoat(car))
			{
				Tud = 1;
			}
	        if(IsAtFishPlace(playerid) || Tud == 1)
	        {
	            new Caught;
	            new rand;
	            new fstring[MAX_PLAYER_NAME];
	            new Level = PlayerInfo[playerid][pFishSkill];
	            if(Level >= 0 && Level <= 50) { Caught = random(20)-7; }
	            else if(Level >= 51 && Level <= 100) { Caught = random(70)-20; }
	            else if(Level >= 101 && Level <= 200) { Caught = random(130)-50; }
	            else if(Level >= 201 && Level <= 400) { Caught = random(180)-60; }
	            else if(Level >= 401) { Caught = random(300)-70; }
	            rand = random(MAX_FISH_NAMES);
				PlayerInfo[playerid][pCsali] --;
	            if(Caught <= 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "A zsinor elszakadt!");
	                return 1;
	            }
	            else if(rand == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Fogtál egy kabátot. Visszadobtad.");
	                return 1;
	            }
	            else if(rand == 4)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Fogtál egy döglött halat, amit valószínüleg megmérgeztek, ezért visszadobtad");
	                return 1;
	            }
	            else if(rand == 7)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Fogtál egy rothadt almát, amit kidobsz.");
	                return 1;
	            }
	            else if(rand == 10)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Fogtál két pár büdös cipõt, nem illik rád, és a szaga is irritáló, ezért visszadobtad");
	                return 1;
	            }
	            else if(rand == 13)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "Fogtál egy szemeteszsákot, mivel nagyon bûzlik, visszadobod");
	                return 1;
	            }
	            else if(rand == 20)
	            {
	                new mrand;
					if(PlayerInfo[playerid][pConnectTime] > 10) mrand = random(PlayerInfo[playerid][pConnectTime] * 2);
					else mrand = random(200);
	                format(string, sizeof(string), "* Kifogtál egy pénztárcát. A tartalma %dFt, és becsületesen el is rakod!", mrand);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	                GiveMoney(playerid, mrand);
	                return 1;
	            }
		        if(PlayerInfo[playerid][pFishLic] < 1)
		        {
					if(!egyezik(PlayerCrime[playerid][pVad],"Hackerkedés!") &&  !egyezik(PlayerCrime[playerid][pVad],"Elsõfokú Gyilkos"))
					{
						SetPlayerCriminal(playerid,255, "Illegális horgászás!");
					}
				}
		        if(Fishes[playerid][pWeight1] == 0)
		        {
		        	PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
					if(Tud == 1)
					{
						new Float:cX, Float:cY, Float:cZ;
						GetVehiclePos(car, cX, cY, cZ);
						if(GetPlayerDistanceFromPoint(playerid, 0.0, 0.0, cZ) > 15000)
						{
							Caught += (GetPlayerDistanceFromPoint(playerid, 0.0, 0.0, cZ)-13000) / 100;
						}
					}
					Fishes[playerid][pWeight1] = Caught;
					format(string, sizeof(string), "* Kifogtál egy %s-t, melynek tömege %dkg", Fishes[playerid][pFish1], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 1;
					Fishes[playerid][pFid1] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* A régi %dkg-os rekordodat megdöntötte ez a nagyobb tömegû hal: %dkg", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
     			}
		        else if(Fishes[playerid][pWeight2] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
					if(Tud == 1)
					{
						new Float:cX, Float:cY, Float:cZ;
						GetVehiclePos(car, cX, cY, cZ);
						if(GetPlayerDistanceFromPoint(playerid, 0.0, 0.0, cZ) > 15000)
						{
							Caught += (GetPlayerDistanceFromPoint(playerid, 0.0, 0.0, cZ)-13000) / 100;
						}
					}
					Fishes[playerid][pWeight2] = Caught;
					format(string, sizeof(string), "* Kifogtál egy %s-t, melynek tömege %dkg", Fishes[playerid][pFish2], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 2;
					Fishes[playerid][pFid2] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* A régi %dkg-os rekordodat megdöntötte ez a nagyobb tömegû hal: %dkg", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight3] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
					if(Tud == 1)
					{
						new Float:cX, Float:cY, Float:cZ;
						GetVehiclePos(car, cX, cY, cZ);
						if(GetPlayerDistanceFromPoint(playerid, 0.0, 0.0, cZ) > 15000)
						{
							Caught += (GetPlayerDistanceFromPoint(playerid, 0.0, 0.0, cZ)-13000) / 100;
						}
					}
					Fishes[playerid][pWeight3] = Caught;
					format(string, sizeof(string), "* Kifogtál egy %s-t, melynek tömege %dkg", Fishes[playerid][pFish3], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 3;
					Fishes[playerid][pFid3] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* A régi %dkg-os rekordodat megdöntötte ez a nagyobb tömegû hal: %dkg", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight4] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
					if(Tud == 1)
					{
						new Float:cX, Float:cY, Float:cZ;
						GetVehiclePos(car, cX, cY, cZ);
						if(GetPlayerDistanceFromPoint(playerid, 0.0, 0.0, cZ) > 15000)
						{
							Caught += (GetPlayerDistanceFromPoint(playerid, 0.0, 0.0, cZ)-13000) / 100;
						}
					}
					Fishes[playerid][pWeight4] = Caught;
					format(string, sizeof(string), "* Kifogtál egy %s-t, melynek tömege %dkg", Fishes[playerid][pFish4], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 4;
					Fishes[playerid][pFid4] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* A régi %dkg-os rekordodat megdöntötte ez a nagyobb tömegû hal: %dkg", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight5] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
					if(Tud == 1)
					{
						new Float:cX, Float:cY, Float:cZ;
						GetVehiclePos(car, cX, cY, cZ);
						if(GetPlayerDistanceFromPoint(playerid, 0.0, 0.0, cZ) > 15000)
						{
							Caught += (GetPlayerDistanceFromPoint(playerid, 0.0, 0.0, cZ)-13000) / 100;
						}
					}
					Fishes[playerid][pWeight5] = Caught;
					format(string, sizeof(string), "* Kifogtál egy %s-t, melynek tömege %dkg", Fishes[playerid][pFish5], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 5;
					Fishes[playerid][pFid5] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* A régi %dkg-os rekordodat megdöntötte ez a nagyobb tömegû hal: %dkg", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "Nincs hely a halaidnak!");
		            return 1;
		        }
	            if(PlayerInfo[playerid][pFishSkill] == 50)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* A horgászási képeséged megnõtt! Így nagyobb halakat tudsz kifogni! (Szint 2)"); }
				else if(PlayerInfo[playerid][pFishSkill] == 250)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* A horgászási képeséged megnõtt! Így nagyobb halakat tudsz kifogni! (Szint 3)"); }
				else if(PlayerInfo[playerid][pFishSkill] == 500)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* A horgászási képeséged megnõtt! Így nagyobb halakat tudsz kifogni! (Szint 4)"); }
				else if(PlayerInfo[playerid][pFishSkill] == 1000)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* A horgászási képeséged megnõtt! Így nagyobb halakat tudsz kifogni! (Szint 5)"); }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Nem vagy a horgászóhelynél!");
	            return 1;
	        }
	    }
	    return 1;
 	}

	if(strcmp(cmd,"/fishes",true)==0 || strcmp(cmd,"/halak",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Halaid __________________|");
	        format(string, sizeof(string), "** (1.) Hal: %s.   Súlya: %d kg.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2.) Hal: %s.   Súlya: %d kg.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3.) Hal: %s.   Súlya: %d kg.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4.) Hal: %s.   Súlya: %d kg.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5.) Hal: %s.   Súlya: %d kg.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		}
	    return 1;
 	}
	if(strcmp(cmd,"/releasefish",true)==0 || strcmp(cmd,"/visszadob",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Használat: /releasefish [hal]");
				return 1;
			}
			new fishid = strval(tmp);
			if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "A hal száma 1-5 lehet!"); return 1; }
			else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "Visszadobtad a halat! (1.)"); Fishes[playerid][pFish1]=0; Fishes[playerid][pWeight1] = 0;return 1; }
			else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "Visszadobtad a halat! (2.)"); Fishes[playerid][pFish2]=0; Fishes[playerid][pWeight2] = 0;return 1; }
			else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "Visszadobtad a halat! (3.)"); Fishes[playerid][pFish3]=0; Fishes[playerid][pWeight3] = 0;return 1; }
			else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "Visszadobtad a halat! (4.)"); Fishes[playerid][pFish4]=0; Fishes[playerid][pWeight4] = 0;return 1; }
			else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "Visszadobtad a halat! (5.)"); Fishes[playerid][pFish5]=0; Fishes[playerid][pWeight5] = 0;return 1; }
			ClearFishID(playerid, fishid);
			Fishes[playerid][pLastFish] = 0;
   			Fishes[playerid][pFishID] = 0;
			PlayerInfo[playerid][pFishes]=PlayerInfo[playerid][pFishes]-1;
		}
		return 1;
	}
	if(strcmp(cmd,"/throwback",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Fishes[playerid][pLastFish] > 0)
	        {
	            ClearFishID(playerid, Fishes[playerid][pLastFish]);
	            Fishes[playerid][pLastFish] = 0;
	            Fishes[playerid][pFishID] = 0;
				PlayerInfo[playerid][pFishes]=PlayerInfo[playerid][pFishes]-1;
				SendClientMessage(playerid, COLOR_GREY, "Vissza dobtad az utoljára kifogot haladat!");
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Nem fogtál halat!");
	            return 1;
	        }
	    }
	    return 1;
 	}
 	if(strcmp(cmd,"/throwbackall",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFishes] > 0)
	        {
	            ClearFishes(playerid);
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
				PlayerInfo[playerid][pFishes]=0;
				SendClientMessage(playerid, COLOR_GREY, "Vissza dobtad az összes haladat!");
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Nem fogtál halat még!");
	            return 1;
	        }
	    }
	    return 1;
 	}
 	if(strcmp(cmd,"/showlicenses",true)==0 || strcmp(cmd,"/engedelyek",true)==0 || strcmp(cmd,"/engedélyek",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Használat: /engedélyek [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (GetDistanceBetweenPlayers(playerid, giveplayerid) < 8.0)
					{
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    new text1[6];
				        new text2[6];
				        new text3[6];
				        new text4[6];
				        new text5[6];
						new text6[6];
				        new text7[6];
						new text8[6];
						new text9[6];
						new text10[6];
						if(PlayerInfo[playerid][pCarLic] > 0) { text1 = "Van"; } else { text1 = "Nincs"; }
                        if(PlayerInfo[playerid][pFlyLic] > 0) { text4 = "Van"; } else { text4 = "Nincs"; }
						if(PlayerInfo[playerid][pBoatLic] > 0) { text2 = "Van"; } else { text2 = "Nincs"; }
				        if(PlayerInfo[playerid][pFishLic] > 0) { text3 = "Van"; } else { text3 = "Nincs"; }
				        if(PlayerInfo[playerid][pGunLic] > 0) { text5 = "Van"; } else { text5 = "Nincs"; }
						if(PlayerInfo[playerid][pMotorJogsi] > 0) { text6 = "Van"; } else { text6 = "Nincs"; }
				        if(PlayerInfo[playerid][pKamionJogsi] > 0) { text7 = "Van"; } else { text7 = "Nincs"; }
				        if(PlayerInfo[playerid][pAdrJogsi] > 0) { text8 = "Van"; } else { text8 = "Nincs"; }
						if(PlayerInfo[playerid][pKreszJogsi] > 0) { text9 = "Van"; } else { text9 = "Nincs"; }
						if(PlayerInfo[playerid][pHeliLic] > 0) { text10 = "Van"; } else { text10 = "Nincs"; }

				        format(string, sizeof(string), "|__________%s Engedélyei __________|", sendername);
				        SendClientMessage(giveplayerid, COLOR_WHITE, string);


						if(PlayerInfo[playerid][pKreszJogsi] > 0)
							format(string, sizeof(string), "** KRESZ jogsi: %s - Lejár: %d hónap((óra)) múlva.", text9, PlayerInfo[playerid][pKreszJogsi]);
						else
							format(string, sizeof(string), "** KRESZ jogsi: %s - Lejár: lejárt.", text9);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						if(PlayerInfo[playerid][pCarLic] > 0)
							format(string, sizeof(string), "** Autó jogsi: %s - Lejár: %d hónap((óra)) múlva.", text1, PlayerInfo[playerid][pCarLic]);
						else
							format(string, sizeof(string), "** Autó jogsi: %s - Lejár: lejárt.", text1);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						if(PlayerInfo[playerid][pMotorJogsi] > 0)
							format(string, sizeof(string), "** Motor jogsi: %s - Lejár: %d hónap((óra)) múlva.", text6, PlayerInfo[playerid][pMotorJogsi]);
						else
							format(string, sizeof(string), "** Motor jogsi: %s - Lejár: lejárt.", text6);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						if(PlayerInfo[playerid][pKamionJogsi] > 0)
							format(string, sizeof(string), "** Kamion jogsi: %s - Lejár: %d hónap((óra)) múlva.", text7, PlayerInfo[playerid][pKamionJogsi]);
						else
							format(string, sizeof(string), "** Kamion jogsi: %s - Lejár: lejárt.", text7);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						if(PlayerInfo[playerid][pAdrJogsi] > 0)
							format(string, sizeof(string), "** ADR jogsi: %s - Lejár: %d hónap((óra)) múlva.", text8, PlayerInfo[playerid][pAdrJogsi]);
						else
							format(string, sizeof(string), "** ADR jogsi: %s - Lejár: lejárt.", text8);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						
						if(PlayerInfo[playerid][pFlyLic] > 0)
							format(string, sizeof(string), "** Repülõ engedély: %s - Lejár: %d hónap((óra)) múlva.", text4, PlayerInfo[playerid][pFlyLic]);
						else
							format(string, sizeof(string), "** Repülõ engedély: %s - Lejár: lejárt.", text4);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						
						if(PlayerInfo[playerid][pHeliLic] > 0)
							format(string, sizeof(string), "** Helikopter engedély: %s - Lejár: %d hónap((óra)) múlva.", text10, PlayerInfo[playerid][pHeliLic]);
						else
							format(string, sizeof(string), "** Helikopter engedély: %s - Lejár: lejárt.", text10);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						
						if(PlayerInfo[playerid][pBoatLic] > 0)
							format(string, sizeof(string), "** Hajó engedély: %s - Lejár: %d hónap((óra)) múlva.", text2, PlayerInfo[playerid][pBoatLic]);
						else
							format(string, sizeof(string), "** Hajó engedély: %s - Lejár: lejárt.", text2);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						if(PlayerInfo[playerid][pFishLic] > 0)
							format(string, sizeof(string), "** Horgász engedély: %s - Lejár: %d hónap((óra)) múlva.", text3, PlayerInfo[playerid][pFishLic]);
						else
							format(string, sizeof(string), "** Horgász engedély: %s - Lejár: lejárt.", text3);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						
						if(PlayerInfo[playerid][pGunLic] > 0)
							format(string, sizeof(string), "** Fegyver engedély: %s - Lejár: %d hónap((óra)) múlva.", text5, PlayerInfo[playerid][pGunLic]);
						else
							format(string, sizeof(string), "** Fegyver engedély: %s - Lejár: lejárt.", text5);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						
						if(PlayerInfo[playerid][pSpecialJogsiKm] > 0.0)
							format(string, sizeof(string), "** [SPECIÁLIS JOGOSÍTVÁNY] Megnevezés: %s, KM: %.3f",PlayerInfo[playerid][pSpecialJogsiNev],PlayerInfo[playerid][pSpecialJogsiKm]/1000.0);
						else
							format(string, sizeof(string), "** [SPECIÁLIS JOGOSÍTVÁNY] Megnevezés: NINCS");
							
						SendClientMessage(giveplayerid, COLOR_GREY, string);						
							
			
						format(string, sizeof(string), "* %s megmutatta neked az engedélyeit.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Megmutattad az engedélyeidet neki: %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Valaki elõvette az egyik iratát és felmutatta...");
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Ez a játékos nincs a közelben!");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   A játékos nincs fennt!");
	            return 1;
	        }
		}
	    return 1;
 	}

	if(egyezik(cmd,"/lakcímkártya") || egyezik(cmd,"/lakcimkartya"))
    {
		if(params < 1) return Msg(playerid, "/lakcimkartya [vesz/felmutat/megnéz]");
		if(egyezik(param[1], "felmutat"))
		{
			if(PlayerInfo[playerid][pLakcimkartya] < 1) return Msg(playerid, "Nincs lakcímkártyád!");
			if(params < 2) return Msg(playerid, "/lakcimkartya felmutat [Név/ID]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "   A játékos nincs fennt!");
			if(GetDistanceBetweenPlayers(playerid, giveplayerid) > 8.0) return SendClientMessage(playerid, COLOR_GREY, "   Ez a játékos nincs a közelben!");
			if(KozelsegEllenoriz(playerid)) return SendClientMessage(playerid, COLOR_GREY, "   Ez a játékos nincs a közelben!");
			if(PlayerInfo[playerid][pHamisNev] == 0)
				SendFormatMessage(giveplayerid, COLOR_GRAD2, "=== %s lakcímkártyája ===", ICPlayerName(playerid));
			else
				SendFormatMessage(giveplayerid, COLOR_GRAD2, "=== %s lakcímkártyája ===", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
			if(PlayerInfo[playerid][pHamisNev] == 0)
				SendFormatMessage(giveplayerid, COLOR_GRAD2,"Neve: %s", ICPlayerName(playerid));
			else
				SendFormatMessage(giveplayerid, COLOR_GRAD2, "Neve: %s", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
			if(PlayerInfo[playerid][pPhousekey] != NINCS) SendFormatMessage(giveplayerid, COLOR_GRAD2, "Ház: Class utca %d", PlayerInfo[playerid][pPhousekey]);
			if(PlayerInfo[playerid][pPhousekey2] != NINCS) SendFormatMessage(giveplayerid, COLOR_GRAD2, "Ház: Class utca %d", PlayerInfo[playerid][pPhousekey2]);
			if(PlayerInfo[playerid][pPhousekey3] != NINCS) SendFormatMessage(giveplayerid, COLOR_GRAD2, "Ház: Class utca %d", PlayerInfo[playerid][pPhousekey3]);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Megmutattad az lakcímkártyád neki: %s.", ICPlayerName(giveplayerid));
			Cselekves(playerid, "elõvette az egyik iratát és felmutatta...", 1);
		}
		else if(egyezik(param[1], "vesz"))
		{
			if(!PlayerToPoint(2, playerid, 362.3623,209.2845,1008.3828)) return Msg(playerid, "Városházán elsõ iroda jobra! [50,000Ft][48 Hónapig érvényes((Óra))]");
			if(PlayerInfo[playerid][pLakcimkartya] > 0) return Msg(playerid, "Már van lakcímkártyád!");
			if(!BankkartyaFizet(playerid, 30000)){ Msg(playerid, "Lakcímkártya ára: 30,000Ft"); return 1; }
			Msg(playerid, "Lakcímkártya megvéve! [48 Hónapig érvényes((Óra))]");
			PlayerInfo[playerid][pLakcimkartya] = 48;
			Cselekves(playerid, "vett egy lakcímkártyát");
			return 1;
		}
		else if(egyezik(param[1], "megnéz") || egyezik(param[1], "megnez"))
		{
			if(PlayerInfo[playerid][pLakcimkartya] < 1) return Msg(playerid, "Nincs lakcímkártyád!");
			new neme[32];
			if(PlayerInfo[playerid][pSex] == 1)
				neme = "Férfi";
			else if(PlayerInfo[playerid][pSex] == 2)
				neme = "Nõ";
			else
				neme = "Semleges ((??))";
			SendClientMessage(playerid, COLOR_GRAD1, "====== Lakcímkártyád ======");
			SendFormatMessage(giveplayerid, COLOR_GRAD2, "Neve: %s", ICPlayerName(playerid));
			if(PlayerInfo[playerid][pPhousekey] != NINCS) SendFormatMessage(playerid, COLOR_GRAD2, "Ház: Class utca %d", PlayerInfo[playerid][pPhousekey]);
			if(PlayerInfo[playerid][pPhousekey2] != NINCS) SendFormatMessage(playerid, COLOR_GRAD2, "Ház: Class utca %d", PlayerInfo[playerid][pPhousekey2]);
			if(PlayerInfo[playerid][pPhousekey3] != NINCS) SendFormatMessage(playerid, COLOR_GRAD2, "Ház: Class utca %d", PlayerInfo[playerid][pPhousekey3]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Érvényes: %d hónapig((óráig))!", PlayerInfo[playerid][pLakcimkartya]);
			Cselekves(playerid, "elõvette az egyik iratát és felmutatta...", 0);
		}
		else return Msg(playerid, "Funkciók: Vesz, Felmutat");
	    return 1;
 	}
	if(strcmp(cmd,"/személyi",true)==0 || strcmp(cmd,"/szemelyi",true)==0 || strcmp(cmd,"/showic",true)==0)
    {
		if(params < 1) return Msg(playerid, "/személyi [vesz/felmutat/megnéz]");
		if(egyezik(param[1], "felmutat"))
		{
			if(PlayerInfo[playerid][pSzemelyi] < 1) return Msg(playerid, "Nincs személyid!");
			if(params < 2) return Msg(playerid, "/személyi felmutat [Név/ID]");
			giveplayerid = ReturnUser(param[2]);
			if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "   A játékos nincs fennt!");
			if(GetDistanceBetweenPlayers(playerid, giveplayerid) > 8.0) return SendClientMessage(playerid, COLOR_GREY, "   Ez a játékos nincs a közelben!");
			new neme[32];
			if(PlayerInfo[playerid][pSex] == 1)
				neme = "Férfi";
			else if(PlayerInfo[playerid][pSex] == 2)
				neme = "Nõ";
			else
				neme = "Semleges ((??))";
			if(PlayerInfo[playerid][pHamisNev] == 0)
				SendFormatMessage(giveplayerid, COLOR_GRAD2, "=== %s személyi igazolványa ===", ICPlayerName(playerid));
			else
				SendFormatMessage(giveplayerid, COLOR_GRAD2, "=== %s személyi igazolványa ===", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
			if(PlayerInfo[playerid][pHamisNev] == 0)
				SendFormatMessage(giveplayerid, COLOR_GRAD2,"Neve: %s", ICPlayerName(playerid));
			else
				SendFormatMessage(giveplayerid, COLOR_GRAD2, "Neve: %s", ICPlayerNameString(PlayerInfo[playerid][pHamisNev]));
			SendFormatMessage(giveplayerid, COLOR_GRAD2, "%d éves", PlayerInfo[playerid][pAge]);
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Megmutattad az személyid neki: %s.", ICPlayerName(giveplayerid));
			Cselekves(playerid, "elõvette az egyik iratát és felmutatta...", 0);
		}
		else if(egyezik(param[1], "vesz"))
		{
			if(!PlayerToPoint(2, playerid, 362.3623,209.2845,1008.3828)) return Msg(playerid, "Városházán elsõ iroda jobra! [50,000Ft][48 Hónapig érvényes((Óra))]");
			if(PlayerInfo[playerid][pSzemelyi] > 3) return Msg(playerid, "Még nem újíthatod meg, csak lejárat elõtt 4 hónappal((óra))!");
			if(!BankkartyaFizet(playerid, 50000)){ Msg(playerid, "Személyi ára: 50,000Ft"); return 1; }
			Msg(playerid, "Személyi megvéve! [48 Hónapig érvényes((Óra))]");
			PlayerInfo[playerid][pSzemelyi] = 48;
			Cselekves(playerid, "vett egy személyi igazolványt...");
			return 1;
		}
		else if(egyezik(param[1], "megnéz") || egyezik(param[1], "megnez"))
		{
			if(PlayerInfo[playerid][pSzemelyi] < 1) return Msg(playerid, "Nincs személyid!");
			new neme[32];
			if(PlayerInfo[playerid][pSex] == 1)
				neme = "Férfi";
			else if(PlayerInfo[playerid][pSex] == 2)
				neme = "Nõ";
			else
				neme = "Semleges ((??))";
			SendClientMessage(playerid, COLOR_GRAD1, "====== Személyid ======");
			SendFormatMessage(playerid, COLOR_GRAD2, "Neve: %s", ICPlayerName(playerid));
			SendFormatMessage(playerid, COLOR_GRAD2, "%d éves", PlayerInfo[playerid][pAge]);
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Érvényes: %d hónapig((óráig))!", PlayerInfo[playerid][pSzemelyi]);
			Cselekves(playerid, "elõvette az egyik iratát és felmutatta...", 0);
		}
		else return Msg(playerid, "Funkciók: Vesz, Felmutat, Megnéz");
	    return 1;
 	}

	/*if(strcmp(cmd,"/forgalmi",true)==0)
    {
    	if(params != 1)
			return SendClientMessage(playerid, COLOR_WHITE, "Használata: /forgalmi [Játékos]");
			
		new jatekos = ReturnUser(param[1]);
		if(jatekos != INVALID_PLAYER_ID)
		{
		    if(ProxDetectorS(8.0, playerid, jatekos))
			{
				SendFormatMessage(jatekos, COLOR_WHITE, "=== %s forgalmija ===", PlayerName(jatekos));
				new van=false;
				if(PlayerInfo[playerid][pPcarkey] != NINCS)
				{
				    new carid = PlayerInfo[playerid][pPcarkey];
					new rendszam = CarInfo[carid][cId];
					new kocsi = CarInfo[carid][cModel] - 400;
					SendFormatMessage(jatekos, COLOR_GREY, "Saját jármû rendszáma: %d | Model: %s", rendszam, vehName[kocsi]);
					van = true;
				}
				if(PlayerInfo[playerid][pPcarkey2] != NINCS)
				{
					new carid = PlayerInfo[playerid][pPcarkey2];
					new rendszam = CarInfo[carid][cId];
					new kocsi = CarInfo[carid][cModel] - 400;
					SendFormatMessage(jatekos, COLOR_GREY, "Saját jármû rendszáma: %d | Model: %s", rendszam, vehName[kocsi]);
					van = true;
				}
				if(PlayerInfo[playerid][pPcarkey3] != NINCS)
				{
					new carid = PlayerInfo[playerid][pPcarkey3];
					new rendszam = CarInfo[carid][cId];
					new kocsi = CarInfo[carid][cModel] - 400;
					SendFormatMessage(jatekos, COLOR_GREY, "Saját jármû rendszáma: %d | Model: %s", rendszam, vehName[kocsi]);
					van = true;
				}
				if(!van)
					SendClientMessage(jatekos, COLOR_GRAD2, "Saját autó rendszáma: Nincs");

				if(HireCar[playerid] != NINCS)
				{
					new rendszam = HireCar[playerid];
					new kocsi = GetVehicleModel(rendszam) - 400;
					SendFormatMessage(jatekos, COLOR_GREY, "Bérelt jármû rendszáma: %d | Model: %s", rendszam, vehName[kocsi]);
				}
				else
					SendClientMessage(jatekos, COLOR_GRAD2, "Bérelt jármû rendszáma: Nem bérelt jármûvet");

				if(JarmuKulcs[playerid] != NINCS && IsVehicleConnected(JarmuKulcs[playerid]))
				{
					new rendszam = JarmuKulcs[playerid];
					new kocsi = GetVehicleModel(rendszam) - 400;
					SendFormatMessage(jatekos, COLOR_GREY, "Kölcsön jármû rendszáma: %d | Model: %s", rendszam, vehName[kocsi]);
				}

				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Megmutattad a forgalmid neki: %s", PlayerName(jatekos));
				Cselekves(playerid, "Valaki elõvette az egyik iratát és felmutatta", NINCS);
				return 1;
			} else {
			    SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Ez a játékos nincs a közeledben!");
			    return 1;
			}
		} else {
	        SendClientMessage(playerid, COLOR_LIGHTRED, "[Hiba]: Nincs ilyen játékos!");
	        return 1;
	    }
 	}*/
	if(egyezik(cmd,"/forgalmi"))
	{
		if(Nincsbelepve(playerid)) return 1;
		if(params < 1) return Msg(playerid,"Használata: /forgalmi [Név / ID]");
		new player = ReturnUser(param[1]);
		if(!IsPlayerConnected(player) || player == INVALID_PLAYER_ID) return Msg(playerid, "Nem online!");
		if(GetDistanceBetweenPlayers(playerid, player) < 8.0)
		{
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid,"Csak jármûbõl!");
			new kocsi = GetPlayerVehicleID(playerid);
			if(IsABicikli(kocsi)) return Msg(playerid,"Jó bicikli lenne ez :)");
			new vantulaj = IsAVsKocsi(kocsi);
			new frakcio;
			new id = NINCS;
			for(new k = 0; k < MAX_FRAKCIOKOCSI; k++)
			{
				for(new kk = 0; kk  <MAX_FRAKCIO; kk++)
				{
					if(!FrakcioKocsi[kk][k][fVan]) continue;
					
					if(FrakcioKocsi[kk][k][fVan] && FrakcioKocsi[kk][k][fID] == kocsi)
					{
						frakcio=kk;
						id = k;
						break;
					}
				}
			}
			SendClientMessage(player,COLOR_LIGHTRED,"~~~~~ Forgalmi engedély ~~~~~");
			SendFormatMessage(player,COLOR_LIGHTBLUE,"Rendszám: CLS - %d ",kocsi);
			if(vantulaj != NINCS)
				SendFormatMessage(player,COLOR_LIGHTBLUE,"Jármû tulajdonos: %s",CarInfo[vantulaj][cOwner]);
			else		
				SendFormatMessage(player,COLOR_LIGHTBLUE,"Jármû tulajdonos: %s","Céges tulajdon");
			if(SajatKocsi(playerid,kocsi))
				SendClientMessage(player,COLOR_LIGHTBLUE,"A személynek használati joga a jármûhöz: {1F7300}VAN{009900}");
			else
				SendClientMessage(player,COLOR_LIGHTBLUE,"A személynek használati joga a jármûhöz: {FF0000}NINCS{009900}");	
			SendFormatMessage(player,COLOR_LIGHTBLUE,"Jármû típusa: %s ",GetVehicleModelName(GetVehicleModel(kocsi)-400));
			if(vantulaj != NINCS)
				SendFormatMessage(player,COLOR_LIGHTBLUE,"Jármû színkódja: %d & %d",CarInfo[vantulaj][cColorOne], CarInfo[vantulaj][cColorTwo]);
			else if(id != NINCS)
				SendFormatMessage(player,COLOR_LIGHTBLUE,"Jármû színkódja: %d & %d",FrakcioKocsi[frakcio][id][fSzin][0], FrakcioKocsi[frakcio][id][fSzin][1]);
			else	
				SendClientMessage(player,COLOR_LIGHTBLUE,"Jármû színkódja: Nincs bejegyezve");
			
			if(IsABenzines(kocsi))
			{
				SendClientMessage(player,COLOR_LIGHTBLUE,"Üzemanyag típusa: Benzin");
			}
			else if(IsADieseles(kocsi))	
			{
				SendClientMessage(player,COLOR_LIGHTBLUE,"Üzemanyag típusa: Diesel");
			}
			else if(IsAKerozinos(kocsi))
			{
				SendClientMessage(player,COLOR_LIGHTBLUE,"Üzemanyag típusa: Kerozin");
			}
			else
				SendClientMessage(player,COLOR_LIGHTBLUE,"Üzemanyag típusa: Nincs bejegyezve");
			
			/*SendFormatMessage(player,COLOR_LIGHTBLUE,"Az olaj %.2f százalékban elhasznált",OlajCsere[kocsi]/2);
			if(vantulaj != NINCS)
				SendFormatMessage(player,COLOR_LIGHTBLUE,"Futott km: %.2f km",KmSzamol[kocsi]/1000);
			else if(id != NINCS)
				SendFormatMessage(player,COLOR_LIGHTBLUE,"Futott km: %.2f km",KmSzamol[kocsi]/1000);*/ // SZERVIZKÖNYV	
			SendClientMessage(player,COLOR_LIGHTRED,"~~~~~ Forgalmi engedély ~~~~~");	
			Cselekves(playerid, "elõvette az auto forgalmiját a kesztyûtartóból és felmutatta...", 0);
		}
		else
		{
			Msg(playerid,"Õ nincs a közeledben");
			return 1;
		}	
	}	

    if(strcmp(cmd,"/frisk",true)==0 || strcmp(cmd,"/motoz",true)==0)
    {
		if(IsPlayerConnected(playerid))
		{
			if(FloodCheck(playerid)) return 1;
			giveplayerid = GetClosestPlayer(playerid);
			if(IsPlayerConnected(giveplayerid) || giveplayerid != INVALID_PLAYER_ID)
			{
				if(GetDistanceBetweenPlayers(playerid, giveplayerid) < 2.0)
				{
					if(giveplayerid == playerid)
						return Msg(playerid, "Magadat akarod megmotozni? -.-");
											   
					OnePlayAnim(playerid,"SPRAYCAN","spraycan_full",4.0,0,0,0,0,0);
					OnePlayAnim(playerid,"SPRAYCAN","spraycan_full",4.0,0,0,0,0,0);
					Msg(playerid, "|__________ Tárgyak a személynél __________|", false, COLOR_WHITE);
											   
					new kokain, heroin, marihuana;
					new drogmenny[32];
					new szoveg[32];
		 
					kokain += PlayerInfo[giveplayerid][pKokain];
					heroin += PlayerInfo[giveplayerid][pHeroin];
					marihuana += PlayerInfo[giveplayerid][pMarihuana];
											   
					if(kokain > 0)
					{
						if(kokain >= 1 && kokain<100)
							drogmenny = "Nagyon kevés";
						else if(kokain >= 100 && kokain <500)
							drogmenny = "Kevés";
						else if(kokain >= 500 && kokain >1000)
							drogmenny = "Sok";
						else if(kokain > 1001)
							drogmenny = "Nagyon sok";
													   
						format(szoveg, sizeof(szoveg), "- Kokain(%s)", drogmenny);
						SendClientMessage(playerid, COLOR_GREY, szoveg);
					}
											   
					if(heroin > 0)
					{
						if(heroin >= 1 && heroin<100)
							drogmenny = "Nagyon kevés";
						else if(heroin >= 100 && heroin <500)
							drogmenny = "Kevés";
						else if(heroin >= 500 && heroin >1000)
							drogmenny = "Sok";
						else if(heroin > 1001)
							drogmenny = "Nagyon sok";
		 
						format(szoveg, sizeof(szoveg), "- Heroin(%s)", drogmenny);
						SendClientMessage(playerid, COLOR_GREY, szoveg);
					}
											   
					if(marihuana > 0)
					{
						if(marihuana >= 1 && marihuana<100)
							drogmenny = "Nagyon kevés";
						else if(marihuana >= 100 && marihuana <500)
							drogmenny = "Kevés";
						else if(marihuana >= 500 && marihuana >1000)
							drogmenny = "Sok";
						else if(marihuana > 1001)
							drogmenny = "Nagyon sok";
			 
						format(szoveg, sizeof(szoveg), "- Marihuana(%s)", drogmenny);
						SendClientMessage(playerid, COLOR_GREY, szoveg);
					}
													   
					if(GetMoney(giveplayerid)>0)
						SendClientMessage(playerid, COLOR_GREY, "- Pénz");
		 
					if(PlayerInfo[giveplayerid][pMats] > 0)
						SendClientMessage(playerid, COLOR_GREY, "- Material");
		 
					if(Fishes[giveplayerid][pWeight1] > 0 || Fishes[giveplayerid][pWeight2] > 0 || Fishes[giveplayerid][pWeight3] > 0 || Fishes[giveplayerid][pWeight4] > 0 || Fishes[giveplayerid][pWeight5] > 0)
						SendClientMessage(playerid, COLOR_GREY, "- Hal");
		 
					if(PlayerInfo[giveplayerid][pPhoneBook] > 0)
						SendClientMessage(playerid, COLOR_GREY, "- Telefonkönyv");
		 
					if(PlayerInfo[giveplayerid][pCDPlayer] > 0)
						SendClientMessage(playerid, COLOR_GREY, "- MP4");
		 
					if(PlayerInfo[giveplayerid][pLokator] > 0)
						SendClientMessage(playerid, COLOR_GREY, "- GPS Lokátor");
		 
					if(PlayerInfo[giveplayerid][pCigi] > 0)
						SendClientMessage(playerid, COLOR_GREY, "- Cigaretta");
		 
					if(PlayerInfo[giveplayerid][pPia] > 0)
						SendClientMessage(playerid, COLOR_GREY, "- Üdítõ");
		 
					if(PlayerInfo[giveplayerid][pGyujto] > 0)
						SendClientMessage(playerid, COLOR_GREY, "- Gyujtó");
		 
					if(PlayerInfo[giveplayerid][pPnumber])
						SendClientMessage(playerid, COLOR_GREY, "- Telefon");
		 
					_tmpString = "";
					for(new w = 0; w < MAX_PLAYER_WEAPONS; w++)
					{
						if(!PlayerWeapons[giveplayerid][pWeapon][w]) continue;
						
						if(strlen(_tmpString) >= 100) SendClientMessage(playerid, COLOR_GREY, _tmpString), _tmpString = "";
						
						if(!strlen(_tmpString))
							format(_tmpString, 128, "Fegyver: %s", GunName(PlayerWeapons[giveplayerid][pWeapon][w]));
						else
							format(_tmpString, 128, "%s, %s", _tmpString, GunName(PlayerWeapons[giveplayerid][pWeapon][w]));
					}
					
					if(strlen(_tmpString))
						SendClientMessage(playerid, COLOR_GREY, _tmpString), _tmpString = "";
					else
						SendClientMessage(playerid, COLOR_GREY, "Fegyver: nincs");
						
					for(new w = 0; w < MAX_WEAPONS; w++)
					{
						if(!PlayerWeapons[giveplayerid][pAmmo][w]) continue;
						
						if(strlen(_tmpString) >= 100) SendClientMessage(playerid, COLOR_GREY, _tmpString), _tmpString = "";
						
						if(!strlen(_tmpString))
							format(_tmpString, 128, "Lõszer: %s[%ddb]", GunName(w), PlayerWeapons[giveplayerid][pAmmo][w]);
						else
							format(_tmpString, 128, "%s, %s[%ddb]", _tmpString, GunName(w), PlayerWeapons[giveplayerid][pAmmo][w]);
					}
					
					if(strlen(_tmpString))
						SendClientMessage(playerid, COLOR_GREY, _tmpString), _tmpString = "";
					else
						SendClientMessage(playerid, COLOR_GREY, "Lõszer: nincs");
		 
					Cselekves(playerid, "átkutatott valakit");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nincs a közeledben a játékos!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Nincs ilyen játékos !");
				return 1;
			}
		}
		return 1;
	}


	if(egyezik(cmd,"/sv") || egyezik(cmd,"/skinvedelem"))
	{
		if(!IsTerno(playerid) && !IsScripter(playerid)) return 1;
		if(SkinVed==1)
		{
			SkinVed=0;
			Msg(playerid, "Skin védés ki");
			return 1;
		}
		else
		{
			Msg(playerid, "Skin védés be");
			SkinVed=1;
			return 1;
		}
	}
	if(strcmp(cmd, "/contracttörlés", true) == 0 || strcmp(cmd, "/contracttorles", true) == 0)
	{
		if(IsDirector(playerid))
		{
			tmp = strtok(cmdtext, idx);
			giveplayerid = ReturnUser(tmp);
			if(params < 1) return Msg(playerid,"Használata: /contracttörlés [Név/ID]");
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				Msg(playerid, "Törölted róla a contractot!");
				PlayerInfo[giveplayerid][pHeadValue] = 0;
				return 1;
			}
			return Msg(playerid, "Nincs ilyen játékos");
		}
		return 1;
	}
	if(strcmp(cmd,"/portable",true)==0 || strcmp(cmd,"/hlaptop",true)==0)
	{
		if(!IsHitman(playerid)) return 1;
		if(ConnectedToPC[playerid] == 255)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Lekapcsolódtál az Ügynökség hálózatáról, és kikapcsoltad a laptopod");
			ConnectedToPC[playerid] = 0;
			return 1;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Bekapcsoltad a laptopod és rákapcsolódtál az Ügynökségre");
		SendClientMessage(playerid, COLOR_WHITE, "====[ Laptop ]====");
		if(IsDirector(playerid))
		{
			    SendClientMessage(playerid, COLOR_YELLOW, "| Felvétel | - /hitman Felvesz [név], majd /hitmannév [név] [hitmanneve]");
			    SendClientMessage(playerid, COLOR_YELLOW, "| Contract törlés | - /contracttörlés [név/id]");
		}
		SendClientMessage(playerid, COLOR_YELLOW2, "| - Tagok - Hírdetés");
		SendClientMessage(playerid, COLOR_YELLOW2, "| - Vérdíjak - Célpontok ");
		SendClientMessage(playerid, COLOR_YELLOW2, "| - Ruha - Lenyomoz - Álnév");
		SendClientMessage(playerid, COLOR_YELLOW2, "| - Rendelés - Bilincs - Munka");
		SendClientMessage(playerid, COLOR_YELLOW2, "| - Bomba - Bombatavol");
		SendClientMessage(playerid, COLOR_YELLOW2, "| - /jelvény2 - /méreg [id]");
		SendClientMessage(playerid, COLOR_YELLOW2, "| - /d2 - /felszólít2");
		ConnectedToPC[playerid] = 255;
	    return 1;
	}
	if(egyezik(cmd, "/get"))
	{
		Msg(playerid," /kanna");
	}	
	if(egyezik(cmd, "/kanna"))
	{
		if(FloodCheck(playerid)) return 1;
		
		if(params < 1) return Msg(playerid, "/kanna [Feltölt / Kiönt / Megnéz]"), Msg(playerid,"Kocsiba tölteni /fillcar");
		if(egyezik(param[1], "feltölt"))
		{
			new kut = IsAtGasStation(playerid);
			if(kut == NINCS) return Msg(playerid, "Nem vagy benzinkútnál");
			if(PlayerInfo[playerid][pFuel] >= 50) return Msg(playerid, "Tele a benzines kannád.");
			if(params < 2) return Msg(playerid, "/kanna feltölt [Benzin / Diesel / Kerozin]");
			if(egyezik(param[2], "benzin"))
			{	
				if(BenzinKutak[kut][bMelyikvan] == 1) return Msg(playerid,"Itt nincs benzin/diesel");
				if(params < 3) return Msg(playerid, "/kanna feltölt Benzin [Liter]");
				new liter = strval(param[3]);
				new price = liter * BenzinKutak[kut][bBenzinAra];
				if(liter < 1 || liter > 50) return Msg(playerid, "1-50 liter");
				if((liter + PlayerInfo[playerid][pFuel]) > 50)
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "* Enyi nem fér a kannádba! (%d Liter van benne)", PlayerInfo[playerid][pFuel]);
					return 1;
				}
				if((BenzinKutak[kut][bBenzin] - liter) < 0)
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "* Ezen a benzinkúton %d/10000 liter van, nem tudsz ennyit tankolni.", BenzinKutak[kut][bBenzin]);
					return 1;
				}

				if(!BankkartyaFizet(playerid, price))
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "* Nincs elég pénzed hogy %d litert tölts a kannádba.", liter);
					return 1;
				}
				if(PlayerInfo[playerid][pFuelTipus] == 1 || PlayerInfo[playerid][pFuelTipus] == 2 || PlayerInfo[playerid][pFuelTipus] == 3)
				{
					if(Biztos[playerid] != 1)
					{
						Msg(playerid,"Ebbe a kannába, más üzemanyag van, biztos, hogy rátöltesz másfélét és ezzel tönkreteszed?Írd be újra a parancsot ha igen");
						Biztos[playerid] = 1;
						return 1;
					}
				}	
				if(PlayerInfo[playerid][pFuelTipus] == 1 || PlayerInfo[playerid][pFuelTipus] == 2 || PlayerInfo[playerid][pFuelTipus] == 3)
				{		
						PlayerInfo[playerid][pFuelTipus] = 3;
				}
				else
					PlayerInfo[playerid][pFuelTipus] = 0;
				
				pTankolas[playerid][pLiter] = 0;
				pTankolas[playerid][pUzAr] = 0;
				BenzinKutak[kut][bBenzin] -= liter;
				PlayerInfo[playerid][pFuel] += liter;
				BenzinKutak[kut][bSzef] += price;
				pTankolas[playerid][pTipusa] = "Benzin.";
				pTankolas[playerid][pUzAr] = BenzinKutak[kut][bBenzinAra];
				pTankolas[playerid][pLiter] += liter;
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Feltöltötted a benzines kannád %d literrel, most %d liter van benne.", liter, PlayerInfo[playerid][pFuel]);
				TankolasNyugta(playerid);
				Biztos[playerid] = 0;
				Cselekves(playerid, "feltöltötte a kannáját benzinnel.");
			}
			else if(egyezik(param[2], "diesel"))
			{	
				if(BenzinKutak[kut][bMelyikvan] == 1) return Msg(playerid,"Itt nincs benzin/diesel");
				if(params < 3) return Msg(playerid, "/kanna feltölt Diesel [Liter]");
				new liter = strval(param[3]);
				new price = liter * BenzinKutak[kut][bDieselAra];
				if(liter < 1 || liter > 50) return Msg(playerid, "1-50 liter");
				if((liter + PlayerInfo[playerid][pFuel]) > 50)
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "* Enyi nem fér a kannádba! (%d Liter van benne)", PlayerInfo[playerid][pFuel]);
					return 1;
				}
				if((BenzinKutak[kut][bDiesel] - liter) < 0)
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "* Ezen a benzinkúton %d/10000 liter van, nem tudsz ennyit tankolni.", BenzinKutak[kut][bDiesel]);
					return 1;
				}

				if(!BankkartyaFizet(playerid, price))
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "* Nincs elég pénzed hogy %d litert tölts a kannádba.", liter);
					return 1;
				}
				if(PlayerInfo[playerid][pFuelTipus] == 0 || PlayerInfo[playerid][pFuelTipus] == 2 || PlayerInfo[playerid][pFuelTipus] == 3)
				{
					if(Biztos[playerid] != 1)
					{
						Msg(playerid,"Ebbe a kannába, más üzemanyag van, biztos, hogy rátöltesz másfélét és ezzel tönkreteszed?Írd be újra a parancsot ha igen");
						Biztos[playerid] = 1;
						return 1;
					}
				}
				if(PlayerInfo[playerid][pFuelTipus] == 0 || PlayerInfo[playerid][pFuelTipus] == 2 || PlayerInfo[playerid][pFuelTipus] == 3)
				{
					PlayerInfo[playerid][pFuelTipus] = 3;
				}
				else
					PlayerInfo[playerid][pFuelTipus] = 1;
				
				pTankolas[playerid][pLiter] = 0;
				pTankolas[playerid][pUzAr] = 0;
				BenzinKutak[kut][bDiesel] -= liter;
				PlayerInfo[playerid][pFuel] += liter;
				BenzinKutak[kut][bSzef] += price;
				pTankolas[playerid][pTipusa] = "Diesel.";
				pTankolas[playerid][pUzAr] = BenzinKutak[kut][bBenzinAra];
				pTankolas[playerid][pLiter] += liter;
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Feltöltötted a benzines kannád %d literrel, most %d liter van benne.", liter, PlayerInfo[playerid][pFuel]);
				TankolasNyugta(playerid);
				Biztos[playerid] = 0;
				Cselekves(playerid, "feltöltötte a kannáját diesellel.");	
			}
			else if(egyezik(param[2], "kerozin"))
			{	
				if(BenzinKutak[kut][bMelyikvan] == 0) return Msg(playerid,"Itt nincs kerozin");
				if(params < 3) return Msg(playerid, "/kanna feltölt Kerozin [Liter]");
				new liter = strval(param[3]);
				new price = liter * BenzinKutak[kut][bKerozinAra];
				if(liter < 1 || liter > 50) return Msg(playerid, "1-50 liter");
				if((liter + PlayerInfo[playerid][pFuel]) > 50)
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "* Enyi nem fér a kannádba! (%d Liter van benne)", PlayerInfo[playerid][pFuel]);
					return 1;
				}
				if((BenzinKutak[kut][bKerozin] - liter) < 0)
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "* Ezen a benzinkúton %d/10000 liter van, nem tudsz ennyit tankolni.", BenzinKutak[kut][bKerozin]);
					return 1;
				}

				if(!BankkartyaFizet(playerid, price))
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "* Nincs elég pénzed hogy %d litert tölts a kannádba.", liter);
					return 1;
				}
				if(PlayerInfo[playerid][pFuelTipus] == 0 || PlayerInfo[playerid][pFuelTipus] == 1 || PlayerInfo[playerid][pFuelTipus] == 3)
				{
					if(Biztos[playerid] != 1)
					{
						Msg(playerid,"Ebbe a kannába, más üzemanyag van, biztos, hogy rátöltesz másfélét és ezzel tönkreteszed?Írd be újra a parancsot ha igen");
						Biztos[playerid] = 1;
						return 1;
					}
				}
				if(PlayerInfo[playerid][pFuelTipus] == 0 || PlayerInfo[playerid][pFuelTipus] == 1 || PlayerInfo[playerid][pFuelTipus] == 3)
				{
					PlayerInfo[playerid][pFuelTipus] = 3;
				}
				else
					PlayerInfo[playerid][pFuelTipus] = 2;
				
				pTankolas[playerid][pLiter] = 0;
				pTankolas[playerid][pUzAr] = 0;
				BenzinKutak[kut][bKerozin] -= liter;
				PlayerInfo[playerid][pFuel] += liter;
				BenzinKutak[kut][bSzef] += price;
				pTankolas[playerid][pTipusa] = "Kerozin";
				pTankolas[playerid][pUzAr] = BenzinKutak[kut][bBenzinAra];
				pTankolas[playerid][pLiter] += liter;
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Feltöltötted a benzines kannád %d literrel, most %d liter van benne.", liter, PlayerInfo[playerid][pFuel]);
				TankolasNyugta(playerid);
				Biztos[playerid] = 0;
				Cselekves(playerid, "feltöltötte a kannáját kerozinnal.");	
			}	
		}
		else if(egyezik(param[1], "kiönt"))
		{
			if(PlayerInfo[playerid][pFuel] < 1) return Msg(playerid,"Nincs mit kiönteni");
			PlayerInfo[playerid][pFuel] = 0;
			PlayerInfo[playerid][pFuelTipus] = NINCS;
			Cselekves(playerid,"kiönti a földre az üzemanyagot");
		}
		else if(egyezik(param[1], "megnéz") || egyezik(param[1], "megnez"))
		{
			if(PlayerInfo[playerid][pFuel] <= 0) return Msg(playerid,"Nincs benne semmi");
			if(PlayerInfo[playerid][pFuelTipus] == 0)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "A kannádba %d liter benzin van", PlayerInfo[playerid][pFuel]);
			}
			else if(PlayerInfo[playerid][pFuelTipus] == 1)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "A kannádba %d liter diesel van", PlayerInfo[playerid][pFuel]);
			}
			else if(PlayerInfo[playerid][pFuelTipus] == 2)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "A kannádba %d liter kerozin van", PlayerInfo[playerid][pFuel]);
			}	
			else if(PlayerInfo[playerid][pFuelTipus] == 3)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "A kannádba %d liter kevert üzemanyag van...", PlayerInfo[playerid][pFuel]);
			}			
			Cselekves(playerid,"megnézte az üzemanyag típusát");
		}
		return 1;
	}
	if(egyezik(cmd, "/fill"))
	{
		if(FloodCheck(playerid)) return 1;
		if(Tankol[playerid][0] != 0)
		{
			TankolasNyugta(playerid);
			Tankolaskozben[Tankol[playerid][0]] = false;
			Tankol[playerid][0] = 0;
			Cselekves(playerid, "befejezte a tankolást");
			UnFreeze(playerid);
			return 1;
		}
		if(params < 1) return Msg(playerid,"Használata: /fill [Benzin / Diesel / Kerozin]");
		new kut = IsAtGasStation(playerid);
		if(kut == NINCS) return Msg(playerid, "Nem vagy benzinkútnál");

		if(IsPlayerInAnyVehicle(playerid))  return Msg(playerid, "Jármûben hogy töltöd bele? o.O");
		new kocsi = GetClosestVehicle(playerid);

		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.0)
			return Msg(playerid, "Nincs melletted jármû!");
			

		if(Tankolaskozben[kocsi]) return Msg(playerid,"Ebbe a kocsiba már tankolnak!");
		if(IsABicikli(kocsi))
			return Msg(playerid, "Ebbe nem igazán tudsz tölteni.\"");
			
		if(Locked(kocsi)) return Msg(playerid, "A jármû zárva, elõbb nyisd ki");	

		if(egyezik(param[1],"Benzin"))
		{
			if(BenzinKutak[kut][bMelyikvan] != 0) return Msg(playerid,"Itt nincs benzin/diesel!");
			if(Gas[kocsi] > MaxBenzin(kocsi))
				return Msg(playerid, "A kocsi tele van!");

			if(BenzinKutak[kut][bBenzin] < 1)
				return Msg(playerid, "* Ez a benzinkút üres");

			new BenzinAra = BenzinKutak[kut][bBenzinAra];
			if(!BankkartyaFizet(playerid, BenzinAra,false) && ( IngyenTankol(playerid, kocsi) && FrakcioInfo[ PlayerInfo[playerid][pMember] ][fPenz] < BenzinAra || !IngyenTankol(playerid, kocsi)) && IsMunkaKocsi(kocsi) == NINCS)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Nincs elég pénzed! Egy liter benzin ára %dFt", BenzinAra);
				return 1;
			}

			if(engineOn[kocsi] == 1)
			{
				new Float:x, Float:y, Float:z;
				GetVehiclePos(kocsi, x, y, z);
				CreateExplosion(x, y, z, 2, 500.0);
				SetHealth(playerid, 0);
				Msg(playerid, "A jármû berobbant mert nem állítóttad le a motort!");
				new filluzi[128];
				Format(filluzi, "[Tankolás][%d]%s járó motornál tankolt és berobbant.", playerid, PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED, filluzi, 1);
				return 1;
			}
			
			if(IsADieseles(kocsi))
			{
				RosszGas[kocsi] = 3;
			}
			if(IsAKerozinos(kocsi))
			{
				RosszGas[kocsi] = 3;
			}
			if(IngyenTankol(playerid, kocsi) && FrakcioInfo[ PlayerInfo[playerid][pMember] ][fPenz] >= BenzinAra)
				FrakcioInfo[ PlayerInfo[playerid][pMember] ][fPenz] -= BenzinAra;
			else if(IsMunkaKocsi(kocsi) != NINCS)
				FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -= BenzinAra;
			else
				BankkartyaFizet(playerid, BenzinAra) ;

			BenzinKutak[kut][bBenzin]--;
			BenzinKutak[kut][bSzef] += BenzinAra;
			pTankolas[playerid][pTipusa] = "Benzin.";
			pTankolas[playerid][pLiter] = 0;
			pTankolas[playerid][pUzAr] = 0;

			SetTimerEx("BenzinTankolas", 500, false, "d", playerid);

			Tankolaskozben[kocsi] = true;
			Msg(playerid, "Elkezdted megtankolni a jármûvedet");
			Cselekves(playerid, "elkezdte megtankolni a jármûvét.");
	
			Gas[kocsi] += 1;
			Tankol[playerid][0] = kocsi;
			Tankol[playerid][1] = kut;
			Freeze(playerid);
		}
		else if(egyezik(param[1],"Diesel"))
		{
			if(BenzinKutak[kut][bMelyikvan] != 0) return Msg(playerid,"Itt nincs benzin/diesel!");
			if(Gas[kocsi] > MaxBenzin(kocsi))
				return Msg(playerid, "A kocsi tele van!");

			if(BenzinKutak[kut][bDiesel] < 1)
				return Msg(playerid, "* Ez a benzinkút üres");

			new dieselara = BenzinKutak[kut][bDieselAra];
			if(!BankkartyaFizet(playerid, dieselara,false) && ( IngyenTankol(playerid, kocsi) && FrakcioInfo[ PlayerInfo[playerid][pMember] ][fPenz] < dieselara || !IngyenTankol(playerid, kocsi)) && IsMunkaKocsi(kocsi) == NINCS)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Nincs elég pénzed! Egy liter diesel ára %dFt", dieselara);
				return 1;
			}

			if(engineOn[kocsi] == 1)
			{
				new Float:x, Float:y, Float:z;
				GetVehiclePos(kocsi, x, y, z);
				CreateExplosion(x, y, z, 2, 500.0);
				SetHealth(playerid, 0);
				Msg(playerid, "A jármû berobbant mert nem állítóttad le a motort!");
				new filluzi[128];
				Format(filluzi, "[Tankolás][%d]%s járó motornál tankolt és berobbant.", playerid, PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED, filluzi, 1);
				return 1;
			}
			if(IsABenzines(kocsi))
			{
				RosszGas[kocsi] = 3;
			}
			if(IsAKerozinos(kocsi))
			{
				RosszGas[kocsi] = 3;
			}
			if(IngyenTankol(playerid, kocsi) && FrakcioInfo[ PlayerInfo[playerid][pMember] ][fPenz] >= dieselara)
				FrakcioInfo[ PlayerInfo[playerid][pMember] ][fPenz] -= dieselara;
			else if(IsMunkaKocsi(kocsi) == NINCS)
				BankkartyaFizet(playerid, dieselara) ;

			BenzinKutak[kut][bDiesel]--;
			BenzinKutak[kut][bSzef] += dieselara;
			pTankolas[playerid][pTipusa] = "Diesel.";
			pTankolas[playerid][pLiter] = 0;
			pTankolas[playerid][pUzAr] = 0;

			SetTimerEx("DieselTankolas", 500, false, "d", playerid);
			
			Tankolaskozben[kocsi] = true;
			Msg(playerid, "Elkezdted megtankolni a jármûvedet");
			Cselekves(playerid, "elkezdte megtankolni a jármûvét.");
			if(IsKocsi(kocsi, "uttisztito") || IsKocsi(kocsi, "Kamion") || IsKocsi(kocsi, "Farmer")  || IsKocsi(kocsi, "Funyiro") /*|| IsKocsi(kocsi,"Kukas")*/ || IsKocsi(kocsi, "Szerelo") || IsKocsi(kocsi, "Favago") || IsKocsi(kocsi, "Hulla") || IsKocsi(kocsi, "Prod") || IsKocsi(kocsi, "Taxi"))
			{
				PlayerInfo[playerid][pElhasznaltUzemanyag][1] ++;
				PlayerInfo[playerid][pElhasznaltUzemanyag][2] = kocsi;
			}
			Gas[kocsi] += 1;
			Tankol[playerid][0] = kocsi;
			Tankol[playerid][1] = kut;
			Freeze(playerid);
		}
		else if(egyezik(param[1],"kerozin"))
		{
			if(BenzinKutak[kut][bMelyikvan] != 1) return Msg(playerid,"Itt nincs kerozin!");
			if(Gas[kocsi] > MaxBenzin(kocsi))
				return Msg(playerid, "A repülõ tele van!");

			if(BenzinKutak[kut][bKerozin] < 1)
				return Msg(playerid, "* Ez a benzinkút üres");

			new kerozinara = BenzinKutak[kut][bKerozinAra];
			if(!BankkartyaFizet(playerid, kerozinara,false) && ( IngyenTankol(playerid, kocsi) && FrakcioInfo[ PlayerInfo[playerid][pMember] ][fPenz] < kerozinara || !IngyenTankol(playerid, kocsi)) && IsMunkaKocsi(kocsi) == NINCS)
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "* Nincs elég pénzed! Egy liter gázolaj ára %dFt", kerozinara);
				return 1;
			}

			if(engineOn[kocsi] == 1)
			{
				new Float:x, Float:y, Float:z;
				GetVehiclePos(kocsi, x, y, z);
				CreateExplosion(x, y, z, 2, 500.0);
				SetHealth(playerid, 0);
				Msg(playerid, "A jármû berobbant mert nem állítóttad le a motort!");
				new filluzi[128];
				Format(filluzi, "[Tankolás][%d]%s járó motornál tankolt és berobbant.", playerid, PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED, filluzi, 1);
				return 1;
			}
			if(IsADieseles(kocsi))
			{
				RosszGas[kocsi] = 3;
			}
			if(IsABenzines(kocsi))
			{
				RosszGas[kocsi] = 3;
			}
			if(IngyenTankol(playerid, kocsi) && FrakcioInfo[ PlayerInfo[playerid][pMember] ][fPenz] >= kerozinara)
				FrakcioInfo[ PlayerInfo[playerid][pMember] ][fPenz] -= kerozinara;
			else if(IsMunkaKocsi(kocsi) == NINCS)
				BankkartyaFizet(playerid, kerozinara) ;

			BenzinKutak[kut][bKerozin]--;
			BenzinKutak[kut][bSzef] += kerozinara;
			pTankolas[playerid][pTipusa] = "Kerozin";
			pTankolas[playerid][pLiter] = 0;
			pTankolas[playerid][pUzAr] = 0;

			SetTimerEx("KerozinTankolas", 500, false, "d", playerid);

			Tankolaskozben[kocsi] = true;
			Msg(playerid, "Elkezdted megtankolni a jármûvedet");
			Cselekves(playerid, "elkezdte megtankolni a jármûvét.");
			if(IsKocsi(kocsi, "uttisztito") || IsKocsi(kocsi, "Kamion") || IsKocsi(kocsi, "Farmer")  || IsKocsi(kocsi, "Funyiro") /*|| IsKocsi(kocsi,"Kukas")*/ || IsKocsi(kocsi, "Szerelo") || IsKocsi(kocsi, "Favago") || IsKocsi(kocsi, "Hulla") || IsKocsi(kocsi, "Prod") || IsKocsi(kocsi, "Taxi"))
			{
				PlayerInfo[playerid][pElhasznaltUzemanyag][1] ++;
				PlayerInfo[playerid][pElhasznaltUzemanyag][2] = kocsi;
			}
			Gas[kocsi] += 1;
			Tankol[playerid][0] = kocsi;
			Tankol[playerid][1] = kut;
			Freeze(playerid);
		}
		return 1;
	}
	if(egyezik(cmd, "/fillcar"))
	{
		if(PlayerInfo[playerid][pFuel] < 1) return Msg(playerid, "Nincs üzemanyag a kannádba.");
		if(params < 1) return Msg(playerid, "/fillcar [liter]");
		new liter = strval(param[1]);
		if(liter < 1 || liter > 50) return Msg(playerid, "Minimum 1, maximum 50 liter");

		new kocsi;
		if(IsPlayerInAnyVehicle(playerid))  return Msg(playerid, "Kocsiban hogy töltöd bele? o.O");
		kocsi = GetClosestVehicle(playerid);
		
		if(IsABicikli(kocsi))
			return Msg(playerid, "Biciklibe? -.-\"");
				
		if(Locked(kocsi)) return Msg(playerid, "A jármû zárva, elõbb nyisd ki");
		if((PlayerInfo[playerid][pFuel] - liter) < 0)
		{
			SendFormatMessage(playerid, COLOR_LIGHTRED, "* Nincs ennyi liter üzemanyag a kannádba. (%d liter van)", PlayerInfo[playerid][pFuel]);
			return 1;
		}
		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 5.0) return Msg(playerid, "Nincs melletted jármû!");
		if((Gas[kocsi] + liter) > MaxBenzin(kocsi)) return Msg(playerid, "Enyi üzemanyag nem fér bele.");
		
		
		Gas[kocsi] += liter;
		PlayerInfo[playerid][pFuel] -= liter;
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Megtöltötted %d literrel a jármûvet, most %d liter van benne.", liter, Gas[kocsi]);
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Kannádba maradt %d liter.", PlayerInfo[playerid][pFuel]);
		Cselekves(playerid, "megtöltötte a jármûvet üzemanyaggal");
		
		if(PInfo(playerid,MunkaRendszam) == kocsi && PInfo(playerid,MunkaBenzin) > 0)
		{
			PInfo(playerid,MunkaBenzin) -=liter;
			PInfo(playerid,MunkaAra) -=liter*MUNKA_BENZIN;
			if(PInfo(playerid,MunkaBenzin) < 1)
			{
				PInfo(playerid,MunkaBenzin) = NINCS;
				PInfo(playerid,MunkaAra) = NINCS;
				PInfo(playerid,MunkaRendszam) = NINCS; Msg(playerid, "Munkakocsi benzin tartozásod nullázva!");
				return 1;
			}
			SendFormatMessage(playerid, COLOR_YELLOW, "[Munkakocsi]Feltöltötted a kocsit még %d Liter kell bele. Ha nem töltöd fel %s Ft-ba fog kerülni!",PInfo(playerid,MunkaBenzin), FormatInt(PInfo(playerid,MunkaAra)));
		}
		
		if(PlayerInfo[playerid][pFuelTipus] == 0)
		{
			if(IsAKerozinos(kocsi) || IsADieseles(kocsi))
				RosszGas[kocsi] = 2;
		}
		if(PlayerInfo[playerid][pFuelTipus] == 1)
		{
			if(IsAKerozinos(kocsi) || IsABenzines(kocsi))
				RosszGas[kocsi] = 2;
		}
		if(PlayerInfo[playerid][pFuelTipus] == 2)
		{
			if(IsADieseles(kocsi) || IsABenzines(kocsi))
				RosszGas[kocsi] = 2;
		}
		if(PlayerInfo[playerid][pFuelTipus] == 3)
		{
			RosszGas[kocsi] = 2;
		}
		
	}
	if(egyezik(cmd, "/detain"))
	{
		if(params == 0) return Msg(playerid, "Használata: /detain [Játékos] [Ülés (1-3)] VAGY /detain [Ülés (1-3)]");

		new player, ules;

		if(params == 1)
		{
			player = GetClosestPlayer(playerid);
			ules = strval(param[1]);
		}
		else
		{
			player = ReturnUser(param[1]);
			ules = strval(param[2]);
		}

		if(player == INVALID_PLAYER_ID)
			return Msg(playerid, "Nincs ilyen játékos");

		if(GetDistanceBetweenPlayers(playerid,player) > 5)
			return Msg(playerid, "A játékos nincs a közelben.");

		if(IsPlayerInAnyVehicle(playerid))
			return Msg(playerid, "Jármûbõl nem használhatod!");

		if(ules < 1 || ules > 3)
			return Msg(playerid, "Ülés csak 1-3 lehet.");

		if(playerid == player)
			return Msg(playerid, "Idióta, magadat?-.-");

		if(IsPlayerInAnyVehicle(player))
			return Msg(playerid, "A játékos jármûben van, elöször szedd ki onnan!");

		if(!NemMozoghat(player) && !PlayerInfo[player][pMegad])
			return Msg(playerid, "A játékos nincs megbilincselve / leütve / animban / nem adta meg magát");

		if(NemMozoghat(playerid))
			return Msg(playerid, "Így nem használhatod...");

		new kocsi = GetClosestVehicle(playerid);
		if(GetPlayerDistanceFromVehicle(playerid, kocsi) > 6) return Msg(playerid, "A közeledben nincs jármû!");
		if(IsABicikli(kocsi)) return Msg(playerid, "Persze biciklibe...");
		SendClientMessage(playerid, COLOR_LIGHTRED, "* Beraktad a jármûbe.");
		SendClientMessage(player, COLOR_LIGHTRED, "* Beraktak egy jármûbe.");
		Cselekves(playerid, "berakta a célszemélyt a jármûbe.");
		ClearAnimations(player);
		TogglePlayerControllable(player, 0);
		PutPlayerInVehicle(player, kocsi, ules);
	}

	/*if(egyezik(cmd, "/tazer") || egyezik(cmd, "/sokk"))
	{
		if(OnDuty[playerid]==0) return SendClientMessage(playerid, COLOR_GREY, "   Nem vagy szolgálatban!");
		if(Sokkolt[playerid] > 0)
		{
			SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Várnod kell még %d másodpercet.", Sokkolt[playerid]);
			return 1;
		}
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Autóban sokkolni? Esszeednééélvaaagy? Lesüüüül a motor vazzee!");
		if(WeaponArmed(playerid) != WEAPON_DEAGLE && WeaponArmed(playerid) != WEAPON_SILENCED) return Msg(playerid, "Ezzel a fegyverrel nem tudsz sokkolni!");
		new suspect;
		if(params > 0) suspect = strval(param[1]);
		else suspect = GetClosestPlayer(playerid);
		if(suspect == playerid) return 1;
		if(!IsPlayerConnected(suspect)) return 1;
		if(PlayerCuffed[suspect] > 0) return SendClientMessage(playerid, COLOR_GREY, "Játékos már bilincsben van !");
		if(GetDistanceBetweenPlayers(playerid,suspect) > 5) return SendClientMessage(playerid, COLOR_GREY, "A közeledben nincs senki!");
		if(IsPlayerInAnyVehicle(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Célszemély autóban van, szedd ki elõször !");
		if(IsPlayerInWater(suspect) || IsPlayerInWater(playerid))
			return Msg(playerid, "Vízben lévõt akarsz lesokkolni? Az áram agyonüt titeket!");
		if(Rabol[suspect] == 1) Rabol[suspect] = 0;
		SendClientMessage(suspect, COLOR_LIGHTBLUE, "* Lesokkolt egy rendõr, és 60 másodpercig megbénultál.");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Lesokkoltad 60 másodpercre.");
		Cselekves(playerid, "lõ a sokkolóval, és lesokkolja a célszemélyt.", 0);
		GameTextForPlayer(suspect, "~r~Sokkoltak", 2500, 3);
		Bilincs(suspect, 1);
		ApplyAnimation(suspect,"CRACK","crckdeth2",4.1,0,1,1,1,0);
		
		WeaponArm(suspect);
		
		Sokkolt[playerid] = 15;
	    return 1;
	}*/

	if(egyezik(cmd, "/cuff") || egyezik(cmd, "/bilincs"))
	{

		if(!IsACop(playerid) || OnDuty[playerid] < 1) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy szolgálatban!");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Autóban nem bilincselhetsz !");
		if(params > 0) giveplayerid = ReturnUser(param[1]);
		else giveplayerid = KozelbenValaki(playerid, 8.0);

		if(giveplayerid == NINCS || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nincs a közeledben");
		if(GetDistanceBetweenPlayers(playerid, giveplayerid) > 8.0) return Msg(playerid, "Nincs a közeledben");
		if(IsPlayerNPC(giveplayerid)) return Msg(playerid, "NPC?");

		if(playerid == giveplayerid) return 1;
		if(NemMozoghat(playerid)) return Msg(playerid, "Nem bilincselheted meg!");
		if (!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return Msg(playerid, "Nincs senki a közelben!");
        if(PlayerCuffed[giveplayerid] == 2) return SendClientMessage(playerid, COLOR_GREY, "Már meg van bilincselve");
		if(giveplayerid == BankSFNPC || giveplayerid==BankNPC)
		{
			//Jail(playerid, "set", 15*60, "ajail2", "Terno: 1 Hagyod békén NPC-t! 2 Ablakon át bilincseled meg? NONRP");
			Msg(playerid, "1: Hagyod békén az npc-t!!! 2: Onnan mégis hogy bilincselnéd meg???");
			return 1;
		}

		if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Vadállat, magadat megbilincselni?! Ilyen perverz vagy?!");
		new fegyo = GetPlayerWeapon(giveplayerid);
		if(fegyo > 0) return Msg(playerid, "Ha van a kezébe fegyver, hogyan akarod megbilincselni?");
		if(Rabol[playerid] == 1) Rabol[playerid] = 0;
		Freeze(playerid,4000);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* Rendõr megbilincselt jó szorosan.");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Megbilincselted a személyt.");
		Cselekves(playerid, "megbilincseli a célszemélyt.", 0);
		GameTextForPlayer(giveplayerid, "~r~Megbilincseltek", 2500, 3);
		Bilincs(giveplayerid, 2);
		//ApplyAnimation(giveplayerid,"ped","cower",1,1,0,0,0,0);
		//ApplyAnimation(giveplayerid,"ped","cower",1,1,0,0,0,0);
		SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
		BilincsFel(giveplayerid);
		//FegyverElrak(giveplayerid);
		WeaponArm(giveplayerid);
		return 1;
	}
	if(strcmp(cmd, "/uncuff", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsACop(playerid) && OnDuty[playerid] == 1)
			{
				if(params > 0)
					giveplayerid = strval(param[1]);
				else
					giveplayerid = GetClosestPlayer(playerid);

				if(playerid == giveplayerid) return 1;

				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if(GetDistanceBetweenPlayers(playerid, giveplayerid) < 8.0)
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Magadat nem tudod uncuffolni"); return 1; }
							if(PlayerCuffed[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Rendõr levette rólad a bilincseket");
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Levetted a személy bilincseit");
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Bilincs leveve", 2500, 3);
								Bilincs(giveplayerid, 0);
								SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
								RemovePlayerAttachedObject(giveplayerid, ATTACH_SLOT_ZSAK_PAJZS_BILINCS);
								//ClearAnimations(giveplayerid);
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "Nincs megbilincselve");
								Bilincs(giveplayerid, 0);
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "A közeledben nincs senki");
						    return 1;
						}
					}
				}
			}
			else
				SendClientMessage(playerid, COLOR_GREY, "Nem vagy rendõr");
		}//not connected
		return 1;
	}
	//Tesztre 
	if(egyezik(cmd,"/tõzsde") || egyezik(cmd,"/tozsde"))
	{
		if(!IsRyan(playerid))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "Egyelõre csak Ryan bá használhatja ezt a parancsot!");
		if(params < 1) return Msg(playerid,"/tõzsde [Aktiválás/ Deaktiválás / Átír/Megnéz]");
		if(egyezik(param[1],"aktiválás") || egyezik(param[1],"aktivalas"))
		{
			if(!IsACop(playerid)) return Msg(playerid,"Nem vagy rendvédelem tagja!");
			if(!Munkarang(playerid, 6)) return Msg(playerid,"Minimum rang 6!");
			if(params < 2) return Msg(playerid,"/tõzsde Aktiválás [jelszó]");
			if(egyezik(param[2], TozsdeJelszo))
			{
				Msg(playerid,"Helyes Jelszó, Bank védelem újra aktív!");
				LezerBekapcs();
				SendRadioMessageFormat(FRAKCIO_SCPD, COLOR_DBLUE, "** Értesítés: %s aktiválta Las Venturas-i Tõzsde védelmi rendszerét", ICPlayerName(playerid));
				SendRadioMessageFormat(FRAKCIO_FBI, COLOR_DBLUE, "** Értesítés: %s aktiválta Las Venturas-i Tõzsde védelmi rendszerét", ICPlayerName(playerid));
				SendRadioMessageFormat(FRAKCIO_NAV, COLOR_DBLUE, "** Értesítés: %s aktiválta Las Venturas-i Tõzsde védelmi rendszerét", ICPlayerName(playerid));
				foreach(Jatekosok, b)
					TozsdeRiaszto(b, false);
			}
			else
				Msg(playerid,"Hiba! Helytelen jelszó!");
		}
		if(egyezik(param[1],"részvény") || egyezik(param[1],"reszveny"))
		{
			if(!IsRyan(playerid)) return Msg(playerid,"Fejlesztés alatt!");
			new mennyiseg;
			mennyiseg = strval(param[3]);
			if(egyezik(param[2],"vesz"))
			{
				
				if(params < 3) return Msg(playerid,"/tõzsde részvény vesz [mennyiség]");
				PlayerInfo[playerid][pReszveny] = PlayerInfo[playerid][pReszveny] + mennyiseg;
			
			}
			else if(egyezik(param[2],"elad"))
			{
				if(params < 3) return Msg(playerid,"/tõzsde részvény elad [mennyiség]");
				PlayerInfo[playerid][pReszveny] = PlayerInfo[playerid][pReszveny] - mennyiseg;
			
			
			}
			
			
		}
		else  if(egyezik(param[1],"deaktiválás") || egyezik(param[1],"deaktivalas"))
		{
			if(!IsACop(playerid)) return Msg(playerid,"Nem vagy rendvédelem tagja!");
			if(!Munkarang(playerid, 6)) return Msg(playerid,"Minimum rang 6!");
			if(params < 2) return Msg(playerid,"/tõzsde Dektiválás [jelszó]");
			if(egyezik(param[2], TozsdeJelszo))
			{
				Msg(playerid,"Helyes Jelszó, Bank védelem deaktiválva!");
				LezerKikapcs();
				SendRadioMessageFormat(FRAKCIO_SCPD, COLOR_DBLUE, "** Értesítés: %s aktiválta Las Venturas-i Tõzsde védelmi rendszerét", ICPlayerName(playerid));
				SendRadioMessageFormat(FRAKCIO_FBI, COLOR_DBLUE, "** Értesítés: %s aktiválta Las Venturas-i Tõzsde védelmi rendszerét", ICPlayerName(playerid));
				SendRadioMessageFormat(FRAKCIO_NAV, COLOR_DBLUE, "** Értesítés: %s aktiválta Las Venturas-i Tõzsde védelmi rendszerét", ICPlayerName(playerid));
				foreach(Jatekosok, b)
					TozsdeRiaszto(b, false);
			}
			else
				Msg(playerid,"Hiba! Helytelen jelszó!");
		}
		else if(egyezik(param[1],"átír") || egyezik(param[1],"atir"))
		{
			if(IsACop(playerid) && Munkarang(playerid, 6))
			{
				if(params < 2) return Msg(playerid,"/tõzsde Átír [jelszó]");
				if(strlen(param[2]) >= 5 && strlen(param[2]) <= 10)
				{
					new jelszo[10];
					SendFormatMessage(playerid, COLOR_YELLOW,"Jelszó Sikeresen Módosítva! | Új jelszó: %s", param[2]);
					Format(jelszo,"%s",param[2]);
					TozsdeJelszo =  jelszo;
				}
				else
					Msg(playerid,"Hiba: A jelszó minimum 5, maximum 10 karakter lehet!");
			}
			else
			{
				Msg(playerid,"Nincs jogod a használatára!");
				return 1;
			}
		}
		else if(egyezik(param[1],"megnéz") || egyezik(param[1],"megnez"))
		{
			if(IsACop(playerid) && Munkarang(playerid, 6))
			{
				SendFormatMessage(playerid,COLOR_YELLOW,"A jelszó: %s",TozsdeJelszo);
				return 1;
			}
			else
			{
				Msg(playerid,"Nincs jogod a használatára!");
				return 1;
			}
		}
		else
		{
			Msg(playerid,"/tõzsde [Aktiválás/ Deaktiválás / Átír/Megnéz]");
			return 1;
		}
		return 1;
	}
	
	if(egyezik(cmd, "/hackidõ")) // Lézer teszthez
	{
		if(!IsRyan(playerid)) return Msg(playerid,"Nem nem");
		PlayerInfo[playerid][pHack] = 0;
		Msg (playerid,"Nullázva a hackelési idõ");
	}
	if(egyezik(cmd, "/hack"))
	{
		if(Szint(playerid) < IllegalisMunkak[4]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[4]);
		if(PlayerInfo[playerid][pLaptop] == 0) return Msg(playerid, "Nincs laptopod!");
		if(!PlayerInfo[playerid][pLaptopBe]) return Msg(playerid, "Nincs bekapcsolva a géped!");
		if(PlayerInfo[playerid][pMobilnet] == NINCS && !LaptopConnected[playerid]) return Msg(playerid, "Nem csatlakozol wifi ponthoz, vagy nincs mobilneted!");
		if(PlayerInfo[playerid][pHack] > 0) return SendFormatMessage(playerid, COLOR_YELLOW, "Még nem hackelhetsz! Hátralévõ idõ: %d sec",PlayerInfo[playerid][pHack]);
	    if(!Bortonben(playerid))
	    {
			if(!IsACop(playerid))
		    {
				if(params < 1) return Msg(playerid, "/hack [államkassza/utalás/bankszámla/szöktetés/kamera/jármû/riaszto/lézer]");
				new skill;
				skill = SkillLevel(PlayerInfo[playerid][pHackingSkill]);
				new bool:bukta = false;
				new hack = random(100);
				if(skill == 1)
				{
					switch(hack)
					{
						case 0..45: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 2)
				{
					switch(hack)
					{
						case 0..45: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 3)
				{
					switch(hack)
					{
						case 0..45: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 4)
				{
					switch(hack)
					{
						case 0..55: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 5)
				{
					switch(hack)
					{
						case 0..65: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 6)
				{
					switch(hack)
					{
						case 0..75: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 7)
				{
					switch(hack)
					{
						case 0..75: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 8)
				{
					switch(hack)
					{
						case 0..80: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 9)
				{
					switch(hack)
					{
						case 0..80: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 10)
				{
					switch(hack)
					{
						case 0..85: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 11)
				{
					switch(hack)
					{
						case 0..85: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 12)
				{
					switch(hack)
					{
						case 0..86: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 13)
				{
					switch(hack)
					{
						case 0..87: bukta = false;
						default:bukta = true;
					}
				}
				if(skill == 14)
				{
					switch(hack)
					{
						case 0..88: bukta = false;
						default:bukta = true;
					}
				}
				if(skill >= 15)
				{
					switch(hack)
					{
						case 0..89: bukta = false;
						default:bukta = true;
					}
				}
				if(egyezik(param[1],"riaszto") || egyezik(param[1],"riasztó"))
				{
					if(skill < 12) return Msg(playerid, "12 skill-tõl!");
					
					new code[5];
					new codetav;
					switch(skill)
					{
						case 12: if(sscanf(pms, "{s[32] }p<,>ddddd", code[0],code[1],code[2],code[3],code[4])) return Msg(playerid,"/hack riaszto [0 vagy 1] [0 vagy 1] [0 vagy 1] [0 vagy 1] [0 vagy 1]");
						case 13: if(sscanf(pms, "{s[32] }p<,>dddd", code[0],code[1],code[2],code[3])) return Msg(playerid,"/hack riaszto [0 vagy 1] [0 vagy 1] [0 vagy 1] [0 vagy 1]");
						case 14: if(sscanf(pms, "{s[32] }p<,>ddd", code[0],code[1],code[2])) return Msg(playerid,"/hack riaszto [0 vagy 1] [0 vagy 1] [0 vagy 1]");
						case 15: if(sscanf(pms, "{s[32] }p<,>dd", code[0],code[1])) return Msg(playerid,"/hack riaszto [0 vagy 1] [0 vagy 1]");
					}
					switch(skill)
					{
						case 12: codetav=5;
						case 13: codetav=4;
						case 14: codetav=3;
						case 15: codetav=2;
					}

					if(bukta)
					{
						PlayerInfo[playerid][pHack] = 120;
					  
						Msg(playerid, "Hopsz, majdnem lebuktál a rendõrök elõtt. Várj egy picit, hogy ne hogy megtaláljanak.(2 perc)");
					  
						if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
							PlayerInfo[playerid][pMobilnet] += skill/2;
							
						
						return 1;
					}
					new car = GetClosestVehicle(playerid);
					if(GetPlayerDistanceFromVehicle(playerid, car) > 8.0)
						return Msg(playerid, "Nincs a közelben a jármûved");

					new vs = IsAVsKocsi(car);
					if(vs == NINCS)
						return Msg(playerid, "Ez nem V-s jármû csak azokat lehet feltörni!");
					
					if(CarInfo[vs][cCodeRiaszto][0] > UnixTime) return Msg(playerid, "Ez a kocsi már fel van törve!");
					
					for(new x= 1; x < codetav+1; x++)
					{
						if(CarInfo[vs][cCodeRiaszto][x] != code[x-1])
							return Msg(playerid, "Nem sikerült feltörni"),PlayerInfo[playerid][pHack] = 20;
					}
					CarInfo[vs][cCodeRiaszto][0] = UnixTime+600;
					PlayerInfo[playerid][pHackingSkill] +=2;
					if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
						PlayerInfo[playerid][pMobilnet] += skill;
					Msg(playerid,"Feltörted");
				
				}
				if(egyezik(param[1],"utalás") ||egyezik(param[1], "utalas"))
				{
					if(skill < 3) return Msg(playerid, "Hármas skill-tõl!");
					
					if(PlayerInfo[playerid][pHackIdo] > UnixTime) return SendFormatMessage(playerid, COLOR_YELLOW, "Még nem használhatod! 1 órában csak egyszer lehet! Még %d sec",PlayerInfo[playerid][pHackIdo]-UnixTime);
					
					
					if(BankSzef < 1000000) return Msg(playerid, "Nincs elég pénz a bankban!");
					if(bukta == false)
					{
						PlayerInfo[playerid][pHackIdo] = UnixTime+3600;
						ConsumingMoney[playerid] = 1;
						new penz, maximum;
						if(skill <= 1) maximum = 50000;
						if(skill == 2) maximum = 50000;
						if(skill == 3) maximum = 50000;
						if(skill == 4) maximum = 100000;
						if(skill == 5) maximum = 200000;
						if(skill == 6) maximum = 300000;
						if(skill == 7) maximum = 400000;
						if(skill == 8) maximum = 500000;
						if(skill == 9) maximum = 600000;
						if(skill >= 10) maximum = 700000;
						
						if(PlayerInfo[playerid][pZarolva] != 1)
						{
							penz = Rand(10000, maximum);
							Cselekves(playerid, "kinyitotta a laptopját.", 0);
							Cselekves(playerid, "betört a bank adatbázisába.", 0);
							Cselekves(playerid, "meghackelte a bank adatbázisát.", 0);
							
							PlayerInfo[playerid][pAccount] += penz;
							BankSzef  = BankSzef - penz;
							SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Sikeresen meghackelted a bankot, és átutaltál a számládra %d forintot!", penz);
							PlayerInfo[playerid][pHackingSkill] += 6;
						}
						else
						{
							Msg(playerid, "Nincs használható bankszámlád, ezért sikertelen a hackelés!");
							
						}
						if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
							PlayerInfo[playerid][pMobilnet] += skill;
						PlayerInfo[playerid][pHack] = 1800;
						return 1;
					}
					else
					{
						PlayerInfo[playerid][pHack] = 600;
					    SetPlayerCriminal(playerid,255, "Hackerkedés! utalás");
					    SendClientMessage(playerid, COLOR_YELLOW, "Feljelentettek hackerkedésért!");
						PlayerInfo[playerid][pHackingSkill]++;
						if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
							PlayerInfo[playerid][pMobilnet] += skill/2;
					}
					return 1;
				}
				else if(egyezik(param[1], "bankszámla") || egyezik(param[1], "bankszamla"))
				{
	
				    if(params < 2) return SendClientMessage(playerid, COLOR_RED, "/hack számla [playerid]");
					new jatekos = ReturnUser(param[2]);
					if(!IsPlayerConnected(jatekos)) return Msg(playerid, "Nincs ilyen játékos!");
					
					if(bukta == false)
					{
						Msg(playerid, "Sikeresen meghackelted a játékost!");
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Név: %s", ICPlayerName(jatekos));
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Bankszámlaszám: %d", PlayerInfo[jatekos][pBankSzamlaSzam]);
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Összeg a bankban: %d", PlayerInfo[jatekos][pAccount]);
						PlayerInfo[playerid][pHackingSkill] +=2;
						PlayerInfo[playerid][pHack] = 200;
						return 1;
					}
					else
					{
						PlayerInfo[playerid][pHack] = 180;
					    SendClientMessage(playerid, COLOR_YELLOW, "Nem sikerült a betörés!");
						PlayerInfo[playerid][pHackingSkill] ++;
						//SetPlayerCriminal(playerid,255, "Hackerkedés! bankszámla");
					}
				}
				else if(egyezik(param[1], "államkassza") || egyezik(param[1], "allamkassza"))
				{
					if(skill < 5) return Msg(playerid, "Minimum ötös skill!");
					if(PlayerInfo[playerid][pZarolva] == 1) return Msg(playerid, "Nincs használható bankszámlád így nincs értelme!"); 
					if(PlayerInfo[playerid][pHackIdo] > UnixTime) return SendFormatMessage(playerid, COLOR_YELLOW, "Még nem használhatod! 1 órában csak egyszer lehet! Még %d sec",PlayerInfo[playerid][pHackIdo]-UnixTime);
					if(bukta == false)
					{
						PlayerInfo[playerid][pHackIdo] = UnixTime+3600;
						
						Msg(playerid, "Sikeres hackelés!");
						SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Pénz az államkasszában: %d Forint", FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz]);
						if(skill == 5)
						{
							new maximum;
							if(skill == 5) maximum = 400000;
							if(skill == 6) maximum = 500000;
							if(skill == 7) maximum = 600000;
							if(skill == 8) maximum = 700000;
							if(skill == 9) maximum = 800000;
							if(skill >= 10) maximum = 900000;
							new penz = Rand(100000, maximum);
							SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Sikerült %d forintot átutalnod a bankszámládra!", penz);
							FrakcioInfo[FRAKCIO_ONKORMANYZAT][fPenz] -= penz;
							PlayerInfo[playerid][pAccount] += penz;
						}
						PlayerInfo[playerid][pHackingSkill] += 5;
						PlayerInfo[playerid][pHack] = 3600;
						if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
							PlayerInfo[playerid][pMobilnet] += skill;
					}
					else
					{
						PlayerInfo[playerid][pHack] = 500;
					    SendClientMessage(playerid, COLOR_YELLOW, "Feljelentettek hackerkedésért!");
						PlayerInfo[playerid][pHackingSkill] ++;
						SetPlayerCriminal(playerid,255, "Hackerkedés!");
						if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
							PlayerInfo[playerid][pMobilnet] += skill/2;
					}
				}
				
				else if(egyezik(param[1], "kamera"))
				{
					if(skill < 5) return Msg(playerid, "Minimum ötös skill!");
					
					if(bukta == false)
					{
						Hackeltkamera = true;
						PlayerInfo[playerid][pHackingSkill] += 2;
						PlayerInfo[playerid][pHack] = 1800;
						SendClientMessage(playerid, COLOR_GREEN, "Sikeresen feltörted a San Fierroi bank kamerarendszerét! 3 percig a kamerák fekete képet ((másik vw-t)) mutatnak!");
						SetTimerEx("Bankkamera", 180000, false, "i", playerid);
						if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
							PlayerInfo[playerid][pMobilnet] += skill;
					}
					else
					{
						PlayerInfo[playerid][pHack] = 900;
					    SendClientMessage(playerid, COLOR_YELLOW, "Feljelentettek hackerkedésért!");
						CopMsg(COLOR_ALLDEPT, "Biztonsági õr: Figyelem! Valaki megpróbálta feltörni a San Fierroi bank kameráit! Vége.");
						PlayerInfo[playerid][pHackingSkill] ++;
						SetPlayerCriminal(playerid,255, "Hackerkedés!");
						if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
							PlayerInfo[playerid][pMobilnet] += skill/2;
					}
				}
				//Ryan LV Lézer es cucca
				else if(egyezik(param[1], "lezer") || egyezik(param[1], "lézer"))
				{
					if(!IsRyan(playerid))
						return SendClientMessage(playerid, COLOR_LIGHTRED, "Egyelõre csak Teplán bá használhatja ezt a parancsot!");
					if(skill < 12) return Msg(playerid, "Minimum skill 12!");
					if(!VanLezer) return Msg(playerid, "A lézerek most is ki vannak kapcsolva!");
					if(!PlayerToPoint(10.0, playerid, -1988.6638,1117.8837,54.4726))
					if(!PlayerToPoint(3, playerid, 0, 0, 0))
					{
						Msg(playerid, "Nem vagy az LV-i tõzsde elektromos paneljénél!((GPS-en jelezve))");
						SetPlayerCheckpoint(playerid, 0 ,0 ,0 , 5);
						return 1; // Kell a visszatérési érték hogy ne fusson tovább a kód
					}
					if(bukta == false)
					{
						PlayerInfo[playerid][pHackingSkill] += 2;
						PlayerInfo[playerid][pHack] = 7200; // 2 óra múlva hackelhet
						//SendClientMessage(playerid, COLOR_YELLOW, "Sikeresen feltörted a Las Venturasi Tõzsde lézer rendszerét!");
						//SendClientMessage(playerid, COLOR_YELLOW, "Tíz percetek van mire a rendõrség rájön, és visszakapcsolják a lézert!");
						
						Cselekves(playerid,"elõveszi a laptopját és csatlakozik a vezérlõre.");
	        	        GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~Jelszo feltorese...",60000,3);
	        	        SetTimerEx("TozsdeFeltoresTimer", 60000, 0, "i", playerid);
	        	       	Freeze(playerid, 60000);
  		       			MunkaFolyamatban[playerid] = 1;
						
						//LezerKikapcs();
						//SetTimerEx("LvTozsdeLezerTimer", 600000, false, "i", playerid);
						if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
							PlayerInfo[playerid][pMobilnet] += skill;
					}
					else
					{
						PlayerInfo[playerid][pHack] = 900;
					    SendClientMessage(playerid, COLOR_YELLOW, "Feljelentettek hackerkedésért!");
						CopMsgFormat(COLOR_ALLDEPT, "Tõzsde Számítógépes Rendszere: Figyelem! %s megpróbálta kikapcsolni Las Venturai Tõzsde lézereit! Vége.", ICPlayerName(playerid));
						PlayerInfo[playerid][pHackingSkill] ++;
						SetPlayerCriminal(playerid,255, "Hackerkedés!");
						if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
							PlayerInfo[playerid][pMobilnet] += skill/2;
					}
				}
				else if(egyezik(param[1], "jármû") || egyezik(param[1], "jarmu"))
				{
					new rendszam = strval(param[2]);
					if(skill < 4) return Msg(playerid, "Négyes skilltõl!");
					if(params < 2) return Msg(playerid, "/hack jármû [jármûid]");
					if(Carblock[rendszam] > UnixTime) return Msg(playerid, "Még várnod kell kicsit, hogy blokkolni tudd a jármûvet!");
					if(rendszam < 1 || rendszam >= MAX_VEHICLES || !IsVehicleConnected(rendszam)) return Msg(playerid, "Nem létezõ jármûid!");
					if(bukta == false)
					{
						Carblock[rendszam] = UnixTime+300;
						PlayerInfo[playerid][pHackingSkill] +=2;
						PlayerInfo[playerid][pHack] = 900;
						SendClientMessage(playerid, COLOR_GREEN, "Sikeresen behatoltál a Rendõrség rendszerébe, 5 percig blokkoltad a jármû lenyomozhatóságát!");
						if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
							PlayerInfo[playerid][pMobilnet] += skill;
					}
					else
					{
						PlayerInfo[playerid][pHack] = 300;
					    SendClientMessage(playerid, COLOR_YELLOW, "Nem sikerült blokkolnod a jármûvet!");
						PlayerInfo[playerid][pHack] = 600;
						if(PlayerInfo[playerid][pMobilnet] != NINCS && !LaptopConnected[playerid])
							PlayerInfo[playerid][pMobilnet] += skill/2;
					}
				}
			}
			else return Msg(playerid, "Ne nevettess kolléga!");
		}
		else
			Msg(playerid, "Börtönben nem lehet!");
		return 1;
	}
	if(egyezik(cmd, "/guard")) 
	{
		if(!AMT(playerid, MUNKA_TESTOR)) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy testõr!");
		if(params < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /guard [playerid/PartOfName] [ennyiért]");
		new money;
		giveplayerid = ReturnUser(param[1]);
		money = strval(param[2]);
		if(money < 1 || money > 100000) return SendClientMessage(playerid, COLOR_GREY, "Az összeg 1 és 100000 között lehet!");
		if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Nincs fennt!");
        if(GetDistanceBetweenPlayers(playerid, giveplayerid) > 8.0) return SendClientMessage(playerid, COLOR_GREY, "Nincs a közeledben");
		if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Megnézném, hogy véded meg magad... O.O");
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Testõr %s felajánlotta, hogy megvéd téged %dFt-ért! Elfogadása: /accept bodyguard", ICPlayerName(giveplayerid), money);
		SendFormatMessage(giveplayerid, COLOR_LIGHTBLUE, "* Testõr %s felajánlotta, hogy megvéd téged %dFt-ért! Elfogadása: /accept bodyguard", ICPlayerName(playerid), money);
		GuardOffer[giveplayerid] = playerid;
		GuardPrice[giveplayerid] = money;
		return 1;
	}
	/*if(egyezik(cmd, "/free"))
	{
	    if(!AMT(playerid, MUNKA_UGYVED)) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy ügyvéd!");
	    if(PlayerInfo[playerid][pLawSkill] >= 401)
	        ApprovedLawyer[playerid] = 1;
		if(params < 1) return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /free [playerid/PartOfName]");
		giveplayerid = ReturnUser(param[1]);
        if(!IsPlayerConnected(giveplayerid) || giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Nincs fennt!");
        if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Magadat nem tudod kihozni!");
		if(PlayerInfo[giveplayerid][pJailed] != 1 || ApprovedLawyer[playerid] != 1) return SendClientMessage(playerid, COLOR_GRAD1, "Neki nincs szüksége ügyvédre / nincs börtönben");
		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Kihoztad %s-t a börtönbõl", PlayerName(giveplayerid));
		SendFormatMessage(giveplayerid, COLOR_LIGHTBLUE, "* %s ügyvéd kihozott a börtönbõl", PlayerName(playerid));
		ApprovedLawyer[playerid] = 0;
		WantLawyer[giveplayerid] = 0;
		CallLawyer[giveplayerid] = 0;
		PlayerInfo[giveplayerid][pOvadek] = 0;
		PlayerInfo[giveplayerid][pJailTime] = 1;
		PlayerInfo[playerid][pLawSkill] ++;
		if(PlayerInfo[playerid][pLawSkill] == 50)
			SendClientMessage(playerid, COLOR_YELLOW, "* Az ügyvéd melóval egyre jobb lettél! A szinted megnõtt! (2) Több pénzt kapsz, és hamarabb hozhatod ki!");
		else if(PlayerInfo[playerid][pLawSkill] == 100)
			SendClientMessage(playerid, COLOR_YELLOW, "* Az ügyvéd melóval egyre jobb lettél! A szinted megnõtt! (3) Több pénzt kapsz, és hamarabb hozhatod ki!");
		else if(PlayerInfo[playerid][pLawSkill] == 200)
			SendClientMessage(playerid, COLOR_YELLOW, "* Az ügyvéd melóval egyre jobb lettél! A szinted megnõtt! (4) Több pénzt kapsz, és hamarabb hozhatod ki!");
		else if(PlayerInfo[playerid][pLawSkill] == 400)
			SendClientMessage(playerid, COLOR_YELLOW, "* Az ügyvéd melóval egyre jobb lettél! A szinted megnõtt! (5) Több pénzt kapsz, és hamarabb hozhatod ki!");
		return 1;
	}*/
	if(egyezik(cmd,"/cancel"))
    {
		if(FloodCheck(playerid)) return 1;
		if(params < 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cancel __________________|");
			SendClientMessage(playerid, COLOR_WHITE, "Használat: /cancel [name]");
			SendClientMessage(playerid, COLOR_GREY, "Választható: Sex, Drugs, Repair, Lawyer, Bodyguard, Live, Boxing, Invite");
			SendClientMessage(playerid, COLOR_GREY, "Választható: Taxi, Bus, Medic, Mechanic, Witness, Marriage, Divorce, Call");
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
			return 1;
		}
		if(egyezik(param[1], "call"))
		{
			new caller = ReturnUser(param[2]);
			if(caller == INVALID_PLAYER_ID) return Msg(playerid, "Nem létezõ játékos");
			if(OnAirID != caller) return Msg(playerid, "Nem õ volt adásban!");
			SendFormatMessage(caller, COLOR_GREEN, "%s lekapcsolt az élõ adásból!", ICPlayerName(playerid));
			SendFormatMessage(playerid, COLOR_GREEN, "Lekapcsoltad %s-t az élõ adásból!", ICPlayerName(caller));
			OnAirID = 255;
			Mobile[caller] = 255;
			SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
			TeloElrak[caller]=TELOELRAK;
			CellTime[caller] = 0;
			SendClientMessage(caller,  COLOR_GRAD2, "A telefonod beraktad a zsebedbe.");
			Cselekves(caller, "letette a telefonját");
		}
		else if(egyezik(param[1], "megbízás") || egyezik(param[1], "megbizas"))
		{
			if(Felberelve[playerid] == NINCS) return 1;
			Felberelve[playerid] = NINCS;
			FelberelveOsszeg[playerid] = NINCS;
			Msg(playerid, "Megbízás visszautasítva.");
			format(string, sizeof(string), "* %s visszautasította a megbízást.", ICPlayerName(playerid));
			SendMessage(SEND_MESSAGE_HITMAN, string, COLOR_YELLOW);
		}
		else if(egyezik(param[1],"sex"))
		{
			SexOffer[playerid] = 999;
			SexPrice[playerid] = 0;
		}
		else if(egyezik(param[1], "adasveteli") || egyezik(param[1], "adásvételi"))
		{
			Msg(playerid, "Visszautasítottad");
			AdasVeteliNeki[playerid] = NINCS;
		}
		else if(egyezik(param[1],"repair")) { GumitCserel[playerid] = false; OlajatCserel[playerid] = false; AkkutCserel[playerid] = false; MotortCserel[playerid] = false; ElektronikatCserel[playerid] = false; FeketCserel[playerid] = false; KarosszeriatCserel[playerid] = false; JavitasAra[playerid] = 0; AlkatreszAr[playerid] = 0; NekiSzerel[playerid] = NINCS;}
		else if(egyezik(param[1],"lawyer")) { WantLawyer[playerid] = 0; CallLawyer[playerid] = 0; }
		else if(egyezik(param[1],"bodyguard")) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
		else if(egyezik(param[1],"live"))  LiveOffer[playerid] = 999;
		else if(egyezik(param[1],"witness")) MarryWitnessOffer[playerid] = 999;
		else if(egyezik(param[1],"marriage")) ProposeOffer[playerid] = 999;
		else if(egyezik(param[1],"divorce"))  DivorceOffer[playerid] = 999;
		//else if(egyezik(param[1],"ticket")) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
		else if(egyezik(param[1],"mechanic"))
		{
			if(SzereloHiv[playerid] == 0) return Msg(playerid,"Nem hívtál szerelõt!");
			SzereloHiv[playerid] = 0;
			Msg(playerid,"Visszavondtad a hívást!");
			foreach(Jatekosok, x)
			{
				if(PlayerInfo[x][pSzerelo] > 0)
				{
					SendFormatMessage(x, COLOR_LIGHTGREEN, "** %s visszamondta a hívást!", ICPlayerName(playerid));
				}
			}
			return 1;
		}
		else if(egyezik(param[1], "taxi"))
		{
			
			
			
			format(string, sizeof(string), "[TAXI] %s visszamondta a taxit", ICPlayerName(playerid));
			foreach(Jatekosok, x)
			{
				if(Taxi[x][tDuty])
				{
					SendClientMessage(x, COLOR_YELLOW, string);
				}
				if(TaxiHivasJelzes[x] == playerid)
					Msg(x, "Vissza mondták a hívást amire mész!!!");
			}
			Msg(playerid, "Hívás visszavonva");

			TaxiHivas[playerid] = 0;

			foreach(Jatekosok, p)
			{
				SetPlayerMarkerForPlayer(p, playerid, COLOR_INVISIBLE);
				if(TaxiHivasJelzes[p] == playerid) TaxiHivasJelzes[p] = NINCS,Taxi[p][tHivas] = false;
			}
			return 1;
		}
		else if(egyezik(param[1], "medic"))
		{
			if(MentoHivas[playerid] == 0)
				return Msg(playerid, "Nem hívtál még mentõst");

			format(string, sizeof(string), "** %s visszamondta a segélyhívást **", ICPlayerName(playerid));
			SendMessage(SEND_MESSAGE_ONKENTES, string, TEAM_AZTECAS_COLOR);
			Msg(playerid, "Hívás visszavonva");

			MentoHivas[playerid] = 0;

			foreach(Jatekosok, p)
			{
				SetPlayerMarkerForPlayer(p, playerid, COLOR_INVISIBLE);
				if(KiertMegy[p] == playerid) KiertMegy[p] = NINCS;
			}
			return 1;
		}
		else if(egyezik(param[1], "fire"))
		{
			if(!CallTuz[playerid])
				return Msg(playerid, "Nem hívtál még tûzoltót");

			//format(string, sizeof(string), "** %s visszamondta a segélyhívást", PlayerName(playerid));
			SendRadioMessageFormat(FRAKCIO_TUZOLTO, TEAM_AZTECAS_COLOR, "** %s visszamondta a segélyhívást", ICPlayerName(playerid));
			Msg(playerid, "Hívás visszavonva");

			CallTuz[playerid] = 0;

			foreach(Jatekosok, p)
				SetPlayerMarkerForPlayer(p, playerid, COLOR_INVISIBLE);

			return 1;
		}
		else if(egyezik(param[1],"bus"))
		{
		    if(BusCall < 999)
		    {
		        if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
		        {
		            BusAccepted[playerid] = 999;
					GameTextForPlayer(playerid, "~w~Visszavontad a~n~~r~buszt", 5000, 1);
					BusCallTime[playerid] = 0;
					DisablePlayerCheckpoint(playerid);
					BusCall = 999;
		        }
		        else
		        {
					if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
					    if(IsPlayerConnected(i))
					    {
					        if(BusAccepted[i] < 999)
					        {
						        if(BusAccepted[i] == playerid)
						        {
						            BusAccepted[i] = 999;
						            GameTextForPlayer(i, "~w~A hivo~n~~r~torolte a hivast", 5000, 1);
									BusCallTime[i] = 0;
							        DisablePlayerCheckpoint(i);
							    }
							}
						}
					}
				}
			}
		}
		elseif(egyezik(param[1], "invite"))
		{
			if(!Invitejog[playerid]) return Msg(playerid, "Te nem vagy sehova meghívva");
			format(_tmpString, 128, "<< ClassRPG: %s elutasította a meghívást a frakciótokba >>", PlayerName(playerid));
			foreach(Jatekosok, p)
			{
				if(LMT(p, Invitejog[playerid]))
					SendClientMessage(p, COLOR_LIGHTRED, _tmpString);
			}
			Invitejog[playerid] = 0;
		}
		else return 1;
		SendFormatMessage(playerid, COLOR_YELLOW, "* Visszavontad: %s.", param[1]);
		return 1;
	}

//ACCEPT COMMANDS (Cops)

	if(egyezik(cmd, "/accept"))
    {
		if(params < 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Accept __________________|");
			SendClientMessage(playerid, COLOR_WHITE, "Használat: /accept [név]");
			SendClientMessage(playerid, COLOR_GREY, "Nevek: Sex, Drugs, Repair, Lawyer, Bodyguard, Job, Live, Car");
			SendClientMessage(playerid, COLOR_GREY, "Nevek: Bus, Boxing, Mechanic, Felujitas, Call");
            SendClientMessage(playerid, COLOR_GREY, "Nevek: Privát, Taxi, Medic, Gumicsere, Invite");
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
			return 1;
		}
		else if(egyezik(param[1], "call"))
		{
			if(!LMT(playerid, FRAKCIO_RIPORTER)) return Msg(playerid, "Csak riporter kezelheti");
			
			new caller = ReturnUser(param[2]);
			if(caller == INVALID_PLAYER_ID) return Msg(playerid, "Nem létezõ játékos");
			if(caller == playerid) return Msg(playerid, "Magadat?");
			if(Mobile[caller] != 1003) return Msg(playerid, "Ez a játékos nem telefonált be az élõ mûsorba!");
			if(OnAirID != 255) return Msg(playerid, "Elõször szakítsd meg az adást a másik betelefonálóval!");
			SendFormatMessage(caller, COLOR_GREEN, "%s beregisztrált a CCN élõ mûsorába! Mostantól minden, amit mondasz, hallatszódik a rádióban!", ICPlayerName(playerid));
			SendFormatMessage(playerid, COLOR_GREEN, "Beregisztráltad %s-t az élõ mûsorba! Mostantól minden, amit mond, hallatszódik a rádióban!", ICPlayerName(caller));
			OnAirID = caller;
		}
		else if(egyezik(param[1],"invite"))
		{
			if(!Invitejog[playerid]) return Msg(playerid, "Te nem vagy sehova meghívva");
			if(FrakcioInfo[ Invitejog[playerid] ][fTagokSzama] >= SzervezetLimit[ Invitejog[playerid] - 1 ]) return Msg(playerid, "A frakció tele van");
			PlayerInfo[playerid][pMember] = Invitejog[playerid];
			PlayerInfo[playerid][pRank] = 0;
			PlayerInfo[playerid][pFelvetel] = UnixTime;
			SendFormatMessage(playerid, COLOR_GREEN, "ClassRPG: Csatlakoztál ide: %s", Szervezetneve[PlayerInfo[playerid][pMember] - 1][0]);
			format(_tmpString, 128, "<< ClassRPG: %s elfogadta a meghívást a frakciótokhoz, így csatlakozott >>", PlayerName(playerid));
			foreach(Jatekosok, p)
			{
				if(LMT(p, PlayerInfo[playerid][pMember]))
					SendClientMessage(p, COLOR_LIGHTRED, _tmpString);
			}
			
			ShowPlayerModelSelector(playerid, MSELECTOR_CLOTHES_FRACTION);
			
			Invitejog[playerid] = 0;
			return 1;
		}
		else if(egyezik(param[1],"divorce"))
		{
		    if(DivorceOffer[playerid] >= 999) return SendClientMessage(playerid, COLOR_GREY, "Senki nem küldött válási papirokat!");
		    if(!IsPlayerConnected(DivorceOffer[playerid])) return Msg(playerid, "A házastársad nem online!");
		    if(GetDistanceBetweenPlayers(playerid, DivorceOffer[playerid]) > 8.0) return Msg(playerid, "NIncs a közeledben!");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elfogadtad %s felkérését a válásra!", ICPlayerName(DivorceOffer[playerid]));
			SendFormatMessage(DivorceOffer[playerid], COLOR_LIGHTBLUE, "* %s elfogadta a válási kérésedet", ICPlayerName(playerid));
			ClearMarriage(playerid);
			ClearMarriage(DivorceOffer[playerid]);
			PlayerInfo[playerid][pPhousekey] = NINCS;
			PlayerInfo[playerid][pPbiskey] = NINCS;
			return 1;
		}
		else if(egyezik(param[1],"witness"))
		{
		    if(MarryWitnessOffer[playerid] >=  999) return SendClientMessage(playerid, COLOR_GREY, "Aki felkért, hogy tanú legyél, nincs közel hozzád!");
		    if(!IsPlayerConnected(MarryWitnessOffer[playerid])) return Msg(playerid, "Nincs online, aki felkért!");
			if(GetDistanceBetweenPlayers(playerid, MarryWitnessOffer[playerid]) > 10.0) return SendClientMessage(playerid, COLOR_GREY, "Aki felkért, hogy tanú legyél, nincs közel hozzád!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elfogadtad %s felkérését arra, hogy tanú legyél!", ICPlayerName(MarryWitnessOffer[playerid]));
			SendFormatMessage(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, "* %s elfogadta a felkérésedet. Immár õ a tanú!", ICPlayerName(playerid));
			MarryWitness[MarryWitnessOffer[playerid]] = playerid;
			MarryWitnessOffer[playerid] = 999;
			return 1;
		}
        else if(egyezik(param[1],"privát") || egyezik(param[1],"privat"))
		{
		    if(PrivatAjanlat[playerid] == NINCS) return Msg(playerid, "Senki nem akar bemenni a privát szobába!");
			if(PrivatAjanlat[playerid] == INVALID_PLAYER_ID)
			{
				Msg(playerid, "Aki beakart menni a privát szobába, már nem online!");
				PrivatAjanlat[playerid] = NINCS;
				PrivatAr[playerid] = NINCS;
				return 1;
			}
			if(GetMoney(PrivatAjanlat[playerid]) > PrivatAr[playerid])
			{
				GiveMoney(playerid, PrivatAr[playerid]);
				GiveMoney(PrivatAjanlat[playerid], -PrivatAr[playerid]);
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Beleegyeztél hogy %s bemehet a privát szobába %dFt-ért.", ICPlayerName(PrivatAjanlat[playerid]), PrivatAr[playerid]);
               	SendFormatMessage(PrivatAjanlat[playerid], COLOR_LIGHTBLUE, "* %s beleegyezett hogy bemenj a privát szobába %dFt-ért.", ICPlayerName(playerid), PrivatAr[playerid]);
				/*new koszonuzi[246];
				format(koszonuzi,sizeof(koszonuzi),"* Jó szórakozást kíván: %s",BizzInfo[BIZ_PIGPEN][bMessage]);
	   			SendClientMessage(PrivatAjanlat[playerid],COLOR_LIGHTBLUE,koszonuzi);*/
				PrivatEngedely[PrivatAjanlat[playerid]] = 1;
				PrivatAjanlat[playerid] = NINCS;
				PrivatAr[playerid] = NINCS;
				return 1;
			}
			else
			{
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s nem tudja kifizetni(%dFt), ezért az ajánlat érvénytelen.", ICPlayerName(PrivatAjanlat[playerid]), PrivatAr[playerid]);
				SendFormatMessage(PrivatAjanlat[playerid], COLOR_LIGHTBLUE, "* Nem tudtad kifizetni(%dFt), ezért az ajánlat érvénytelen.", PrivatAr[playerid]);
				PrivatAjanlat[playerid] = NINCS;
				PrivatAr[playerid] = NINCS;
				return 1;
			}
		}
		else if(egyezik(param[1],"locsolás") || egyezik(param[1],"locsolas"))
		{
		    if(Locsolniakar[playerid] == NINCS) return Msg(playerid, "Senki nem ajánlotta fel hogy meglocsol.");
			if(Locsolniakar[playerid] == INVALID_PLAYER_ID)
			{
				Msg(playerid, "Aki megakart locsolni, már nem online!");
				Locsolniakar[playerid] = NINCS;
				return 1;
			}
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* %s meglocsolt egy kölnivel.", ICPlayerName(Locsolniakar[playerid]));
			SendFormatMessage(Locsolniakar[playerid], COLOR_LIGHTBLUE, "* Meglocsoltad %s-t kölnivel.", ICPlayerName(Locsolas[Locsolniakar[playerid]]));
			Cselekves(Locsolniakar[playerid], "elovette a kölnit és meglocsolt valakit.");
			Locsolas[Locsolniakar[playerid]] = NINCS;
			Locsolniakar[playerid] = NINCS;
			return 1;
		}
        else if(egyezik(param[1], "marriage"))
		{
		    if(ProposeOffer[playerid] >= 999) return SendClientMessage(playerid, COLOR_GREY, "Senki sem kérte meg a kezed!");
		    if(!PlayerToPoint(10.0, playerid, -1988.6638,1117.8837,54.4726)) return SendClientMessage(playerid, COLOR_GREY, "Nem vagy az SFi templomnál!");
		    if(!IsPlayerConnected(ProposeOffer[playerid])) return Msg(playerid, "Aki megkérte a kezed, nem online!");
		    if(GetDistanceBetweenPlayers(playerid, ProposeOffer[playerid]) > 10.0) return SendClientMessage(playerid, COLOR_GREY, "Aki megkérte a kezed, nincs hozzád közel!");
		    if(MarryWitness[ProposeOffer[playerid]] == 999) return SendClientMessage(playerid, COLOR_GREY, "Az ajánlónak nincs tanúja!");
		    if(!IsPlayerConnected(MarryWitness[ProposeOffer[playerid]])) return Msg(playerid, "Az ajánló tanúja nincs fent a szerveren!");
		    if(GetDistanceBetweenPlayers(ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]) > 12.0) return SendClientMessage(playerid, COLOR_GREY, "A tanú nincs közel a felkérõhöz!");
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Elfogadtad %s felkérését, hogy a férje legyél.", ICPlayerName(ProposeOffer[playerid]));
			SendFormatMessage(ProposeOffer[playerid], COLOR_LIGHTBLUE, "* %s elfogadta a felkérésed, hogy a feleséged legyen", ICPlayerName(playerid));
			SendFormatMessage(playerid, COLOR_WHITE, "Pap: %s, valóban %s-t akarod férjednek? Örökké szeretned kell, és hûséget kell fogadnod neki!", ICPlayerName(playerid), ICPlayerName(ProposeOffer[playerid]));
			SendClientMessage(playerid, COLOR_WHITE, "Ha igen, ird be, hogy 'yes', bármi mást írsz be, azzal visszautasítod!");
			MarriageCeremoney[playerid] = 1;
			ProposedTo[ProposeOffer[playerid]] = playerid;
			GotProposedBy[playerid] = ProposeOffer[playerid];
			MarryWitness[ProposeOffer[playerid]] = 999;
			ProposeOffer[playerid] = 999;
			return 1;
		}
		else if(egyezik(param[1],"taxi"))
		{
			if(Taxi[playerid][tHivas]) return Msg(playerid, "Már fogadtál hívást!");
			if(!Taxi[playerid][tDuty]) return Msg(playerid, "Nem  vagy szolgálatban!");
			if(params < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /accept taxi [Név/ID]");
			new jatekos;
			jatekos = ReturnUser(param[2]);

			if(jatekos == INVALID_PLAYER_ID)
				return Msg(playerid, "Nincs ilyen játékos");

			if(TaxiHivas[jatekos] != 1) return Msg(playerid, "Nem hívott taxit!");
			TaxiHivas[jatekos] = 2;
			foreach(Jatekosok, x)
			{
				if(AdminDuty[x] == 0 && ScripterDuty[x] == 0)
					SetPlayerMarkerForPlayer(playerid, x, COLOR_INVISIBLE);
			}
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Fogadtad %s hívását!", ICPlayerName(jatekos));
			SendFormatMessage(jatekos, COLOR_LIGHTGREEN, "%s fogadta a hívásod!", ICPlayerName(playerid));
			SendFormatMessageToAll(COLOR_GREEN, "Taxi sofõr %s fogadta %s hívását", ICPlayerName(playerid), ICPlayerName(jatekos));
			SetPlayerMarkerForPlayer(playerid, jatekos, COLOR_YELLOW);
			SetPlayerMarkerForPlayer(jatekos, playerid, COLOR_YELLOW);
			//KiertMegy[playerid] = jatekos;
			TaxiHivasJelzes[playerid] = jatekos;
			Taxi[playerid][tHivas] = true;
			
			new taxiszoveg[64];
			format(taxiszoveg, 64, "Taxisofõr HÍVÁSRA MEGY\nViteldíj: %d Ft / KM",FrakcioInfo[FRAKCIO_TAXI][fDij]);
			
			if(IsValidDynamic3DTextLabel(TAXITEXT[vehicleid])) DestroyDynamic3DTextLabel(TAXITEXT[vehicleid]), TAXITEXT[vehicleid]=INVALID_3D_TEXT_ID;
			TAXITEXT[vehicleid] = CreateDynamic3DTextLabel(taxiszoveg, COLOR_YELLOW_TAXI, 0.0, 0.0, 2.0, 20.0, INVALID_PLAYER_ID, vehicleid, 1);
			
			return 1;
		}
		else if(egyezik(param[1],"medic"))
		{
			if(!LMT(playerid, FRAKCIO_MENTO) && !IsOnkentes(playerid)) return Msg(playerid, "Nem vagy mentõs, vagy önkéntes!");
			if(params < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /accept medic [Név/ID]");
			new jatekos;
			jatekos = ReturnUser(param[2]);
			if(MentoHivas[jatekos] != 1) return Msg(playerid, "Nem hívott mentõt!");
			MentoHivas[jatekos] = 2;
			foreach(Jatekosok, x)
			{
				if(AdminDuty[x] == 0 && ScripterDuty[x] == 0)
					SetPlayerMarkerForPlayer(playerid, x, COLOR_INVISIBLE);
			}
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Fogadtad %s hívását!", ICPlayerName(jatekos));
			SendFormatMessage(jatekos, COLOR_LIGHTBLUE, "%s fogadta a hívásod!", ICPlayerName(playerid));
			if(LMT(playerid, FRAKCIO_MENTO))
				SendFormatMessageToAll(COLOR_LIGHTBLUE, "Mentõs %s fogadta %s hívását", ICPlayerName(playerid), ICPlayerName(jatekos));
			else
				SendFormatMessageToAll(COLOR_LIGHTBLUE, "Önkéntes %s fogadta %s hívását", ICPlayerName(playerid), ICPlayerName(jatekos));
			new Float:posx, Float:posy, Float:posz;
			GetPlayerPos(jatekos, posx, posy, posz);
			SendFormatMessage(playerid, COLOR_ORANGE, "A betelefonáló utolsó pozíciója: %.3f ; %.3f ; %.3f", posx, posy, posz);
			SetPlayerMarkerForPlayer(playerid, jatekos, COLOR_ORANGE);
			KiertMegy[playerid] = jatekos;
			MentoSegit[playerid] = 1;
			return 1;
		}
		else if(egyezik(param[1],"bus"))
		{
		    if(TransportDuty[playerid] != 2)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "Nem vagy buszsofõr");
			    return 1;
		    }
            if(BusCallTime[playerid] > 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "Már fogadtál egy hívást");
			    return 1;
            }
            if(BusCall < 999)
            {
                if(IsPlayerConnected(BusCall))
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                	GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
                	format(string, sizeof(string), "* Elfogadtad %s hívását! Siess!",giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* Busz sofõr %s elfogadta a hívásodat, maradj ott ahol vagy! Ha nem kell /cancel bus",sendername);
					SendClientMessage(BusCall, COLOR_LIGHTBLUE, string);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(BusCall, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5);
					BusCallTime[playerid] = 1;
					BusAccepted[playerid] = BusCall;
					BusCall = 999;
					return 1;
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "Nem hívtak buszt");
		    	return 1;
            }
		}
		else if(egyezik(param[1],"mechanic") || egyezik(param[1],"szerelõ") || egyezik(param[1],"szerelo"))
		{
				if(PlayerInfo[playerid][pSzerelo] < 1) return Msg(playerid, "Nem vagy szerelõ");
				if(params < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Használat: /accept mechanic [Név/ID]");
				new jatekos;
				jatekos = ReturnUser(param[2]);
				if(SzereloHiv[jatekos] != 1) return Msg(playerid, "Nem hívott szerelõt!");
				SzereloHiv[jatekos] = 0;
				foreach(Jatekosok, x)
				{
					if(AdminDuty[x] == 0 && ScripterDuty[x] == 0)
						SetPlayerMarkerForPlayer(playerid, x, COLOR_INVISIBLE);
				}
				SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Fogadtad %s hívását!", ICPlayerName(jatekos));
				SendFormatMessage(jatekos, COLOR_LIGHTBLUE, "%s fogadta a szerelõ hívásod!", ICPlayerName(playerid));
				SendFormatMessageToAll(COLOR_LIGHTBLUE, "Szerelõ %s fogadta %s hívását", ICPlayerName(playerid), ICPlayerName(jatekos));
				SetPlayerMarkerForPlayer(playerid, jatekos, COLOR_RED);
				//SetPlayerMarkerForPlayer(jatekos, playerid, COLOR_RED); // Aki hívta annak jelzi a szerelõt
		
				return 1;
		}
		else if(egyezik(param[1],"live"))
		{
		    if(LiveOffer[playerid] < 999)
		    {
		        if(IsPlayerConnected(LiveOffer[playerid]))
		        {
			        if (GetDistanceBetweenPlayers(playerid, LiveOffer[playerid]) < 5.0)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Addig itt maradsz, amig az élõadásnak vége");
						SendClientMessage(LiveOffer[playerid], COLOR_LIGHTBLUE, "* Addig itt maradsz, amig az élõadásnak vége (Kikapcsolás: /live).");
						TogglePlayerControllable(playerid, 0);
						TogglePlayerControllable(LiveOffer[playerid], 0);
						TalkingLive[playerid] = LiveOffer[playerid];
						TalkingLive[LiveOffer[playerid]] = playerid;
						LiveOffer[playerid] = 999;
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "Messze vagy a riportertõl!");
						return 1;
					}
				}
				return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Nincs felajánlás!");
			    return 1;
			}
		}
		else if(egyezik(param[1],"lawyer"))
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /accept lawyer [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsACop(playerid))
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
			            if(AMT(giveplayerid, MUNKA_UGYVED))
			            {
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Megendedted %s ügyvédnek, hogy kihozzon egy embert", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
							format(string, sizeof(string), "* %s megendte, hogy kihozd a védencedet a börtönbõl! (/free)", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
							ApprovedLawyer[giveplayerid] = 1;
						    return 1;
						}
					}
				}
				return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Invalid action! (You are no cop / Player aint a Lawyer / Bad ID)");
			    return 1;
			}
		}
		else if(egyezik(param[1],"bodyguard"))
		{
		    if(GuardOffer[playerid] < 999)
		    {
		        if(GetMoney(playerid) > GuardPrice[playerid])
			    {
				    if(IsPlayerConnected(GuardOffer[playerid]))
				    {
						SendFormatMessage(playerid, COLOR_LIGHTBLUE,  "* Elfogadtad %s testõrségét %d-ért",ICPlayerName(GuardOffer[playerid]),GuardPrice[playerid]);
						SendFormatMessage(GuardOffer[playerid], COLOR_LIGHTBLUE, "* %s elfogadta a testõrségedet, és kaptál %d-t",ICPlayerName(playerid),GuardPrice[playerid]);
						PlayerInfo[GuardOffer[playerid]][pPayCheck] += GuardPrice[playerid];
						GiveMoney(playerid, -GuardPrice[playerid]);
				        GuardOffer[playerid] = 999;
						GuardPrice[playerid] = 0;
						return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Nincs elég pénzed!");
				    return 1;
				}
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "Senki sem ajánlott testõrséget!");
		        return 1;
			}
		}
		else if(egyezik(param[1], "sex"))
		{
			if(SexOffer[playerid] < 999)
			{
				if(GetMoney(playerid) > SexPrice[playerid])
		  		{
					if (IsPlayerConnected(SexOffer[playerid]))
					{
					    new Car = GetPlayerVehicleID(playerid);
					    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car))
					    {
							GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Te sexeltél vele: %s, %d-ért", giveplayer, SexPrice[playerid]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s sexelt veled %d-ért", sendername, SexPrice[playerid]);
							SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[SexOffer[playerid]][pPayCheck] += SexPrice[playerid];
							GiveMoney(playerid, -SexPrice[playerid]);
							PlayerInfo[SexOffer[playerid]][pSexSkill] ++;
							new level = SkillLevel(PlayerInfo[SexOffer[playerid]][pSexSkill]);

							if(STDPlayer[playerid] == 0)
							{
							    if(Condom[playerid] < 1)
								{
								    new Float:health;
									if(level == 1)
								    {
								        if((GetPlayerHealth(playerid, health), health) < 150) {
										SetHealth(playerid, health + 30.0); }
										new rand = random(sizeof(STD1));
										STDPlayer[playerid] = STD1[rand];
										STDPlayer[SexOffer[playerid]] = STD1[rand];
										if(STD1[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 30 életet + nem kaptál el semmit"); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Nem kaptál el semmilyen fertõzést."); }
										else if(STD1[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 30 életet + a Chlamydia fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Chlamydia, mert gumi nélkül Sex-eltél."); }
										else if(STD1[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 30 életet + a Gonorrhea fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Gonorrhea, mert gumi nélkül Sex-eltél."); }
										else if(STD1[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 30 életet + a Syphilis fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Elkaptad a Syphilis, mert gumi nélkül Sex-eltél."); }
									}
									else if(level == 2)
								    {
								        if((GetPlayerHealth(playerid, health), health) < 150) {
										SetHealth(playerid, health + 40.0); }
										new rand = random(sizeof(STD2));
										STDPlayer[playerid] = STD2[rand];
										if(STD2[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 40 életet + nem kaptál el semmit"); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Nem kaptál el semmilyen fertõzést."); }
										else if(STD2[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 40 életet + a Chlamydia fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Chlamydia, mert gumi nélkül Sex-eltél."); }
										else if(STD2[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 40 életet + a Gonorrhea fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Gonorrhea, mert gumi nélkül Sex-eltél."); }
										else if(STD2[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 40 életet + a Syphilis fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Elkaptad a Syphilis, mert gumi nélkül Sex-eltél."); }
									}
									else if(level == 3)
								    {
								        if((GetPlayerHealth(playerid, health), health) < 150) {
										SetHealth(playerid, health + 50.0); }
										new rand = random(sizeof(STD3));
										STDPlayer[playerid] = STD3[rand];
										STDPlayer[SexOffer[playerid]] = STD3[rand];
										if(STD3[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 50 életet + nem kaptál el semmit"); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Nem kaptál el semmilyen fertõzést."); }
										else if(STD3[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 50 életet + a Chlamydia fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Chlamydia, mert gumi nélkül Sex-eltél."); }
										else if(STD3[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 50 életet + a Gonorrhea fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Gonorrhea, mert gumi nélkül Sex-eltél."); }
										else if(STD3[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 50 életet + a Syphilis fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Elkaptad a Syphilis, mert gumi nélkül Sex-eltél."); }
									}
									else if(level == 4)
								    {
								        if((GetPlayerHealth(playerid, health), health) < 150) {
										SetHealth(playerid, health + 60.0); }
										new rand = random(sizeof(STD4));
										STDPlayer[playerid] = STD4[rand];
										STDPlayer[SexOffer[playerid]] = STD4[rand];
										if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 60 életet + nem kaptál el semmit"); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Nem kaptál el semmilyen fertõzést."); }
										else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 60 életet + a Chlamydia fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Chlamydia, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 60 életet + a Gonorrhea fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Gonorrhea, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 60 életet + a Syphilis fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Elkaptad a Syphilis, mert gumi nélkül Sex-eltél."); }
									}
									else if(level == 5)
								    {
								        if((GetPlayerHealth(playerid, health), health) < 150) {
										SetHealth(playerid, health + 70.0); }
										new rand = random(sizeof(STD4));
										STDPlayer[playerid] = STD4[rand];
										STDPlayer[SexOffer[playerid]] = STD4[rand];
										if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 70 életet + nem kaptál el semmit"); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Nem kaptál el semmilyen fertõzést."); }
										else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 70 életet + a Chlamydia fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Chlamydia, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 70 életet + a Gonorrhea fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Gonorrhea, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 70 életet + a Syphilis fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Elkaptad a Syphilis, mert gumi nélkül Sex-eltél."); }
									}
									else if(level == 6)
								    {
								        if((GetPlayerHealth(playerid, health), health) < 150) {
										SetHealth(playerid, health + 80.0); }
										new rand = random(sizeof(STD4));
										STDPlayer[playerid] = STD4[rand];
										STDPlayer[SexOffer[playerid]] = STD4[rand];
										if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 80 életet + nem kaptál el semmit"); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Nem kaptál el semmilyen fertõzést."); }
										else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 80 életet + a Chlamydia fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Chlamydia, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 80 életet + a Gonorrhea fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Gonorrhea, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 80 életet + a Syphilis fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Elkaptad a Syphilis, mert gumi nélkül Sex-eltél."); }
									}
									else if(level == 7)
								    {
								        if((GetPlayerHealth(playerid, health), health) < 150) {
										SetHealth(playerid, health + 90.0); }
										new rand = random(sizeof(STD4));
										STDPlayer[playerid] = STD4[rand];
										STDPlayer[SexOffer[playerid]] = STD4[rand];
										if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 90 életet + nem kaptál el semmit"); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Nem kaptál el semmilyen fertõzést."); }
										else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 90 életet + a Chlamydia fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Chlamydia, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 90 életet + a Gonorrhea fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Gonorrhea, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 90 életet + a Syphilis fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Elkaptad a Syphilis, mert gumi nélkül Sex-eltél."); }
									}
									else if(level == 8)
								    {
								        if((GetPlayerHealth(playerid, health), health) < 150) {
										SetHealth(playerid, health + 100.0); }
										new rand = random(sizeof(STD4));
										STDPlayer[playerid] = STD4[rand];
										STDPlayer[SexOffer[playerid]] = STD4[rand];
										if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 10 életet + nem kaptál el semmit"); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Nem kaptál el semmilyen fertõzést."); }
										else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 100 életet + a Chlamydia fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Chlamydia, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 100 életet + a Gonorrhea fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Gonorrhea, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 100 életet + a Syphilis fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Elkaptad a Syphilis, mert gumi nélkül Sex-eltél."); }
									}
									else if(level == 9)
									{
									
										if((GetPlayerHealth(playerid, health), health) < 150) {
										SetHealth(playerid, health + 110.0); }
										new rand = random(sizeof(STD4));
										STDPlayer[playerid] = STD4[rand];
										STDPlayer[SexOffer[playerid]] = STD4[rand];
										if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 110 életet + nem kaptál el semmit"); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Nem kaptál el semmilyen fertõzést."); }
										else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 110 életet + a Chlamydia fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Chlamydia, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kaptál 110 életet + a Gonorrhea fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Elkaptad a Gonorrhea, mert gumi nélkül Sex-eltél."); }
										else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Kaptál 110 életet + a Syphilis fertõzést."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Elkaptad a Syphilis, mert gumi nélkül Sex-eltél."); }
									
									
									}
									else if(level >= 10)
									{
									    if((GetPlayerHealth(playerid, health), health) < 150) {
										SetHealth(playerid, health + 150.0); }
										SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Olyan jó a sex-ben, hogy nem kapsz el fertõzést, +150 élet!");
										SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "*Olyan jó a sex-ben, hogy nem kapsz el fertõzést, +150 élet!");
									}
			      				}
								else
								{
								    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Használt óvszert.");
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Használt óvszert.");
								    Condom[playerid] --;
								}
							}
							else return SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Már fertõzött!!!");
							SexOffer[playerid] = 999;
							return 1;
						}
						else return SendClientMessage(playerid, COLOR_GREY, "  Nem vagytok autóba!!!");
					}//Connected or not
					return 1;
				}
				else return SendClientMessage(playerid, COLOR_GREY, "Hoppá nincs nálad ennyi pénz!");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "   You dont have any Sex offerd by a Whore !");
		}
        else if(egyezik(param[1],"felujitas"))
		{
		    if(FelujitasElfogadas[playerid] != NINCS)
		    {
		        if(IsPlayerConnected(FelujitasElfogadas[playerid]))
		        {
	                format(string, sizeof(string), "* Elfogadtad a felajánlást.");
	                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	                format(string, sizeof(string), "* Elfogadták a felajánlásodat.");
	                SendClientMessage(FelujitasElfogadas[playerid], COLOR_LIGHTBLUE, string);
					
					new belsostring[1024];
					for(new x = 1; x < sizeof(BelsoArak); x++)
						format(belsostring, sizeof(belsostring), "%s%d\t%dFt\n", belsostring, x, BelsoArak[x]);

					ShowPlayerDialog(FelujitasElfogadas[playerid], DIALOG_BELSO, DIALOG_STYLE_LIST, "Felújítás", belsostring, "Felújít", "Mégse");
	                FelujitasElfogadas[playerid] = NINCS;
	                return 1;
		        }
		    }
			else return SendClientMessage(playerid, COLOR_GREY, "Nincs felajánlás!");
		}
		else if(egyezik(param[1], "repair") || egyezik(param[1], "szerelés") || egyezik(param[1], "szereles"))
		{
			new id = GetPlayerVehicleID(playerid);
			new full = JavitasAra[playerid] + AlkatreszAr[playerid];
			if(JavitasAra[playerid] == 0 || AlkatreszAr[playerid] == 0) return 1;
			if(NekiSzerel[playerid] == NINCS) return Msg(playerid, "Nem ajánlott fel senki szerelést!");
			if(!IsPlayerConnected(NekiSzerel[playerid])) return Msg(playerid, "Felajánlód nem online!");
			if((IsAPRepulo(id) || IsAMotor(id) || IsARepulo(id) || IsAPlane(id)) && !IsAt(playerid, IsAt_Szerelohely))
			{
				new szkocsi=GetClosestVehicle(playerid, false, 525);
				if(GetPlayerDistanceFromVehicle(playerid, szkocsi) > 10) return Msg(playerid, "Nincs a közeledben szerelõ kocsi!");
			}
			else
				if(!IsAt(playerid, IsAt_Szerelohely)) return Msg(playerid, "Itt nem tudsz javítani");
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Abban a jármûben kell ülnöd, amelyiket meg akarod javíttatni!");
			
			
			
			if(IngyenSzerel(playerid,id) && FrakcioInfo[ PlayerInfo[playerid][pMember] ][fPenz] > full)
			{
				
				Msg(playerid, "====  A frakciód fizette a szerelést!  ====");
				FrakcioSzef(PlayerInfo[playerid][pMember],-full);
				
				
			

				format(string,sizeof(string),"[%d. frakció(%s) - ingyenszerel]%s frakció kocsit szerelt a széfbõl %s Ft-ból",PlayerInfo[playerid][pMember],Szervezetneve[PlayerInfo[playerid][pMember] - 1][2],PlayerName(playerid),FormatInt(full));
				Log("Szef",string);
			}
			else
			{
				if(IngyenSzerel(playerid,id)) Msg(playerid, "A frakciónak nincs pénze a szerelésre!");
				
				if(!BankkartyaFizet(playerid, full)) return SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Nincs elég pénzed, a javítás ára: %s Ft!",FormatInt(full));
			}
			if(GumitCserel[playerid])
			{
				new panels, doors, lights, tires;
				Cselekves(playerid,"kicseréltette a jármû abroncsait.",0);
				GetVehicleDamageStatus(id, panels, doors, lights, tires);
				UpdateVehicleDamageStatus(id, panels, doors, lights, 0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kicseréltetted a gumikat");
				CarPart[id][cKerekek] = 0.0;
				GumitCserel[playerid] = false;
				PlayerInfo[NekiSzerel[playerid]][pSzerelt] += 1;
			}
			if(OlajatCserel[playerid])
			{
				Cselekves(playerid,"kicseréltette jármû olaját.",0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kicseréltetted az olajat");
				CarPart[id][cMotorolaj] = 0.0;
				OlajatCserel[playerid] = false;
				PlayerInfo[NekiSzerel[playerid]][pSzerelt] += 1;
			}
			if(AkkutCserel[playerid])
			{
				Cselekves(playerid,"kicseréltette a jármû akkumulátorát.",0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kicseréltetted az akkut");
				CarPart[id][cAkkumulator] = 100.0;
				AkkutCserel[playerid] = false;
				PlayerInfo[NekiSzerel[playerid]][pSzerelt] += 1;
			}
			if(MotortCserel[playerid])
			{
				Cselekves(playerid,"kicseréltette a jármû motorját.",0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kicseréltetted a motort");
				CarPart[id][cMotor] = 0.0;
				MotortCserel[playerid] = false;
				PlayerInfo[NekiSzerel[playerid]][pSzerelt] += 1;
			}
			if(FeketCserel[playerid])
			{
				Cselekves(playerid,"kicseréltette a jármû fékét.",0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kicseréltetted a féket");
				CarPart[id][cFek] = 0.0;
				FeketCserel[playerid] = false;
				PlayerInfo[NekiSzerel[playerid]][pSzerelt] += 1;
			}
			if(ElektronikatCserel[playerid])
			{
				Cselekves(playerid,"kicseréltette a jármû elektronikáját.",0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kicseréltetted az elektronikát");
				CarPart[id][cElektronika] = 0.0;
				ElektronikatCserel[playerid] = false;
				PlayerInfo[NekiSzerel[playerid]][pSzerelt] += 1;
			}
			if(KarosszeriatCserel[playerid])
			{
				Cselekves(playerid,"kicseréltette jármû karosszériáját.",0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kicseréltetted a karosszériát");
				new panels, doors, lights, tires;	
				GetVehicleDamageStatus(id, panels, doors, lights, tires);
				UpdateVehicleDamageStatus(id, 0, 00000000, 0, tires);
				CarPart[id][cKarosszeria] += 1;
				if(IsAPancelozottKocsi(id))
					SetVehicleHealth(id, 100000);
				else
					SetVehicleHealth(id, 1000);
				KarosszeriatCserel[playerid] = false;
				PlayerInfo[NekiSzerel[playerid]][pSzerelt] += 1;
			}
			SendFormatMessage(playerid, COLOR_LIGHTBLUE, "A kicserélt alkatrészek ára: %s Ft - Munkabér: %s Ft", FormatInt(AlkatreszAr[playerid]), FormatInt(JavitasAra[playerid]));
			SendFormatMessage(NekiSzerel[playerid], COLOR_LIGHTBLUE, "Megjavítottál egy jármûvet, kapott pénzösszeg: %s Ft - Alkatrészek ára: %s Ft", FormatInt(JavitasAra[playerid]), FormatInt(AlkatreszAr[playerid]));
			BizPenz(BIZ_AUTOSBOLT, AlkatreszAr[playerid]);
			
			
			
			PlayerInfo[NekiSzerel[playerid]][pPayCheck] += JavitasAra[playerid];
			JavitasAra[playerid] = 0;
			AlkatreszAr[playerid] = 0;
			CarPart[id][cSzervizdatum] = UnixTime;
			NekiSzerel[playerid] = NINCS;
			return 1;
		}
		else return 1;
	}
	if(strcmp(cmd, "/live", true) == 0 || strcmp(cmd, "/alive", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
			    if(TalkingLive[playerid] != 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Élõadás vége");
			        SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "* Az élõadás végetért");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return 1;
			    }
			    if(!Munkarang(playerid, 1))
					return SendClientMessage(playerid, COLOR_GREY, "Neked nem! (Minimum rang 1)");
					
				if(PlayerInfo[playerid][pNewsSkill] < 201)
					return SendClientMessage(playerid, COLOR_GREY, "Nem vagy elég tapasztalt! (Minimum skill 4)");

				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Használat: /live [playerid/Névrészlet]");
					SendClientMessage(playerid, COLOR_GRAD1, "Használat: /alive [playerid/Névrészlet]");
					return 1;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (GetDistanceBetweenPlayers(playerid, giveplayerid) < 5.0)
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Magaddal akarsz beszélni? Inkább menj pszihiáterhez!"); return 1; }
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(strcmp(cmd, "/alive", true) == 0)
							{
								format(string, sizeof(string), "* Felkérted %s-t, hogy résztvegyen az élõ adásban névtelenül!", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s felajánlotta, hogy részt vegyél az élõ adásban névtelenül! ((/accept live))", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								RiporterAlive[giveplayerid] = 1;
							}
							else
							{
								format(string, sizeof(string), "* Felkérted %s-t, hogy résztvegyen az élõ adásban!", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s felajánlotta, hogy részt vegyél az élõ adásban! ((/accept live))", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								RiporterAlive[giveplayerid] = 0;
							}

							LiveOffer[giveplayerid] = playerid;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "Túl messze van!");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ez a játékos nincs fenn!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Nem vagy Riporter !");
			}
		}//not connected
		return 1;
	}
	if(egyezik(cmd, "/nyeremény") || egyezik(cmd, "/nyeremeny"))
	{
		if(!LMT(playerid, FRAKCIO_RIPORTER)) return Msg(playerid, "Nem vagy riporter!");
		if(!Munkarang(playerid, 2)) return Msg(playerid, "Minimum 2-es rang kell hogy használhasd!");
		if(params < 2)
		{
			Msg(playerid, "Játékos [Neve / ID] [összeg]");
			return 1;
		}
		new player = ReturnUser(param[1]);
		new nyosszeg=strval(param[2]);
		if(!IsPlayerConnected(player)) return Msg(playerid, "A játékos nem Online.");
		if(playerid == player) return Msg(playerid, "Magadnak nem! Hogy gondolod ezt?");
		if(nyosszeg > 300000 || nyosszeg < 1000) return Msg(playerid, "Maximum 300 000 Ft Minimum 1000 Ft");
		if (nyosszeg > FrakcioInfo[FRAKCIO_RIPORTER][fPenz]) return Msg(playerid, "Nincs elég pénz a széfben");
		if(PlayerInfo[player][pBankSzamla] == 0)
		{
			Msg(playerid, "Neki nincs bankszámlája, ezért készpénzben kapta meg az összeget!");
			SendFormatMessage(player, COLOR_LIGHTGREEN, "Kaptál a Riporterektõl %d nyereményt készpénzben!",nyosszeg);
			FrakcioInfo[FRAKCIO_RIPORTER][fPenz] -= nyosszeg;
			GiveMoney(player, nyosszeg);
		}
		else
		{
			Msg(playerid, "Nyeremény átutalva!");
			FrakcioInfo[FRAKCIO_RIPORTER][fPenz] -= nyosszeg;
			SendFormatMessage(player, COLOR_LIGHTGREEN, "Utalt neked %d Ft-ott. Küldõ: riporterek nyeremény!",nyosszeg);
			FrakcioInfo[FRAKCIO_RIPORTER][fPenz] -= nyosszeg;
			PlayerInfo[player][pAccount] += nyosszeg;
		}
		foreach(Jatekosok, y)
		{
			if(LMT(y, FRAKCIO_RIPORTER))
			SendFormatMessage(y, COLOR_LIGHTGREEN, "%s adott %s-nek nyereményt a Széfbõl %d Ft!", ICPlayerName(playerid), ICPlayerName(player),nyosszeg);
		}
	}
	if(egyezik(cmd, "/healme") || egyezik(cmd, "/meggyogyulas") || egyezik(cmd, "/meggyógyulas"))
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if (PlayerToPoint(3, playerid,1173.2563,-1323.3102,15.3943)||PlayerToPoint(3, playerid,2029.5945,-1404.6426,17.2512))
			{
	            if(STDPlayer[playerid] > 0)
	            {
					STDPlayer[playerid] = 0;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kigyógyítottak a betegségbõl!");
					GiveMoney(playerid, -1000);
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Doki: A vizitdíj 1000FT. további szép napot!");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Nincs betegséged!");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Nem vagy a kórháznál!");
	        }
        }
		return 1;
	}
	if(egyezik(cmd, "/eject") || egyezik(cmd, "/kidobás"))
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        new State;
	        if(IsPlayerInAnyVehicle(playerid))
	        {
         		State=GetPlayerState(playerid);
		        if(State!=PLAYER_STATE_DRIVER)
		        {
		        	SendClientMessage(playerid,COLOR_GREY,"Csak a vezetõ dobhat ki utast a kocsiból!");
		            return 1;
		        }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Használat: /eject [Játékos]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				new test;
				test = GetPlayerVehicleID(playerid);
				if(IsPlayerConnected(playa))
				{
				    if(playa != INVALID_PLAYER_ID)
				    {
				        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Magadat hogy dobod ki?"); return 1; }
				        if(IsPlayerInVehicle(playa,test))
				        {
				            if(ov[playa] == 1) return Msg(playerid, "Neki be van kapcsolva a biztonsági öve, így nem tudod kidobni.");
							new PName[MAX_PLAYER_NAME];
							GetPlayerName(playerid,PName,sizeof(PName));
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* Kidobtad a kocsiból: %s", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* A sofõr kidobott a kocsiból");
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							RemovePlayerFromVehicle(playa);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, " Õ nincs a kocsiban!");
						    return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, " Hibás ID/Név!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Jármûben kell lenned a használatához!");
			}
		}
		return 1;
	}
	if(egyezik(cmd, "/sex") || egyezik(cmd, "/szeretkezés"))
	{
		if(!IsACop(playerid))
		{
			if(!IsPlayerInAnyVehicle(playerid) && !IsAtAgy(playerid))
			{
				SendClientMessage(playerid, COLOR_GREY, "Csak kocsiba vagy ágyban tudsz Sexelni!");
				return 1;
			}
			
			new Car = GetPlayerVehicleID(playerid);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Használat: /sex [playerid/névrészlet] [mennyiért]");
				return 1;
			}
			
			giveplayerid = ReturnUser(tmp);
			if(giveplayerid == INVALID_PLAYER_ID)
				return Msg(playerid, "Nincs ilyen játékos");
			
			tmp = strtok(cmdtext, idx);
			new money = strval(tmp);
			if(money < 1000 || money > 250000)
				return SendClientMessage(playerid, COLOR_GREY, "Min 1000Ftért, és max 250,000Ftért lehet csak!");
			
			if(PlayerCuffed[playerid] == 2 || PlayerCuffed[giveplayerid] == 2 || Animban[playerid] || Animban[giveplayerid])
			{
				Msg(playerid, "F8 gombot nyomd meg és rakd PK-ra, logba írja!");
				Msg(giveplayerid, "F8 gombot nyomd meg és rakd PK-ra, logba írja!");
				format(string,256,"[sex kihasználás] %s playerid",PlayerName(playerid));
				EgyebLog(string);
				format(string,256,"[sex kihasználás] %s giveplayerid",PlayerName(giveplayerid));
				EgyebLog(string);
				return 1;
			}
			
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if (GetDistanceBetweenPlayers(playerid, giveplayerid) < 8.0)
					{
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Azért magadhoz már ne nyúlj, ha lehet ;)"); return 1; }
						if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Felajánlottad neki: %s, hogy sexeljetek %dFt-ért", giveplayer, money);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s felajánlotta, hogy sexelj vele %dFt-ért! /accept sex hogy elfogadd", sendername, money);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							SexOffer[giveplayerid] = playerid;
							SexPrice[giveplayerid] = money;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Neked, és neki is a kocsiban vagy ágyban kell lennie!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Ez a játékos nincs közel hozzád!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Nincs ilyen játékos!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Ugyan ne mááár...");
		}
		return 1;
	}

	if(egyezik(cmd, "/car") || egyezik(cmd, "/jármû"))//autolopas
	{
		if(Szint(playerid) < IllegalisMunkak[3]) return SendFormatMessage(playerid, COLOR_LIGHTRED, "LEVEL %d -tõl",IllegalisMunkak[3]);
		if(IsACop(playerid)) return Msg(playerid, "Nem vagy autótolvaj!");
		if(params < 1) return Msg(playerid, "/jármû [Lead / Feltör / Riasztó / munka / felmond((5.000 Ft)) / munkám]");
		if(egyezik(param[1], "Riasztó") || egyezik(param[1], "Riaszto"))
		{
			new jarmu = GetPlayerVehicleID(playerid);
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Jármûben kell lenned.");
			if(GetJarmu(jarmu, KOCSI_RIASZTO) == 0) return Msg(playerid, "Mit akarsz kikapcsolni? Nem is megy...");
			Freeze(playerid);
			SetTimerEx("JarmuRiaszto", 10000, false, "i", playerid);
			Msg(playerid, "Elkezdted kikapcsolni a jármû riasztóját...");
			Cselekves(playerid, "zörög valamivel...", 1);
		}
		else if(egyezik(param[1], "Feltör") || egyezik(param[1], "Feltor"))
		{
		
			if(MunkaFolyamatban[playerid] == 1) return Msg(playerid, "A-A");
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			new kozelbenlevojarmu = GetClosestVehicle(playerid);
			
			if(IsFrakcioKocsi(kozelbenlevojarmu) != NINCS && SajatKocsi(playerid,kozelbenlevojarmu))
			{
				//PlayerInfo[playerid][pJackSkill] -=10;
				format(string,128,"[Frakció jármû feltörése]Név: %s Kocsi: %d",PlayerName(playerid),kozelbenlevojarmu);
				
				Msg(playerid,"Ehhez van kulcsod!");	
				EgyebLog(string);
				return 1;
			}
			if(SajatKocsi(playerid,kozelbenlevojarmu))
			{
				//PlayerInfo[playerid][pJackSkill] -=10;
				format(string,128,"[Saját jármû feltörése]Név: %s Kocsi: %d",PlayerName(playerid),kozelbenlevojarmu);
				
				Msg(playerid,"Ehhez van kulcsod!");	
				EgyebLog(string);
				return 1;
			}
			
			new level = SkillLevel(PlayerInfo[playerid][pJackSkill]);
			new ido;
			
			if(level == 1) ido=75000;
			if(level == 2) ido=70000;
			if(level == 3) ido=65000;
			if(level == 4) ido=60000;
			if(level == 5) ido=55000;
			if(level == 6) ido=40000;
			if(level == 7) ido=35000;
			if(level == 8) ido=20000;
			if(level == 9) ido=18000;
			if(level == 10) ido=15000;
			if(level == 11) ido=14000;
			if(level == 12) ido=13000;
			if(level == 13) ido=12000;
			if(level == 14) ido=11000;
			if(level == 15) ido=10000;
			
			
			if(GetPlayerDistanceFromVehicle(playerid, kozelbenlevojarmu) > 3.0) return Msg(playerid, "Nagyon közel kell lenned a jármûhöz.");
			if(IsABicikli(kozelbenlevojarmu)) return Msg(playerid, "Biciklit??-.-");
			new sofor = KocsiSofor(kozelbenlevojarmu);
			if(sofor != NINCS) return Msg(playerid, "Ha ülnek benne, hogy akarod feltörni??");
			if(!Locked(kozelbenlevojarmu)) return Msg(playerid, "A jármû nyitva, nem kell feltörni.");
			Autotolvaj(playerid, 1);
			SendFormatMessage(playerid, COLOR_LIGHTRED, "* Rendszám: %d |  Elkezdted feltörni, várj!", kozelbenlevojarmu);
			Freeze(playerid);
			MunkaFolyamatban[playerid] = 1;
			SetTimerEx("JarmuFeltores", ido, false, "ii", playerid);
			Cselekves(playerid, "zörög valamivel...", 1);
		}
		else if(egyezik(param[1], "Lead"))
		{
			if(PlayerInfo[playerid][pLkocsi] < 400) return Msg(playerid, "Nem vállaltál el munkát! (/car munka)");
			if(!IsPlayerInAnyVehicle(playerid)) return Msg(playerid, "Nem vagy jármûben!");
			if(!PlayerToPoint(5.0, playerid, -1569.7765,98.0041,3.5547))
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "* Nem vagy a leadó helyen! GPS-ed jelzi hova kell menned.");
				SetPlayerCheckpoint(playerid, -1569.7765,98.0041,3.5547,5.0);
				return 1;
			}

			new kocsiid = GetPlayerVehicleID(playerid);
			if(engineOn[kocsiid] == 0) return Msg(playerid, "Csak mûködõ jármûvet fogadunk el, indítsd el a motorját.");
			if(SajatKocsi(playerid,kocsiid) || !IsAVsKocsi(kocsiid)) return Msg(playerid, "Persze, majd ezt fogod leadni mi? -.-");

			new munkakocsi = IsMunkaKocsi(kocsiid);
			if(munkakocsi == MUNKA_BEREL1)return Msg(playerid,"Azthitted...");
			if(munkakocsi == MUNKA_BEREL2)return Msg(playerid,"Azthitted...");
			if(munkakocsi == MUNKA_BEREL3)return Msg(playerid,"Azthitted...");

			new kocsitipus = GetVehicleModel(kocsiid);
			new kellene = (PlayerInfo[playerid][pLkocsi]-400);

			if(kocsitipus != PlayerInfo[playerid][pLkocsi])
			{
				SendFormatMessage(playerid, COLOR_LIGHTRED, "Nem ilyen típusú kocsit kell leadnod, hanem egy %s-t", vehName[kellene]);
				return 1;
			}

			if(KocsiLeadas[kocsiid] > 0) return SendFormatMessage(playerid, COLOR_LIGHTRED,"Ezt a kocsit nem adhatod le csak %dperc múlva, mert nem rég volt leadva!",KocsiLeadas[kocsiid]);
			new Float:hp;
			GetVehicleHealth(kocsiid, hp);

			if(hp < 970) return Msg(playerid, "Ez a kocsi meg van sérülve, így nem adhatod le!");
			new bool:jo, bool:leadva;
			jo = true;
			leadva = false;
			
			for(new x = 0; x < 21; x++) 
			{
				jo = true;
				for(new c = 0; c < MAX_VEHICLES; c++)
				{
					if(CarToPoint(1.5, c, Tolvajkoordinatak[x][0], Tolvajkoordinatak[x][1], Tolvajkoordinatak[x][2]))
					{
						jo = false;
					}
				}
				
				if(jo == true && leadva == false)
				{
					RemovePlayerFromVehicle(playerid);

					new frakcio = IsFrakcioKocsi(kocsiid);
					
					if(frakcio != NINCS && LMT(playerid, frakcio))
					{
						new fkocsi = FrakcioKocsiID(kocsiid, frakcio);
						new msg[128], modelName[64];
						
						format(msg, 128, "<< [%d]%s leadott egy frakciójármûvet, így a jármû törlõdött (rendszám: %d, model: %s) >>",
							playerid, PlayerName(playerid), kocsiid, modelName, GetVehicleModelName(FrakcioKocsi[frakcio][fkocsi][fModel]));
							
						Log("Egyeb", msg);
						
						foreach(Jatekosok, j)
						{
							if(j != playerid && LMT(j, frakcio))
								SendClientMessage(j, COLOR_LIGHTRED, msg);
						}
						
						FrakcioKocsi[frakcio][fkocsi][fVan] = false;
						DestroyVehicle(FrakcioKocsi[frakcio][fkocsi][fID]);
					}
					else
					{
						SetVehiclePos(kocsiid, Tolvajkoordinatak[x][0], Tolvajkoordinatak[x][1], Tolvajkoordinatak[x][2]);
						SetVehicleZAngle(kocsiid, Tolvajkoordinatak[x][3]);
						SetVehicleVW(kocsiid, 66666);
						SetPlayerPos(playerid, -1573.7935,102.1601,3.5547);

					}

					SendClientMessage(playerid, COLOR_LIGHTRED, "* Jármû leadva!");
					SendFormatMessage(playerid, COLOR_LIGHTRED, "* Kaptál érte %d Ft-ot!", PlayerInfo[playerid][pLkocsiar]);
					GiveMoney(playerid, PlayerInfo[playerid][pLkocsiar]);
					PlayerInfo[playerid][pJackSkill] = PlayerInfo[playerid][pJackSkill] + 10;
					PlayerInfo[playerid][pLkocsi] = 0;
					PlayerInfo[playerid][pLkocsiar] = 0;
					leadva = true;
					Lopott[kocsiid] = true;
					LopottTime[kocsiid] = UnixTime+3600;
					KocsiLeadas[kocsiid] = 60;
					//SetTimerEx("LopasVege", 120.000*60, false, "d", GetPlayerVehicleID(playerid));
					
					engineOn[kocsiid] = 0;
					Gyujtas[kocsiid] = false;
					//TogglePlayerControllable(playerid, false);
					SetJarmu(kocsiid, KOCSI_MOTOR, false);
					break;
				}
			}
			if(leadva == false) return Msg(playerid, "Nincs hely a kocsinak!");
			DisablePlayerCheckpoint(playerid);
			return 1;
		}
		else if(egyezik(param[1], "felmond"))
		{
			if(!BankkartyaFizet(playerid,5000)) return Msg(playerid, "A munka lemondása 5.000Ft-ba kerül!");
			PlayerInfo[playerid][pLkocsi] = 0;
			PlayerInfo[playerid][pLkocsiar] = 0;
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Lemondtad az autólopási megbízásodat!");
		}
		else if(egyezik(param[1], "debug"))
		{
			if(!IsScripter(playerid)) return 1;
			PlayerInfo[playerid][pCarTime] = 0;
			Msg(playerid, "CarTime 0.");
		}
		else if(egyezik(param[1], "munka"))
		{
			
			if(FloodCheck(playerid, 10, 2)) return Msg(playerid, "Ezt nem kéne....");
			
			if(PlayerInfo[playerid][pLkocsi] > 400) return Msg(playerid, "Már van munkád!");
			if(!PlayerToPoint(10, playerid, 221.7762,113.9820,1010.2188,3223,10)) 
			{
				Msg(playerid, "Munkát felvenni a Munkaügyi Központban tudsz!");
				SetPlayerCheckpoint(playerid, 1081.3394,-1696.8140,13.5469, 5);
				return 1;
			}
			
			if(params < 2) return Msg(playerid,"/car munka [level]");
			new level = strval(param[2]);
			
			if(level < 0 || level > 15) return Msg(playerid,"1-15");
			new szamol;
			
			for(new r = 0; r < 8; r++)
			{
				if(KocsiLopasLista[level][r][Kmodel] >= 400)
				{
					szamol++;
				}
			}
			
			if(szamol < 1) return Msg(playerid, "Jelenleg nem keresünk jármûvet ezen a szinten. Próbáld máskor!");
			
			
			new szoveg[256];
			new id=0;
			for(new r = 0; r < 8; r++)
			{
				if(KocsiLopasLista[level][r][Kmodel] >= 400)
				{
					format(szoveg, 256, "%s%s(%d) - %s Ft\n", szoveg, vehName[KocsiLopasLista[level][r][Kmodel] - 400],KocsiLopasLista[level][r][Kmodel],FormatInt(KocsiLopasLista[level][r][Kara]));
					KocsiLista[playerid][id] = KocsiLopasLista[level][r][Kmodel];
					KocsiAr[playerid][id] = KocsiLopasLista[level][r][Kara];
					id++;
				}
			}
			ShowPlayerDialog(playerid, DIALOG_AUTOTOLVAJ, DIALOG_STYLE_LIST, "Megbízás", szoveg, "Elfogadom!", "Mégse");
			//
			
			return 1;
		}
		else if(egyezik(param[1], "munkam") || egyezik(param[1], "munkám"))
		{
			if(PlayerInfo[playerid][pLkocsi] < 400) return Msg(playerid, "Nem vállaltál el munkát!");
			SendFormatMessage(playerid, COLOR_LIGHTGREEN, "Egy %s típusú kocsit kell leszállítanod %d forintért!", vehName[PlayerInfo[playerid][pLkocsi] - 400], PlayerInfo[playerid][pLkocsiar]);
			return 1;
		}
	}
	if(strcmp(cmd, "/quitjob", true) == 0 || strcmp(cmd, "/felmond", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			    return SendClientMessage(playerid, COLOR_GREY, "Használata: /felmond [munka(1/2)]");

			new munka = strval(tmp);

			if(munka != 1 && munka != 2)
			    return SendClientMessage(playerid, COLOR_GREY, "Használata: /felmond [munka(1/2)]");

			if(munka == 1)
			{
			    if(PlayerInfo[playerid][pJob1] > 0)
			    {
					if(PlayerInfo[playerid][pContractTime] < 9000 && !Admin(playerid, 1337))
					{
					    new meg = floatround((9000 - PlayerInfo[playerid][pContractTime]) / 60);
				    	SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Még %d percet le kell dolgoznod, hogy kiléphess!", meg);
					    return 1;
					}
					else
					{
					    PlayerInfo[playerid][pJob1] = 0;
				    	//PlayerInfo[playerid][pChar] = 0;
					    PlayerInfo[playerid][pContractTime] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kiléptél a fõmunkádból.");
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Nincs fõmunkád!");
				}
			}

			if(munka == 2)
			{
			    if(PlayerInfo[playerid][pJob2] > 0)
			    {
					if(PlayerInfo[playerid][pContractTime2] < 9000 && !Admin(playerid, 2))
					{
					    new meg = floatround((9000 - PlayerInfo[playerid][pContractTime2]) / 60);
				    	SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Még %d percet le kell dolgoznod, hogy kiléphess!", meg);
					    return 1;
					}
					else
					{
					    PlayerInfo[playerid][pJob2] = 0;
				    	//PlayerInfo[playerid][pChar] = 0;
					    PlayerInfo[playerid][pContractTime2] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kiléptél a másodmunkádból.");
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Nincs másodmunkád!");
				}
			}

		}//not connected
		return 1;
	}

	if(strcmp(cmd, "/bail", true) == 0 || strcmp(cmd, "/óvadék", true) == 0 || strcmp(cmd, "/ovadek", true) == 0)
	{
		new kinek = playerid;
		if(params >= 1)
		{
			kinek = ReturnUser(param[1]);
			if(kinek == INVALID_PLAYER_ID)
				kinek = playerid;
		}
		
		if(params >= 2 && SAdmin(playerid, 3)) {
			new ovadek = strval(param[2]);
			
			if(ovadek < 0 || ovadek > 30000000) {
				return Msg(playerid, "Minimum 0, maximum 30,000,000Ft lehet csak az óvadék!");
			}
			
			PlayerInfo[playerid][pOvadek] = ovadek;
			
			if(!ovadek) {
				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s törölte %s óvadékát", PlayerName(playerid), PlayerName(kinek));
			} else {
				ABroadCastFormat(COLOR_LIGHTRED, 1, "<< %s beállította %s óvadékát: %dFt", PlayerName(playerid), PlayerName(kinek), ovadek);
			}
				
			
			return 1;
		}
		
		if(PlayerInfo[kinek][pJailed] > 0)
		{
			if(PlayerInfo[kinek][pJailed] == 3 || PlayerInfo[kinek][pJailed] == 6) return Msg(playerid, "A-a!");
		    if(PlayerInfo[kinek][pOvadek] > 0)
		    {
				if(!BankkartyaFizet(playerid, PlayerInfo[kinek][pOvadek] ,false))
				{
					SendFormatMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Nincs elég pénzed kifizetni az óvadékot! Az óvadék %dFt", PlayerInfo[kinek][pOvadek]);
					return 1;
				}
				if(kinek == playerid)
				{
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kifizetted az óvadékot! (%dFt)", PlayerInfo[kinek][pOvadek]);
					CopMsgFormat(COLOR_LIGHTGREEN, "<< Porta: %s kifizette az óvadékot! >>", ICPlayerName(playerid));
				}
				else
				{

					if (!PlayerToPoint(3.0, playerid, 1359.3746,1371.0756,10.9559) || GetPlayerVirtualWorld(playerid != 1337)) return SendClientMessage(playerid, COLOR_GREY, "Csak a BÖRTÖN portán lehet kifizetni az óvadékot!");
					SendFormatMessage(playerid, COLOR_LIGHTBLUE, "Kifizetted %s óvadékát! (%dFt)", ICPlayerName(kinek), PlayerInfo[kinek][pOvadek]);
					CopMsgFormat(COLOR_LIGHTGREEN, "<< Porta: %s kifizette %s óvadékát! >>", ICPlayerName(playerid), ICPlayerName(kinek));
					SendFormatMessage(kinek, COLOR_LIGHTBLUE, "%s kifizette az óvadékodat! (%dFt)", ICPlayerName(playerid), PlayerInfo[kinek][pOvadek]);
				}
				
			
				
				BankkartyaFizet(playerid, PlayerInfo[kinek][pOvadek]);
				new fizetes = floatround(PlayerInfo[kinek][pOvadek]/2);
				
				
				FrakcioSzef(PlayerInfo[kinek][plecsukta], fizetes);
				
				PlayerInfo[kinek][pOvadek] = 0;
				WantLawyer[kinek] = 0;
				CallLawyer[kinek] = 0;
				PlayerInfo[kinek][pJailTime] = 1;
		    }
		    else
		        SendClientMessage(playerid, COLOR_GRAD1, "Nincs óvadék!");
		}
		else
		    SendClientMessage(playerid, COLOR_GRAD1, "Nem vagy / Nincs börtönben!");
		return 1;
	}
	
	if(egyezik(cmd, "/ticket") || egyezik(cmd, "/megbüntet"))
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Nem vagy zsaru!");
			    return 1;
			}

	        if(OnDuty[playerid] != 1 && LMT(playerid, FRAKCIO_SCPD))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Nem vagy szolgálatban!");
			    return 1;
			}

	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /ticket [playerid/névrészlet] [bírság] [oka]");
				return 1;
			}

			giveplayerid = ReturnUser(tmp);

            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Használat: /ticket [playerid/névrészlet] [bírság] [oka]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1000 || moneys > 500000) return SendClientMessage(playerid, COLOR_GREY, "Nana, egy bûntetés ára 1000Ft és 500000Ft között lehet csak !");
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (GetDistanceBetweenPlayers(playerid, giveplayerid) < 8.0)
					{
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new result[128];
						if(sscanf(pms, "rds[128]", giveplayerid, moneys, result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Használat: /ticket [playerid/névrészlet] [bírság] [oka]");
							return 1;
						}

						format(string, sizeof(string), "* Megbüntetted %s -t (Összeg:%dFT), Oka: %s", giveplayer, moneys, (result));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s megbírságolt. Fizetendõ Összeg: %dFT, Oka: %s", sendername, moneys, (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						TicketOffer[giveplayerid] = playerid;
						GiveMoney(giveplayerid, - moneys);
						new osszeg = floatround(float(moneys) * 0.75);
						FrakcioSzef(PlayerInfo[playerid][pMember], osszeg, 55);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Ez a játékos nincs hozzád közel!");
						return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Nincs ilyen játékos !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/arrest", true) == 0 || strcmp(cmd, "/lecsukás", true) == 0 || strcmp(cmd, "/lecsukas", true) == 0)
	{
		if(!IsACop(playerid)) return Msg(playerid, "Nem vagy rendõr.");
		if(OnDuty[playerid] != 1) return Msg(playerid, "Nem vagy szolgálatban.");

		if(!PlayerToPoint(5.0, playerid, 1345.520,1352.192,10.955)) return Msg(playerid, "Csak LS-i fegyenctelepen lehet!");
				
		new time,bailprice,suspect,result[128];
		if(sscanf(pms, "dddrs[128]",moneys,time,bailprice,suspect,result))
			return Msg(playerid, "/arrest [bírság] [idõ (perc)] [óvadék] [id] [indok]");
			
		if(suspect == INVALID_PLAYER_ID || GetDistanceBetweenPlayers(playerid,suspect) > 5) return Msg(playerid, "Nincs a közeledben");
		if(moneys < 0 || moneys > 3000000) return Msg(playerid, "A minimum bírság 0Ft, maximum 3,000,000Ft");
		if(time < 5 || time > 60) return Msg(playerid, "A börtönidõnek minimum 5 percnek kell lennie, és max 1 órának (60perc)");
		if(bailprice > 0 && bailprice < 10000 || bailprice > 10000000) return Msg(playerid, "A minimum óvadékösszeg 10000Ft, maximum 10 millió!");
		

		if(strlen(result) > 70) return Msg(playerid, "Maximum 70 karakter hossz! Fogalmazz röviden!");
		if(!EngedelyezettKarakterek(result)) return Msg(playerid, "Helytelen karakterek a szövegben!");

		SendFormatMessage(playerid, COLOR_LIGHTBLUE, "* Letartóztattad %s-t, oka: %s", ICPlayerName(suspect), result);
		GiveMoney(suspect, -moneys);
		SendFormatMessage(suspect, COLOR_LIGHTRED, "Letartóztatott %s, oka: %s", ICPlayerName(playerid), result);
		//ResetWeapon(suspect);
		WeaponResetAll(suspect);
		if(PlayerInfo[suspect][pZarolva] == 1)
		{
			PlayerInfo[suspect][pZarolva] = 0;
			Msg(suspect, "Számládról a zárolás levéve!!!");

		}
		if(LMT(playerid, FRAKCIO_SCPD))
		{
			format(string, sizeof(string), "<< LS Rendõr %s letartóztatta %s-t >>", ICPlayerName(playerid), ICPlayerName(suspect));
			FrakcioSzef(FRAKCIO_SCPD, moneys, 56);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			PlayerInfo[suspect][plecsukta] = FRAKCIO_SCPD;
		}
		else if(LMT(playerid, FRAKCIO_FBI))
		{
			format(string, sizeof(string), "<< FBI Ügynök %s letartóztatta %s-t >>", ICPlayerName(playerid), ICPlayerName(suspect));
			
			FrakcioSzef(FRAKCIO_FBI, moneys, 56);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			PlayerInfo[suspect][plecsukta] = FRAKCIO_FBI;
		}
		else if(LMT(playerid, FRAKCIO_CIA))
		{
			format(string, sizeof(string), "<< CIA Ügynök %s letartóztatta %s-t >>", ICPlayerName(playerid), ICPlayerName(suspect));
			
			FrakcioSzef(FRAKCIO_CIA, moneys, 56);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			PlayerInfo[suspect][plecsukta] = FRAKCIO_CIA;
		}
		else if(LMT(playerid, FRAKCIO_SFPD))
		{
			format(string, sizeof(string), "<< SF Rendõr %s letartóztatta %s-t >>", ICPlayerName(playerid), ICPlayerName(suspect));
			
			FrakcioSzef(FRAKCIO_SFPD, moneys, 56);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			PlayerInfo[suspect][plecsukta] = FRAKCIO_SFPD;
		}
		else if(LMT(playerid, FRAKCIO_NAV))
		{
			format(string, sizeof(string), "<< Sheriff Department Ranger %s letartóztatta %s-t >>", ICPlayerName(playerid), ICPlayerName(suspect));
			
			FrakcioSzef(FRAKCIO_NAV, moneys, 56);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			PlayerInfo[suspect][plecsukta] = FRAKCIO_NAV;
		}
		else if(LMT(playerid, FRAKCIO_KATONASAG))
		{
			format(string, sizeof(string), "<< Katona %s letartóztatta %s-t >>", ICPlayerName(playerid), ICPlayerName(suspect));
			
			FrakcioSzef(FRAKCIO_KATONASAG, moneys, 56);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			PlayerInfo[suspect][plecsukta] = FRAKCIO_KATONASAG;
		}
	

		Jail(suspect, "+", (time*60), "fegyenctelep", result);
		CopMsgFormat(TEAM_BLUE_COLOR, "%s elhelyezte %s-t a fegyenctelepen.", ICPlayerName(playerid), ICPlayerName(suspect));
		Freeze(suspect, 5000);


		if(bailprice > 0)
		{
			PlayerInfo[suspect][pOvadek] = bailprice;
			Bilincs(suspect, 0);
			SendFormatMessage(suspect, COLOR_LIGHTBLUE, "%d másodpercre börtönbe kerültél.   Óvadék: %dFT", PlayerInfo[suspect][pJailTime], PlayerInfo[suspect][pOvadek]);
		}
		else
		{
			PlayerInfo[suspect][pOvadek] = 0;
			Bilincs(suspect, 0);
			SendFormatMessage(suspect, COLOR_LIGHTBLUE, "%d másodpercre börtönbe kerültél.   Óvadék: Nincs", PlayerInfo[suspect][pJailTime]);
		}
		
		PlayerInfo[suspect][pArrested] += 1;
		
		MarkerAction(suspect, PLAYER_MARKER_CLEAR);
		
		SetPlayerFree(suspect, playerid);
		WantedLevel[suspect] = 0;
		WantLawyer[suspect] = 1;
		lspdmoney += 10000;
		Visz[playerid] = NINCS;
		
	}
	//Szövegek finomítva /felbérlés hozzáadva by Amos
	if(strcmp(cmd, "/contract", true) == 0)
	{
	    if(!Bortonben(playerid))
	   	{
			if(PlayerInfo[playerid][pLevel] < 3) return Msg(playerid, "Minimum 3as szint.");
			tmp = strtok(cmdtext, idx);
			//if(!strlen(tmp))
			//	return SendClientMessage(playerid, COLOR_GRAD1, "Használat: /contract [playerid/PartOfName] [amount] [oka]");
			new oka[128];
			
			if(sscanf(pms, "uds[128]", giveplayerid, moneys, oka)) return SendClientMessage(playerid, COLOR_GRAD1, "Használat: /contract [playerid/PartOfName] [amount] [oka]");

			//giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			//if(!strlen(tmp))
			//	return SendClientMessage(playerid, COLOR_GRAD1, "Használat: /contract [playerid/PartOfName] [amount] [oka]");

			//moneys = strval(tmp);
			new minimum = PlayerInfo[giveplayerid][pLevel] * 100000;

			if(PlayerInfo[giveplayerid][pLevel] < 5) return Msg(playerid, "A játékos 5ös szint alatt van, ezért nem rakhatsz rá vérdíjat.");

			if(moneys < minimum)
			{
				SendFormatMessage(playerid, COLOR_GREY, "A vérdíjnak minimum %dFt-nak kell lennie!", minimum);
				return 1;
			}

			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if(IsHitman(giveplayerid))
				        return SendClientMessage(playerid, COLOR_GREY, "   A saját csapattársadra nem rakhatsz vérdíjat...");

				    if(giveplayerid == playerid)
						return Msg(playerid, "Mi a faszért contractolsz magadra te barom?");


					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));

					new playermoney = GetMoney(playerid);

					if(moneys < 1)
					    return SendClientMessage(playerid, COLOR_LIGHTRED, "O.O");

					if(playermoney >= moneys)
					{
						GiveMoney(playerid, (0 - moneys));
						PlayerInfo[giveplayerid][pHeadValue]+=moneys;
						format(string, sizeof(string), "Valaki azt akarja, hogy öljétek meg %s-t, %dFt-ért.", giveplayer, moneys);
						SendMessage(SEND_MESSAGE_HITMAN, string, COLOR_YELLOW);
						format(string, sizeof(string), "* %dFt-os vérdíjat tûztél ki rajta: %s", moneys, giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Hitman: %s %dFtos vérdíjat tûzött ki %s fejére", sendername, moneys, giveplayer);
						ABroadCast(COLOR_GREY, string, 1);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(PlayerInfo[giveplayerid][pContractOka], 128, "%s", oka);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Nincs ennyi pénzed!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d nincs fent a szerveren.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		else
			Msg(playerid, "Börtönben nem lehet!");
		return 1;
	}

	#endif

	//return SendClientMessage(playerid, COLOR_LIGHTRED, "ClassRPG: Nincs ilyen parancs");
	return 1;
}